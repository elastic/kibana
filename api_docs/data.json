{
  "id": "data",
  "client": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfig",
        "type": "Class",
        "tags": [],
        "label": "AggConfig",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.ensureIds",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "ensureIds",
            "description": [
              "\nEnsure that all of the objects in the list have ids, the objects\nand list are modified by reference.\n"
            ],
            "signature": [
              "(list: any[]) => any[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.ensureIds.$1",
                "type": "Array",
                "tags": [],
                "label": "list",
                "description": [
                  "- a list of objects, objects can be anything really"
                ],
                "signature": [
                  "any[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "- the list that was passed in"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.nextId",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "nextId",
            "description": [
              "\nCalculate the next id based on the ids in this list\n"
            ],
            "signature": [
              "(list: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]) => number"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.nextId.$1",
                "type": "Array",
                "tags": [],
                "label": "list",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "list - a list of objects with id properties"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.aggConfigs",
            "type": "Object",
            "tags": [],
            "label": "aggConfigs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.params",
            "type": "Any",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.parent",
            "type": "Object",
            "tags": [],
            "label": "parent",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.brandNew",
            "type": "CompoundType",
            "tags": [],
            "label": "brandNew",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.schema",
            "type": "string",
            "tags": [],
            "label": "schema",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  "Pick<Pick<{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
                  "SerializableRecord",
                  " | undefined; schema?: string | undefined; }, \"enabled\" | \"id\" | \"schema\" | \"params\"> & Pick<{ type: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, \"type\"> & Pick<{ type: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, never>, \"type\" | \"enabled\" | \"id\" | \"schema\" | \"params\">"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.setParams",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "setParams",
            "description": [
              "\nWrite the current values to this.params, filling in the defaults as we go\n"
            ],
            "signature": [
              "(from: any) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.setParams.$1",
                "type": "Any",
                "tags": [],
                "label": "from",
                "description": [
                  "- optional object to read values from,\n used when initializing"
                ],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getParam",
            "type": "Function",
            "tags": [],
            "label": "getParam",
            "description": [],
            "signature": [
              "(key: string) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getParam.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.hasTimeShift",
            "type": "Function",
            "tags": [],
            "label": "hasTimeShift",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getTimeShift",
            "type": "Function",
            "tags": [],
            "label": "getTimeShift",
            "description": [],
            "signature": [
              "() => moment.Duration | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.write",
            "type": "Function",
            "tags": [],
            "label": "write",
            "description": [],
            "signature": [
              "(aggs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined) => Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.write.$1",
                "type": "Object",
                "tags": [],
                "label": "aggs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.isFilterable",
            "type": "Function",
            "tags": [],
            "label": "isFilterable",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.createFilter",
            "type": "Function",
            "tags": [],
            "label": "createFilter",
            "description": [],
            "signature": [
              "(key: string, params?: {}) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.createFilter.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.createFilter.$2",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "{}"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.onSearchRequestStart",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "onSearchRequestStart",
            "description": [
              "\n Hook for pre-flight logic, see AggType#onSearchRequestStart"
            ],
            "signature": [
              "(searchSource: Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">, options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined) => Promise<void> | Promise<any[]>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.onSearchRequestStart.$1",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.onSearchRequestStart.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toDsl",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "toDsl",
            "description": [
              "\nConvert this aggConfig to its dsl syntax.\n\nAdds params and adhoc subaggs to a pojo, then returns it\n"
            ],
            "signature": [
              "(aggConfigs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.toDsl.$1",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [
                  "- the config object to convert"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "- if the config has a dsl representation, it is\n  returned, else undefined is returned"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.serialize",
            "type": "Function",
            "tags": [],
            "label": "serialize",
            "description": [],
            "signature": [
              "() => { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              "SerializableRecord",
              " | undefined; schema?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": [
              "Returns a serialized representation of an AggConfig."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toJSON",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "toJSON",
            "description": [],
            "signature": [
              "() => { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              "SerializableRecord",
              " | undefined; schema?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "visualizations",
                "path": "src/plugins/visualizations/public/vis.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/sidebar/state/reducers.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/sidebar/state/reducers.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/sidebar/state/reducers.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/sidebar/sidebar.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toSerializedFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "toSerializedFieldFormat",
            "description": [
              "\nReturns a serialized field format for the field used in this agg.\nThis can be passed to fieldFormats.deserialize to get the field\nformat instance.\n"
            ],
            "signature": [
              "() => {}"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toExpressionAst",
            "type": "Function",
            "tags": [],
            "label": "toExpressionAst",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionAstExpression",
                "text": "ExpressionAstExpression"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": [
              "Returns an ExpressionAst representing the this agg type."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getAggParams",
            "type": "Function",
            "tags": [],
            "label": "getAggParams",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getRequestAggs",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getResponseAggs",
            "type": "Function",
            "tags": [],
            "label": "getResponseAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getValue",
            "type": "Function",
            "tags": [],
            "label": "getValue",
            "description": [],
            "signature": [
              "(bucket: any) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getValue.$1",
                "type": "Any",
                "tags": [],
                "label": "bucket",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getKey",
            "type": "Function",
            "tags": [],
            "label": "getKey",
            "description": [],
            "signature": [
              "(bucket: any, key?: string | undefined) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getKey.$1",
                "type": "Any",
                "tags": [],
                "label": "bucket",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getKey.$2",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getFieldDisplayName",
            "type": "Function",
            "tags": [],
            "label": "getFieldDisplayName",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getField",
            "type": "Function",
            "tags": [],
            "label": "getField",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getValueBucketPath",
            "type": "Function",
            "tags": [],
            "label": "getValueBucketPath",
            "description": [
              "\nReturns the bucket path containing the main value the agg will produce\n(e.g. for sum of bytes it will point to the sum, for median it will point\n to the 50 percentile in the percentile multi value bucket)"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.makeLabel",
            "type": "Function",
            "tags": [],
            "label": "makeLabel",
            "description": [],
            "signature": [
              "(percentageMode?: boolean) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.makeLabel.$1",
                "type": "boolean",
                "tags": [],
                "label": "percentageMode",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getTimeRange",
            "type": "Function",
            "tags": [],
            "label": "getTimeRange",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.fieldName",
            "type": "Function",
            "tags": [],
            "label": "fieldName",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.fieldIsTimeField",
            "type": "Function",
            "tags": [],
            "label": "fieldIsTimeField",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.type",
            "type": "Object",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggType",
                "text": "AggType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.type",
            "type": "Object",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggType",
                "text": "AggType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.setType",
            "type": "Function",
            "tags": [],
            "label": "setType",
            "description": [],
            "signature": [
              "(type: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IAggType",
                "text": "IAggType"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.setType.$1",
                "type": "Object",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigs",
        "type": "Class",
        "tags": [],
        "label": "AggConfigs",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.timeRange",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.timeFields",
            "type": "Array",
            "tags": [],
            "label": "timeFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.forceNow",
            "type": "Object",
            "tags": [],
            "label": "forceNow",
            "description": [],
            "signature": [
              "Date | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.hierarchical",
            "type": "CompoundType",
            "tags": [],
            "label": "hierarchical",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.aggs",
            "type": "Array",
            "tags": [],
            "label": "aggs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$2",
                "type": "Array",
                "tags": [],
                "label": "configStates",
                "description": [],
                "signature": [
                  "Pick<Pick<{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
                  "SerializableRecord",
                  " | undefined; schema?: string | undefined; }, \"enabled\" | \"id\" | \"schema\" | \"params\"> & Pick<{ type: string | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, \"type\"> & Pick<{ type: string | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, never>, \"type\" | \"enabled\" | \"id\" | \"schema\" | \"params\">[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$3",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigsOptions",
                    "text": "AggConfigsOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setTimeFields",
            "type": "Function",
            "tags": [],
            "label": "setTimeFields",
            "description": [],
            "signature": [
              "(timeFields: string[] | undefined) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setTimeFields.$1",
                "type": "Array",
                "tags": [],
                "label": "timeFields",
                "description": [],
                "signature": [
                  "string[] | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setForceNow",
            "type": "Function",
            "tags": [],
            "label": "setForceNow",
            "description": [],
            "signature": [
              "(now: Date | undefined) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setForceNow.$1",
                "type": "Object",
                "tags": [],
                "label": "now",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setTimeRange",
            "type": "Function",
            "tags": [],
            "label": "setTimeRange",
            "description": [],
            "signature": [
              "(timeRange: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setTimeRange.$1",
                "type": "Object",
                "tags": [],
                "label": "timeRange",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResolvedTimeRange",
            "type": "Function",
            "tags": [],
            "label": "getResolvedTimeRange",
            "description": [
              "\nReturns the current time range as moment instance (date math will get resolved using the current \"now\" value or system time if not set)"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRangeBounds",
                "text": "TimeRangeBounds"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": [
              "Current time range as resolved date."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.clone",
            "type": "Function",
            "tags": [],
            "label": "clone",
            "description": [],
            "signature": [
              "({ enabledOnly }?: { enabledOnly?: boolean | undefined; }) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.clone.$1",
                "type": "Object",
                "tags": [],
                "label": "{ enabledOnly = true }",
                "description": [],
                "signature": [
                  "{ enabledOnly?: boolean | undefined; }"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.createAggConfig",
            "type": "Function",
            "tags": [],
            "label": "createAggConfig",
            "description": [],
            "signature": [
              "<T extends ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " = ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">(params: Pick<Pick<{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              "SerializableRecord",
              " | undefined; schema?: string | undefined; }, \"enabled\" | \"id\" | \"schema\" | \"params\"> & Pick<{ type: string | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IAggType",
                "text": "IAggType"
              },
              "; }, \"type\"> & Pick<{ type: string | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IAggType",
                "text": "IAggType"
              },
              "; }, never>, \"type\" | \"enabled\" | \"id\" | \"schema\" | \"params\">, { addToAggConfigs }?: { addToAggConfigs?: boolean | undefined; }) => T"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.createAggConfig.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "Pick<Pick<{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
                  "SerializableRecord",
                  " | undefined; schema?: string | undefined; }, \"enabled\" | \"id\" | \"schema\" | \"params\"> & Pick<{ type: string | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, \"type\"> & Pick<{ type: string | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  },
                  "; }, never>, \"type\" | \"enabled\" | \"id\" | \"schema\" | \"params\">"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.createAggConfig.$2",
                "type": "Object",
                "tags": [],
                "label": "{ addToAggConfigs = true }",
                "description": [],
                "signature": [
                  "{ addToAggConfigs?: boolean | undefined; }"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.jsonDataEquals",
            "type": "Function",
            "tags": [],
            "label": "jsonDataEquals",
            "description": [
              "\nData-by-data comparison of this Aggregation\nIgnores the non-array indexes"
            ],
            "signature": [
              "(aggConfigs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]) => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.jsonDataEquals.$1",
                "type": "Array",
                "tags": [],
                "label": "aggConfigs",
                "description": [
                  "an AggConfigs instance"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.toDsl",
            "type": "Function",
            "tags": [],
            "label": "toDsl",
            "description": [],
            "signature": [
              "() => Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byIndex",
            "type": "Function",
            "tags": [],
            "label": "byIndex",
            "description": [],
            "signature": [
              "(index: number) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byIndex.$1",
                "type": "number",
                "tags": [],
                "label": "index",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byId",
            "type": "Function",
            "tags": [],
            "label": "byId",
            "description": [],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byId.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byName",
            "type": "Function",
            "tags": [],
            "label": "byName",
            "description": [],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byType",
            "type": "Function",
            "tags": [],
            "label": "byType",
            "description": [],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byType.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byTypeName",
            "type": "Function",
            "tags": [],
            "label": "byTypeName",
            "description": [],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byTypeName.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.bySchemaName",
            "type": "Function",
            "tags": [],
            "label": "bySchemaName",
            "description": [],
            "signature": [
              "(schema: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.bySchemaName.$1",
                "type": "string",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getRequestAggs",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getTimeShifts",
            "type": "Function",
            "tags": [],
            "label": "getTimeShifts",
            "description": [],
            "signature": [
              "() => Record<string, moment.Duration>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getTimeShiftInterval",
            "type": "Function",
            "tags": [],
            "label": "getTimeShiftInterval",
            "description": [],
            "signature": [
              "() => moment.Duration | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.hasTimeShifts",
            "type": "Function",
            "tags": [],
            "label": "hasTimeShifts",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getSearchSourceTimeFilter",
            "type": "Function",
            "tags": [],
            "label": "getSearchSourceTimeFilter",
            "description": [],
            "signature": [
              "(forceNow?: Date | undefined) => ",
              "RangeFilter",
              "[] | { meta: { index: string | undefined; params: {}; alias: string; disabled: boolean; negate: boolean; }; query: { bool: { should: { bool: { filter: { range: { [x: string]: { gte: string; lte: string; }; }; }[]; }; }[]; minimum_should_match: number; }; }; }[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getSearchSourceTimeFilter.$1",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.postFlightTransform",
            "type": "Function",
            "tags": [],
            "label": "postFlightTransform",
            "description": [],
            "signature": [
              "(response: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.postFlightTransform.$1",
                "type": "Object",
                "tags": [],
                "label": "response",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IEsSearchResponse",
                    "text": "IEsSearchResponse"
                  },
                  "<any>"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getRequestAggById",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggById",
            "description": [],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getRequestAggById.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResponseAggs",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getResponseAggs",
            "description": [
              "\nGets the AggConfigs (and possibly ResponseAggConfigs) that\nrepresent the values that will be produced when all aggs\nare run.\n\nWith multi-value metric aggs it is possible for a single agg\nrequest to result in multiple agg values, which is why the length\nof a vis' responseValuesAggs may be different than the vis' aggs\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResponseAggById",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getResponseAggById",
            "description": [
              "\nFind a response agg by it's id. This may be an agg in the aggConfigs, or one\ncreated specifically for a response value\n"
            ],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getResponseAggById.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- the id of the agg to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.onSearchRequestStart",
            "type": "Function",
            "tags": [],
            "label": "onSearchRequestStart",
            "description": [],
            "signature": [
              "(searchSource: Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">, options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined) => Promise<[unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown, unknown]>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.onSearchRequestStart.$1",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.onSearchRequestStart.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParamType",
        "type": "Class",
        "tags": [],
        "label": "AggParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggParamType",
            "text": "AggParamType"
          },
          "<TAggConfig> extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<TAggConfig>"
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.makeAgg",
            "type": "Function",
            "tags": [],
            "label": "makeAgg",
            "description": [],
            "signature": [
              "(agg: TAggConfig, state?: { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              "SerializableRecord",
              " | undefined; schema?: string | undefined; } | undefined) => TAggConfig"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.agg",
                "type": "Uncategorized",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  "TAggConfig"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.state",
                "type": "Object",
                "tags": [],
                "label": "state",
                "description": [],
                "signature": [
                  "{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
                  "SerializableRecord",
                  " | undefined; schema?: string | undefined; } | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.allowedAggs",
            "type": "Array",
            "tags": [],
            "label": "allowedAggs",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Record<string, any>"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataPublicPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataPublicPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPlugin",
            "text": "DataPublicPlugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPluginSetup",
            "text": "DataPublicPluginSetup"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPluginStart",
            "text": "DataPublicPluginStart"
          },
          ", ",
          "DataSetupDependencies",
          ", ",
          "DataStartDependencies",
          ">"
        ],
        "path": "src/plugins/data/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<Readonly<{} & { search: Readonly<{} & { aggs: Readonly<{} & { shardDelay: Readonly<{} & { enabled: boolean; }>; }>; }>; autocomplete: Readonly<{} & { querySuggestions: Readonly<{} & { enabled: boolean; }>; valueSuggestions: Readonly<{} & { enabled: boolean; timeout: moment.Duration; tiers: string[]; terminateAfter: moment.Duration; }>; }>; }>>"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "DataStartDependencies",
              ", ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              },
              ">, { bfetch, expressions, uiActions, usageCollection, inspector, fieldFormats, }: ",
              "DataSetupDependencies",
              ") => ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginSetup",
                "text": "DataPublicPluginSetup"
              }
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "DataStartDependencies",
                  ", ",
                  {
                    "pluginId": "data",
                    "scope": "public",
                    "docId": "kibDataPluginApi",
                    "section": "def-public.DataPublicPluginStart",
                    "text": "DataPublicPluginStart"
                  },
                  ">"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{\n      bfetch,\n      expressions,\n      uiActions,\n      usageCollection,\n      inspector,\n      fieldFormats,\n    }",
                "description": [],
                "signature": [
                  "DataSetupDependencies"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", { uiActions, fieldFormats }: ",
              "DataStartDependencies",
              ") => ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ uiActions, fieldFormats }",
                "description": [],
                "signature": [
                  "DataStartDependencies"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DuplicateIndexPatternError",
        "type": "Class",
        "tags": [],
        "label": "DuplicateIndexPatternError",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.DuplicateIndexPatternError",
            "text": "DuplicateIndexPatternError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data/common/index_patterns/errors/duplicate_index_pattern.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DuplicateIndexPatternError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/errors/duplicate_index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DuplicateIndexPatternError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/errors/duplicate_index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPattern",
        "type": "Class",
        "tags": [],
        "label": "IndexPattern",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          " implements ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPattern",
            "text": "IIndexPattern"
          }
        ],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [],
            "signature": [
              "{ [x: string]: any; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ">; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.intervalName",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "intervalName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.formatHit",
            "type": "Function",
            "tags": [],
            "label": "formatHit",
            "description": [],
            "signature": [
              "{ (hit: Record<string, any>, type?: string | undefined): any; formatField: FormatFieldFn; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.formatField",
            "type": "Function",
            "tags": [],
            "label": "formatField",
            "description": [],
            "signature": [
              "(hit: Record<string, any>, fieldName: string) => any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.flattenHit",
            "type": "Function",
            "tags": [],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, any>, deep?: boolean | undefined) => Record<string, any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.deep",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nprevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    spec = {},\n    fieldFormats,\n    shortDotsEnable = false,\n    metaFields = [],\n  }",
                "description": [],
                "signature": [
                  "IndexPatternDeps"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; intervalName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. used after saving"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [],
            "signature": [
              "() => { storedFields: string[]; scriptFields: any; docvalueFields: { field: any; format: string; }[]; runtimeFields: Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreate static representation of index pattern"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: any[]; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.addScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "addScriptedField",
            "description": [
              "\nAdd scripted field to field list\n"
            ],
            "signature": [
              "(name: string, script: string, fieldType?: string) => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.addScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.addScriptedField.$2",
                "type": "string",
                "tags": [],
                "label": "script",
                "description": [
                  "script code"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.addScriptedField.$3",
                "type": "string",
                "tags": [],
                "label": "fieldType",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemove scripted field from field list"
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_type_timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [],
            "signature": [
              "() => Record<string, Record<string, { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }>> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternField",
                    "text": "IndexPatternField"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate"
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields"
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists"
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [],
            "signature": [
              "<K extends \"customLabel\" | \"count\">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<Record<string, any>>) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<Record<string, any>>"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPattern.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPattern.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternField",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternField",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternField",
            "text": "IndexPatternField"
          },
          " implements ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IFieldType",
            "text": "IFieldType"
          }
        ],
        "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.spec",
            "type": "Object",
            "tags": [],
            "label": "spec",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternField.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nCount is used for field popularity"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.runtimeField",
            "type": "Object",
            "tags": [],
            "label": "runtimeField",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.runtimeField",
            "type": "Object",
            "tags": [],
            "label": "runtimeField",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nScript field code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.lang",
            "type": "CompoundType",
            "tags": [],
            "label": "lang",
            "description": [
              "\nScript field language"
            ],
            "signature": [
              "\"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.lang",
            "type": "CompoundType",
            "tags": [],
            "label": "lang",
            "description": [],
            "signature": [
              "\"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nDescription of field type conflicts across different indices in the same index pattern"
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.scripted",
            "type": "boolean",
            "tags": [],
            "label": "scripted",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.subType",
            "type": "Object",
            "tags": [],
            "label": "subType",
            "description": [],
            "signature": [
              "IFieldSubType",
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.isMapped",
            "type": "CompoundType",
            "tags": [],
            "label": "isMapped",
            "description": [
              "\nIs the field part of the index mapping?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.visualizable",
            "type": "boolean",
            "tags": [],
            "label": "visualizable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.deleteCount",
            "type": "Function",
            "tags": [],
            "label": "deleteCount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.toJSON",
            "type": "Function",
            "tags": [],
            "label": "toJSON",
            "description": [],
            "signature": [
              "() => { count: number; script: string | undefined; lang: \"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined; conflictDescriptions: Record<string, string[]> | undefined; name: string; type: string; esTypes: string[] | undefined; scripted: boolean; searchable: boolean; aggregatable: boolean; readFromDocValues: boolean; subType: ",
              "IFieldSubType",
              " | undefined; customLabel: string | undefined; }"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternField.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [],
            "signature": [
              "({ getFormatterForField, }?: { getFormatterForField?: ((field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined; }) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternField.toSpec.$1.getFormatterForField",
                "type": "Object",
                "tags": [],
                "label": "{\n    getFormatterForField,\n  }",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.IndexPatternField.toSpec.$1.getFormatterForField.getFormatterForField",
                    "type": "Function",
                    "tags": [],
                    "label": "getFormatterForField",
                    "description": [],
                    "signature": [
                      "((field: ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IFieldType",
                        "text": "IFieldType"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IndexPatternField",
                        "text": "IndexPatternField"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.FieldSpec",
                        "text": "FieldSpec"
                      },
                      ") => ",
                      {
                        "pluginId": "fieldFormats",
                        "scope": "common",
                        "docId": "kibFieldFormatsPluginApi",
                        "section": "def-common.FieldFormat",
                        "text": "FieldFormat"
                      },
                      ") | undefined"
                    ],
                    "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternsService",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternsService",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.ensureDefaultIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "ensureDefaultIndexPattern",
            "description": [],
            "signature": [
              "() => Promise<unknown> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    uiSettings,\n    savedObjectsClient,\n    apiClient,\n    fieldFormats,\n    onNotification,\n    onError,\n    onRedirectNoIndexPattern = () => {},\n  }",
                "description": [],
                "signature": [
                  "IndexPatternsServiceDeps"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGet list of index pattern ids"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGet list of index pattern titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title"
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGet list of index pattern ids with titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternListItem",
                "text": "IndexPatternListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern list cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.clearCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "optionally clear a single id"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [],
            "signature": [
              "() => Promise<",
              "SavedObject",
              "<Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ", \"type\" | \"title\" | \"typeMeta\">>[] | null | undefined>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.hasUserIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "hasUserIndexPattern",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }"
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ") => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map"
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts index pattern saved object to index pattern spec"
            ],
            "signature": [
              "(savedObject: ",
              "SavedObject",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ">) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  "SavedObject",
                  "<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternAttributes",
                    "text": "IndexPatternAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPatternSpec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id. Cache optimized"
            ],
            "signature": [
              "(id: string) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a new index pattern instance"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new index pattern and save it right away"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", override?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing index pattern. Will attempt to merge differences if there are conflicts"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean) => Promise<void | Error>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index"
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IndexPatternsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.OptionedParamType",
        "type": "Class",
        "tags": [],
        "label": "OptionedParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.OptionedParamType",
            "text": "OptionedParamType"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedParamType.options",
            "type": "Array",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.OptionedValueProp",
                "text": "OptionedValueProp"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedParamType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.OptionedParamType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Record<string, any>"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SearchSource",
        "type": "Class",
        "tags": [],
        "label": "SearchSource",
        "description": [],
        "path": "src/plugins/data/common/search/search_source/search_source.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.history",
            "type": "Array",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              "Record<string, any>[]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "fields",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "dependencies",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceDependencies",
                    "text": "SearchSourceDependencies"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setPreferredSearchStrategyId",
            "type": "Function",
            "tags": [],
            "label": "setPreferredSearchStrategyId",
            "description": [
              "**\nPUBLIC API\n\ninternal, dont use"
            ],
            "signature": [
              "(searchStrategyId: string) => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setPreferredSearchStrategyId.$1",
                "type": "string",
                "tags": [],
                "label": "searchStrategyId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setField",
            "type": "Function",
            "tags": [],
            "label": "setField",
            "description": [
              "\nsets value to a single search source field"
            ],
            "signature": [
              "<K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K, value: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]) => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [
                  ": field name"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setField.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  ": value for the field"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.removeField",
            "type": "Function",
            "tags": [],
            "label": "removeField",
            "description": [
              "\nremove field"
            ],
            "signature": [
              "<K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K) => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.removeField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [
                  ": field name"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setFields",
            "type": "Function",
            "tags": [
              "private"
            ],
            "label": "setFields",
            "description": [
              "\nInternal, do not use. Overrides all search source fields with the new field array.\n"
            ],
            "signature": [
              "(newFields: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ") => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "New field array."
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getId",
            "type": "Function",
            "tags": [],
            "label": "getId",
            "description": [
              "\nreturns search source id"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getFields",
            "type": "Function",
            "tags": [],
            "label": "getFields",
            "description": [
              "\nreturns all search source fields"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getField",
            "type": "Function",
            "tags": [],
            "label": "getField",
            "description": [
              "\nGets a single field from the fields"
            ],
            "signature": [
              "<K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K, recurse?: boolean) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getField.$2",
                "type": "boolean",
                "tags": [],
                "label": "recurse",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getOwnField",
            "type": "Function",
            "tags": [],
            "label": "getOwnField",
            "description": [
              "\nGet the field from our own fields, don't traverse up the chain"
            ],
            "signature": [
              "<K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getOwnField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.create",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "create",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": true,
            "references": [
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.createCopy",
            "type": "Function",
            "tags": [],
            "label": "createCopy",
            "description": [
              "\ncreates a copy of this search source (without its children)"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.createChild",
            "type": "Function",
            "tags": [],
            "label": "createChild",
            "description": [
              "\ncreates a new child search source"
            ],
            "signature": [
              "(options?: {}) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.createChild.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "{}"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setParent",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "setParent",
            "description": [
              "\nSet a searchSource that this source should inherit from"
            ],
            "signature": [
              "(parent?: Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\"> | undefined, options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceOptions",
                "text": "SearchSourceOptions"
              },
              ") => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setParent.$1",
                "type": "Object",
                "tags": [],
                "label": "parent",
                "description": [
                  "- the parent searchSource"
                ],
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\"> | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setParent.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- the inherit options"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceOptions",
                    "text": "SearchSourceOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "- chainable"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getParent",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getParent",
            "description": [
              "\nGet the parent of this SearchSource"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.fetch$",
            "type": "Function",
            "tags": [],
            "label": "fetch$",
            "description": [
              "\nFetch this source from Elasticsearch, returning an observable over the response(s)"
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              ") => ",
              "Observable",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<",
              "SearchResponse",
              "<any>>>"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.fetch$.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.fetch",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "fetch",
            "description": [
              "\nFetch this source and reject the returned Promise on error"
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              ") => Promise<",
              "SearchResponse",
              "<any>>"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/angular/context/api/utils/fetch_hits_in_interval.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/angular/context/api/anchor.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.fetch.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.onRequestStart",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "onRequestStart",
            "description": [
              "\n Add a handler that will be notified whenever requests start"
            ],
            "signature": [
              "(handler: (searchSource: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined) => Promise<unknown>) => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.onRequestStart.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [],
                "signature": [
                  "(searchSource: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", options?: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  },
                  " | undefined) => Promise<unknown>"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getSearchRequestBody",
            "type": "Function",
            "tags": [],
            "label": "getSearchRequestBody",
            "description": [
              "\nReturns body contents of the search request, often referred as query DSL."
            ],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.destroy",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "destroy",
            "description": [
              "\nCompletely destroy the SearchSource."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getSerializedFields",
            "type": "Function",
            "tags": [],
            "label": "getSerializedFields",
            "description": [
              "\nserializes search source fields (which can later be passed to {@link ISearchStartSearchSource})"
            ],
            "signature": [
              "(recurse?: boolean) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getSerializedFields.$1",
                "type": "boolean",
                "tags": [],
                "label": "recurse",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.serialize",
            "type": "Function",
            "tags": [],
            "label": "serialize",
            "description": [
              "\nSerializes the instance to a JSON string and a set of referenced objects.\nUse this method to get a representation of the search source which can be stored in a saved object.\n\nThe references returned by this function can be mixed with other references in the same object,\nhowever make sure there are no name-collisions. The references will be named `kibanaSavedObjectMeta.searchSourceJSON.index`\nand `kibanaSavedObjectMeta.searchSourceJSON.filter[<number>].meta.index`.\n\nUsing `createSearchSource`, the instance can be re-created."
            ],
            "signature": [
              "() => { searchSourceJSON: string; references: ",
              "SavedObjectReference",
              "[]; }"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-public.castEsToKbnFieldTypeName",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "castEsToKbnFieldTypeName",
        "description": [],
        "signature": [
          "(esType: string) => ",
          "KBN_FIELD_TYPES"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          }
        ],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.esType",
            "type": "string",
            "tags": [],
            "label": "esType",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_types.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.extractReferences",
        "type": "Function",
        "tags": [],
        "label": "extractReferences",
        "description": [],
        "signature": [
          "(state: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ") => [",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          " & { indexRefName?: string | undefined; }, ",
          "SavedObjectReference",
          "[]]"
        ],
        "path": "src/plugins/data/common/search/search_source/extract_references.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.extractReferences.$1",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/extract_references.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.fieldList",
        "type": "Function",
        "tags": [],
        "label": "fieldList",
        "description": [],
        "signature": [
          "(specs?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], shortDotsEnable?: boolean) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          }
        ],
        "path": "src/plugins/data/common/index_patterns/fields/field_list.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.fieldList.$1",
            "type": "Array",
            "tags": [],
            "label": "specs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/field_list.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.fieldList.$2",
            "type": "boolean",
            "tags": [],
            "label": "shortDotsEnable",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/field_list.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          "EsQueryConfig"
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getKbnTypeNames",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getKbnTypeNames",
        "description": [],
        "signature": [
          "() => string[]"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/constants/index.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/constants/index.ts"
          }
        ],
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getSearchParamsFromRequest",
        "type": "Function",
        "tags": [],
        "label": "getSearchParamsFromRequest",
        "description": [],
        "signature": [
          "(searchRequest: Record<string, any>, dependencies: { getConfig: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataPluginApi",
            "section": "def-common.GetConfigFn",
            "text": "GetConfigFn"
          },
          "; }) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getSearchParamsFromRequest.$1",
            "type": "Object",
            "tags": [],
            "label": "searchRequest",
            "description": [],
            "signature": [
              "Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getSearchParamsFromRequest.$2.dependencies",
            "type": "Object",
            "tags": [],
            "label": "dependencies",
            "description": [],
            "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.getSearchParamsFromRequest.$2.dependencies.getConfig",
                "type": "Function",
                "tags": [],
                "label": "getConfig",
                "description": [],
                "signature": [
                  "<T = any>(key: string, defaultOverride?: T | undefined) => T"
                ],
                "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.key",
                    "type": "string",
                    "tags": [],
                    "label": "key",
                    "description": [],
                    "path": "src/plugins/data/common/types.ts",
                    "deprecated": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.defaultOverride",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "defaultOverride",
                    "description": [],
                    "signature": [
                      "T | undefined"
                    ],
                    "path": "src/plugins/data/common/types.ts",
                    "deprecated": false
                  }
                ]
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getTime",
        "type": "Function",
        "tags": [],
        "label": "getTime",
        "description": [],
        "signature": [
          "(indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPattern",
            "text": "IIndexPattern"
          },
          " | undefined, timeRange: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", options: { forceNow?: Date | undefined; fieldName?: string | undefined; } | undefined) => ",
          "RangeFilter",
          " | ",
          "ScriptedRangeFilter",
          " | ",
          "MatchAllRangeFilter",
          " | undefined"
        ],
        "path": "src/plugins/data/common/query/timefilter/get_time.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$1",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPattern",
                "text": "IIndexPattern"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$2",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$3.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.getTime.$3.options.forceNow",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.getTime.$3.options.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.injectReferences",
        "type": "Function",
        "tags": [],
        "label": "injectReferences",
        "description": [],
        "signature": [
          "(searchSourceFields: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          " & { indexRefName: string; }, references: ",
          "SavedObjectReference",
          "[]) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/inject_references.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.injectReferences.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "searchSourceFields",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              " & { indexRefName: string; }"
            ],
            "path": "src/plugins/data/common/search/search_source/inject_references.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.injectReferences.$2",
            "type": "Array",
            "tags": [],
            "label": "references",
            "description": [],
            "signature": [
              "SavedObjectReference",
              "[]"
            ],
            "path": "src/plugins/data/common/search/search_source/inject_references.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isCompleteResponse",
        "type": "Function",
        "tags": [],
        "label": "isCompleteResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isCompleteResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if response is completed successfully"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isErrorResponse",
        "type": "Function",
        "tags": [],
        "label": "isErrorResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isErrorResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if response had an error while executing in ES"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilter",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.x",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilters",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          "Filter",
          "[]"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          }
        ],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.x",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isPartialResponse",
        "type": "Function",
        "tags": [],
        "label": "isPartialResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isPartialResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if request is still running an/d response contains partial results"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isQuery",
        "type": "Function",
        "tags": [],
        "label": "isQuery",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          "Query"
        ],
        "path": "src/plugins/data/common/query/is_query.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isQuery.$1",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/common/query/is_query.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isTimeRange",
        "type": "Function",
        "tags": [],
        "label": "isTimeRange",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          }
        ],
        "path": "src/plugins/data/common/query/timefilter/is_time_range.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isTimeRange.$1",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/common/query/timefilter/is_time_range.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.parseSearchSourceJSON",
        "type": "Function",
        "tags": [],
        "label": "parseSearchSourceJSON",
        "description": [],
        "signature": [
          "(searchSourceJSON: string) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/parse_json.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.parseSearchSourceJSON.$1",
            "type": "string",
            "tags": [],
            "label": "searchSourceJSON",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/search/search_source/parse_json.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggFunctionsMapping",
        "type": "Interface",
        "tags": [],
        "label": "AggFunctionsMapping",
        "description": [
          "\nA global list of the expression function definitions for each agg type function."
        ],
        "path": "src/plugins/data/common/search/aggs/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilter",
            "type": "Object",
            "tags": [],
            "label": "aggFilter",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilter\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".FILTER>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ geo_bounding_box?: ({ type: \"geo_bounding_box\"; } & GeoBox) | ({ type: \"geo_bounding_box\"; } & { top_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & { top_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & WellKnownText) | undefined; filter?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"kibana_query\", ",
              "Query",
              "> | undefined; }, \"filter\" | \"geo_bounding_box\"> & Pick<{ geo_bounding_box?: ({ type: \"geo_bounding_box\"; } & GeoBox) | ({ type: \"geo_bounding_box\"; } & { top_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & { top_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & WellKnownText) | undefined; filter?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"kibana_query\", ",
              "Query",
              "> | undefined; }, never>, \"enabled\" | \"id\" | \"filter\" | \"customLabel\" | \"schema\" | \"geo_bounding_box\" | \"json\" | \"timeShift\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilters",
            "type": "Object",
            "tags": [],
            "label": "aggFilters",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilters\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".FILTERS>, \"enabled\" | \"id\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ filters?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"kibana_query_filter\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.QueryFilter",
                "text": "QueryFilter"
              },
              ">[] | undefined; }, \"filters\"> & Pick<{ filters?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"kibana_query_filter\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.QueryFilter",
                "text": "QueryFilter"
              },
              ">[] | undefined; }, never>, \"enabled\" | \"filters\" | \"id\" | \"schema\" | \"json\" | \"timeShift\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSignificantTerms",
            "type": "Object",
            "tags": [],
            "label": "aggSignificantTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSignificantTerms\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".SIGNIFICANT_TERMS>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggIpRange",
            "type": "Object",
            "tags": [],
            "label": "aggIpRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggIpRange\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".IP_RANGE>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\"> & Pick<{ ranges?: (",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"cidr\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.Cidr",
                "text": "Cidr"
              },
              "> | ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"ip_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IpRange",
                "text": "IpRange"
              },
              ">)[] | undefined; ipRangeType?: string | undefined; }, \"ipRangeType\" | \"ranges\"> & Pick<{ ranges?: (",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"cidr\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.Cidr",
                "text": "Cidr"
              },
              "> | ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"ip_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IpRange",
                "text": "IpRange"
              },
              ">)[] | undefined; ipRangeType?: string | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"ipRangeType\" | \"ranges\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDateRange",
            "type": "Object",
            "tags": [],
            "label": "aggDateRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDateRange\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".DATE_RANGE>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"time_zone\"> & Pick<{ ranges?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"date_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.DateRange",
                "text": "DateRange"
              },
              ">[] | undefined; }, \"ranges\"> & Pick<{ ranges?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"date_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.DateRange",
                "text": "DateRange"
              },
              ">[] | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"ranges\" | \"time_zone\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggRange",
            "type": "Object",
            "tags": [],
            "label": "aggRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggRange\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".RANGE>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\"> & Pick<{ ranges?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"numerical_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.NumericalRange",
                "text": "NumericalRange"
              },
              ">[] | undefined; }, \"ranges\"> & Pick<{ ranges?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"numerical_range\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.NumericalRange",
                "text": "NumericalRange"
              },
              ">[] | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"ranges\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoTile",
            "type": "Object",
            "tags": [],
            "label": "aggGeoTile",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoTile\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".GEOTILE_GRID>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoHash",
            "type": "Object",
            "tags": [],
            "label": "aggGeoHash",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoHash\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".GEOHASH_GRID>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"autoPrecision\" | \"precision\" | \"useGeocentroid\" | \"isFilteredByCollar\"> & Pick<{ boundingBox?: ({ type: \"geo_bounding_box\"; } & GeoBox) | ({ type: \"geo_bounding_box\"; } & { top_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & { top_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & WellKnownText) | undefined; }, \"boundingBox\"> & Pick<{ boundingBox?: ({ type: \"geo_bounding_box\"; } & GeoBox) | ({ type: \"geo_bounding_box\"; } & { top_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & { top_right: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; bottom_left: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.GeoPoint",
                "text": "GeoPoint"
              },
              "; }) | ({ type: \"geo_bounding_box\"; } & WellKnownText) | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"autoPrecision\" | \"precision\" | \"useGeocentroid\" | \"isFilteredByCollar\" | \"boundingBox\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggHistogram",
            "type": "Object",
            "tags": [],
            "label": "aggHistogram",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggHistogram\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".HISTOGRAM>, \"enabled\" | \"interval\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"used_interval\" | \"maxBars\" | \"intervalBase\" | \"min_doc_count\" | \"has_extended_bounds\"> & Pick<{ extended_bounds?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"extended_bounds\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ExtendedBounds",
                "text": "ExtendedBounds"
              },
              "> | undefined; }, \"extended_bounds\"> & Pick<{ extended_bounds?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"extended_bounds\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ExtendedBounds",
                "text": "ExtendedBounds"
              },
              "> | undefined; }, never>, \"enabled\" | \"interval\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"used_interval\" | \"maxBars\" | \"intervalBase\" | \"min_doc_count\" | \"has_extended_bounds\" | \"extended_bounds\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDateHistogram",
            "type": "Object",
            "tags": [],
            "label": "aggDateHistogram",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDateHistogram\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".DATE_HISTOGRAM>, \"enabled\" | \"interval\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"time_zone\" | \"used_interval\" | \"min_doc_count\" | \"useNormalizedEsInterval\" | \"scaleMetricValues\" | \"used_time_zone\" | \"drop_partials\" | \"format\"> & Pick<{ timeRange?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"timerange\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              "> | undefined; extended_bounds?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"extended_bounds\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ExtendedBounds",
                "text": "ExtendedBounds"
              },
              "> | undefined; }, \"timeRange\" | \"extended_bounds\"> & Pick<{ timeRange?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"timerange\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              "> | undefined; extended_bounds?: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionValueBoxed",
                "text": "ExpressionValueBoxed"
              },
              "<\"extended_bounds\", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ExtendedBounds",
                "text": "ExtendedBounds"
              },
              "> | undefined; }, never>, \"enabled\" | \"interval\" | \"timeRange\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"time_zone\" | \"used_interval\" | \"min_doc_count\" | \"extended_bounds\" | \"useNormalizedEsInterval\" | \"scaleMetricValues\" | \"used_time_zone\" | \"drop_partials\" | \"format\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTerms",
            "type": "Object",
            "tags": [],
            "label": "aggTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTerms\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.BUCKET_TYPES",
                "text": "BUCKET_TYPES"
              },
              ".TERMS>, \"enabled\" | \"id\" | \"size\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"orderBy\" | \"order\" | \"missingBucket\" | \"missingBucketLabel\" | \"otherBucket\" | \"otherBucketLabel\" | \"exclude\" | \"include\"> & Pick<{ orderAgg?: ",
              "AggExpressionType",
              " | undefined; }, \"orderAgg\"> & Pick<{ orderAgg?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"size\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"field\" | \"orderBy\" | \"orderAgg\" | \"order\" | \"missingBucket\" | \"missingBucketLabel\" | \"otherBucket\" | \"otherBucketLabel\" | \"exclude\" | \"include\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggAvg",
            "type": "Object",
            "tags": [],
            "label": "aggAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggAvg\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".AVG>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketAvg",
            "type": "Object",
            "tags": [],
            "label": "aggBucketAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketAvg\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".AVG_BUCKET>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\" | \"customBucket\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"customBucket\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketMax",
            "type": "Object",
            "tags": [],
            "label": "aggBucketMax",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketMax\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MAX_BUCKET>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\" | \"customBucket\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"customBucket\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketMin",
            "type": "Object",
            "tags": [],
            "label": "aggBucketMin",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketMin\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MIN_BUCKET>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\" | \"customBucket\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"customBucket\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketSum",
            "type": "Object",
            "tags": [],
            "label": "aggBucketSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketSum\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".SUM_BUCKET>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\" | \"customBucket\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"customBucket\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilteredMetric",
            "type": "Object",
            "tags": [],
            "label": "aggFilteredMetric",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilteredMetric\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".FILTERED_METRIC>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\" | \"customBucket\"> & Pick<{ customBucket?: ",
              "AggExpressionType",
              " | undefined; customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"customBucket\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCardinality",
            "type": "Object",
            "tags": [],
            "label": "aggCardinality",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCardinality\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".CARDINALITY>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCount",
            "type": "Object",
            "tags": [],
            "label": "aggCount",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCount\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".COUNT>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCumulativeSum",
            "type": "Object",
            "tags": [],
            "label": "aggCumulativeSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCumulativeSum\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".CUMULATIVE_SUM>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"buckets_path\" | \"metricAgg\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"buckets_path\" | \"metricAgg\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDerivative",
            "type": "Object",
            "tags": [],
            "label": "aggDerivative",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDerivative\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".DERIVATIVE>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"buckets_path\" | \"metricAgg\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"buckets_path\" | \"metricAgg\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoBounds",
            "type": "Object",
            "tags": [],
            "label": "aggGeoBounds",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoBounds\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".GEO_BOUNDS>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoCentroid",
            "type": "Object",
            "tags": [],
            "label": "aggGeoCentroid",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoCentroid\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".GEO_CENTROID>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMax",
            "type": "Object",
            "tags": [],
            "label": "aggMax",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMax\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MAX>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMedian",
            "type": "Object",
            "tags": [],
            "label": "aggMedian",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMedian\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MEDIAN>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSinglePercentile",
            "type": "Object",
            "tags": [],
            "label": "aggSinglePercentile",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSinglePercentile\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".SINGLE_PERCENTILE>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMin",
            "type": "Object",
            "tags": [],
            "label": "aggMin",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMin\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MIN>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMovingAvg",
            "type": "Object",
            "tags": [],
            "label": "aggMovingAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMovingAvg\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".MOVING_FN>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"buckets_path\" | \"metricAgg\" | \"window\" | \"script\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"buckets_path\" | \"metricAgg\" | \"window\" | \"script\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggPercentileRanks",
            "type": "Object",
            "tags": [],
            "label": "aggPercentileRanks",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggPercentileRanks\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".PERCENTILE_RANKS>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggPercentiles",
            "type": "Object",
            "tags": [],
            "label": "aggPercentiles",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggPercentiles\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".PERCENTILES>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSerialDiff",
            "type": "Object",
            "tags": [],
            "label": "aggSerialDiff",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSerialDiff\", any, Pick<Pick<",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".SERIAL_DIFF>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"buckets_path\" | \"metricAgg\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, \"customMetric\"> & Pick<{ customMetric?: ",
              "AggExpressionType",
              " | undefined; }, never>, \"enabled\" | \"id\" | \"customLabel\" | \"schema\" | \"json\" | \"timeShift\" | \"customMetric\" | \"buckets_path\" | \"metricAgg\">, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggStdDeviation",
            "type": "Object",
            "tags": [],
            "label": "aggStdDeviation",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggStdDeviation\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".STD_DEV>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSum",
            "type": "Object",
            "tags": [],
            "label": "aggSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSum\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".SUM>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTopHit",
            "type": "Object",
            "tags": [],
            "label": "aggTopHit",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTopHit\", any, ",
              "AggExpressionFunctionArgs",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.METRIC_TYPES",
                "text": "METRIC_TYPES"
              },
              ".TOP_HITS>, ",
              "AggExpressionType",
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              "SerializableRecord",
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParamOption",
        "type": "Interface",
        "tags": [],
        "label": "AggParamOption",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_params.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.val",
            "type": "string",
            "tags": [],
            "label": "val",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.display",
            "type": "string",
            "tags": [],
            "label": "display",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.enabled",
            "type": "Function",
            "tags": [],
            "label": "enabled",
            "description": [],
            "signature": [
              "((agg: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ") => boolean) | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamOption.enabled.$1",
                "type": "Object",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_params.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ApplyGlobalFilterActionContext",
        "type": "Interface",
        "tags": [],
        "label": "ApplyGlobalFilterActionContext",
        "description": [],
        "path": "src/plugins/data/public/actions/apply_filter_action.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ApplyGlobalFilterActionContext.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "Filter",
              "[]"
            ],
            "path": "src/plugins/data/public/actions/apply_filter_action.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ApplyGlobalFilterActionContext.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/public/actions/apply_filter_action.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ApplyGlobalFilterActionContext.embeddable",
            "type": "Unknown",
            "tags": [],
            "label": "embeddable",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/public/actions/apply_filter_action.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ApplyGlobalFilterActionContext.controlledBy",
            "type": "string",
            "tags": [],
            "label": "controlledBy",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/public/actions/apply_filter_action.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataPublicPluginStartActions",
        "type": "Interface",
        "tags": [],
        "label": "DataPublicPluginStartActions",
        "description": [
          "\nutilities to generate filters from action context"
        ],
        "path": "src/plugins/data/public/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartActions.createFiltersFromValueClickAction",
            "type": "Function",
            "tags": [],
            "label": "createFiltersFromValueClickAction",
            "description": [],
            "signature": [
              "({ data, negate, }: ",
              "ValueClickDataContext",
              ") => Promise<",
              "Filter",
              "[]>"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.__0",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "ValueClickDataContext"
                ],
                "path": "src/plugins/data/public/actions/filters/create_filters_from_value_click.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartActions.createFiltersFromRangeSelectAction",
            "type": "Function",
            "tags": [],
            "label": "createFiltersFromRangeSelectAction",
            "description": [],
            "signature": [
              "(event: ",
              "RangeSelectDataContext",
              ") => Promise<",
              "Filter",
              "[]>"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.event",
                "type": "Object",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  "RangeSelectDataContext"
                ],
                "path": "src/plugins/data/public/actions/filters/create_filters_from_range_select.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataPublicPluginStartUi",
        "type": "Interface",
        "tags": [],
        "label": "DataPublicPluginStartUi",
        "description": [
          "\nData plugin prewired UI components"
        ],
        "path": "src/plugins/data/public/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartUi.IndexPatternSelect",
            "type": "CompoundType",
            "tags": [],
            "label": "IndexPatternSelect",
            "description": [],
            "signature": [
              "React.ComponentClass<",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataUiPluginApi",
                "section": "def-public.IndexPatternSelectProps",
                "text": "IndexPatternSelectProps"
              },
              ", any> | React.FunctionComponent<",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataUiPluginApi",
                "section": "def-public.IndexPatternSelectProps",
                "text": "IndexPatternSelectProps"
              },
              ">"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartUi.SearchBar",
            "type": "CompoundType",
            "tags": [],
            "label": "SearchBar",
            "description": [],
            "signature": [
              "React.ComponentClass<",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataUiPluginApi",
                "section": "def-public.StatefulSearchBarProps",
                "text": "StatefulSearchBarProps"
              },
              ", any> | React.FunctionComponent<",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataUiPluginApi",
                "section": "def-public.StatefulSearchBarProps",
                "text": "StatefulSearchBarProps"
              },
              ">"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.GetFieldsOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetFieldsOptions",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.pattern",
            "type": "string",
            "tags": [],
            "label": "pattern",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.lookBack",
            "type": "CompoundType",
            "tags": [],
            "label": "lookBack",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.rollupIndex",
            "type": "string",
            "tags": [],
            "label": "rollupIndex",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IDataPluginServices",
        "type": "Interface",
        "tags": [],
        "label": "IDataPluginServices",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.IDataPluginServices",
            "text": "IDataPluginServices"
          },
          " extends Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">"
        ],
        "path": "src/plugins/data/public/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.appName",
            "type": "string",
            "tags": [],
            "label": "appName",
            "description": [],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              }
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.savedObjects",
            "type": "Object",
            "tags": [],
            "label": "savedObjects",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-public.SavedObjectsStart",
                "text": "SavedObjectsStart"
              }
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.notifications",
            "type": "Object",
            "tags": [],
            "label": "notifications",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.NotificationsStart",
                "text": "NotificationsStart"
              }
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.http",
            "type": "Object",
            "tags": [],
            "label": "http",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-public.HttpSetup",
                "text": "HttpSetup"
              }
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.storage",
            "type": "Object",
            "tags": [],
            "label": "storage",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaUtils",
                "scope": "public",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-public.IStorageWrapper",
                "text": "IStorageWrapper"
              },
              "<any, void>"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IDataPluginServices.usageCollection",
            "type": "Object",
            "tags": [],
            "label": "usageCollection",
            "description": [],
            "signature": [
              {
                "pluginId": "usageCollection",
                "scope": "public",
                "docId": "kibUsageCollectionPluginApi",
                "section": "def-public.UsageCollectionStart",
                "text": "UsageCollectionStart"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IEsSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IEsSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IEsSearchRequest.indexType",
            "type": "string",
            "tags": [],
            "label": "indexType",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IFieldType",
        "type": "Interface",
        "tags": [
          "deprecated"
        ],
        "label": "IFieldType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IFieldType",
            "text": "IFieldType"
          },
          " extends ",
          "IndexPatternFieldBase"
        ],
        "path": "src/plugins/data/common/index_patterns/fields/types.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/fields/es_doc_field.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/fields/es_doc_field.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metrics_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metrics_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_grid/common.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_grid/common.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/metric.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/metric.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/selector.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/selector.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/group_by_expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/group_by_expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criteria.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criteria.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/group_by.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/group_by.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_row.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_row.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/metrics.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/metrics.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/server/maps_telemetry/maps_telemetry.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/server/maps_telemetry/maps_telemetry.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/es_source/es_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/es_source/es_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/group_by_expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/group_by_expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/selector.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/selector.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/metric.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/metric.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_row.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_row.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criteria.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criteria.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criterion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criterion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/group_by.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/group_by.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/metrics.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/metrics.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.d.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/target/types/public/alert_types/geo_containment/query_builder/util_components/single_field_select.d.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/target/types/public/alert_types/geo_containment/query_builder/util_components/single_field_select.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/index.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/index.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/utils.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/utils.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/utils.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/utils.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/geo_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/geo_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/indexpattern_datasource/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/indexpattern_datasource/types.d.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.test.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.test.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/util/get_docvalue_source_fields.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/util/get_docvalue_source_fields.test.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.aggregatable",
            "type": "CompoundType",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.filterable",
            "type": "CompoundType",
            "tags": [],
            "label": "filterable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.searchable",
            "type": "CompoundType",
            "tags": [],
            "label": "searchable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.sortable",
            "type": "CompoundType",
            "tags": [],
            "label": "sortable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.visualizable",
            "type": "CompoundType",
            "tags": [],
            "label": "visualizable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.readFromDocValues",
            "type": "CompoundType",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.format",
            "type": "Any",
            "tags": [],
            "label": "format",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IFieldType.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [],
            "signature": [
              "((options?: { getFormatterForField?: ((field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined; } | undefined) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IFieldType.toSpec.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/fields/types.ts",
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.IFieldType.toSpec.$1.options.getFormatterForField",
                    "type": "Function",
                    "tags": [],
                    "label": "getFormatterForField",
                    "description": [],
                    "signature": [
                      "((field: ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IFieldType",
                        "text": "IFieldType"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IndexPatternField",
                        "text": "IndexPatternField"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.FieldSpec",
                        "text": "FieldSpec"
                      },
                      ") => ",
                      {
                        "pluginId": "fieldFormats",
                        "scope": "common",
                        "docId": "kibFieldFormatsPluginApi",
                        "section": "def-common.FieldFormat",
                        "text": "FieldFormat"
                      },
                      ") | undefined"
                    ],
                    "path": "src/plugins/data/common/index_patterns/fields/types.ts",
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IIndexPattern",
        "type": "Interface",
        "tags": [
          "deprecated"
        ],
        "label": "IIndexPattern",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPattern",
            "text": "IIndexPattern"
          },
          " extends ",
          "IndexPatternBase"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": true,
        "references": [
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/helpers.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/helpers.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/container/source/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/container/source/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/container/source/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/with_kuery_autocompletion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/with_kuery_autocompletion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/kuery_bar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/kuery_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/index_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/index_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/new_job_capabilities_service_analytics.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/new_job_capabilities_service_analytics.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_recognizer/data_recognizer.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_recognizer/data_recognizer.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/new_job_capabilities_service.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/new_job_capabilities_service.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/load_new_job_capabilities.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/load_new_job_capabilities.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/toolbars/toolbar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/toolbars/toolbar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/utils/kuery.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/utils/kuery.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/hooks/use_metrics_explorer_data.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/hooks/use_metrics_explorer_data.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/hooks/use_metrics_explorer_chart_data.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/hooks/use_metrics_explorer_chart_data.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_chart.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_chart.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_filter/log_filter_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_filter/log_filter_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/with_source/with_source.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/with_source/with_source.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/toolbar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/toolbar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/hooks/use_metric_explorer_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/hooks/use_metric_explorer_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/search_strategy/index_fields/index.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/search_strategy/index_fields/index.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/action.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/action.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/network_top_countries_table/columns.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/network_top_countries_table/columns.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/network_top_countries_table/columns.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/network_top_countries_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/network_top_countries_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/common/search_strategy/index_fields/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/common/search_strategy/index_fields/index.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/containers/with_kuery_autocompletion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/containers/with_kuery_autocompletion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/containers/with_source/with_source.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/containers/with_source/with_source.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/index_pattern_context.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/index_pattern_context.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/containers/source/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/containers/source/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/containers/source/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/components/network_top_countries_table/columns.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/components/network_top_countries_table/columns.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/components/network_top_countries_table/columns.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_chart.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_chart.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/hooks/use_metrics_explorer_chart_data.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/hooks/use_metrics_explorer_chart_data.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/index.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/components/network_top_countries_table/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/components/network_top_countries_table/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/network/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/hooks/use_metric_explorer_state.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/hooks/use_metric_explorer_state.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/hooks/use_metrics_explorer_data.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/hooks/use_metrics_explorer_data.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/target/types/public/application/jobs/new_job/common/index_pattern_context.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/target/types/public/application/jobs/new_job/common/index_pattern_context.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/target/types/public/application/jobs/new_job/common/index_pattern_context.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/indexed_fields_table/components/table/table.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/indexed_fields_table/components/table/table.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/components/table/table.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/components/table/table.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/index_header/index_header.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/index_header/index_header.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/edit_index_pattern/index_header/index_header.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/edit_index_pattern/index_header/index_header.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_delete/use_delete_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_delete/use_delete_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/components/custom_url_editor/utils.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/components/custom_url_editor/utils.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/jobs_list/components/edit_job_flyout/edit_utils.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/jobs_list/components/edit_job_flyout/edit_utils.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/sourcerer/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/sourcerer/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/models/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/models/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/models/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/models/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/models/index_pattern.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/common/dependency_mocks/index_patterns.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/common/dependency_mocks/index_patterns.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_query_bar/exploration_query_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_query_bar/exploration_query_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/components/custom_url_editor/editor.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/components/custom_url_editor/editor.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/jobs_list/components/edit_job_flyout/tabs/custom_urls.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/jobs_list/components/edit_job_flyout/tabs/custom_urls.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/explorer/components/explorer_query_bar/explorer_query_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/explorer/components/explorer_query_bar/explorer_query_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/explorer/components/explorer_query_bar/explorer_query_bar.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/new_job/utils/new_job_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/jobs/new_job/utils/new_job_utils.test.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used for identifying rollup indices, otherwise left undefined"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [],
            "signature": [
              "(() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | undefined) | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<unknown> | undefined> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IIndexPattern.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nLook up a formatter for a given field"
            ],
            "signature": [
              "((field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.IIndexPattern.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternField",
                    "text": "IndexPatternField"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IKibanaSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<Params>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchRequest.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nAn id can be used to uniquely identify this request."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchRequest.params",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "Params | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IKibanaSearchResponse",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<RawResponse>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSome responses may contain a unique id to identify the request this response came from."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.total",
            "type": "number",
            "tags": [],
            "label": "total",
            "description": [
              "\nIf relevant to the search strategy, return a total number\nthat represents how progress is indicated."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.loaded",
            "type": "number",
            "tags": [],
            "label": "loaded",
            "description": [
              "\nIf relevant to the search strategy, return a loaded number\nthat represents how progress is indicated."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isRunning",
            "type": "CompoundType",
            "tags": [],
            "label": "isRunning",
            "description": [
              "\nIndicates whether search is still in flight"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isPartial",
            "type": "CompoundType",
            "tags": [],
            "label": "isPartial",
            "description": [
              "\nIndicates whether the results returned are complete or partial"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isRestored",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestored",
            "description": [
              "\nIndicates whether the results returned are from the async-search index"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.warning",
            "type": "string",
            "tags": [],
            "label": "warning",
            "description": [
              "\nOptional warnings that should be surfaced to the end user"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.rawResponse",
            "type": "Uncategorized",
            "tags": [],
            "label": "rawResponse",
            "description": [
              "\nThe raw response returned by the internal search method (usually the raw ES response)"
            ],
            "signature": [
              "RawResponse"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternAttributes",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternAttributes",
        "description": [
          "\nInterface for an index pattern saved object"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.fields",
            "type": "string",
            "tags": [],
            "label": "fields",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.typeMeta",
            "type": "string",
            "tags": [],
            "label": "typeMeta",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.intervalName",
            "type": "string",
            "tags": [],
            "label": "intervalName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.sourceFilters",
            "type": "string",
            "tags": [],
            "label": "sourceFilters",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.fieldFormatMap",
            "type": "string",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.fieldAttrs",
            "type": "string",
            "tags": [],
            "label": "fieldAttrs",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.runtimeFieldMap",
            "type": "string",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternAttributes.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nprevents errors when index pattern exists before indices"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternListItem",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternListItem",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternListItem.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternListItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternListItem.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternListItem.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternSpec",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternSpec",
        "description": [
          "\nStatic index pattern format\nSerialized data object, representing index pattern attributes and state"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nsaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nsaved object version string"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.intervalName",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "intervalName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": true,
            "references": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.fields",
            "type": "Object",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.fieldFormats",
            "type": "Object",
            "tags": [],
            "label": "fieldFormats",
            "description": [],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<Record<string, any>>> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.runtimeFieldMap",
            "type": "Object",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.fieldAttrs",
            "type": "Object",
            "tags": [],
            "label": "fieldAttrs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IndexPatternSpec.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchOptions",
        "type": "Interface",
        "tags": [],
        "label": "ISearchOptions",
        "description": [],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.abortSignal",
            "type": "Object",
            "tags": [],
            "label": "abortSignal",
            "description": [
              "\nAn `AbortSignal` that allows the caller of `search` to abort a search request."
            ],
            "signature": [
              "AbortSignal | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.strategy",
            "type": "string",
            "tags": [],
            "label": "strategy",
            "description": [
              "\nUse this option to force using a specific server side search strategy. Leave empty to use the default strategy."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.legacyHitsTotal",
            "type": "CompoundType",
            "tags": [],
            "label": "legacyHitsTotal",
            "description": [
              "\nRequest the legacy format for the total number of hits. If sending `rest_total_hits_as_int` to\nsomething other than `true`, this should be set to `false`."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.sessionId",
            "type": "string",
            "tags": [],
            "label": "sessionId",
            "description": [
              "\nA session ID, grouping multiple search requests into a single session."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.isStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isStored",
            "description": [
              "\nWhether the session is already saved (i.e. sent to background)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.isRestore",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestore",
            "description": [
              "\nWhether the session is restored (i.e. search requests should re-use the stored search IDs,\nrather than starting from scratch)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "\nIndex pattern reference is used for better error messages"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.inspector",
            "type": "Object",
            "tags": [],
            "label": "inspector",
            "description": [
              "\nInspector integration options"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IInspectorInfo",
                "text": "IInspectorInfo"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.executionContext",
            "type": "Object",
            "tags": [],
            "label": "executionContext",
            "description": [],
            "signature": [
              "KibanaExecutionContext",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchStartSearchSource",
        "type": "Interface",
        "tags": [],
        "label": "ISearchStartSearchSource",
        "description": [
          "\nhigh level search service"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchStartSearchSource.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\ncreates {@link SearchSource} based on provided serialized {@link SearchSourceFields}"
            ],
            "signature": [
              "(fields?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              " | undefined) => Promise<Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">>"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.ISearchStartSearchSource.create.$1",
                "type": "Object",
                "tags": [],
                "label": "fields",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/types.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchStartSearchSource.createEmpty",
            "type": "Function",
            "tags": [],
            "label": "createEmpty",
            "description": [
              "\ncreates empty {@link SearchSource}"
            ],
            "signature": [
              "() => Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\">"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.OptionedValueProp",
        "type": "Interface",
        "tags": [],
        "label": "OptionedValueProp",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.value",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.disabled",
            "type": "CompoundType",
            "tags": [],
            "label": "disabled",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.isCompatible",
            "type": "Function",
            "tags": [],
            "label": "isCompatible",
            "description": [],
            "signature": [
              "(agg: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.OptionedValueProp.isCompatible.$1",
                "type": "Object",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.RefreshInterval",
        "type": "Interface",
        "tags": [],
        "label": "RefreshInterval",
        "description": [],
        "path": "src/plugins/data/common/query/timefilter/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.RefreshInterval.pause",
            "type": "boolean",
            "tags": [],
            "label": "pause",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.RefreshInterval.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SearchSourceFields",
        "type": "Interface",
        "tags": [],
        "label": "SearchSourceFields",
        "description": [
          "\nsearch source fields"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.query",
            "type": "Object",
            "tags": [],
            "label": "query",
            "description": [
              "\n{@link Query}"
            ],
            "signature": [
              "Query",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.filter",
            "type": "CompoundType",
            "tags": [],
            "label": "filter",
            "description": [
              "\n{@link Filter}"
            ],
            "signature": [
              "Filter",
              " | ",
              "Filter",
              "[] | (() => ",
              "Filter",
              " | ",
              "Filter",
              "[] | undefined) | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.sort",
            "type": "CompoundType",
            "tags": [],
            "label": "sort",
            "description": [
              "\n{@link EsQuerySortValue}"
            ],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirection",
                "text": "SortDirection"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirectionNumeric",
                "text": "SortDirectionNumeric"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirectionFormat",
                "text": "SortDirectionFormat"
              },
              "> | Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirection",
                "text": "SortDirection"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirectionNumeric",
                "text": "SortDirectionNumeric"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SortDirectionFormat",
                "text": "SortDirectionFormat"
              },
              ">[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.highlight",
            "type": "Any",
            "tags": [],
            "label": "highlight",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.highlightAll",
            "type": "CompoundType",
            "tags": [],
            "label": "highlightAll",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.trackTotalHits",
            "type": "CompoundType",
            "tags": [],
            "label": "trackTotalHits",
            "description": [],
            "signature": [
              "number | boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.aggs",
            "type": "CompoundType",
            "tags": [],
            "label": "aggs",
            "description": [
              "\n{@link AggConfigs}"
            ],
            "signature": [
              "object | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | (() => object) | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.from",
            "type": "number",
            "tags": [],
            "label": "from",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.size",
            "type": "number",
            "tags": [],
            "label": "size",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.source",
            "type": "CompoundType",
            "tags": [],
            "label": "source",
            "description": [],
            "signature": [
              "string | boolean | string[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.version",
            "type": "CompoundType",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [
              "\nRetrieve fields via the search Fields API"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchFieldValue",
                "text": "SearchFieldValue"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.fieldsFromSource",
            "type": "CompoundType",
            "tags": [
              "deprecated"
            ],
            "label": "fieldsFromSource",
            "description": [
              "\nRetreive fields directly from _source (legacy behavior)\n"
            ],
            "signature": [
              "string | string[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": true,
            "references": [
              {
                "plugin": "reporting",
                "path": "x-pack/plugins/reporting/server/export_types/csv_searchsource/generate_csv/generate_csv.ts"
              },
              {
                "plugin": "reporting",
                "path": "x-pack/plugins/reporting/server/export_types/csv_searchsource/generate_csv/generate_csv.ts"
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.index",
            "type": "Object",
            "tags": [],
            "label": "index",
            "description": [
              "\n{@link IndexPatternService}"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.searchAfter",
            "type": "Object",
            "tags": [],
            "label": "searchAfter",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.EsQuerySearchAfter",
                "text": "EsQuerySearchAfter"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.timeout",
            "type": "string",
            "tags": [],
            "label": "timeout",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.terminate_after",
            "type": "number",
            "tags": [],
            "label": "terminate_after",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.parent",
            "type": "Object",
            "tags": [],
            "label": "parent",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.TypeMeta",
        "type": "Interface",
        "tags": [],
        "label": "TypeMeta",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.TypeMeta.aggs",
            "type": "Object",
            "tags": [],
            "label": "aggs",
            "description": [],
            "signature": [
              "Record<string, Record<string, { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }>> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.TypeMeta.params",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "{ rollup_index: string; } | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-public.BUCKET_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "BUCKET_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/buckets/bucket_agg_types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "signature": [
          "ES_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternType",
        "type": "Enum",
        "tags": [],
        "label": "IndexPatternType",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "signature": [
          "KBN_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.METRIC_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "METRIC_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SortDirection",
        "type": "Enum",
        "tags": [],
        "label": "SortDirection",
        "description": [],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-public.ACTION_GLOBAL_APPLY_FILTER",
        "type": "string",
        "tags": [],
        "label": "ACTION_GLOBAL_APPLY_FILTER",
        "description": [],
        "signature": [
          "\"ACTION_GLOBAL_APPLY_FILTER\""
        ],
        "path": "src/plugins/data/public/actions/apply_filter_action.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigOptions",
        "type": "Type",
        "tags": [],
        "label": "AggConfigOptions",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IAggType",
            "text": "IAggType"
          },
          "; enabled?: boolean | undefined; id?: string | undefined; schema?: string | undefined; params?: {} | ",
          "SerializableRecord",
          " | undefined; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigSerialized",
        "type": "Type",
        "tags": [],
        "label": "AggConfigSerialized",
        "description": [],
        "signature": [
          "{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
          "SerializableRecord",
          " | undefined; schema?: string | undefined; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupName",
        "type": "Type",
        "tags": [],
        "label": "AggGroupName",
        "description": [],
        "signature": [
          "\"none\" | \"buckets\" | \"metrics\""
        ],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParam",
        "type": "Type",
        "tags": [],
        "label": "AggParam",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_params.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggsStart",
        "type": "Type",
        "tags": [],
        "label": "AggsStart",
        "description": [
          "\nAggsStart represents the actual external contract as AggsCommonStart\nis only used internally. The difference is that AggsStart includes the\ntypings for the registry with initialized agg types.\n"
        ],
        "signature": [
          "{ calculateAutoTimeExpression: (range: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ") => string | undefined; datatableUtilities: { getIndexPattern: (column: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumn",
            "text": "DatatableColumn"
          },
          ") => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          " | undefined>; getAggConfig: (column: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumn",
            "text": "DatatableColumn"
          },
          ") => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          " | undefined>; isFilterable: (column: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumn",
            "text": "DatatableColumn"
          },
          ") => boolean; }; createAggConfigs: (indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ", configStates?: Pick<Pick<{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
          "SerializableRecord",
          " | undefined; schema?: string | undefined; }, \"enabled\" | \"id\" | \"schema\" | \"params\"> & Pick<{ type: string | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IAggType",
            "text": "IAggType"
          },
          "; }, \"type\"> & Pick<{ type: string | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IAggType",
            "text": "IAggType"
          },
          "; }, never>, \"type\" | \"enabled\" | \"id\" | \"schema\" | \"params\">[] | undefined) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfigs",
            "text": "AggConfigs"
          },
          "; types: ",
          "AggTypesRegistryStart",
          "; }"
        ],
        "path": "src/plugins/data/common/search/aggs/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.APPLY_FILTER_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "APPLY_FILTER_TRIGGER",
        "description": [],
        "signature": [
          "\"FILTER_TRIGGER\""
        ],
        "path": "src/plugins/data/public/triggers/apply_filter_trigger.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.CustomFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "CustomFilter",
        "description": [],
        "signature": [
          "{ $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; meta: ",
          "FilterMeta",
          "; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ES_SEARCH_STRATEGY",
        "type": "string",
        "tags": [],
        "label": "ES_SEARCH_STRATEGY",
        "description": [],
        "signature": [
          "\"es\""
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.EsaggsExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "EsaggsExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"esaggs\", Input, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          "SerializableRecord",
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/esaggs/esaggs_fn.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.EsQueryConfig",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "EsQueryConfig",
        "description": [],
        "signature": [
          "KueryQueryOptions",
          " & { allowLeadingWildcards: boolean; queryStringOptions: ",
          "SerializableRecord",
          "; ignoreFilterIfFieldNotInIndex: boolean; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.EsQuerySortValue",
        "type": "Type",
        "tags": [],
        "label": "EsQuerySortValue",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirection",
            "text": "SortDirection"
          },
          " | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirectionNumeric",
            "text": "SortDirectionNumeric"
          },
          " | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirectionFormat",
            "text": "SortDirectionFormat"
          },
          "; }"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExecutionContextSearch",
        "type": "Type",
        "tags": [],
        "label": "ExecutionContextSearch",
        "description": [],
        "signature": [
          "{ filters?: ",
          "Filter",
          "[] | undefined; query?: ",
          "Query",
          " | ",
          "Query",
          "[] | undefined; timeRange?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExistsFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "ExistsFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "FilterMeta",
          "; exists?: { field: string; } | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionKibana",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionKibana",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"kibana\", Input, object, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionValueBoxed",
            "text": "ExpressionValueBoxed"
          },
          "<\"kibana_context\", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionKibanaContext",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionKibanaContext",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"kibana_context\", Input, Arguments, Promise<",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionValueBoxed",
            "text": "ExpressionValueBoxed"
          },
          "<\"kibana_context\", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">>, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionValueSearchContext",
        "type": "Type",
        "tags": [],
        "label": "ExpressionValueSearchContext",
        "description": [],
        "signature": [
          "{ type: \"kibana_context\"; } & ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          }
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.Filter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "Filter",
        "description": [],
        "signature": [
          "{ $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; meta: ",
          "FilterMeta",
          "; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IAggConfig",
        "type": "Type",
        "tags": [
          "name",
          "description"
        ],
        "label": "IAggConfig",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          }
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IAggType",
        "type": "Type",
        "tags": [],
        "label": "IAggType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggType",
            "text": "AggType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggParamType",
            "text": "AggParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_type.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IEsSearchResponse",
        "type": "Type",
        "tags": [],
        "label": "IEsSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<Source>>"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IFieldParamType",
        "type": "Type",
        "tags": [],
        "label": "IFieldParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.FieldParamType",
            "text": "FieldParamType"
          }
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/field.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IFieldSubType",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "IFieldSubType",
        "description": [],
        "signature": [
          "IFieldSubType"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IMetricAggType",
        "type": "Type",
        "tags": [],
        "label": "IMetricAggType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.MetricAggType",
            "text": "MetricAggType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IMetricAggConfig",
            "text": "IMetricAggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_type.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "description": [],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternLoadExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "IndexPatternLoadExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"indexPatternLoad\", null, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          "SerializableRecord",
          ">>"
        ],
        "path": "src/plugins/data/common/index_patterns/expressions/load_index_pattern.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternsContract",
        "type": "Type",
        "tags": [],
        "label": "IndexPatternsContract",
        "description": [],
        "signature": [
          "{ get: (id: string) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ">; delete: (indexPatternId: string) => Promise<{}>; create: (spec: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternSpec",
            "text": "IndexPatternSpec"
          },
          ", skipFetchFields?: boolean) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ">; find: (search: string, size?: number) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          "[]>; ensureDefaultIndexPattern: ",
          "EnsureDefaultIndexPattern",
          "; getIds: (refresh?: boolean) => Promise<string[]>; getTitles: (refresh?: boolean) => Promise<string[]>; getIdsWithTitle: (refresh?: boolean) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternListItem",
            "text": "IndexPatternListItem"
          },
          "[]>; clearCache: (id?: string | undefined) => void; getCache: () => Promise<",
          "SavedObject",
          "<Pick<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternAttributes",
            "text": "IndexPatternAttributes"
          },
          ", \"type\" | \"title\" | \"typeMeta\">>[] | null | undefined>; getDefault: () => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          " | null>; getDefaultId: () => Promise<string | null>; setDefault: (id: string | null, force?: boolean) => Promise<void>; hasUserIndexPattern: () => Promise<boolean>; getFieldsForWildcard: (options: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          ") => Promise<any>; getFieldsForIndexPattern: (indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          " | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternSpec",
            "text": "IndexPatternSpec"
          },
          ", options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          " | undefined) => Promise<any>; refreshFields: (indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ") => Promise<void>; fieldArrayToMap: (fields: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], fieldAttrs?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined) => Record<string, ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          ">; savedObjectToSpec: (savedObject: ",
          "SavedObject",
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternAttributes",
            "text": "IndexPatternAttributes"
          },
          ">) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternSpec",
            "text": "IndexPatternSpec"
          },
          "; createAndSave: (spec: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternSpec",
            "text": "IndexPatternSpec"
          },
          ", override?: boolean, skipFetchFields?: boolean) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ">; createSavedObject: (indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ", override?: boolean) => Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ">; updateSavedObject: (indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          ", saveAttempts?: number, ignoreErrors?: boolean) => Promise<void | Error>; }"
        ],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchGeneric",
        "type": "Type",
        "tags": [],
        "label": "ISearchGeneric",
        "description": [],
        "signature": [
          "<SearchStrategyRequest extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<any> = ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          ", SearchStrategyResponse extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> = ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchResponse",
            "text": "IEsSearchResponse"
          },
          "<any>>(request: SearchStrategyRequest, options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchOptions",
            "text": "ISearchOptions"
          },
          " | undefined) => ",
          "Observable",
          "<SearchStrategyResponse>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.request",
            "type": "Uncategorized",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              "SearchStrategyRequest"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchSource",
        "type": "Type",
        "tags": [],
        "label": "ISearchSource",
        "description": [
          "\nsearch source interface"
        ],
        "signature": [
          "{ create: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; history: Record<string, any>[]; setPreferredSearchStrategyId: (searchStrategyId: string) => void; setField: <K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K, value: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; removeField: <K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; setFields: (newFields: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ") => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; getId: () => string; getFields: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "; getField: <K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K, recurse?: boolean) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]; getOwnField: <K extends \"type\" | \"from\" | \"query\" | \"source\" | \"sort\" | \"version\" | \"filter\" | \"highlight\" | \"highlightAll\" | \"trackTotalHits\" | \"aggs\" | \"size\" | \"fields\" | \"fieldsFromSource\" | \"index\" | \"searchAfter\" | \"timeout\" | \"terminate_after\" | \"parent\">(field: K) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]; createCopy: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; createChild: (options?: {}) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; setParent: (parent?: Pick<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\"> | undefined, options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceOptions",
            "text": "SearchSourceOptions"
          },
          ") => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; getParent: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          " | undefined; fetch$: (options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchOptions",
            "text": "ISearchOptions"
          },
          ") => ",
          "Observable",
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<any>>>; fetch: (options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchOptions",
            "text": "ISearchOptions"
          },
          ") => Promise<",
          "SearchResponse",
          "<any>>; onRequestStart: (handler: (searchSource: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          ", options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchOptions",
            "text": "ISearchOptions"
          },
          " | undefined) => Promise<unknown>) => void; getSearchRequestBody: () => any; destroy: () => void; getSerializedFields: (recurse?: boolean) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "; serialize: () => { searchSourceJSON: string; references: ",
          "SavedObjectReference",
          "[]; }; }"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.KibanaContext",
        "type": "Type",
        "tags": [],
        "label": "KibanaContext",
        "description": [],
        "signature": [
          "{ type: \"kibana_context\"; } & ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          }
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.KueryNode",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "KueryNode",
        "description": [],
        "signature": [
          "KueryNode"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.MatchAllFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "MatchAllFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "MatchAllFilterMeta",
          "; match_all: ",
          "QueryDslMatchAllQuery",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ParsedInterval",
        "type": "Type",
        "tags": [],
        "label": "ParsedInterval",
        "description": [],
        "signature": [
          "{ value: number; unit: ",
          "Unit",
          "; type: \"calendar\" | \"fixed\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.PhraseFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "PhraseFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "PhraseFilterMeta",
          "; query: { match_phrase?: Record<string, string | ",
          "QueryDslMatchPhraseQuery",
          "> | undefined; match?: Record<string, string | number | boolean | ",
          "QueryDslMatchQuery",
          "> | undefined; }; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.PhrasesFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "PhrasesFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "PhrasesFilterMeta",
          "; query: ",
          "QueryDslQueryContainer",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.Query",
        "type": "Type",
        "tags": [],
        "label": "Query",
        "description": [],
        "signature": [
          "{ query: string | { [key: string]: any; }; language: string; }"
        ],
        "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.RangeFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "RangeFilterMeta",
          "; range: { [key: string]: ",
          "RangeFilterParams",
          "; }; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.RangeFilterMeta",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilterMeta",
        "description": [],
        "signature": [
          "FilterMeta",
          " & { params: ",
          "RangeFilterParams",
          "; field?: string | undefined; formattedValue?: string | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.RangeFilterParams",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilterParams",
        "description": [],
        "signature": [
          "RangeFilterParams"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/components/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/components/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_renderer.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_renderer.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/legacy/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/legacy/timelion_vis_component.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.TimeRange",
        "type": "Type",
        "tags": [],
        "label": "TimeRange",
        "description": [],
        "signature": [
          "{ from: string; to: string; mode?: \"absolute\" | \"relative\" | undefined; }"
        ],
        "path": "src/plugins/data/common/query/timefilter/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupLabels",
        "type": "Object",
        "tags": [],
        "label": "AggGroupLabels",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.Buckets",
            "type": "string",
            "tags": [],
            "label": "[AggGroupNames.Buckets]",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.Metrics",
            "type": "string",
            "tags": [],
            "label": "[AggGroupNames.Metrics]",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.None",
            "type": "string",
            "tags": [],
            "label": "[AggGroupNames.None]",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupNames",
        "type": "Object",
        "tags": [],
        "label": "AggGroupNames",
        "description": [],
        "signature": [
          "{ readonly Buckets: \"buckets\"; readonly Metrics: \"metrics\"; readonly None: \"none\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.esFilters",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "esFilters",
        "description": [
          "\nFilter helpers namespace:"
        ],
        "path": "src/plugins/data/public/deprecated.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/helpers/get_context_url.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/helpers/get_context_url.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/components/context_app/context_app.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/components/context_app/context_app.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/components/layout/discover_layout.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/components/layout/discover_layout.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/plugin.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/plugin.tsx"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/save_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/save_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/plugin.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/plugin.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/app_plugin/save_modal_container.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/app_plugin/save_modal_container.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/mocks.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/mocks.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/time_range_middleware.test.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/time_range_middleware.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/all/__mocks__/mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/all/__mocks__/mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/all/__mocks__/mock.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_visualize_app_state.tsx"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_visualize_app_state.tsx"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/plugin.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/plugin.ts"
          },
          {
            "plugin": "timelion",
            "path": "src/plugins/timelion/public/plugin.ts"
          },
          {
            "plugin": "timelion",
            "path": "src/plugins/timelion/public/plugin.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/listing/get_dashboard_list_item_link.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/listing/get_dashboard_list_item_link.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/get_visualize_list_item_link.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/get_visualize_list_item_link.test.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/control_types/options_list/options_list_embeddable.tsx"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/control_types/options_list/options_list_embeddable.tsx"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.FilterLabel",
            "type": "Function",
            "tags": [],
            "label": "FilterLabel",
            "description": [],
            "signature": [
              "(props: ",
              "FilterLabelProps",
              ") => JSX.Element"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.props",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "FilterLabelProps"
                ],
                "path": "src/plugins/data/public/ui/filter_bar/index.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.FilterItem",
            "type": "Function",
            "tags": [],
            "label": "FilterItem",
            "description": [],
            "signature": [
              "(props: ",
              "FilterItemProps",
              ") => JSX.Element"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.props",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "FilterItemProps"
                ],
                "path": "src/plugins/data/public/ui/filter_bar/index.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.FILTERS",
            "type": "Object",
            "tags": [],
            "label": "FILTERS",
            "description": [],
            "signature": [
              "typeof ",
              "FILTERS"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.FilterStateStore",
            "type": "Object",
            "tags": [],
            "label": "FilterStateStore",
            "description": [],
            "signature": [
              "typeof ",
              "FilterStateStore"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildEmptyFilter",
            "type": "Function",
            "tags": [],
            "label": "buildEmptyFilter",
            "description": [],
            "signature": [
              "(isPinned: boolean, index?: string | undefined) => ",
              "Filter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.isPinned",
                "type": "boolean",
                "tags": [],
                "label": "isPinned",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildPhrasesFilter",
            "type": "Function",
            "tags": [],
            "label": "buildPhrasesFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", params: ",
              "PhraseFilterValue",
              "[], indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "PhrasesFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.params",
                "type": "Array",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "PhraseFilterValue",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildExistsFilter",
            "type": "Function",
            "tags": [],
            "label": "buildExistsFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "ExistsFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildPhraseFilter",
            "type": "Function",
            "tags": [],
            "label": "buildPhraseFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", value: ",
              "PhraseFilterValue",
              ", indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "PhraseFilter",
              " | ",
              "ScriptedPhraseFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.value",
                "type": "CompoundType",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "string | number | boolean"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildQueryFilter",
            "type": "Function",
            "tags": [],
            "label": "buildQueryFilter",
            "description": [],
            "signature": [
              "(query: (Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined, index: string, alias: string) => ",
              "QueryStringFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.query",
                "type": "CompoundType",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "(Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.alias",
                "type": "string",
                "tags": [],
                "label": "alias",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.buildRangeFilter",
            "type": "Function",
            "tags": [],
            "label": "buildRangeFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", params: ",
              "RangeFilterParams",
              ", indexPattern: ",
              "IndexPatternBase",
              ", formattedValue?: string | undefined) => ",
              "RangeFilter",
              " | ",
              "ScriptedRangeFilter",
              " | ",
              "MatchAllRangeFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.params",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "RangeFilterParams"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.formattedValue",
                "type": "string",
                "tags": [],
                "label": "formattedValue",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isPhraseFilter",
            "type": "Function",
            "tags": [],
            "label": "isPhraseFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "PhraseFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isExistsFilter",
            "type": "Function",
            "tags": [],
            "label": "isExistsFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "ExistsFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isPhrasesFilter",
            "type": "Function",
            "tags": [],
            "label": "isPhrasesFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "PhrasesFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isRangeFilter",
            "type": "Function",
            "tags": [],
            "label": "isRangeFilter",
            "description": [],
            "signature": [
              "(filter?: ",
              "Filter",
              " | undefined) => filter is ",
              "RangeFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "Filter",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isMatchAllFilter",
            "type": "Function",
            "tags": [],
            "label": "isMatchAllFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "MatchAllFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/match_all_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isMissingFilter",
            "type": "Function",
            "tags": [],
            "label": "isMissingFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "MissingFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/missing_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isQueryStringFilter",
            "type": "Function",
            "tags": [],
            "label": "isQueryStringFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => filter is ",
              "QueryStringFilter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.isFilterPinned",
            "type": "Function",
            "tags": [],
            "label": "isFilterPinned",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => boolean | undefined"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.toggleFilterNegated",
            "type": "Function",
            "tags": [],
            "label": "toggleFilterNegated",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => { meta: { negate: boolean; alias?: string | null | undefined; disabled?: boolean | undefined; controlledBy?: string | undefined; index?: string | undefined; isMultiIndex?: boolean | undefined; type?: string | undefined; key?: string | undefined; params?: any; value?: string | undefined; }; $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; query?: Record<string, any> | undefined; }"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.disableFilter",
            "type": "Function",
            "tags": [],
            "label": "disableFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => ",
              "Filter"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.getPhraseFilterField",
            "type": "Function",
            "tags": [],
            "label": "getPhraseFilterField",
            "description": [],
            "signature": [
              "(filter: ",
              "PhraseFilter",
              ") => string"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "CompoundType",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "Filter",
                  " & { meta: ",
                  "PhraseFilterMeta",
                  "; query: { match_phrase?: Record<string, string | ",
                  "QueryDslMatchPhraseQuery",
                  "> | undefined; match?: Record<string, string | number | boolean | ",
                  "QueryDslMatchQuery",
                  "> | undefined; }; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.getPhraseFilterValue",
            "type": "Function",
            "tags": [],
            "label": "getPhraseFilterValue",
            "description": [],
            "signature": [
              "(filter: ",
              "PhraseFilter",
              " | ",
              "ScriptedPhraseFilter",
              ") => ",
              "PhraseFilterValue"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "CompoundType",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "PhraseFilter",
                  " | ",
                  "ScriptedPhraseFilter"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.getDisplayValueFromFilter",
            "type": "Function",
            "tags": [],
            "label": "getDisplayValueFromFilter",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ", indexPatterns: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPattern",
                "text": "IIndexPattern"
              },
              "[]) => string"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns",
                "type": "Array",
                "tags": [],
                "label": "indexPatterns",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IIndexPattern",
                    "text": "IIndexPattern"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.compareFilters",
            "type": "Function",
            "tags": [],
            "label": "compareFilters",
            "description": [],
            "signature": [
              "(first: ",
              "Filter",
              " | ",
              "Filter",
              "[], second: ",
              "Filter",
              " | ",
              "Filter",
              "[], comparatorOptions?: ",
              "FilterCompareOptions",
              " | undefined) => boolean"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.first",
                "type": "CompoundType",
                "tags": [],
                "label": "first",
                "description": [],
                "signature": [
                  "Filter",
                  " | ",
                  "Filter",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.second",
                "type": "CompoundType",
                "tags": [],
                "label": "second",
                "description": [],
                "signature": [
                  "Filter",
                  " | ",
                  "Filter",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.comparatorOptions",
                "type": "Object",
                "tags": [],
                "label": "comparatorOptions",
                "description": [],
                "signature": [
                  "FilterCompareOptions",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.COMPARE_ALL_OPTIONS",
            "type": "Object",
            "tags": [],
            "label": "COMPARE_ALL_OPTIONS",
            "description": [],
            "signature": [
              "FilterCompareOptions"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.generateFilters",
            "type": "Function",
            "tags": [],
            "label": "generateFilters",
            "description": [],
            "signature": [
              "(filterManager: ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataQueryPluginApi",
                "section": "def-public.FilterManager",
                "text": "FilterManager"
              },
              ", field: string | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              ", values: any, operation: string, index: string) => ",
              "Filter",
              "[]"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filterManager",
                "type": "Object",
                "tags": [],
                "label": "filterManager",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "public",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-public.FilterManager",
                    "text": "FilterManager"
                  }
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/generate_filters.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "string | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  }
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/generate_filters.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.values",
                "type": "Any",
                "tags": [],
                "label": "values",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/generate_filters.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.operation",
                "type": "string",
                "tags": [],
                "label": "operation",
                "description": [],
                "path": "src/plugins/data/public/query/filter_manager/lib/generate_filters.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "path": "src/plugins/data/public/query/filter_manager/lib/generate_filters.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.onlyDisabledFiltersChanged",
            "type": "Function",
            "tags": [],
            "label": "onlyDisabledFiltersChanged",
            "description": [],
            "signature": [
              "(newFilters?: ",
              "Filter",
              "[] | undefined, oldFilters?: ",
              "Filter",
              "[] | undefined) => boolean"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.newFilters",
                "type": "Array",
                "tags": [],
                "label": "newFilters",
                "description": [],
                "signature": [
                  "Filter",
                  "[] | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/only_disabled.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.oldFilters",
                "type": "Array",
                "tags": [],
                "label": "oldFilters",
                "description": [],
                "signature": [
                  "Filter",
                  "[] | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/only_disabled.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.changeTimeFilter",
            "type": "Function",
            "tags": [],
            "label": "changeTimeFilter",
            "description": [],
            "signature": [
              "(timeFilter: Pick<",
              "Timefilter",
              ", \"isTimeRangeSelectorEnabled\" | \"isAutoRefreshSelectorEnabled\" | \"isTimeTouched\" | \"getEnabledUpdated$\" | \"getTimeUpdate$\" | \"getRefreshIntervalUpdate$\" | \"getAutoRefreshFetch$\" | \"getFetch$\" | \"getTime\" | \"getAbsoluteTime\" | \"setTime\" | \"getRefreshInterval\" | \"setRefreshInterval\" | \"createFilter\" | \"getBounds\" | \"calculateBounds\" | \"getActiveBounds\" | \"enableTimeRangeSelector\" | \"disableTimeRangeSelector\" | \"enableAutoRefreshSelector\" | \"disableAutoRefreshSelector\" | \"getTimeDefaults\" | \"getRefreshIntervalDefaults\">, filter: ",
              "RangeFilter",
              ") => void"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.timeFilter",
                "type": "Object",
                "tags": [],
                "label": "timeFilter",
                "description": [],
                "signature": [
                  "{ isTimeRangeSelectorEnabled: () => boolean; isAutoRefreshSelectorEnabled: () => boolean; isTimeTouched: () => boolean; getEnabledUpdated$: () => ",
                  "Observable",
                  "<boolean>; getTimeUpdate$: () => ",
                  "Observable",
                  "<unknown>; getRefreshIntervalUpdate$: () => ",
                  "Observable",
                  "<unknown>; getAutoRefreshFetch$: () => ",
                  "Observable",
                  "<",
                  {
                    "pluginId": "data",
                    "scope": "public",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-public.AutoRefreshDoneFn",
                    "text": "AutoRefreshDoneFn"
                  },
                  ">; getFetch$: () => ",
                  "Observable",
                  "<unknown>; getTime: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  "; getAbsoluteTime: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  "; setTime: (time: ",
                  "InputTimeRange",
                  ") => void; getRefreshInterval: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.RefreshInterval",
                    "text": "RefreshInterval"
                  },
                  "; setRefreshInterval: (refreshInterval: Partial<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.RefreshInterval",
                    "text": "RefreshInterval"
                  },
                  ">) => void; createFilter: (indexPattern: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IIndexPattern",
                    "text": "IIndexPattern"
                  },
                  ", timeRange?: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  " | undefined) => ",
                  "RangeFilter",
                  " | ",
                  "ScriptedRangeFilter",
                  " | ",
                  "MatchAllRangeFilter",
                  " | undefined; getBounds: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRangeBounds",
                    "text": "TimeRangeBounds"
                  },
                  "; calculateBounds: (timeRange: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  ") => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRangeBounds",
                    "text": "TimeRangeBounds"
                  },
                  "; getActiveBounds: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRangeBounds",
                    "text": "TimeRangeBounds"
                  },
                  " | undefined; enableTimeRangeSelector: () => void; disableTimeRangeSelector: () => void; enableAutoRefreshSelector: () => void; disableAutoRefreshSelector: () => void; getTimeDefaults: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  "; getRefreshIntervalDefaults: () => ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.RefreshInterval",
                    "text": "RefreshInterval"
                  },
                  "; }"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/change_time_filter.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "CompoundType",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "Filter",
                  " & { meta: ",
                  "RangeFilterMeta",
                  "; range: { [key: string]: ",
                  "RangeFilterParams",
                  "; }; }"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/change_time_filter.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.convertRangeFilterToTimeRangeString",
            "type": "Function",
            "tags": [],
            "label": "convertRangeFilterToTimeRangeString",
            "description": [],
            "signature": [
              "(filter: ",
              "RangeFilter",
              ") => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filter",
                "type": "CompoundType",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "Filter",
                  " & { meta: ",
                  "RangeFilterMeta",
                  "; range: { [key: string]: ",
                  "RangeFilterParams",
                  "; }; }"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/change_time_filter.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.mapAndFlattenFilters",
            "type": "Function",
            "tags": [],
            "label": "mapAndFlattenFilters",
            "description": [],
            "signature": [
              "(filters: ",
              "Filter",
              "[]) => ",
              "Filter",
              "[]"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filters",
                "type": "Array",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  "[]"
                ],
                "path": "src/plugins/data/public/query/filter_manager/lib/map_and_flatten_filters.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.extractTimeFilter",
            "type": "Function",
            "tags": [],
            "label": "extractTimeFilter",
            "description": [],
            "signature": [
              "(timeFieldName: string, filters: ",
              "Filter",
              "[]) => { restOfFilters: ",
              "Filter",
              "[]; timeRangeFilter: ",
              "RangeFilter",
              " | undefined; }"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.timeFieldName",
                "type": "string",
                "tags": [],
                "label": "timeFieldName",
                "description": [],
                "path": "src/plugins/data/public/query/timefilter/lib/extract_time_filter.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.filters",
                "type": "Array",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  "[]"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/extract_time_filter.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esFilters.extractTimeRange",
            "type": "Function",
            "tags": [],
            "label": "extractTimeRange",
            "description": [],
            "signature": [
              "(filters: ",
              "Filter",
              "[], timeFieldName?: string | undefined) => { restOfFilters: ",
              "Filter",
              "[]; timeRange?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filters",
                "type": "Array",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  "[]"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/extract_time_filter.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.timeFieldName",
                "type": "string",
                "tags": [],
                "label": "timeFieldName",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/public/query/timefilter/lib/extract_time_filter.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.esKuery",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "esKuery",
        "description": [],
        "path": "src/plugins/data/public/deprecated.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/formula/validation.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/formula/validation.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/formula/validation.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/kuery_bar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/kuery_bar.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/utils/kuery.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/utils/kuery.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/utils/kuery.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/hooks/use_waffle_filters.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/hooks/use_waffle_filters.ts"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/shared/kuery_bar/index.tsx"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/shared/kuery_bar/index.tsx"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/shared/kuery_bar/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/hooks/use_search_bar.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/hooks/use_search_bar.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/hooks/use_search_bar.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.esKuery.nodeTypes",
            "type": "Object",
            "tags": [],
            "label": "nodeTypes",
            "description": [],
            "signature": [
              "NodeTypes"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esKuery.fromKueryExpression",
            "type": "Function",
            "tags": [],
            "label": "fromKueryExpression",
            "description": [],
            "signature": [
              "(expression: string | ",
              "QueryDslQueryContainer",
              ", parseOptions?: Partial<",
              "KueryParseOptions",
              "> | undefined) => ",
              "KueryNode"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.expression",
                "type": "CompoundType",
                "tags": [],
                "label": "expression",
                "description": [],
                "signature": [
                  "string | ",
                  "QueryDslQueryContainer"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.parseOptions",
                "type": "Object",
                "tags": [],
                "label": "parseOptions",
                "description": [],
                "signature": [
                  "Partial<",
                  "KueryParseOptions",
                  "> | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esKuery.toElasticsearchQuery",
            "type": "Function",
            "tags": [],
            "label": "toElasticsearchQuery",
            "description": [],
            "signature": [
              "(node: ",
              "KueryNode",
              ", indexPattern?: ",
              "IndexPatternBase",
              " | undefined, config?: ",
              "KueryQueryOptions",
              " | undefined, context?: Record<string, any> | undefined) => ",
              "QueryDslQueryContainer"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.node",
                "type": "Object",
                "tags": [],
                "label": "node",
                "description": [],
                "signature": [
                  "KueryNode"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.config",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "KueryQueryOptions",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.context",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "Record<string, any> | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.esQuery",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "esQuery",
        "description": [],
        "path": "src/plugins/data/public/deprecated.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/formula/validation.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/formula/validation.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/terms/index.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/terms/index.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/terms/index.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/datapanel.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/datapanel.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/datapanel.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_stream/index.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_stream/index.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_filter/log_filter_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_filter/log_filter_state.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/containers/logs/log_filter/log_filter_state.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/side_panel/network_details/expandable_network.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/side_panel/network_details/expandable_network.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/hosts.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/hosts.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/hosts.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/network.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/network.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/network.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/ueba.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/ueba.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/ueba.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/flyout/header/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/flyout/header/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/flyout/header/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_tab_content/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_tab_content/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/index.tsx"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/hooks/use_search_bar.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/hooks/use_search_bar.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
          },
          {
            "plugin": "transform",
            "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/components/scripting_help/test_script.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/components/scripting_help/test_script.tsx"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/components/scripting_help/test_script.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.esQuery.buildEsQuery",
            "type": "Function",
            "tags": [],
            "label": "buildEsQuery",
            "description": [],
            "signature": [
              "(indexPattern: ",
              "IndexPatternBase",
              " | undefined, queries: ",
              "Query",
              " | ",
              "Query",
              "[], filters: ",
              "Filter",
              " | ",
              "Filter",
              "[], config?: ",
              "EsQueryConfig",
              " | undefined) => { bool: ",
              "BoolQuery",
              "; }"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.queries",
                "type": "CompoundType",
                "tags": [],
                "label": "queries",
                "description": [],
                "signature": [
                  "Query",
                  " | ",
                  "Query",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.filters",
                "type": "CompoundType",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  " | ",
                  "Filter",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.config",
                "type": "CompoundType",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "EsQueryConfig",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esQuery.getEsQueryConfig",
            "type": "Function",
            "tags": [],
            "label": "getEsQueryConfig",
            "description": [],
            "signature": [
              "(config: KibanaConfig) => ",
              "EsQueryConfig"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.config",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "KibanaConfig"
                ],
                "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esQuery.buildQueryFromFilters",
            "type": "Function",
            "tags": [],
            "label": "buildQueryFromFilters",
            "description": [],
            "signature": [
              "(filters: ",
              "Filter",
              "[] | undefined, indexPattern: ",
              "IndexPatternBase",
              " | undefined, ignoreFilterIfFieldNotInIndex?: boolean | undefined) => ",
              "BoolQuery"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.filters",
                "type": "Array",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  "[] | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.ignoreFilterIfFieldNotInIndex",
                "type": "CompoundType",
                "tags": [],
                "label": "ignoreFilterIfFieldNotInIndex",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esQuery.luceneStringToDsl",
            "type": "Function",
            "tags": [],
            "label": "luceneStringToDsl",
            "description": [],
            "signature": [
              "(query: string | ",
              "QueryDslQueryContainer",
              ") => ",
              "QueryDslQueryContainer"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.query",
                "type": "CompoundType",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "string | ",
                  "QueryDslQueryContainer"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/lucene_string_to_dsl.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.esQuery.decorateQuery",
            "type": "Function",
            "tags": [],
            "label": "decorateQuery",
            "description": [],
            "signature": [
              "(query: ",
              "QueryDslQueryContainer",
              ", queryStringOptions: string | ",
              "SerializableRecord",
              ", dateFormatTZ?: string | undefined) => ",
              "QueryDslQueryContainer"
            ],
            "path": "src/plugins/data/public/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.query",
                "type": "Object",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "QueryDslQueryContainer"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.queryStringOptions",
                "type": "CompoundType",
                "tags": [],
                "label": "queryStringOptions",
                "description": [],
                "signature": [
                  "string | ",
                  "SerializableRecord"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.dateFormatTZ",
                "type": "string",
                "tags": [],
                "label": "dateFormatTZ",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.exporters",
        "type": "Object",
        "tags": [],
        "label": "exporters",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.datatableToCSV",
            "type": "Function",
            "tags": [],
            "label": "datatableToCSV",
            "description": [],
            "signature": [
              "({ columns, rows }: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              },
              ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.__0",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.Datatable",
                    "text": "Datatable"
                  }
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.__1",
                "type": "Object",
                "tags": [],
                "label": "__1",
                "description": [],
                "signature": [
                  "CSVOptions"
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.CSV_MIME_TYPE",
            "type": "string",
            "tags": [],
            "label": "CSV_MIME_TYPE",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.cellHasFormulas",
            "type": "Function",
            "tags": [],
            "label": "cellHasFormulas",
            "description": [],
            "signature": [
              "(val: string) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.val",
                "type": "string",
                "tags": [],
                "label": "val",
                "description": [],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.tableHasFormulas",
            "type": "Function",
            "tags": [],
            "label": "tableHasFormulas",
            "description": [],
            "signature": [
              "(columns: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              "[], rows: Record<string, any>[]) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.columns",
                "type": "Array",
                "tags": [],
                "label": "columns",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.rows",
                "type": "Array",
                "tags": [],
                "label": "rows",
                "description": [],
                "signature": [
                  "Record<string, any>[]"
                ],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.indexPatterns",
        "type": "Object",
        "tags": [],
        "label": "indexPatterns",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS_KEY",
            "type": "string",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS_KEY",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.CONTAINS_SPACES_KEY",
            "type": "string",
            "tags": [],
            "label": "CONTAINS_SPACES_KEY",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS_VISIBLE",
            "type": "Array",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS_VISIBLE",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS",
            "type": "Array",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isDefault",
            "type": "Function",
            "tags": [],
            "label": "isDefault",
            "description": [],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPattern",
                "text": "IIndexPattern"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IIndexPattern",
                    "text": "IIndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/lib/is_default.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isFilterable",
            "type": "Function",
            "tags": [],
            "label": "isFilterable",
            "description": [],
            "signature": [
              "(field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/fields/utils.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isNestedField",
            "type": "Function",
            "tags": [],
            "label": "isNestedField",
            "description": [],
            "signature": [
              "(field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/fields/utils.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.validate",
            "type": "Function",
            "tags": [],
            "label": "validate",
            "description": [],
            "signature": [
              "(indexPattern: string) => Record<string, any>"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/lib/validate_index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.flattenHitWrapper",
            "type": "Function",
            "tags": [],
            "label": "flattenHitWrapper",
            "description": [],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", metaFields?: {}, cache?: WeakMap<object, any>) => (hit: Record<string, any>, deep?: boolean) => Record<string, any>"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/flatten_hit.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.metaFields",
                "type": "Object",
                "tags": [],
                "label": "metaFields",
                "description": [],
                "signature": [
                  "{}"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/flatten_hit.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.cache",
                "type": "Object",
                "tags": [],
                "label": "cache",
                "description": [],
                "signature": [
                  "WeakMap<object, any>"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/flatten_hit.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.search",
        "type": "Object",
        "tags": [],
        "label": "search",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.search.aggs",
            "type": "Object",
            "tags": [],
            "label": "aggs",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.CidrMask",
                "type": "Object",
                "tags": [],
                "label": "CidrMask",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CidrMask",
                    "text": "CidrMask"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.dateHistogramInterval",
                "type": "Function",
                "tags": [],
                "label": "dateHistogramInterval",
                "description": [],
                "signature": [
                  "(interval: string) => Interval"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.intervalOptions",
                "type": "Array",
                "tags": [],
                "label": "intervalOptions",
                "description": [],
                "signature": [
                  "({ display: string; val: string; enabled(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IBucketAggConfig",
                    "text": "IBucketAggConfig"
                  },
                  "): boolean; } | { display: string; val: string; })[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.InvalidEsCalendarIntervalError",
                "type": "Object",
                "tags": [],
                "label": "InvalidEsCalendarIntervalError",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.InvalidEsCalendarIntervalError",
                    "text": "InvalidEsCalendarIntervalError"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.InvalidEsIntervalFormatError",
                "type": "Object",
                "tags": [],
                "label": "InvalidEsIntervalFormatError",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.InvalidEsIntervalFormatError",
                    "text": "InvalidEsIntervalFormatError"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.IpAddress",
                "type": "Object",
                "tags": [],
                "label": "IpAddress",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IpAddress",
                    "text": "IpAddress"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isDateHistogramBucketAggConfig",
                "type": "Function",
                "tags": [],
                "label": "isDateHistogramBucketAggConfig",
                "description": [],
                "signature": [
                  "(agg: any) => agg is ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IBucketDateHistogramAggConfig",
                    "text": "IBucketDateHistogramAggConfig"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.agg",
                    "type": "Any",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      "any"
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/date_histogram.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isNumberType",
                "type": "Function",
                "tags": [],
                "label": "isNumberType",
                "description": [],
                "signature": [
                  "(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.agg",
                    "type": "Object",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataSearchPluginApi",
                        "section": "def-common.AggConfig",
                        "text": "AggConfig"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isStringType",
                "type": "Function",
                "tags": [],
                "label": "isStringType",
                "description": [],
                "signature": [
                  "(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.agg",
                    "type": "Object",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataSearchPluginApi",
                        "section": "def-common.AggConfig",
                        "text": "AggConfig"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isType",
                "type": "Function",
                "tags": [],
                "label": "isType",
                "description": [],
                "signature": [
                  "(...types: string[]) => (agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.types",
                    "type": "Array",
                    "tags": [],
                    "label": "types",
                    "description": [],
                    "signature": [
                      "string[]"
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isValidEsInterval",
                "type": "Function",
                "tags": [],
                "label": "isValidEsInterval",
                "description": [],
                "signature": [
                  "(interval: string) => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_es_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isValidInterval",
                "type": "Function",
                "tags": [],
                "label": "isValidInterval",
                "description": [],
                "signature": [
                  "(value: string, baseInterval?: string | undefined) => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.value",
                    "type": "string",
                    "tags": [],
                    "label": "value",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_interval.ts",
                    "deprecated": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.baseInterval",
                    "type": "string",
                    "tags": [],
                    "label": "baseInterval",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parentPipelineType",
                "type": "string",
                "tags": [],
                "label": "parentPipelineType",
                "description": [],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parseEsInterval",
                "type": "Function",
                "tags": [],
                "label": "parseEsInterval",
                "description": [],
                "signature": [
                  "(interval: string) => { value: number; unit: ",
                  "Unit",
                  "; type: \"calendar\" | \"fixed\"; }"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parseInterval",
                "type": "Function",
                "tags": [],
                "label": "parseInterval",
                "description": [],
                "signature": [
                  "(interval: string) => moment.Duration | null"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.propFilter",
                "type": "Function",
                "tags": [],
                "label": "propFilter",
                "description": [],
                "signature": [
                  "<P extends string>(prop: P) => <T extends { [key in P]: T[P]; }>(list: T[], filters?: string | string[] | FilterFunc<P, T>) => T[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.prop",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "prop",
                    "description": [],
                    "signature": [
                      "P"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/prop_filter.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.siblingPipelineType",
                "type": "string",
                "tags": [],
                "label": "siblingPipelineType",
                "description": [],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.termsAggFilter",
                "type": "Array",
                "tags": [],
                "label": "termsAggFilter",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.toAbsoluteDates",
                "type": "Function",
                "tags": [],
                "label": "toAbsoluteDates",
                "description": [],
                "signature": [
                  "(range: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  ") => { from: Date; to: Date; } | undefined"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.range",
                    "type": "Object",
                    "tags": [],
                    "label": "range",
                    "description": [],
                    "signature": [
                      "{ from: string; to: string; mode?: \"absolute\" | \"relative\" | undefined; }"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/to_absolute_dates.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.boundsDescendingRaw",
                "type": "Array",
                "tags": [],
                "label": "boundsDescendingRaw",
                "description": [],
                "signature": [
                  "({ bound: number; interval: moment.Duration; boundLabel: string; intervalLabel: string; } | { bound: moment.Duration; interval: moment.Duration; boundLabel: string; intervalLabel: string; })[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.getNumberHistogramIntervalByDatatableColumn",
                "type": "Function",
                "tags": [],
                "label": "getNumberHistogramIntervalByDatatableColumn",
                "description": [],
                "signature": [
                  "(column: ",
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  },
                  ") => number | undefined"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.column",
                    "type": "Object",
                    "tags": [],
                    "label": "column",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "expressions",
                        "scope": "common",
                        "docId": "kibExpressionsPluginApi",
                        "section": "def-common.DatatableColumn",
                        "text": "DatatableColumn"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/get_number_histogram_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.getDateHistogramMetaDataByDatatableColumn",
                "type": "Function",
                "tags": [],
                "label": "getDateHistogramMetaDataByDatatableColumn",
                "description": [],
                "signature": [
                  "(column: ",
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  },
                  ", defaults?: Partial<{ timeZone: string; }>) => { interval: string | undefined; timeZone: string | undefined; timeRange: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  " | undefined; } | undefined"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.column",
                    "type": "Object",
                    "tags": [],
                    "label": "column",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "expressions",
                        "scope": "common",
                        "docId": "kibExpressionsPluginApi",
                        "section": "def-common.DatatableColumn",
                        "text": "DatatableColumn"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/get_date_histogram_meta.ts",
                    "deprecated": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.defaults",
                    "type": "Object",
                    "tags": [],
                    "label": "defaults",
                    "description": [],
                    "signature": [
                      "{ timeZone?: string | undefined; }"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/get_date_histogram_meta.ts",
                    "deprecated": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.getResponseInspectorStats",
            "type": "Function",
            "tags": [],
            "label": "getResponseInspectorStats",
            "description": [],
            "signature": [
              "(resp?: ",
              "SearchResponse",
              "<unknown> | undefined, searchSource?: Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\"> | undefined) => ",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.RequestStatistics",
                "text": "RequestStatistics"
              }
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.resp",
                "type": "Object",
                "tags": [],
                "label": "resp",
                "description": [],
                "signature": [
                  "SearchResponse",
                  "<unknown> | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.searchSource",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", \"create\" | \"history\" | \"setPreferredSearchStrategyId\" | \"setField\" | \"removeField\" | \"setFields\" | \"getId\" | \"getFields\" | \"getField\" | \"getOwnField\" | \"createCopy\" | \"createChild\" | \"setParent\" | \"getParent\" | \"fetch$\" | \"fetch\" | \"onRequestStart\" | \"getSearchRequestBody\" | \"destroy\" | \"getSerializedFields\" | \"serialize\"> | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.tabifyAggResponse",
            "type": "Function",
            "tags": [],
            "label": "tabifyAggResponse",
            "description": [],
            "signature": [
              "(aggConfigs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              ", esResponse: Record<string, any>, respOpts?: Partial<",
              "TabbedResponseWriterOptions",
              "> | undefined) => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              }
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.aggConfigs",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  }
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.esResponse",
                "type": "Object",
                "tags": [],
                "label": "esResponse",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.respOpts",
                "type": "Object",
                "tags": [],
                "label": "respOpts",
                "description": [],
                "signature": [
                  "Partial<",
                  "TabbedResponseWriterOptions",
                  "> | undefined"
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.tabifyGetColumns",
            "type": "Function",
            "tags": [],
            "label": "tabifyGetColumns",
            "description": [],
            "signature": [
              "(aggs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[], minimalColumns: boolean) => ",
              "TabbedAggColumn",
              "[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.aggs",
                "type": "Array",
                "tags": [],
                "label": "aggs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/tabify/get_columns.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.minimalColumns",
                "type": "boolean",
                "tags": [],
                "label": "minimalColumns",
                "description": [],
                "path": "src/plugins/data/common/search/tabify/get_columns.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly INDEXPATTERN_PLACEHOLDER: \"indexPattern:placeholder\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "data",
      "id": "def-public.DataPublicPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataPublicPluginSetup",
      "description": [
        "\nData plugin public Setup contract"
      ],
      "path": "src/plugins/data/public/types.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.autocomplete",
          "type": "Object",
          "tags": [],
          "label": "autocomplete",
          "description": [],
          "signature": [
            "{ getQuerySuggestions: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataAutocompletePluginApi",
              "section": "def-public.QuerySuggestionGetFn",
              "text": "QuerySuggestionGetFn"
            },
            "; getAutocompleteSettings: () => { terminateAfter: number; timeout: number; }; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataSearchPluginApi",
              "section": "def-public.ISearchSetup",
              "text": "ISearchSetup"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.fieldFormats",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            "{ register: (fieldFormats: ",
            "FieldFormatInstanceType",
            "[]) => void; has: (id: string) => boolean; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": true,
          "references": []
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.query",
          "type": "Object",
          "tags": [],
          "label": "query",
          "description": [],
          "signature": [
            "{ filterManager: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.FilterManager",
              "text": "FilterManager"
            },
            "; timefilter: ",
            "TimefilterSetup",
            "; queryString: Pick<",
            "QueryStringManager",
            ", \"getDefaultQuery\" | \"formatQuery\" | \"getUpdates$\" | \"getQuery\" | \"setQuery\" | \"clearQuery\">; state$: ",
            "Observable",
            "<{ changes: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QueryStateChange",
              "text": "QueryStateChange"
            },
            "; state: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QueryState",
              "text": "QueryState"
            },
            "; }>; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "data",
      "id": "def-public.DataPublicPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "DataPublicPluginStart",
      "description": [
        "\nData plugin public Start contract"
      ],
      "path": "src/plugins/data/public/types.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.actions",
          "type": "Object",
          "tags": [],
          "label": "actions",
          "description": [
            "\nfilter creation utilities\n{@link DataPublicPluginStartActions}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataPluginApi",
              "section": "def-public.DataPublicPluginStartActions",
              "text": "DataPublicPluginStartActions"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.autocomplete",
          "type": "Object",
          "tags": [],
          "label": "autocomplete",
          "description": [
            "\nautocomplete service\n{@link AutocompleteStart}"
          ],
          "signature": [
            "{ getQuerySuggestions: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataAutocompletePluginApi",
              "section": "def-public.QuerySuggestionGetFn",
              "text": "QuerySuggestionGetFn"
            },
            "; hasQuerySuggestions: (language: string) => boolean; getValueSuggestions: ",
            "ValueSuggestionsGetFn",
            "; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.indexPatterns",
          "type": "Object",
          "tags": [],
          "label": "indexPatterns",
          "description": [
            "\nindex patterns service\n{@link IndexPatternsContract}"
          ],
          "signature": [
            "{ get: (id: string) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ">; delete: (indexPatternId: string) => Promise<{}>; create: (spec: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternSpec",
              "text": "IndexPatternSpec"
            },
            ", skipFetchFields?: boolean) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ">; find: (search: string, size?: number) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            "[]>; ensureDefaultIndexPattern: ",
            "EnsureDefaultIndexPattern",
            "; getIds: (refresh?: boolean) => Promise<string[]>; getTitles: (refresh?: boolean) => Promise<string[]>; getIdsWithTitle: (refresh?: boolean) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternListItem",
              "text": "IndexPatternListItem"
            },
            "[]>; clearCache: (id?: string | undefined) => void; getCache: () => Promise<",
            "SavedObject",
            "<Pick<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternAttributes",
              "text": "IndexPatternAttributes"
            },
            ", \"type\" | \"title\" | \"typeMeta\">>[] | null | undefined>; getDefault: () => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            " | null>; getDefaultId: () => Promise<string | null>; setDefault: (id: string | null, force?: boolean) => Promise<void>; hasUserIndexPattern: () => Promise<boolean>; getFieldsForWildcard: (options: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.GetFieldsOptions",
              "text": "GetFieldsOptions"
            },
            ") => Promise<any>; getFieldsForIndexPattern: (indexPattern: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            " | ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternSpec",
              "text": "IndexPatternSpec"
            },
            ", options?: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.GetFieldsOptions",
              "text": "GetFieldsOptions"
            },
            " | undefined) => Promise<any>; refreshFields: (indexPattern: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ") => Promise<void>; fieldArrayToMap: (fields: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.FieldSpec",
              "text": "FieldSpec"
            },
            "[], fieldAttrs?: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.FieldAttrs",
              "text": "FieldAttrs"
            },
            " | undefined) => Record<string, ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.FieldSpec",
              "text": "FieldSpec"
            },
            ">; savedObjectToSpec: (savedObject: ",
            "SavedObject",
            "<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternAttributes",
              "text": "IndexPatternAttributes"
            },
            ">) => ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternSpec",
              "text": "IndexPatternSpec"
            },
            "; createAndSave: (spec: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPatternSpec",
              "text": "IndexPatternSpec"
            },
            ", override?: boolean, skipFetchFields?: boolean) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ">; createSavedObject: (indexPattern: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ", override?: boolean) => Promise<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ">; updateSavedObject: (indexPattern: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ", saveAttempts?: number, ignoreErrors?: boolean) => Promise<void | Error>; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [
            "\nsearch service\n{@link ISearchStart}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataSearchPluginApi",
              "section": "def-public.ISearchStart",
              "text": "ISearchStart"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.fieldFormats",
          "type": "CompoundType",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            "Pick<",
            {
              "pluginId": "fieldFormats",
              "scope": "common",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-common.FieldFormatsRegistry",
              "text": "FieldFormatsRegistry"
            },
            ", \"deserialize\" | \"getDefaultConfig\" | \"getType\" | \"getTypeWithoutMetaParams\" | \"getDefaultType\" | \"getTypeNameByEsTypes\" | \"getDefaultTypeName\" | \"getInstance\" | \"getDefaultInstancePlain\" | \"getDefaultInstanceCacheResolver\" | \"getByFieldType\" | \"getDefaultInstance\" | \"parseDefaultTypeMap\" | \"has\"> & { deserialize: ",
            {
              "pluginId": "fieldFormats",
              "scope": "common",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-common.FormatFactory",
              "text": "FormatFactory"
            },
            "; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": true,
          "references": [
            {
              "plugin": "fleet",
              "path": "x-pack/plugins/fleet/public/applications/fleet/sections/data_stream/list_page/index.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/components/field_editor_context.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/components/field_editor_flyout_content_container.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/open_editor.tsx"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/public/plugin.ts"
            },
            {
              "plugin": "discover",
              "path": "src/plugins/discover/public/application/apps/main/components/chart/histogram.tsx"
            },
            {
              "plugin": "dashboard",
              "path": "src/plugins/dashboard/public/application/actions/export_csv_action.tsx"
            },
            {
              "plugin": "lens",
              "path": "x-pack/plugins/lens/public/indexpattern_datasource/operations/definitions/ranges/ranges.tsx"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/public/application/util/dependency_cache.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/public/application/app.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/alert_types/threshold/expression.tsx"
            },
            {
              "plugin": "lens",
              "path": "x-pack/plugins/lens/public/indexpattern_datasource/dimension_panel/droppable/droppable.test.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/target/types/public/application/util/dependency_cache.d.ts"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "indexPatternManagement",
              "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
            },
            {
              "plugin": "visTypeMetric",
              "path": "src/plugins/vis_types/metric/public/plugin.ts"
            },
            {
              "plugin": "visTypeTable",
              "path": "src/plugins/vis_type_table/public/plugin.ts"
            },
            {
              "plugin": "visTypeTimeseries",
              "path": "src/plugins/vis_type_timeseries/public/plugin.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/pie_component.tsx"
            },
            {
              "plugin": "visTypeXy",
              "path": "src/plugins/vis_types/xy/public/plugin.ts"
            },
            {
              "plugin": "visTypeVislib",
              "path": "src/plugins/vis_types/vislib/public/plugin.ts"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/target/types/public/components/field_format_editor/field_format_editor.d.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            },
            {
              "plugin": "indexPatternFieldEditor",
              "path": "src/plugins/index_pattern_field_editor/__jest__/client_integration/helpers/setup_environment.tsx"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            },
            {
              "plugin": "visTypePie",
              "path": "src/plugins/vis_types/pie/public/utils/get_layers.test.ts"
            }
          ]
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.query",
          "type": "Object",
          "tags": [],
          "label": "query",
          "description": [
            "\nquery service\n{@link QueryStart}"
          ],
          "signature": [
            "{ addToQueryLog: (appName: string, { language, query }: ",
            "Query",
            ") => void; filterManager: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.FilterManager",
              "text": "FilterManager"
            },
            "; queryString: Pick<",
            "QueryStringManager",
            ", \"getDefaultQuery\" | \"formatQuery\" | \"getUpdates$\" | \"getQuery\" | \"setQuery\" | \"clearQuery\">; savedQueries: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.SavedQueryService",
              "text": "SavedQueryService"
            },
            "; state$: ",
            "Observable",
            "<{ changes: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QueryStateChange",
              "text": "QueryStateChange"
            },
            "; state: ",
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QueryState",
              "text": "QueryState"
            },
            "; }>; timefilter: ",
            "TimefilterSetup",
            "; getEsQuery: (indexPattern: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataIndexPatternsPluginApi",
              "section": "def-common.IndexPattern",
              "text": "IndexPattern"
            },
            ", timeRange?: ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataQueryPluginApi",
              "section": "def-common.TimeRange",
              "text": "TimeRange"
            },
            " | undefined) => { bool: ",
            "BoolQuery",
            "; }; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.ui",
          "type": "Object",
          "tags": [],
          "label": "ui",
          "description": [
            "\nprewired UI components\n{@link DataPublicPluginStartUi}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataPluginApi",
              "section": "def-public.DataPublicPluginStartUi",
              "text": "DataPublicPluginStartUi"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.nowProvider",
          "type": "Object",
          "tags": [],
          "label": "nowProvider",
          "description": [],
          "signature": [
            "{ get: () => Date; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-server.DataServerPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataServerPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataServerPlugin",
            "text": "DataServerPlugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataPluginSetup",
            "text": "DataPluginSetup"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataPluginStart",
            "text": "DataPluginStart"
          },
          ", ",
          "DataPluginSetupDependencies",
          ", ",
          "DataPluginStartDependencies",
          ">"
        ],
        "path": "src/plugins/data/server/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<Readonly<{} & { search: Readonly<{} & { aggs: Readonly<{} & { shardDelay: Readonly<{} & { enabled: boolean; }>; }>; }>; autocomplete: Readonly<{} & { querySuggestions: Readonly<{} & { enabled: boolean; }>; valueSuggestions: Readonly<{} & { enabled: boolean; timeout: moment.Duration; tiers: string[]; terminateAfter: moment.Duration; }>; }>; }>>"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "DataPluginStartDependencies",
              ", ",
              {
                "pluginId": "data",
                "scope": "server",
                "docId": "kibDataPluginApi",
                "section": "def-server.DataPluginStart",
                "text": "DataPluginStart"
              },
              ">, { bfetch, expressions, usageCollection, fieldFormats }: ",
              "DataPluginSetupDependencies",
              ") => { __enhance: (enhancements: ",
              "DataEnhancements",
              ") => void; search: ",
              "ISearchSetup",
              "; fieldFormats: ",
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsSetup",
                "text": "FieldFormatsSetup"
              },
              "; }"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "DataPluginStartDependencies",
                  ", ",
                  {
                    "pluginId": "data",
                    "scope": "server",
                    "docId": "kibDataPluginApi",
                    "section": "def-server.DataPluginStart",
                    "text": "DataPluginStart"
                  },
                  ">"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{ bfetch, expressions, usageCollection, fieldFormats }",
                "description": [],
                "signature": [
                  "DataPluginSetupDependencies"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ", { fieldFormats }: ",
              "DataPluginStartDependencies",
              ") => { fieldFormats: ",
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsStart",
                "text": "FieldFormatsStart"
              },
              "; indexPatterns: { indexPatternsServiceFactory: (savedObjectsClient: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"collectMultiNamespaceReferences\" | \"updateObjectsSpaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">, elasticsearchClient: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              },
              ") => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternsService",
                "text": "IndexPatternsService"
              },
              ">; }; search: ",
              "ISearchStart",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchRequest",
                "text": "IEsSearchRequest"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>>; }"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ fieldFormats }",
                "description": [],
                "signature": [
                  "DataPluginStartDependencies"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPattern",
        "type": "Class",
        "tags": [],
        "label": "IndexPattern",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPattern",
            "text": "IndexPattern"
          },
          " implements ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPattern",
            "text": "IIndexPattern"
          }
        ],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [],
            "signature": [
              "{ [x: string]: any; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ">; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.intervalName",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "intervalName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.formatHit",
            "type": "Function",
            "tags": [],
            "label": "formatHit",
            "description": [],
            "signature": [
              "{ (hit: Record<string, any>, type?: string | undefined): any; formatField: FormatFieldFn; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.formatField",
            "type": "Function",
            "tags": [],
            "label": "formatField",
            "description": [],
            "signature": [
              "(hit: Record<string, any>, fieldName: string) => any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.flattenHit",
            "type": "Function",
            "tags": [],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, any>, deep?: boolean | undefined) => Record<string, any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.hit",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.deep",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nprevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    spec = {},\n    fieldFormats,\n    shortDotsEnable = false,\n    metaFields = [],\n  }",
                "description": [],
                "signature": [
                  "IndexPatternDeps"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; intervalName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. used after saving"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [],
            "signature": [
              "() => { storedFields: string[]; scriptFields: any; docvalueFields: { field: any; format: string; }[]; runtimeFields: Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreate static representation of index pattern"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: any[]; }"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.addScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "addScriptedField",
            "description": [
              "\nAdd scripted field to field list\n"
            ],
            "signature": [
              "(name: string, script: string, fieldType?: string) => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.addScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.addScriptedField.$2",
                "type": "string",
                "tags": [],
                "label": "script",
                "description": [
                  "script code"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.addScriptedField.$3",
                "type": "string",
                "tags": [],
                "label": "fieldType",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemove scripted field from field list"
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/field_editor/field_editor.tsx"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_type_timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "references": [
              {
                "plugin": "indexPatternManagement",
                "path": "src/plugins/index_pattern_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [],
            "signature": [
              "() => Record<string, Record<string, { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }>> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IFieldType",
                    "text": "IFieldType"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternField",
                    "text": "IndexPatternField"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate"
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields"
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists"
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [],
            "signature": [
              "<K extends \"customLabel\" | \"count\">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<Record<string, any>>) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<Record<string, any>>"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPattern.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPattern.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_pattern.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPatternField",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternField",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IndexPatternField",
            "text": "IndexPatternField"
          },
          " implements ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IFieldType",
            "text": "IFieldType"
          }
        ],
        "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.spec",
            "type": "Object",
            "tags": [],
            "label": "spec",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternField.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nCount is used for field popularity"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.runtimeField",
            "type": "Object",
            "tags": [],
            "label": "runtimeField",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.runtimeField",
            "type": "Object",
            "tags": [],
            "label": "runtimeField",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nScript field code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.lang",
            "type": "CompoundType",
            "tags": [],
            "label": "lang",
            "description": [
              "\nScript field language"
            ],
            "signature": [
              "\"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.lang",
            "type": "CompoundType",
            "tags": [],
            "label": "lang",
            "description": [],
            "signature": [
              "\"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nDescription of field type conflicts across different indices in the same index pattern"
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.scripted",
            "type": "boolean",
            "tags": [],
            "label": "scripted",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.subType",
            "type": "Object",
            "tags": [],
            "label": "subType",
            "description": [],
            "signature": [
              "IFieldSubType",
              " | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.isMapped",
            "type": "CompoundType",
            "tags": [],
            "label": "isMapped",
            "description": [
              "\nIs the field part of the index mapping?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.visualizable",
            "type": "boolean",
            "tags": [],
            "label": "visualizable",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.deleteCount",
            "type": "Function",
            "tags": [],
            "label": "deleteCount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.toJSON",
            "type": "Function",
            "tags": [],
            "label": "toJSON",
            "description": [],
            "signature": [
              "() => { count: number; script: string | undefined; lang: \"painless\" | \"expression\" | \"mustache\" | \"java\" | undefined; conflictDescriptions: Record<string, string[]> | undefined; name: string; type: string; esTypes: string[] | undefined; scripted: boolean; searchable: boolean; aggregatable: boolean; readFromDocValues: boolean; subType: ",
              "IFieldSubType",
              " | undefined; customLabel: string | undefined; }"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternField.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [],
            "signature": [
              "({ getFormatterForField, }?: { getFormatterForField?: ((field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined; }) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternField.toSpec.$1.getFormatterForField",
                "type": "Object",
                "tags": [],
                "label": "{\n    getFormatterForField,\n  }",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternField.toSpec.$1.getFormatterForField.getFormatterForField",
                    "type": "Function",
                    "tags": [],
                    "label": "getFormatterForField",
                    "description": [],
                    "signature": [
                      "((field: ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IFieldType",
                        "text": "IFieldType"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IndexPatternField",
                        "text": "IndexPatternField"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.FieldSpec",
                        "text": "FieldSpec"
                      },
                      ") => ",
                      {
                        "pluginId": "fieldFormats",
                        "scope": "common",
                        "docId": "kibFieldFormatsPluginApi",
                        "section": "def-common.FieldFormat",
                        "text": "FieldFormat"
                      },
                      ") | undefined"
                    ],
                    "path": "src/plugins/data/common/index_patterns/fields/index_pattern_field.ts",
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPatternsService",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternsService",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.ensureDefaultIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "ensureDefaultIndexPattern",
            "description": [],
            "signature": [
              "() => Promise<unknown> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    uiSettings,\n    savedObjectsClient,\n    apiClient,\n    fieldFormats,\n    onNotification,\n    onError,\n    onRedirectNoIndexPattern = () => {},\n  }",
                "description": [],
                "signature": [
                  "IndexPatternsServiceDeps"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGet list of index pattern ids"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGet list of index pattern titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title"
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGet list of index pattern ids with titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternListItem",
                "text": "IndexPatternListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern list cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.clearCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "optionally clear a single id"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [],
            "signature": [
              "() => Promise<",
              "SavedObject",
              "<Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ", \"type\" | \"title\" | \"typeMeta\">>[] | null | undefined>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.hasUserIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "hasUserIndexPattern",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }"
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ") => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map"
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts index pattern saved object to index pattern spec"
            ],
            "signature": [
              "(savedObject: ",
              "SavedObject",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ">) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  "SavedObject",
                  "<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternAttributes",
                    "text": "IndexPatternAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPatternSpec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id. Cache optimized"
            ],
            "signature": [
              "(id: string) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a new index pattern instance"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new index pattern and save it right away"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", override?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing index pattern. Will attempt to merge differences if there are conflicts"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean) => Promise<void | Error>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index"
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPatternsService",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternsService",
        "description": [],
        "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.ensureDefaultIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "ensureDefaultIndexPattern",
            "description": [],
            "signature": [
              "() => Promise<unknown> | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    uiSettings,\n    savedObjectsClient,\n    apiClient,\n    fieldFormats,\n    onNotification,\n    onError,\n    onRedirectNoIndexPattern = () => {},\n  }",
                "description": [],
                "signature": [
                  "IndexPatternsServiceDeps"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGet list of index pattern ids"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGet list of index pattern titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title"
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGet list of index pattern ids with titles"
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternListItem",
                "text": "IndexPatternListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern list cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.clearCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "optionally clear a single id"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [],
            "signature": [
              "() => Promise<",
              "SavedObject",
              "<Pick<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ", \"type\" | \"title\" | \"typeMeta\">>[] | null | undefined>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.hasUserIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "hasUserIndexPattern",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }"
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  },
                  " | ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ") => Promise<void>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map"
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => Record<string, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts index pattern saved object to index pattern spec"
            ],
            "signature": [
              "(savedObject: ",
              "SavedObject",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternAttributes",
                "text": "IndexPatternAttributes"
              },
              ">) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              }
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  "SavedObject",
                  "<",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternAttributes",
                    "text": "IndexPatternAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPatternSpec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id. Cache optimized"
            ],
            "signature": [
              "(id: string) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a new index pattern instance"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "IndexPattern"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new index pattern and save it right away"
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternSpec",
                "text": "IndexPatternSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPatternSpec",
                    "text": "IndexPatternSpec"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new index pattern"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", override?: boolean) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ">"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing index pattern. Will attempt to merge differences if there are conflicts"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean) => Promise<void | Error>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataIndexPatternsPluginApi",
                    "section": "def-common.IndexPattern",
                    "text": "IndexPattern"
                  }
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index"
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/index_patterns/index_patterns/index_patterns.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-server.castEsToKbnFieldTypeName",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "castEsToKbnFieldTypeName",
        "description": [],
        "signature": [
          "(esType: string) => ",
          "KBN_FIELD_TYPES"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          }
        ],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.esType",
            "type": "string",
            "tags": [],
            "label": "esType",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_types.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          "EsQueryConfig"
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.getTime",
        "type": "Function",
        "tags": [],
        "label": "getTime",
        "description": [],
        "signature": [
          "(indexPattern: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IIndexPattern",
            "text": "IIndexPattern"
          },
          " | undefined, timeRange: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", options: { forceNow?: Date | undefined; fieldName?: string | undefined; } | undefined) => ",
          "RangeFilter",
          " | ",
          "ScriptedRangeFilter",
          " | ",
          "MatchAllRangeFilter",
          " | undefined"
        ],
        "path": "src/plugins/data/common/query/timefilter/get_time.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$1",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IIndexPattern",
                "text": "IIndexPattern"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$2",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$3.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.getTime.$3.options.forceNow",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.getTime.$3.options.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.parseInterval",
        "type": "Function",
        "tags": [],
        "label": "parseInterval",
        "description": [],
        "signature": [
          "(interval: string) => moment.Duration | null"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.parseInterval.$1",
            "type": "string",
            "tags": [],
            "label": "interval",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-server.IEsSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IEsSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IEsSearchRequest.indexType",
            "type": "string",
            "tags": [],
            "label": "indexType",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IFieldType",
        "type": "Interface",
        "tags": [
          "deprecated"
        ],
        "label": "IFieldType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataIndexPatternsPluginApi",
            "section": "def-common.IFieldType",
            "text": "IFieldType"
          },
          " extends ",
          "IndexPatternFieldBase"
        ],
        "path": "src/plugins/data/common/index_patterns/fields/types.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/components/search_bar.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/fields/es_doc_field.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/fields/es_doc_field.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/index_pattern_util.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/top_hits_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metric_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metrics_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/metrics_editor/metrics_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/edit_layer_panel/join_editor/resources/join.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/update_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/layers/choropleth_layer_wizard/layer_template.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_grid/common.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/data_grid/common.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/metric_control/index.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/metric.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/metric.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/inventory/components/expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/selector.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/selector.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/group_by_expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/common/group_by_expression/group_by_expression.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criterion.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criteria.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/log_threshold/components/expression_editor/criteria.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/group_by.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/group_by.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_row.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/alerting/metric_threshold/components/expression_row.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/metrics.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/metrics/metrics_explorer/components/metrics.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/server/maps_telemetry/maps_telemetry.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/server/maps_telemetry/maps_telemetry.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/util_components/single_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/es_source/es_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/es_source/es_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/index_pattern_util.d.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/util/field_types_utils.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/components/single_field_select.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/group_by_expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/group_by_expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/selector.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/common/group_by_expression/selector.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/expression.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/metric.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/inventory/components/metric.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_row.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/metric_threshold/components/expression_row.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/layers/choropleth_layer_wizard/layer_template.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criteria.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criteria.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criterion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/alerting/log_threshold/components/expression_editor/criterion.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/group_by.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/group_by.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/metrics.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/metrics_explorer/components/metrics.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/join_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/edit_layer_panel/join_editor/resources/metrics_expression.d.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/target/types/public/alert_types/geo_containment/query_builder/util_components/single_field_select.d.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/target/types/public/alert_types/geo_containment/query_builder/util_components/single_field_select.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/custom_field_panel.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/waffle_group_by_controls.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/custom_metric_form.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/index.d.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/target/types/public/pages/metrics/inventory_view/components/waffle/metric_control/index.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/utils.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/utils.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/utils.d.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/target/types/public/components/utils.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/es_agg_utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/geo_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/components/geo_field_select.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/top_hits/create_source_editor.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/indexpattern_datasource/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/indexpattern_datasource/types.d.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.test.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.test.ts"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/entity_by_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "stackAlerts",
            "path": "x-pack/plugins/stack_alerts/public/alert_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/util/get_docvalue_source_fields.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/util/get_docvalue_source_fields.test.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.aggregatable",
            "type": "CompoundType",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.filterable",
            "type": "CompoundType",
            "tags": [],
            "label": "filterable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.searchable",
            "type": "CompoundType",
            "tags": [],
            "label": "searchable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.sortable",
            "type": "CompoundType",
            "tags": [],
            "label": "sortable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.visualizable",
            "type": "CompoundType",
            "tags": [],
            "label": "visualizable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.readFromDocValues",
            "type": "CompoundType",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.format",
            "type": "Any",
            "tags": [],
            "label": "format",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IFieldType.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [],
            "signature": [
              "((options?: { getFormatterForField?: ((field: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IFieldType",
                "text": "IFieldType"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPatternField",
                "text": "IndexPatternField"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined; } | undefined) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/fields/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IFieldType.toSpec.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data/common/index_patterns/fields/types.ts",
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IFieldType.toSpec.$1.options.getFormatterForField",
                    "type": "Function",
                    "tags": [],
                    "label": "getFormatterForField",
                    "description": [],
                    "signature": [
                      "((field: ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IFieldType",
                        "text": "IFieldType"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.IndexPatternField",
                        "text": "IndexPatternField"
                      },
                      " | ",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataIndexPatternsPluginApi",
                        "section": "def-common.FieldSpec",
                        "text": "FieldSpec"
                      },
                      ") => ",
                      {
                        "pluginId": "fieldFormats",
                        "scope": "common",
                        "docId": "kibFieldFormatsPluginApi",
                        "section": "def-common.FieldFormat",
                        "text": "FieldFormat"
                      },
                      ") | undefined"
                    ],
                    "path": "src/plugins/data/common/index_patterns/fields/types.ts",
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPatternAttributes",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternAttributes",
        "description": [
          "\nInterface for an index pattern saved object"
        ],
        "path": "src/plugins/data/common/index_patterns/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.fields",
            "type": "string",
            "tags": [],
            "label": "fields",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.typeMeta",
            "type": "string",
            "tags": [],
            "label": "typeMeta",
            "description": [],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.intervalName",
            "type": "string",
            "tags": [],
            "label": "intervalName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.sourceFilters",
            "type": "string",
            "tags": [],
            "label": "sourceFilters",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.fieldFormatMap",
            "type": "string",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.fieldAttrs",
            "type": "string",
            "tags": [],
            "label": "fieldAttrs",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.runtimeFieldMap",
            "type": "string",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternAttributes.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nprevents errors when index pattern exists before indices"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/index_patterns/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.ISearchOptions",
        "type": "Interface",
        "tags": [],
        "label": "ISearchOptions",
        "description": [],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.abortSignal",
            "type": "Object",
            "tags": [],
            "label": "abortSignal",
            "description": [
              "\nAn `AbortSignal` that allows the caller of `search` to abort a search request."
            ],
            "signature": [
              "AbortSignal | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.strategy",
            "type": "string",
            "tags": [],
            "label": "strategy",
            "description": [
              "\nUse this option to force using a specific server side search strategy. Leave empty to use the default strategy."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.legacyHitsTotal",
            "type": "CompoundType",
            "tags": [],
            "label": "legacyHitsTotal",
            "description": [
              "\nRequest the legacy format for the total number of hits. If sending `rest_total_hits_as_int` to\nsomething other than `true`, this should be set to `false`."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.sessionId",
            "type": "string",
            "tags": [],
            "label": "sessionId",
            "description": [
              "\nA session ID, grouping multiple search requests into a single session."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.isStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isStored",
            "description": [
              "\nWhether the session is already saved (i.e. sent to background)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.isRestore",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestore",
            "description": [
              "\nWhether the session is restored (i.e. search requests should re-use the stored search IDs,\nrather than starting from scratch)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "\nIndex pattern reference is used for better error messages"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataIndexPatternsPluginApi",
                "section": "def-common.IndexPattern",
                "text": "IndexPattern"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.inspector",
            "type": "Object",
            "tags": [],
            "label": "inspector",
            "description": [
              "\nInspector integration options"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IInspectorInfo",
                "text": "IInspectorInfo"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.executionContext",
            "type": "Object",
            "tags": [],
            "label": "executionContext",
            "description": [],
            "signature": [
              "KibanaExecutionContext",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-server.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "signature": [
          "ES_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "signature": [
          "KBN_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.METRIC_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "METRIC_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-server.ES_SEARCH_STRATEGY",
        "type": "string",
        "tags": [],
        "label": "ES_SEARCH_STRATEGY",
        "description": [],
        "signature": [
          "\"es\""
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.EsQueryConfig",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "EsQueryConfig",
        "description": [],
        "signature": [
          "KueryQueryOptions",
          " & { allowLeadingWildcards: boolean; queryStringOptions: ",
          "SerializableRecord",
          "; ignoreFilterIfFieldNotInIndex: boolean; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.Filter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "Filter",
        "description": [],
        "signature": [
          "{ $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; meta: ",
          "FilterMeta",
          "; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IEsSearchResponse",
        "type": "Type",
        "tags": [],
        "label": "IEsSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<Source>>"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IFieldSubType",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "IFieldSubType",
        "description": [],
        "signature": [
          "IFieldSubType"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "description": [],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.KueryNode",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "KueryNode",
        "description": [],
        "signature": [
          "KueryNode"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.ParsedInterval",
        "type": "Type",
        "tags": [],
        "label": "ParsedInterval",
        "description": [],
        "signature": [
          "{ value: number; unit: ",
          "Unit",
          "; type: \"calendar\" | \"fixed\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.Query",
        "type": "Type",
        "tags": [],
        "label": "Query",
        "description": [],
        "signature": [
          "{ query: string | { [key: string]: any; }; language: string; }"
        ],
        "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.TimeRange",
        "type": "Type",
        "tags": [],
        "label": "TimeRange",
        "description": [],
        "signature": [
          "{ from: string; to: string; mode?: \"absolute\" | \"relative\" | undefined; }"
        ],
        "path": "src/plugins/data/common/query/timefilter/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-server.esFilters",
        "type": "Object",
        "tags": [],
        "label": "esFilters",
        "description": [],
        "path": "src/plugins/data/server/deprecated.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildQueryFilter",
            "type": "Function",
            "tags": [],
            "label": "buildQueryFilter",
            "description": [],
            "signature": [
              "(query: (Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined, index: string, alias: string) => ",
              "QueryStringFilter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.query",
                "type": "CompoundType",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "(Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.alias",
                "type": "string",
                "tags": [],
                "label": "alias",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildCustomFilter",
            "type": "Function",
            "tags": [],
            "label": "buildCustomFilter",
            "description": [],
            "signature": [
              "(indexPatternString: string, queryDsl: ",
              "QueryDslQueryContainer",
              ", disabled: boolean, negate: boolean, alias: string | null, store: ",
              "FilterStateStore",
              ") => ",
              "Filter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.indexPatternString",
                "type": "string",
                "tags": [],
                "label": "indexPatternString",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.queryDsl",
                "type": "Object",
                "tags": [],
                "label": "queryDsl",
                "description": [],
                "signature": [
                  "QueryDslQueryContainer"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.disabled",
                "type": "boolean",
                "tags": [],
                "label": "disabled",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.negate",
                "type": "boolean",
                "tags": [],
                "label": "negate",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.alias",
                "type": "CompoundType",
                "tags": [],
                "label": "alias",
                "description": [],
                "signature": [
                  "string | null"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.store",
                "type": "Enum",
                "tags": [],
                "label": "store",
                "description": [],
                "signature": [
                  "FilterStateStore"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildEmptyFilter",
            "type": "Function",
            "tags": [],
            "label": "buildEmptyFilter",
            "description": [],
            "signature": [
              "(isPinned: boolean, index?: string | undefined) => ",
              "Filter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.isPinned",
                "type": "boolean",
                "tags": [],
                "label": "isPinned",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildExistsFilter",
            "type": "Function",
            "tags": [],
            "label": "buildExistsFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "ExistsFilter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildFilter",
            "type": "Function",
            "tags": [],
            "label": "buildFilter",
            "description": [],
            "signature": [
              "(indexPattern: ",
              "IndexPatternBase",
              ", field: ",
              "IndexPatternFieldBase",
              ", type: ",
              "FILTERS",
              ", negate: boolean, disabled: boolean, params: ",
              "Serializable",
              ", alias: string | null, store?: ",
              "FilterStateStore",
              " | undefined) => ",
              "Filter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.type",
                "type": "Enum",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "FILTERS"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.negate",
                "type": "boolean",
                "tags": [],
                "label": "negate",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.disabled",
                "type": "boolean",
                "tags": [],
                "label": "disabled",
                "description": [],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.params",
                "type": "CompoundType",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "string | number | boolean | ",
                  "SerializableRecord",
                  " | ",
                  "SerializableArray",
                  " | null | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.alias",
                "type": "CompoundType",
                "tags": [],
                "label": "alias",
                "description": [],
                "signature": [
                  "string | null"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.store",
                "type": "CompoundType",
                "tags": [],
                "label": "store",
                "description": [],
                "signature": [
                  "FilterStateStore",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildPhraseFilter",
            "type": "Function",
            "tags": [],
            "label": "buildPhraseFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", value: ",
              "PhraseFilterValue",
              ", indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "PhraseFilter",
              " | ",
              "ScriptedPhraseFilter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.value",
                "type": "CompoundType",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "string | number | boolean"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildPhrasesFilter",
            "type": "Function",
            "tags": [],
            "label": "buildPhrasesFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", params: ",
              "PhraseFilterValue",
              "[], indexPattern: ",
              "IndexPatternBase",
              ") => ",
              "PhrasesFilter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.params",
                "type": "Array",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "PhraseFilterValue",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.buildRangeFilter",
            "type": "Function",
            "tags": [],
            "label": "buildRangeFilter",
            "description": [],
            "signature": [
              "(field: ",
              "IndexPatternFieldBase",
              ", params: ",
              "RangeFilterParams",
              ", indexPattern: ",
              "IndexPatternBase",
              ", formattedValue?: string | undefined) => ",
              "RangeFilter",
              " | ",
              "ScriptedRangeFilter",
              " | ",
              "MatchAllRangeFilter"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.field",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "IndexPatternFieldBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.params",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "RangeFilterParams"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.formattedValue",
                "type": "string",
                "tags": [],
                "label": "formattedValue",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esFilters.isFilterDisabled",
            "type": "Function",
            "tags": [],
            "label": "isFilterDisabled",
            "description": [],
            "signature": [
              "(filter: ",
              "Filter",
              ") => boolean"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.filter",
                "type": "Object",
                "tags": [],
                "label": "filter",
                "description": [],
                "signature": [
                  "{ $state?: { store: ",
                  "FilterStateStore",
                  "; } | undefined; meta: ",
                  "FilterMeta",
                  "; query?: Record<string, any> | undefined; }"
                ],
                "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.esKuery",
        "type": "Object",
        "tags": [],
        "label": "esKuery",
        "description": [],
        "path": "src/plugins/data/server/deprecated.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.esKuery.nodeTypes",
            "type": "Object",
            "tags": [],
            "label": "nodeTypes",
            "description": [],
            "signature": [
              "NodeTypes"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esKuery.fromKueryExpression",
            "type": "Function",
            "tags": [],
            "label": "fromKueryExpression",
            "description": [],
            "signature": [
              "(expression: string | ",
              "QueryDslQueryContainer",
              ", parseOptions?: Partial<",
              "KueryParseOptions",
              "> | undefined) => ",
              "KueryNode"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.expression",
                "type": "CompoundType",
                "tags": [],
                "label": "expression",
                "description": [],
                "signature": [
                  "string | ",
                  "QueryDslQueryContainer"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.parseOptions",
                "type": "Object",
                "tags": [],
                "label": "parseOptions",
                "description": [],
                "signature": [
                  "Partial<",
                  "KueryParseOptions",
                  "> | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esKuery.toElasticsearchQuery",
            "type": "Function",
            "tags": [],
            "label": "toElasticsearchQuery",
            "description": [],
            "signature": [
              "(node: ",
              "KueryNode",
              ", indexPattern?: ",
              "IndexPatternBase",
              " | undefined, config?: ",
              "KueryQueryOptions",
              " | undefined, context?: Record<string, any> | undefined) => ",
              "QueryDslQueryContainer"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.node",
                "type": "Object",
                "tags": [],
                "label": "node",
                "description": [],
                "signature": [
                  "KueryNode"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.config",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "KueryQueryOptions",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.context",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "Record<string, any> | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.esQuery",
        "type": "Object",
        "tags": [],
        "label": "esQuery",
        "description": [],
        "path": "src/plugins/data/server/deprecated.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.esQuery.buildQueryFromFilters",
            "type": "Function",
            "tags": [],
            "label": "buildQueryFromFilters",
            "description": [],
            "signature": [
              "(filters: ",
              "Filter",
              "[] | undefined, indexPattern: ",
              "IndexPatternBase",
              " | undefined, ignoreFilterIfFieldNotInIndex?: boolean | undefined) => ",
              "BoolQuery"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.filters",
                "type": "Array",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  "[] | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.ignoreFilterIfFieldNotInIndex",
                "type": "CompoundType",
                "tags": [],
                "label": "ignoreFilterIfFieldNotInIndex",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esQuery.getEsQueryConfig",
            "type": "Function",
            "tags": [],
            "label": "getEsQueryConfig",
            "description": [],
            "signature": [
              "(config: KibanaConfig) => ",
              "EsQueryConfig"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.config",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "KibanaConfig"
                ],
                "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.esQuery.buildEsQuery",
            "type": "Function",
            "tags": [],
            "label": "buildEsQuery",
            "description": [],
            "signature": [
              "(indexPattern: ",
              "IndexPatternBase",
              " | undefined, queries: ",
              "Query",
              " | ",
              "Query",
              "[], filters: ",
              "Filter",
              " | ",
              "Filter",
              "[], config?: ",
              "EsQueryConfig",
              " | undefined) => { bool: ",
              "BoolQuery",
              "; }"
            ],
            "path": "src/plugins/data/server/deprecated.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.indexPattern",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "IndexPatternBase",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.queries",
                "type": "CompoundType",
                "tags": [],
                "label": "queries",
                "description": [],
                "signature": [
                  "Query",
                  " | ",
                  "Query",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.filters",
                "type": "CompoundType",
                "tags": [],
                "label": "filters",
                "description": [],
                "signature": [
                  "Filter",
                  " | ",
                  "Filter",
                  "[]"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.config",
                "type": "CompoundType",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "EsQueryConfig",
                  " | undefined"
                ],
                "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.exporters",
        "type": "Object",
        "tags": [],
        "label": "exporters",
        "description": [],
        "path": "src/plugins/data/server/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.exporters.datatableToCSV",
            "type": "Function",
            "tags": [],
            "label": "datatableToCSV",
            "description": [],
            "signature": [
              "({ columns, rows }: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              },
              ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
            ],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.__0",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.Datatable",
                    "text": "Datatable"
                  }
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.__1",
                "type": "Object",
                "tags": [],
                "label": "__1",
                "description": [],
                "signature": [
                  "CSVOptions"
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.exporters.CSV_MIME_TYPE",
            "type": "string",
            "tags": [],
            "label": "CSV_MIME_TYPE",
            "description": [],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.search",
        "type": "Object",
        "tags": [],
        "label": "search",
        "description": [],
        "path": "src/plugins/data/server/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.search.aggs",
            "type": "Object",
            "tags": [],
            "label": "aggs",
            "description": [],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.CidrMask",
                "type": "Object",
                "tags": [],
                "label": "CidrMask",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CidrMask",
                    "text": "CidrMask"
                  }
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.dateHistogramInterval",
                "type": "Function",
                "tags": [],
                "label": "dateHistogramInterval",
                "description": [],
                "signature": [
                  "(interval: string) => Interval"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.IpAddress",
                "type": "Object",
                "tags": [],
                "label": "IpAddress",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IpAddress",
                    "text": "IpAddress"
                  }
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.parseInterval",
                "type": "Function",
                "tags": [],
                "label": "parseInterval",
                "description": [],
                "signature": [
                  "(interval: string) => moment.Duration | null"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.interval",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
                    "deprecated": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.calcAutoIntervalLessThan",
                "type": "Function",
                "tags": [],
                "label": "calcAutoIntervalLessThan",
                "description": [],
                "signature": [
                  "(maxBucketCount: number, duration: number) => moment.Duration"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.maxBucketCount",
                    "type": "number",
                    "tags": [],
                    "label": "maxBucketCount",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.duration",
                    "type": "number",
                    "tags": [],
                    "label": "duration",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false
                  }
                ]
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly INDEXPATTERN_PLACEHOLDER: \"indexPattern:placeholder\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "data",
      "id": "def-server.DataPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataPluginSetup",
      "description": [],
      "path": "src/plugins/data/server/plugin.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginSetup.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            "ISearchSetup"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginSetup.fieldFormats",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            {
              "pluginId": "fieldFormats",
              "scope": "server",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-server.FieldFormatsSetup",
              "text": "FieldFormatsSetup"
            }
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": true,
          "references": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "data",
      "id": "def-server.DataPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "DataPluginStart",
      "description": [],
      "path": "src/plugins/data/server/plugin.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            "ISearchStart",
            "<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataSearchPluginApi",
              "section": "def-common.IEsSearchRequest",
              "text": "IEsSearchRequest"
            },
            ", ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataSearchPluginApi",
              "section": "def-common.IEsSearchResponse",
              "text": "IEsSearchResponse"
            },
            "<any>>"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.fieldFormats",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            {
              "pluginId": "fieldFormats",
              "scope": "server",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-server.FieldFormatsStart",
              "text": "FieldFormatsStart"
            }
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": true,
          "references": [
            {
              "plugin": "reporting",
              "path": "x-pack/plugins/reporting/server/plugin.ts"
            }
          ]
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.indexPatterns",
          "type": "Object",
          "tags": [],
          "label": "indexPatterns",
          "description": [],
          "signature": [
            "IndexPatternsServiceStart"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-common.KbnFieldType",
        "type": "Class",
        "tags": [],
        "label": "KbnFieldType",
        "description": [],
        "signature": [
          "KbnFieldType"
        ],
        "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.esTypes",
            "type": "Object",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "readonly ",
              "ES_FIELD_TYPES",
              "[]"
            ],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.KbnFieldType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "Partial<",
                  "KbnFieldTypeOptions",
                  "> | undefined"
                ],
                "path": "node_modules/@kbn/field-types/target_types/kbn_field_type.d.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-common.buildCustomFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildCustomFilter",
        "description": [],
        "signature": [
          "(indexPatternString: string, queryDsl: ",
          "QueryDslQueryContainer",
          ", disabled: boolean, negate: boolean, alias: string | null, store: ",
          "FilterStateStore",
          ") => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.indexPatternString",
            "type": "string",
            "tags": [],
            "label": "indexPatternString",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.queryDsl",
            "type": "Object",
            "tags": [],
            "label": "queryDsl",
            "description": [],
            "signature": [
              "QueryDslQueryContainer"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.disabled",
            "type": "boolean",
            "tags": [],
            "label": "disabled",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.negate",
            "type": "boolean",
            "tags": [],
            "label": "negate",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.alias",
            "type": "CompoundType",
            "tags": [],
            "label": "alias",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.store",
            "type": "Enum",
            "tags": [],
            "label": "store",
            "description": [],
            "signature": [
              "FilterStateStore"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/custom_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildEmptyFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildEmptyFilter",
        "description": [],
        "signature": [
          "(isPinned: boolean, index?: string | undefined) => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.isPinned",
            "type": "boolean",
            "tags": [],
            "label": "isPinned",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.index",
            "type": "string",
            "tags": [],
            "label": "index",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_empty_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildEsQuery",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildEsQuery",
        "description": [],
        "signature": [
          "(indexPattern: ",
          "IndexPatternBase",
          " | undefined, queries: ",
          "Query",
          " | ",
          "Query",
          "[], filters: ",
          "Filter",
          " | ",
          "Filter",
          "[], config?: ",
          "EsQueryConfig",
          " | undefined) => { bool: ",
          "BoolQuery",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.queries",
            "type": "CompoundType",
            "tags": [],
            "label": "queries",
            "description": [],
            "signature": [
              "Query",
              " | ",
              "Query",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.filters",
            "type": "CompoundType",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "Filter",
              " | ",
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.config",
            "type": "CompoundType",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "EsQueryConfig",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/build_es_query.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildExistsFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildExistsFilter",
        "description": [],
        "signature": [
          "(field: ",
          "IndexPatternFieldBase",
          ", indexPattern: ",
          "IndexPatternBase",
          ") => ",
          "ExistsFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.field",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "IndexPatternFieldBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildFilter",
        "description": [],
        "signature": [
          "(indexPattern: ",
          "IndexPatternBase",
          ", field: ",
          "IndexPatternFieldBase",
          ", type: ",
          "FILTERS",
          ", negate: boolean, disabled: boolean, params: ",
          "Serializable",
          ", alias: string | null, store?: ",
          "FilterStateStore",
          " | undefined) => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.field",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "IndexPatternFieldBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.type",
            "type": "Enum",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "FILTERS"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.negate",
            "type": "boolean",
            "tags": [],
            "label": "negate",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.disabled",
            "type": "boolean",
            "tags": [],
            "label": "disabled",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.params",
            "type": "CompoundType",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "string | number | boolean | ",
              "SerializableRecord",
              " | ",
              "SerializableArray",
              " | null | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.alias",
            "type": "CompoundType",
            "tags": [],
            "label": "alias",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.store",
            "type": "CompoundType",
            "tags": [],
            "label": "store",
            "description": [],
            "signature": [
              "FilterStateStore",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/build_filters.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildPhraseFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildPhraseFilter",
        "description": [],
        "signature": [
          "(field: ",
          "IndexPatternFieldBase",
          ", value: ",
          "PhraseFilterValue",
          ", indexPattern: ",
          "IndexPatternBase",
          ") => ",
          "PhraseFilter",
          " | ",
          "ScriptedPhraseFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.field",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "IndexPatternFieldBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.value",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "string | number | boolean"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildPhrasesFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildPhrasesFilter",
        "description": [],
        "signature": [
          "(field: ",
          "IndexPatternFieldBase",
          ", params: ",
          "PhraseFilterValue",
          "[], indexPattern: ",
          "IndexPatternBase",
          ") => ",
          "PhrasesFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.field",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "IndexPatternFieldBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.params",
            "type": "Array",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "PhraseFilterValue",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildQueryFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildQueryFilter",
        "description": [],
        "signature": [
          "(query: (Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined, index: string, alias: string) => ",
          "QueryStringFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.query",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "(Record<string, any> & { query_string?: { query: string; } | undefined; }) | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.index",
            "type": "string",
            "tags": [],
            "label": "index",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.alias",
            "type": "string",
            "tags": [],
            "label": "alias",
            "description": [],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildQueryFromFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildQueryFromFilters",
        "description": [],
        "signature": [
          "(filters: ",
          "Filter",
          "[] | undefined, indexPattern: ",
          "IndexPatternBase",
          " | undefined, ignoreFilterIfFieldNotInIndex?: boolean | undefined) => ",
          "BoolQuery"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "Filter",
              "[] | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.ignoreFilterIfFieldNotInIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "ignoreFilterIfFieldNotInIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/from_filters.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.buildRangeFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "buildRangeFilter",
        "description": [],
        "signature": [
          "(field: ",
          "IndexPatternFieldBase",
          ", params: ",
          "RangeFilterParams",
          ", indexPattern: ",
          "IndexPatternBase",
          ", formattedValue?: string | undefined) => ",
          "RangeFilter",
          " | ",
          "ScriptedRangeFilter",
          " | ",
          "MatchAllRangeFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.field",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "IndexPatternFieldBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.params",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "RangeFilterParams"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.formattedValue",
            "type": "string",
            "tags": [],
            "label": "formattedValue",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.castEsToKbnFieldTypeName",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "castEsToKbnFieldTypeName",
        "description": [],
        "signature": [
          "(esType: string) => ",
          "KBN_FIELD_TYPES"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "indexPatternFieldEditor",
            "path": "src/plugins/index_pattern_field_editor/public/components/field_format_editor/field_format_editor.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/lib/create_field_list.ts"
          }
        ],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.esType",
            "type": "string",
            "tags": [],
            "label": "esType",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_types.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.cellHasFormulas",
        "type": "Function",
        "tags": [],
        "label": "cellHasFormulas",
        "description": [],
        "signature": [
          "(val: string) => boolean"
        ],
        "path": "src/plugins/data/common/exports/formula_checks.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.cellHasFormulas.$1",
            "type": "string",
            "tags": [],
            "label": "val",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.compareFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "compareFilters",
        "description": [],
        "signature": [
          "(first: ",
          "Filter",
          " | ",
          "Filter",
          "[], second: ",
          "Filter",
          " | ",
          "Filter",
          "[], comparatorOptions?: ",
          "FilterCompareOptions",
          " | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.first",
            "type": "CompoundType",
            "tags": [],
            "label": "first",
            "description": [],
            "signature": [
              "Filter",
              " | ",
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.second",
            "type": "CompoundType",
            "tags": [],
            "label": "second",
            "description": [],
            "signature": [
              "Filter",
              " | ",
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.comparatorOptions",
            "type": "Object",
            "tags": [],
            "label": "comparatorOptions",
            "description": [],
            "signature": [
              "FilterCompareOptions",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/compare_filters.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.createEscapeValue",
        "type": "Function",
        "tags": [],
        "label": "createEscapeValue",
        "description": [],
        "signature": [
          "(quoteValues: boolean, escapeFormulas: boolean) => (val: RawValue) => string"
        ],
        "path": "src/plugins/data/common/exports/escape_value.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.createEscapeValue.$1",
            "type": "boolean",
            "tags": [],
            "label": "quoteValues",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data/common/exports/escape_value.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.createEscapeValue.$2",
            "type": "boolean",
            "tags": [],
            "label": "escapeFormulas",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data/common/exports/escape_value.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.datatableToCSV",
        "type": "Function",
        "tags": [],
        "label": "datatableToCSV",
        "description": [],
        "signature": [
          "({ columns, rows }: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          },
          ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
        ],
        "path": "src/plugins/data/common/exports/export_csv.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.datatableToCSV.$1",
            "type": "Object",
            "tags": [],
            "label": "{ columns, rows }",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              }
            ],
            "path": "src/plugins/data/common/exports/export_csv.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.datatableToCSV.$2",
            "type": "Object",
            "tags": [],
            "label": "{ csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }",
            "description": [],
            "signature": [
              "CSVOptions"
            ],
            "path": "src/plugins/data/common/exports/export_csv.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.decorateQuery",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "decorateQuery",
        "description": [],
        "signature": [
          "(query: ",
          "QueryDslQueryContainer",
          ", queryStringOptions: string | ",
          "SerializableRecord",
          ", dateFormatTZ?: string | undefined) => ",
          "QueryDslQueryContainer"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.query",
            "type": "Object",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "QueryDslQueryContainer"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.queryStringOptions",
            "type": "CompoundType",
            "tags": [],
            "label": "queryStringOptions",
            "description": [],
            "signature": [
              "string | ",
              "SerializableRecord"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.dateFormatTZ",
            "type": "string",
            "tags": [],
            "label": "dateFormatTZ",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/decorate_query.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.dedupFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "dedupFilters",
        "description": [],
        "signature": [
          "(existingFilters: ",
          "Filter",
          "[], filters: ",
          "Filter",
          "[], comparatorOptions?: ",
          "FilterCompareOptions",
          " | undefined) => ",
          "Filter",
          "[]"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.existingFilters",
            "type": "Array",
            "tags": [],
            "label": "existingFilters",
            "description": [],
            "signature": [
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/dedup_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/dedup_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.comparatorOptions",
            "type": "Object",
            "tags": [],
            "label": "comparatorOptions",
            "description": [],
            "signature": [
              "FilterCompareOptions",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/dedup_filters.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.disableFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "disableFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.enableFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "enableFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.fromKueryExpression",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "fromKueryExpression",
        "description": [],
        "signature": [
          "(expression: string | ",
          "QueryDslQueryContainer",
          ", parseOptions?: Partial<",
          "KueryParseOptions",
          "> | undefined) => ",
          "KueryNode"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.expression",
            "type": "CompoundType",
            "tags": [],
            "label": "expression",
            "description": [],
            "signature": [
              "string | ",
              "QueryDslQueryContainer"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.parseOptions",
            "type": "Object",
            "tags": [],
            "label": "parseOptions",
            "description": [],
            "signature": [
              "Partial<",
              "KueryParseOptions",
              "> | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/ast/ast.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          "EsQueryConfig"
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getFilterableKbnTypeNames",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getFilterableKbnTypeNames",
        "description": [],
        "signature": [
          "() => string[]"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getKbnFieldType",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getKbnFieldType",
        "description": [],
        "signature": [
          "(typeName: string) => ",
          "KbnFieldType"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.typeName",
            "type": "string",
            "tags": [],
            "label": "typeName",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/kbn_field_types.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getKbnTypeNames",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getKbnTypeNames",
        "description": [],
        "signature": [
          "() => string[]"
        ],
        "path": "src/plugins/data/common/kbn_field_types/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/constants/index.ts"
          },
          {
            "plugin": "indexPatternManagement",
            "path": "src/plugins/index_pattern_management/public/components/field_editor/constants/index.ts"
          }
        ],
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getPhraseFilterField",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getPhraseFilterField",
        "description": [],
        "signature": [
          "(filter: ",
          "PhraseFilter",
          ") => string"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "CompoundType",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "Filter",
              " & { meta: ",
              "PhraseFilterMeta",
              "; query: { match_phrase?: Record<string, string | ",
              "QueryDslMatchPhraseQuery",
              "> | undefined; match?: Record<string, string | number | boolean | ",
              "QueryDslMatchQuery",
              "> | undefined; }; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getPhraseFilterValue",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getPhraseFilterValue",
        "description": [],
        "signature": [
          "(filter: ",
          "PhraseFilter",
          " | ",
          "ScriptedPhraseFilter",
          ") => ",
          "PhraseFilterValue"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "CompoundType",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "PhraseFilter",
              " | ",
              "ScriptedPhraseFilter"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isExistsFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isExistsFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "ExistsFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/exists_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilter",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.x",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isFilterDisabled",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilterDisabled",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => boolean"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isFilterPinned",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilterPinned",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => boolean | undefined"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isFilters",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          "Filter",
          "[]"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          }
        ],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.x",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isMatchAllFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isMatchAllFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "MatchAllFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/match_all_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isMissingFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isMissingFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "MissingFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/missing_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isPhraseFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isPhraseFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "PhraseFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrase_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isPhrasesFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isPhrasesFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "PhrasesFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/phrases_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isQueryStringFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isQueryStringFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => filter is ",
          "QueryStringFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/query_string_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isRangeFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "isRangeFilter",
        "description": [],
        "signature": [
          "(filter?: ",
          "Filter",
          " | undefined) => filter is ",
          "RangeFilter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "Filter",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/range_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.luceneStringToDsl",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "luceneStringToDsl",
        "description": [],
        "signature": [
          "(query: string | ",
          "QueryDslQueryContainer",
          ") => ",
          "QueryDslQueryContainer"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.query",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "string | ",
              "QueryDslQueryContainer"
            ],
            "path": "node_modules/@kbn/es-query/target_types/es_query/lucene_string_to_dsl.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.onlyDisabledFiltersChanged",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "onlyDisabledFiltersChanged",
        "description": [],
        "signature": [
          "(newFilters?: ",
          "Filter",
          "[] | undefined, oldFilters?: ",
          "Filter",
          "[] | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.newFilters",
            "type": "Array",
            "tags": [],
            "label": "newFilters",
            "description": [],
            "signature": [
              "Filter",
              "[] | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/only_disabled.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.oldFilters",
            "type": "Array",
            "tags": [],
            "label": "oldFilters",
            "description": [],
            "signature": [
              "Filter",
              "[] | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/only_disabled.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.pinFilter",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "pinFilter",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => ",
          "Filter"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.shortenDottedString",
        "type": "Function",
        "tags": [
          "return"
        ],
        "label": "shortenDottedString",
        "description": [
          "\nConvert a dot.notated.string into a short\nversion (d.n.string)\n"
        ],
        "signature": [
          "(input: any) => any"
        ],
        "path": "src/plugins/data/common/utils/shorten_dotted_string.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.shortenDottedString.$1",
            "type": "Any",
            "tags": [],
            "label": "input",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/utils/shorten_dotted_string.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.tableHasFormulas",
        "type": "Function",
        "tags": [],
        "label": "tableHasFormulas",
        "description": [],
        "signature": [
          "(columns: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumn",
            "text": "DatatableColumn"
          },
          "[], rows: Record<string, any>[]) => boolean"
        ],
        "path": "src/plugins/data/common/exports/formula_checks.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.tableHasFormulas.$1",
            "type": "Array",
            "tags": [],
            "label": "columns",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.tableHasFormulas.$2",
            "type": "Array",
            "tags": [],
            "label": "rows",
            "description": [],
            "signature": [
              "Record<string, any>[]"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.toElasticsearchQuery",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "toElasticsearchQuery",
        "description": [],
        "signature": [
          "(node: ",
          "KueryNode",
          ", indexPattern?: ",
          "IndexPatternBase",
          " | undefined, config?: ",
          "KueryQueryOptions",
          " | undefined, context?: Record<string, any> | undefined) => ",
          "QueryDslQueryContainer"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.node",
            "type": "Object",
            "tags": [],
            "label": "node",
            "description": [],
            "signature": [
              "KueryNode"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "IndexPatternBase",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.config",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KueryQueryOptions",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.context",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "Record<string, any> | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/kuery/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.toggleFilterDisabled",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "toggleFilterDisabled",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => { meta: { disabled: boolean; alias?: string | null | undefined; negate?: boolean | undefined; controlledBy?: string | undefined; index?: string | undefined; isMultiIndex?: boolean | undefined; type?: string | undefined; key?: string | undefined; params?: any; value?: string | undefined; }; $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.toggleFilterNegated",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "toggleFilterNegated",
        "description": [],
        "signature": [
          "(filter: ",
          "Filter",
          ") => { meta: { negate: boolean; alias?: string | null | undefined; disabled?: boolean | undefined; controlledBy?: string | undefined; index?: string | undefined; isMultiIndex?: boolean | undefined; type?: string | undefined; key?: string | undefined; params?: any; value?: string | undefined; }; $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filter",
            "type": "Object",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "{ $state?: { store: ",
              "FilterStateStore",
              "; } | undefined; meta: ",
              "FilterMeta",
              "; query?: Record<string, any> | undefined; }"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/meta_filter.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.uniqFilters",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "uniqFilters",
        "description": [],
        "signature": [
          "(filters: ",
          "Filter",
          "[], comparatorOptions?: ",
          "FilterCompareOptions",
          " | undefined) => ",
          "Filter",
          "[]"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "Filter",
              "[]"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/uniq_filters.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.comparatorOptions",
            "type": "Object",
            "tags": [],
            "label": "comparatorOptions",
            "description": [],
            "signature": [
              "FilterCompareOptions",
              " | undefined"
            ],
            "path": "node_modules/@kbn/es-query/target_types/filters/helpers/uniq_filters.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-common.FilterValueFormatter",
        "type": "Interface",
        "tags": [],
        "label": "FilterValueFormatter",
        "description": [],
        "path": "src/plugins/data/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.FilterValueFormatter.convert",
            "type": "Function",
            "tags": [],
            "label": "convert",
            "description": [],
            "signature": [
              "(value: any) => string"
            ],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.value",
                "type": "Any",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/types.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.FilterValueFormatter.getConverterFor",
            "type": "Function",
            "tags": [],
            "label": "getConverterFor",
            "description": [],
            "signature": [
              "(type: string) => FilterFormatterFunction"
            ],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.FilterValueFormatter.getConverterFor.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KbnFieldTypeOptions",
        "type": "Interface",
        "tags": [],
        "label": "KbnFieldTypeOptions",
        "description": [],
        "signature": [
          "KbnFieldTypeOptions"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "ES_FIELD_TYPES",
              "[]"
            ],
            "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.SavedObject",
        "type": "Interface",
        "tags": [],
        "label": "SavedObject",
        "description": [],
        "signature": [
          "SavedObject",
          "<T>"
        ],
        "path": "src/core/types/saved_objects.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "The ID of this Saved Object, guaranteed to be unique for all objects of the same `type`"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              " The type of Saved Object. Each plugin can define it's own custom Saved Object types."
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "An opaque version number which changes on each successful write operation. Can be used for implementing optimistic concurrency control."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.updated_at",
            "type": "string",
            "tags": [],
            "label": "updated_at",
            "description": [
              "Timestamp of the last time this document had been updated."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.error",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "SavedObjectError",
              " | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.attributes",
            "type": "Uncategorized",
            "tags": [],
            "label": "attributes",
            "description": [
              "{@inheritdoc SavedObjectAttributes}"
            ],
            "signature": [
              "T"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.references",
            "type": "Array",
            "tags": [],
            "label": "references",
            "description": [
              "{@inheritdoc SavedObjectReference}"
            ],
            "signature": [
              "SavedObjectReference",
              "[]"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.migrationVersion",
            "type": "Object",
            "tags": [],
            "label": "migrationVersion",
            "description": [
              "{@inheritdoc SavedObjectsMigrationVersion}"
            ],
            "signature": [
              "SavedObjectsMigrationVersion",
              " | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.coreMigrationVersion",
            "type": "string",
            "tags": [],
            "label": "coreMigrationVersion",
            "description": [
              "A semver value that is used when upgrading objects between Kibana versions."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nSpace(s) that this saved object exists in. This attribute is not used for \"global\" saved object types which are registered with\n`namespaceType: 'agnostic'`."
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.SavedObject.originId",
            "type": "string",
            "tags": [],
            "label": "originId",
            "description": [
              "\nThe ID of the saved object this originated from. This is set if this object's `id` was regenerated; that can happen during migration\nfrom a legacy single-namespace type, or during import. It is only set during migration or create operations. This is used during import\nto ensure that ID regeneration is deterministic, so saved objects will be overwritten if they are imported multiple times into a given\nspace."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/core/types/saved_objects.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-common.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "signature": [
          "ES_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FilterStateStore",
        "type": "Enum",
        "tags": [],
        "label": "FilterStateStore",
        "description": [
          "\n  Filter,\nAn enum to denote whether a filter is specific to an application's context or whether it should be applied globally."
        ],
        "signature": [
          "FilterStateStore"
        ],
        "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "signature": [
          "KBN_FIELD_TYPES"
        ],
        "path": "node_modules/@kbn/field-types/target_types/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-common.CSV_FORMULA_CHARS",
        "type": "Array",
        "tags": [],
        "label": "CSV_FORMULA_CHARS",
        "description": [],
        "signature": [
          "string[]"
        ],
        "path": "src/plugins/data/common/exports/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.CSV_MIME_TYPE",
        "type": "string",
        "tags": [],
        "label": "CSV_MIME_TYPE",
        "description": [],
        "signature": [
          "\"text/plain;charset=utf-8\""
        ],
        "path": "src/plugins/data/common/exports/export_csv.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.CustomFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "CustomFilter",
        "description": [],
        "signature": [
          "{ $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; meta: ",
          "FilterMeta",
          "; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DEFAULT_QUERY_LANGUAGE",
        "type": "string",
        "tags": [],
        "label": "DEFAULT_QUERY_LANGUAGE",
        "description": [],
        "signature": [
          "\"kuery\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.EsQueryConfig",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "EsQueryConfig",
        "description": [],
        "signature": [
          "KueryQueryOptions",
          " & { allowLeadingWildcards: boolean; queryStringOptions: ",
          "SerializableRecord",
          "; ignoreFilterIfFieldNotInIndex: boolean; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/server/lib/vis_data/request_processors/table/types.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.ExistsFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "ExistsFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "FilterMeta",
          "; exists?: { field: string; } | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.Filter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "Filter",
        "description": [],
        "signature": [
          "{ $state?: { store: ",
          "FilterStateStore",
          "; } | undefined; meta: ",
          "FilterMeta",
          "; query?: Record<string, any> | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/url_generator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/locator.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context/api/context.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/apps/main/services/discover_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/embeddable/visualize_embeddable.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/filter_utils.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/saved_dashboards/saved_dashboard.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/state/dashboard_state_slice.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_filter_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/diff_dashboard_state.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/lib/sync_dashboard_container_input.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/types.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/application/embeddable/dashboard_container.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/locator.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/embeddable/embeddable.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/state_management/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/field_item.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/indexpattern_datasource/fields_accordion.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/components/shared/filter_value_label/filter_value_label.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/store.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/store/t_grid/model.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/integrated/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/t_grid/standalone/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/public/components/hover_actions/utils.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/reducers/map/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/vector_source/vector_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/tooltips/join_tooltip_property.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_source/es_source.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/actions/map_actions.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_popover.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/tooltip_control/tooltip_control.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/mb_map/mb_map.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/toolbar_overlay/toolbar_overlay.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/classes/sources/es_geo_line_source/es_geo_line_source.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/connected_components/map_container/map_container.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/global_sync.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/url_state/app_state_manager.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/map_app.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/routes/map_page/map_app/index.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/locators.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/components/log_stream/log_stream_embeddable.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/canvas_plugin_src/functions/external/saved_lens.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/types.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/server/migrations/saved_object_migrations.ts"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "dashboardEnhanced",
            "path": "x-pack/plugins/dashboard_enhanced/public/services/drilldowns/embeddable_to_dashboard_drilldown/embeddable_to_dashboard_drilldown.tsx"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_context_menu_action.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/types/timeline/store.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/model.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/store/inputs/selectors.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/actions.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/add_filter_to_global_search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/events_viewer.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/events_viewer/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/alerts_viewer/alerts_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/events_by_dataset/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_histogram_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/signals_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/top_n.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/top_n/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/search_bar/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_kpis/alerts_count_panel/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/navigation/tab_navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map_helpers.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/components/embeddables/embedded_map.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/alerts_by_category/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/overview/components/event_counts/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/description_step/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/details/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/components/url_state/initialize_redux_by_url.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/search_or_filter.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/components/timeline/search_or_filter/index.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/variables/context_variables.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/url_drilldown.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/persistence/filter_references.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/selectors/map_selectors.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/common/detection_engine/get_query_filter.test.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/target/types/canvas_plugin_src/functions/external/saved_lens.d.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "urlDrilldown",
            "path": "x-pack/plugins/drilldowns/url_drilldown/public/lib/test/data.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/public/embeddable/embeddable.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/target/types/server/migrations/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/tooltips/tooltip_property.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/classes/sources/vector_source/vector_source.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/actions/map_actions.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/global_sync.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/routes/map_page/url_state/app_state_manager.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/timelines/store/timeline/epic.test.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/map_container/map_container.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/mb_map.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/toolbar_overlay/toolbar_overlay.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/url_state/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/tooltip_popover.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/common/components/search_bar/index.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/hosts/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/public/ueba/pages/details/types.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/draw_control/draw_filter_control/draw_filter_control.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_geometry_filter_form.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/feature_properties.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/target/types/public/connected_components/mb_map/tooltip_control/features_tooltip/features_tooltip.d.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/url_generator.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/control.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/vis_controller.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/helpers/timelion_request_handler.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/types.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/utils.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/public/application/utils/use/use_linked_search_updates.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_fn.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "visTypeVega",
            "path": "src/plugins/vis_types/vega/public/vega_request_handler.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/server/saved_objects/move_filters_to_query.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/angular/context_state.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "inputControlVis",
            "path": "src/plugins/input_control_vis/public/control/filter_manager/filter_manager.test.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "visualize",
            "path": "src/plugins/visualize/target/types/public/application/types.d.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "presentationUtil",
            "path": "src/plugins/presentation_util/public/components/input_controls/embeddable/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/target/types/public/application/angular/context/api/context.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/types.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/embeddable/saved_search_embeddable.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/descriptor_types/data_request_descriptor_types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/common/elasticsearch_util/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/types.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/embeddable/map_component.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/region_map/region_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_fn.ts"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "maps",
            "path": "x-pack/plugins/maps/public/legacy_visualizations/tile_map/tile_map_visualization.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_influencer_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/ui_actions/apply_entity_filters_action.tsx"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "infra",
            "path": "x-pack/plugins/infra/public/pages/logs/log_entry_rate/use_dataset_filtering.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "visTypeTimeseries",
            "path": "src/plugins/vis_type_timeseries/common/types/index.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/ueba/pages/navigation/types.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threat_mapping/build_threat_mapping_filter.mock.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/target/types/server/lib/detection_engine/signals/threshold/get_threshold_bucket_filters.d.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/helpers.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/rules/query_preview/reducer.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/default_config.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/network/pages/navigation/alerts_query_tab_body.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/hosts/pages/details/helpers.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FilterMeta",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "FilterMeta",
        "description": [],
        "signature": [
          "{ alias?: string | null | undefined; disabled?: boolean | undefined; negate?: boolean | undefined; controlledBy?: string | undefined; index?: string | undefined; isMultiIndex?: boolean | undefined; type?: string | undefined; key?: string | undefined; params?: any; value?: string | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.GetConfigFn",
        "type": "Type",
        "tags": [],
        "label": "GetConfigFn",
        "description": [
          "\nIf a service is being shared on both the client and the server, and\nthe client code requires synchronous access to uiSettings, both client\nand server should wrap the core uiSettings services in a function\nmatching this signature.\n\nThis matches the signature of the public `core.uiSettings.get`, and\nshould only be used in scenarios where async access to uiSettings is\nnot possible."
        ],
        "signature": [
          "<T = any>(key: string, defaultOverride?: T | undefined) => T"
        ],
        "path": "src/plugins/data/common/types.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.key",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.defaultOverride",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultOverride",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.IFieldSubType",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "IFieldSubType",
        "description": [],
        "signature": [
          "IFieldSubType"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          },
          {
            "plugin": "timelines",
            "path": "x-pack/plugins/timelines/common/types/timeline/columns/index.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "INDEX_PATTERN_SAVED_OBJECT_TYPE",
        "description": [],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KIBANA_USER_QUERY_LANGUAGE_KEY",
        "type": "string",
        "tags": [],
        "label": "KIBANA_USER_QUERY_LANGUAGE_KEY",
        "description": [],
        "signature": [
          "\"kibana.userQueryLanguage\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KueryNode",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "KueryNode",
        "description": [],
        "signature": [
          "KueryNode"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/common/types.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/types.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/attachments/index.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/types.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/get_search_session_page.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/target/types/server/authorization/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/target/types/server/search/session/types.d.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.MatchAllFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "MatchAllFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "MatchAllFilterMeta",
          "; match_all: ",
          "QueryDslMatchAllQuery",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.MissingFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "MissingFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "FilterMeta",
          "; missing: { field: string; }; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.PhraseFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "PhraseFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "PhraseFilterMeta",
          "; query: { match_phrase?: Record<string, string | ",
          "QueryDslMatchPhraseQuery",
          "> | undefined; match?: Record<string, string | number | boolean | ",
          "QueryDslMatchQuery",
          "> | undefined; }; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.PhrasesFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "PhrasesFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "PhrasesFilterMeta",
          "; query: ",
          "QueryDslQueryContainer",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.Query",
        "type": "Type",
        "tags": [],
        "label": "Query",
        "description": [],
        "signature": [
          "{ query: string | { [key: string]: any; }; language: string; }"
        ],
        "path": "node_modules/@kbn/es-query/target_types/filters/build_filters/types.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.RangeFilter",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilter",
        "description": [],
        "signature": [
          "Filter",
          " & { meta: ",
          "RangeFilterMeta",
          "; range: { [key: string]: ",
          "RangeFilterParams",
          "; }; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          },
          {
            "plugin": "discoverEnhanced",
            "path": "x-pack/plugins/discover_enhanced/public/actions/explore_data/explore_data_chart_action.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.RangeFilterMeta",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilterMeta",
        "description": [],
        "signature": [
          "FilterMeta",
          " & { params: ",
          "RangeFilterParams",
          "; field?: string | undefined; formattedValue?: string | undefined; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.RangeFilterParams",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "RangeFilterParams",
        "description": [],
        "signature": [
          "RangeFilterParams"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/components/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/components/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_renderer.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/timelion_vis_renderer.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/legacy/timelion_vis_component.tsx"
          },
          {
            "plugin": "visTypeTimelion",
            "path": "src/plugins/vis_type_timelion/public/legacy/timelion_vis_component.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.ValueSuggestionsMethod",
        "type": "Type",
        "tags": [],
        "label": "ValueSuggestionsMethod",
        "description": [],
        "signature": [
          "\"terms_enum\" | \"terms_agg\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-common.COMPARE_ALL_OPTIONS",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "COMPARE_ALL_OPTIONS",
        "description": [],
        "signature": [
          "FilterCompareOptions"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FILTERS",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "FILTERS",
        "description": [],
        "signature": [
          "typeof ",
          "FILTERS"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.nodeBuilder",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "nodeBuilder",
        "description": [],
        "signature": [
          "{ is: (fieldName: string, value: string | ",
          "KueryNode",
          ") => ",
          "FunctionTypeBuildNode",
          "; or: (nodes: ",
          "KueryNode",
          "[]) => ",
          "KueryNode",
          "; and: (nodes: ",
          "KueryNode",
          "[]) => ",
          "KueryNode",
          "; }"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [
          {
            "plugin": "actions",
            "path": "x-pack/plugins/actions/server/cleanup_failed_executions/find_and_cleanup_tasks.ts"
          },
          {
            "plugin": "actions",
            "path": "x-pack/plugins/actions/server/cleanup_failed_executions/find_and_cleanup_tasks.ts"
          },
          {
            "plugin": "actions",
            "path": "x-pack/plugins/actions/server/cleanup_failed_executions/find_and_cleanup_tasks.ts"
          },
          {
            "plugin": "actions",
            "path": "x-pack/plugins/actions/server/cleanup_failed_executions/find_and_cleanup_tasks.ts"
          },
          {
            "plugin": "actions",
            "path": "x-pack/plugins/actions/server/cleanup_failed_executions/find_and_cleanup_tasks.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "alerting",
            "path": "x-pack/plugins/alerting/server/rules_client/rules_client.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/cases/index.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/attachments/add.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/attachments/add.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/sub_cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/sub_cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/sub_cases/update.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/client/sub_cases/update.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/check_non_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/expire_persisted_sessions.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/authorization/utils.test.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/session_service.test.ts"
          },
          {
            "plugin": "dataEnhanced",
            "path": "x-pack/plugins/data_enhanced/server/search/session/session_service.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.nodeTypes",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "nodeTypes",
        "description": [],
        "signature": [
          "NodeTypes"
        ],
        "path": "src/plugins/data/common/es_query/index.ts",
        "deprecated": true,
        "removeBy": "8.1",
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly INDEXPATTERN_PLACEHOLDER: \"indexPattern:placeholder\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ]
  }
}