{
  "id": "automaticImportVTwo",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-server.AutomaticImportV2PluginSetupDependencies",
        "type": "Interface",
        "tags": [],
        "label": "AutomaticImportV2PluginSetupDependencies",
        "description": [],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginSetupDependencies.actions",
            "type": "Object",
            "tags": [],
            "label": "actions",
            "description": [],
            "signature": [
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.PluginSetupContract",
                "text": "PluginSetupContract"
              }
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginSetupDependencies.spaces",
            "type": "Object",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.SpacesPluginSetup",
                "text": "SpacesPluginSetup"
              },
              " | undefined"
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-server.AutomaticImportV2PluginStartDependencies",
        "type": "Interface",
        "tags": [],
        "label": "AutomaticImportV2PluginStartDependencies",
        "description": [],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginStartDependencies.spaces",
            "type": "Object",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.SpacesPluginStart",
                "text": "SpacesPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginStartDependencies.actions",
            "type": "Object",
            "tags": [],
            "label": "actions",
            "description": [],
            "signature": [
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.PluginStartContract",
                "text": "PluginStartContract"
              }
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginStartDependencies.inference",
            "type": "Object",
            "tags": [],
            "label": "inference",
            "description": [],
            "signature": [
              {
                "pluginId": "inference",
                "scope": "server",
                "docId": "kibInferencePluginApi",
                "section": "def-server.InferenceServerStart",
                "text": "InferenceServerStart"
              }
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginStartDependencies.licensing",
            "type": "Object",
            "tags": [],
            "label": "licensing",
            "description": [],
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.LicensingPluginStart",
                "text": "LicensingPluginStart"
              }
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "automaticImportVTwo",
            "id": "def-server.AutomaticImportV2PluginStartDependencies.security",
            "type": "Object",
            "tags": [],
            "label": "security",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/security-plugin-types-server",
                "scope": "server",
                "docId": "kibKbnSecurityPluginTypesServerPluginApi",
                "section": "def-server.SecurityPluginStart",
                "text": "SecurityPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "automaticImportVTwo",
      "id": "def-server.AutomaticImportV2PluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "AutomaticImportV2PluginSetup",
      "description": [
        "The plugin setup interface"
      ],
      "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginSetup.actions",
          "type": "Object",
          "tags": [],
          "label": "actions",
          "description": [],
          "signature": [
            {
              "pluginId": "actions",
              "scope": "server",
              "docId": "kibActionsPluginApi",
              "section": "def-server.PluginSetupContract",
              "text": "PluginSetupContract"
            }
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginSetup.spaces",
          "type": "Object",
          "tags": [],
          "label": "spaces",
          "description": [],
          "signature": [
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesPluginSetup",
              "text": "SpacesPluginSetup"
            },
            " | undefined"
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "automaticImportVTwo",
      "id": "def-server.AutomaticImportV2PluginStart",
      "type": "Interface",
      "tags": [],
      "label": "AutomaticImportV2PluginStart",
      "description": [
        "The plugin start interface"
      ],
      "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginStart.actions",
          "type": "Object",
          "tags": [],
          "label": "actions",
          "description": [],
          "signature": [
            {
              "pluginId": "actions",
              "scope": "server",
              "docId": "kibActionsPluginApi",
              "section": "def-server.PluginStartContract",
              "text": "PluginStartContract"
            }
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginStart.inference",
          "type": "Object",
          "tags": [],
          "label": "inference",
          "description": [],
          "signature": [
            {
              "pluginId": "inference",
              "scope": "server",
              "docId": "kibInferencePluginApi",
              "section": "def-server.InferenceServerStart",
              "text": "InferenceServerStart"
            }
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginStart.licensing",
          "type": "Object",
          "tags": [],
          "label": "licensing",
          "description": [],
          "signature": [
            {
              "pluginId": "licensing",
              "scope": "server",
              "docId": "kibLicensingPluginApi",
              "section": "def-server.LicensingPluginStart",
              "text": "LicensingPluginStart"
            }
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "automaticImportVTwo",
          "id": "def-server.AutomaticImportV2PluginStart.spaces",
          "type": "Object",
          "tags": [],
          "label": "spaces",
          "description": [],
          "signature": [
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesPluginStart",
              "text": "SpacesPluginStart"
            },
            " | undefined"
          ],
          "path": "x-pack/platform/plugins/shared/automatic_import_v2/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.CreateAutoImportIntegrationRequestBody",
        "type": "Type",
        "tags": [],
        "label": "CreateAutoImportIntegrationRequestBody",
        "description": [],
        "signature": [
          "{ title: string; description: string; dataStreams: { title: string; description: string; inputTypes: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[]; rawSamples: string[]; }[]; logo?: string | undefined; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.CreateAutoImportIntegrationResponse",
        "type": "Type",
        "tags": [],
        "label": "CreateAutoImportIntegrationResponse",
        "description": [],
        "signature": [
          "{ integration_id?: string | undefined; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.DataStreamSamples",
        "type": "Type",
        "tags": [],
        "label": "DataStreamSamples",
        "description": [
          "\nThe data stream samples object with its settings."
        ],
        "signature": [
          "{ createdBy: string; createdAt: string; integrationId: string; dataStreamId: string; logData: string[]; originalFilename: string; projectId?: string | undefined; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/index_samples.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.DeleteAutoImportIntegrationRequestParams",
        "type": "Type",
        "tags": [],
        "label": "DeleteAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "{ integration_id: string; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationRequestParams",
        "type": "Type",
        "tags": [],
        "label": "GetAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "{ integration_id: string; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationResponse",
        "type": "Type",
        "tags": [],
        "label": "GetAutoImportIntegrationResponse",
        "description": [],
        "signature": [
          "{ integration: { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationsResponse",
        "type": "Type",
        "tags": [],
        "label": "GetAutoImportIntegrationsResponse",
        "description": [],
        "signature": [
          "{ integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }[]"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.Integration",
        "type": "Type",
        "tags": [],
        "label": "Integration",
        "description": [
          "\nThe integration object with its settings."
        ],
        "signature": [
          "{ integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/common_attributes.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.UpdateAutoImportIntegrationRequestBody",
        "type": "Type",
        "tags": [],
        "label": "UpdateAutoImportIntegrationRequestBody",
        "description": [],
        "signature": [
          "{ description?: string | undefined; dataStreams?: { description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.UpdateAutoImportIntegrationRequestParams",
        "type": "Type",
        "tags": [],
        "label": "UpdateAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "{ integration_id: string; }"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.CreateAutoImportIntegrationRequestBody",
        "type": "Object",
        "tags": [],
        "label": "CreateAutoImportIntegrationRequestBody",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ title: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; description: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; logo: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; dataStreams: ",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ title: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; description: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; inputTypes: ",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodEnum",
          "<[\"aws-cloudwatch\", \"aws-s3\", \"azure-blob-storage\", \"azure-eventhub\", \"cloudfoundry\", \"filestream\", \"gcp-pubsub\", \"gcs\", \"http_endpoint\", \"journald\", \"kafka\", \"tcp\", \"udp\"]>; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }, { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }>, \"many\">; rawSamples: ",
          "ZodArray",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>, \"many\">; }, \"strict\", ",
          "ZodTypeAny",
          ", { title: string; description: string; inputTypes: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[]; rawSamples: string[]; }, { title: string; description: string; inputTypes: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[]; rawSamples: string[]; }>, \"many\">; }, \"strict\", ",
          "ZodTypeAny",
          ", { title: string; description: string; dataStreams: { title: string; description: string; inputTypes: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[]; rawSamples: string[]; }[]; logo?: string | undefined; }, { title: string; description: string; dataStreams: { title: string; description: string; inputTypes: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[]; rawSamples: string[]; }[]; logo?: string | undefined; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.CreateAutoImportIntegrationResponse",
        "type": "Object",
        "tags": [],
        "label": "CreateAutoImportIntegrationResponse",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration_id: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; }, \"strict\", ",
          "ZodTypeAny",
          ", { integration_id?: string | undefined; }, { integration_id?: string | undefined; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.DataStreamSamples",
        "type": "Object",
        "tags": [],
        "label": "DataStreamSamples",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integrationId: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; dataStreamId: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; projectId: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; logData: ",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">; } & { createdBy: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; createdAt: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; originalFilename: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { createdBy: string; createdAt: string; integrationId: string; dataStreamId: string; logData: string[]; originalFilename: string; projectId?: string | undefined; }, { createdBy: string; createdAt: string; integrationId: string; dataStreamId: string; logData: string[]; originalFilename: string; projectId?: string | undefined; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/index_samples.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.DeleteAutoImportIntegrationRequestParams",
        "type": "Object",
        "tags": [],
        "label": "DeleteAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { integration_id: string; }, { integration_id: string; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationRequestParams",
        "type": "Object",
        "tags": [],
        "label": "GetAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { integration_id: string; }, { integration_id: string; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationResponse",
        "type": "Object",
        "tags": [],
        "label": "GetAutoImportIntegrationResponse",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration: ",
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; dataStreams: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; inputTypes: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodEnum",
          "<[\"aws-cloudwatch\", \"aws-s3\", \"azure-blob-storage\", \"azure-eventhub\", \"cloudfoundry\", \"filestream\", \"gcp-pubsub\", \"gcs\", \"http_endpoint\", \"journald\", \"kafka\", \"tcp\", \"udp\"]>; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }, { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }>, \"many\">>; rawSamples: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">>; }, \"strip\", ",
          "ZodTypeAny",
          ", { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }, { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }>, \"many\">>; logo: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; }, \"strict\", ",
          "ZodTypeAny",
          ", { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }, { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { integration: { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }; }, { integration: { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.GetAutoImportIntegrationsResponse",
        "type": "Object",
        "tags": [],
        "label": "GetAutoImportIntegrationsResponse",
        "description": [],
        "signature": [
          "ZodArray",
          "<",
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; dataStreams: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; inputTypes: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodEnum",
          "<[\"aws-cloudwatch\", \"aws-s3\", \"azure-blob-storage\", \"azure-eventhub\", \"cloudfoundry\", \"filestream\", \"gcp-pubsub\", \"gcs\", \"http_endpoint\", \"journald\", \"kafka\", \"tcp\", \"udp\"]>; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }, { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }>, \"many\">>; rawSamples: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">>; }, \"strip\", ",
          "ZodTypeAny",
          ", { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }, { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }>, \"many\">>; logo: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; }, \"strict\", ",
          "ZodTypeAny",
          ", { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }, { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }>, \"many\">"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.Integration",
        "type": "Object",
        "tags": [],
        "label": "Integration",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; dataStreams: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; inputTypes: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodEnum",
          "<[\"aws-cloudwatch\", \"aws-s3\", \"azure-blob-storage\", \"azure-eventhub\", \"cloudfoundry\", \"filestream\", \"gcp-pubsub\", \"gcs\", \"http_endpoint\", \"journald\", \"kafka\", \"tcp\", \"udp\"]>; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }, { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }>, \"many\">>; rawSamples: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">>; }, \"strip\", ",
          "ZodTypeAny",
          ", { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }, { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }>, \"many\">>; logo: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; title: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; }, \"strict\", ",
          "ZodTypeAny",
          ", { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }, { integration_id: string; title?: string | undefined; description?: string | undefined; dataStreams?: { title?: string | undefined; description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/common_attributes.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.UpdateAutoImportIntegrationRequestBody",
        "type": "Object",
        "tags": [],
        "label": "UpdateAutoImportIntegrationRequestBody",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; logo: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; dataStreams: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ description: ",
          "ZodOptional",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>>; inputTypes: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodEnum",
          "<[\"aws-cloudwatch\", \"aws-s3\", \"azure-blob-storage\", \"azure-eventhub\", \"cloudfoundry\", \"filestream\", \"gcp-pubsub\", \"gcs\", \"http_endpoint\", \"journald\", \"kafka\", \"tcp\", \"udp\"]>; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }, { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }>, \"many\">>; rawSamples: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>, \"many\">>; }, \"strict\", ",
          "ZodTypeAny",
          ", { description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }, { description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }>, \"many\">>; }, \"strict\", ",
          "ZodTypeAny",
          ", { description?: string | undefined; dataStreams?: { description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }, { description?: string | undefined; dataStreams?: { description?: string | undefined; inputTypes?: { name: \"aws-cloudwatch\" | \"aws-s3\" | \"azure-blob-storage\" | \"azure-eventhub\" | \"cloudfoundry\" | \"filestream\" | \"gcp-pubsub\" | \"gcs\" | \"http_endpoint\" | \"journald\" | \"kafka\" | \"tcp\" | \"udp\"; }[] | undefined; rawSamples?: string[] | undefined; }[] | undefined; logo?: string | undefined; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "automaticImportVTwo",
        "id": "def-common.UpdateAutoImportIntegrationRequestParams",
        "type": "Object",
        "tags": [],
        "label": "UpdateAutoImportIntegrationRequestParams",
        "description": [],
        "signature": [
          "ZodObject",
          "<{ integration_id: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { integration_id: string; }, { integration_id: string; }>"
        ],
        "path": "x-pack/platform/plugins/shared/automatic_import_v2/common/model/api/integrations/integration.gen.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}