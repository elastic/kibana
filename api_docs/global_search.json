{
  "id": "globalSearch",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchBatchedResults",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchBatchedResults",
        "description": [
          "\nResponse returned from the {@link GlobalSearchPluginStart | global search service}'s `find` API\n"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchBatchedResults.results",
            "type": "Array",
            "tags": [],
            "label": "results",
            "description": [
              "\nResults for this batch"
            ],
            "signature": [
              "GlobalSearchResult",
              "[]"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchFindOptions",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchFindOptions",
        "description": [
          "\nOptions for the server-side {@link GlobalSearchPluginStart.find | find API}"
        ],
        "path": "x-pack/plugins/global_search/public/services/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchFindOptions.preference",
            "type": "string",
            "tags": [],
            "label": "preference",
            "description": [
              "\nA custom preference token associated with a search 'session' that should be used to get consistent scoring\nwhen performing calls to ES. Can also be used as a 'session' token for providers returning data from elsewhere\nthan an elasticsearch cluster.\n\nIf not specified, a random token will be generated and used. The token is stored in the sessionStorage and is guaranteed\nto be consistent during a given http 'session'"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/global_search/public/services/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchFindOptions.aborted$",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "\nOptional observable to notify that the associated `find` call should be canceled.\nIf/when provided and emitting, the result observable will be completed and no further result emission will be performed."
            ],
            "signature": [
              "Observable",
              "<void> | undefined"
            ],
            "path": "x-pack/plugins/global_search/public/services/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchFindParams",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchFindParams",
        "description": [
          "\nSearch parameters for the {@link GlobalSearchPluginStart.find | `find` API}\n"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchFindParams.term",
            "type": "string",
            "tags": [],
            "label": "term",
            "description": [
              "\nThe term to search for. Can be undefined if searching by filters."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchFindParams.types",
            "type": "Array",
            "tags": [],
            "label": "types",
            "description": [
              "\nThe types of results to search for."
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchFindParams.tags",
            "type": "Array",
            "tags": [],
            "label": "tags",
            "description": [
              "\nThe tag ids to filter search by."
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchProviderFindOptions",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchProviderFindOptions",
        "description": [
          "\nOptions provided to {@link GlobalSearchResultProvider | a result provider}'s `find` method."
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderFindOptions.preference",
            "type": "string",
            "tags": [],
            "label": "preference",
            "description": [
              "\nA custom preference token associated with a search 'session' that should be used to get consistent scoring\nwhen performing calls to ES. Can also be used as a 'session' token for providers returning data from elsewhere\nthan an elasticsearch cluster."
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderFindOptions.aborted$",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "\nObservable that emits once if and when the `find` call has been aborted, either manually by the consumer,\nor when the internal timeout period as been reached.\n\nWhen a `find` request is effectively aborted, the service will stop emitting any new result to the consumer anyway, but\nthis can (and should) be used to cancel any pending asynchronous task and complete the result observable from within the provider."
            ],
            "signature": [
              "Observable",
              "<void>"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderFindOptions.maxResults",
            "type": "number",
            "tags": [],
            "label": "maxResults",
            "description": [
              "\nThe total maximum number of results (including all batches, not per emission) that should be returned by the provider for a given `find` request.\nAny result emitted exceeding this quota will be ignored by the service and not emitted to the consumer."
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchProviderResult",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchProviderResult",
        "description": [
          "\nRepresentation of a result returned by a {@link GlobalSearchResultProvider | result provider}"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "an id that should be unique for an individual provider's results"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "the title/label of the result"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "the type of result"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.icon",
            "type": "string",
            "tags": [],
            "label": "icon",
            "description": [
              "an optional EUI icon name to associate with the search result"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.url",
            "type": "CompoundType",
            "tags": [],
            "label": "url",
            "description": [
              "\nThe url associated with this result.\nThis can be either an absolute url, a path relative to the incoming request's basePath, or a structure specifying if the basePath should be prepended.\n"
            ],
            "signature": [
              "string | { path: string; prependBasePath: boolean; }"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.score",
            "type": "number",
            "tags": [],
            "label": "score",
            "description": [
              "the score of the result, from 1 (lowest) to 100 (highest)"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchProviderResult.meta",
            "type": "Object",
            "tags": [],
            "label": "meta",
            "description": [
              "an optional record of metadata for this result"
            ],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.Serializable",
                "text": "Serializable"
              },
              "> | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchResultProvider",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchResultProvider",
        "description": [
          "\nGlobalSearch result provider, to be registered using the {@link GlobalSearchPluginSetup | global search API}"
        ],
        "path": "x-pack/plugins/global_search/public/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchResultProvider.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nid of the provider"
            ],
            "path": "x-pack/plugins/global_search/public/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchResultProvider.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nMethod that should return an observable used to emit new results from the provider.\n\nSee {@GlobalSearchProviderResult | the result type} for the expected result structure.\n"
            ],
            "signature": [
              "(search: ",
              "GlobalSearchFindParams",
              ", options: ",
              "GlobalSearchProviderFindOptions",
              ") => ",
              "Observable",
              "<",
              "GlobalSearchProviderResult",
              "[]>"
            ],
            "path": "x-pack/plugins/global_search/public/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "globalSearch",
                "id": "def-public.GlobalSearchResultProvider.find.$1",
                "type": "Object",
                "tags": [],
                "label": "search",
                "description": [],
                "signature": [
                  "GlobalSearchFindParams"
                ],
                "path": "x-pack/plugins/global_search/public/types.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "globalSearch",
                "id": "def-public.GlobalSearchResultProvider.find.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "GlobalSearchProviderFindOptions"
                ],
                "path": "x-pack/plugins/global_search/public/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-public.GlobalSearchResultProvider.getSearchableTypes",
            "type": "Function",
            "tags": [],
            "label": "getSearchableTypes",
            "description": [
              "\nMethod that should return all the possible {@link GlobalSearchProviderResult.type | type} of results that\nthis provider can return."
            ],
            "signature": [
              "() => string[] | Promise<string[]>"
            ],
            "path": "x-pack/plugins/global_search/public/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchProviderFindParams",
        "type": "Type",
        "tags": [],
        "label": "GlobalSearchProviderFindParams",
        "description": [],
        "signature": [
          "GlobalSearchFindParams"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchProviderResultUrl",
        "type": "Type",
        "tags": [],
        "label": "GlobalSearchProviderResultUrl",
        "description": [
          "\nStructured type for the {@link GlobalSearchProviderResult.url | provider result's url property}"
        ],
        "signature": [
          "string | { path: string; prependBasePath: boolean; }"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-public.GlobalSearchResult",
        "type": "Type",
        "tags": [],
        "label": "GlobalSearchResult",
        "description": [
          "\nRepresentation of a result returned by the {@link GlobalSearchPluginStart.find | `find` API}"
        ],
        "signature": [
          "Pick<",
          "GlobalSearchProviderResult",
          ", \"title\" | \"type\" | \"id\" | \"meta\" | \"icon\" | \"score\"> & { url: string; }"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "globalSearch",
      "id": "def-public.GlobalSearchPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "GlobalSearchPluginSetup",
      "description": [],
      "signature": [
        "{ registerResultProvider: (provider: ",
        {
          "pluginId": "globalSearch",
          "scope": "public",
          "docId": "kibGlobalSearchPluginApi",
          "section": "def-public.GlobalSearchResultProvider",
          "text": "GlobalSearchResultProvider"
        },
        ") => void; }"
      ],
      "path": "x-pack/plugins/global_search/public/types.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "globalSearch",
      "id": "def-public.GlobalSearchPluginStart",
      "type": "Type",
      "tags": [],
      "label": "GlobalSearchPluginStart",
      "description": [],
      "signature": [
        "{ find: (params: ",
        "GlobalSearchFindParams",
        ", options: ",
        {
          "pluginId": "globalSearch",
          "scope": "public",
          "docId": "kibGlobalSearchPluginApi",
          "section": "def-public.GlobalSearchFindOptions",
          "text": "GlobalSearchFindOptions"
        },
        ") => ",
        "Observable",
        "<",
        "GlobalSearchBatchedResults",
        ">; getSearchableTypes: () => Promise<string[]>; }"
      ],
      "path": "x-pack/plugins/global_search/public/types.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchBatchedResults",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchBatchedResults",
        "description": [
          "\nResponse returned from the {@link GlobalSearchPluginStart | global search service}'s `find` API\n"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchBatchedResults.results",
            "type": "Array",
            "tags": [],
            "label": "results",
            "description": [
              "\nResults for this batch"
            ],
            "signature": [
              "GlobalSearchResult",
              "[]"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchFindOptions",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchFindOptions",
        "description": [
          "\nOptions for the server-side {@link GlobalSearchPluginStart.find | find API}\n"
        ],
        "path": "x-pack/plugins/global_search/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchFindOptions.preference",
            "type": "string",
            "tags": [],
            "label": "preference",
            "description": [
              "\nA custom preference token associated with a search 'session' that should be used to get consistent scoring\nwhen performing calls to ES. Can also be used as a 'session' token for providers returning data from elsewhere\nthan an elasticsearch cluster.\nIf not specified, a random token will be generated and used."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchFindOptions.aborted$",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "\nOptional observable to notify that the associated `find` call should be canceled.\nIf/when provided and emitting, no further result emission will be performed and the result observable will be completed."
            ],
            "signature": [
              "Observable",
              "<void> | undefined"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchProviderContext",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchProviderContext",
        "description": [
          "\nContext passed to server-side {@GlobalSearchResultProvider | result provider}'s `find` method.\n"
        ],
        "path": "x-pack/plugins/global_search/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderContext.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [],
            "signature": [
              "{ savedObjects: { client: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"delete\" | \"find\" | \"bulkGet\" | \"bulkResolve\" | \"get\" | \"resolve\" | \"update\" | \"collectMultiNamespaceReferences\" | \"updateObjectsSpaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">; typeRegistry: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectTypeRegistry",
                "text": "SavedObjectTypeRegistry"
              },
              ", \"getType\" | \"getVisibleTypes\" | \"getAllTypes\" | \"getImportableAndExportableTypes\" | \"isNamespaceAgnostic\" | \"isSingleNamespace\" | \"isMultiNamespace\" | \"isShareable\" | \"isHidden\" | \"getIndex\" | \"isImportableAndExportable\">; }; uiSettings: { client: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              "; }; capabilities: ",
              "Observable",
              "<",
              "Capabilities",
              ">; }"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchProviderFindOptions",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchProviderFindOptions",
        "description": [
          "\nOptions provided to {@link GlobalSearchResultProvider | a result provider}'s `find` method."
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderFindOptions.preference",
            "type": "string",
            "tags": [],
            "label": "preference",
            "description": [
              "\nA custom preference token associated with a search 'session' that should be used to get consistent scoring\nwhen performing calls to ES. Can also be used as a 'session' token for providers returning data from elsewhere\nthan an elasticsearch cluster."
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderFindOptions.aborted$",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "\nObservable that emits once if and when the `find` call has been aborted, either manually by the consumer,\nor when the internal timeout period as been reached.\n\nWhen a `find` request is effectively aborted, the service will stop emitting any new result to the consumer anyway, but\nthis can (and should) be used to cancel any pending asynchronous task and complete the result observable from within the provider."
            ],
            "signature": [
              "Observable",
              "<void>"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderFindOptions.maxResults",
            "type": "number",
            "tags": [],
            "label": "maxResults",
            "description": [
              "\nThe total maximum number of results (including all batches, not per emission) that should be returned by the provider for a given `find` request.\nAny result emitted exceeding this quota will be ignored by the service and not emitted to the consumer."
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchProviderResult",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchProviderResult",
        "description": [
          "\nRepresentation of a result returned by a {@link GlobalSearchResultProvider | result provider}"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "an id that should be unique for an individual provider's results"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "the title/label of the result"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "the type of result"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.icon",
            "type": "string",
            "tags": [],
            "label": "icon",
            "description": [
              "an optional EUI icon name to associate with the search result"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.url",
            "type": "CompoundType",
            "tags": [],
            "label": "url",
            "description": [
              "\nThe url associated with this result.\nThis can be either an absolute url, a path relative to the incoming request's basePath, or a structure specifying if the basePath should be prepended.\n"
            ],
            "signature": [
              "string | { path: string; prependBasePath: boolean; }"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.score",
            "type": "number",
            "tags": [],
            "label": "score",
            "description": [
              "the score of the result, from 1 (lowest) to 100 (highest)"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchProviderResult.meta",
            "type": "Object",
            "tags": [],
            "label": "meta",
            "description": [
              "an optional record of metadata for this result"
            ],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.Serializable",
                "text": "Serializable"
              },
              "> | undefined"
            ],
            "path": "x-pack/plugins/global_search/common/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchResultProvider",
        "type": "Interface",
        "tags": [],
        "label": "GlobalSearchResultProvider",
        "description": [
          "\nGlobalSearch result provider, to be registered using the {@link GlobalSearchPluginSetup | global search API}\n"
        ],
        "path": "x-pack/plugins/global_search/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchResultProvider.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nid of the provider"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchResultProvider.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nMethod that should return an observable used to emit new results from the provider.\n\nSee {@GlobalSearchProviderResult | the result type} for the expected result structure.\n"
            ],
            "signature": [
              "(search: ",
              "GlobalSearchFindParams",
              ", options: ",
              "GlobalSearchProviderFindOptions",
              ", context: ",
              {
                "pluginId": "globalSearch",
                "scope": "server",
                "docId": "kibGlobalSearchPluginApi",
                "section": "def-server.GlobalSearchProviderContext",
                "text": "GlobalSearchProviderContext"
              },
              ") => ",
              "Observable",
              "<",
              "GlobalSearchProviderResult",
              "[]>"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.GlobalSearchResultProvider.find.$1",
                "type": "Object",
                "tags": [],
                "label": "search",
                "description": [],
                "signature": [
                  "GlobalSearchFindParams"
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.GlobalSearchResultProvider.find.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "GlobalSearchProviderFindOptions"
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.GlobalSearchResultProvider.find.$3",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  {
                    "pluginId": "globalSearch",
                    "scope": "server",
                    "docId": "kibGlobalSearchPluginApi",
                    "section": "def-server.GlobalSearchProviderContext",
                    "text": "GlobalSearchProviderContext"
                  }
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.GlobalSearchResultProvider.getSearchableTypes",
            "type": "Function",
            "tags": [],
            "label": "getSearchableTypes",
            "description": [
              "\nMethod that should return all the possible {@link GlobalSearchProviderResult.type | type} of results that\nthis provider can return."
            ],
            "signature": [
              "(context: ",
              {
                "pluginId": "globalSearch",
                "scope": "server",
                "docId": "kibGlobalSearchPluginApi",
                "section": "def-server.GlobalSearchProviderContext",
                "text": "GlobalSearchProviderContext"
              },
              ") => string[] | Promise<string[]>"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.GlobalSearchResultProvider.getSearchableTypes.$1",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  {
                    "pluginId": "globalSearch",
                    "scope": "server",
                    "docId": "kibGlobalSearchPluginApi",
                    "section": "def-server.GlobalSearchProviderContext",
                    "text": "GlobalSearchProviderContext"
                  }
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.RouteHandlerGlobalSearchContext",
        "type": "Interface",
        "tags": [],
        "label": "RouteHandlerGlobalSearchContext",
        "description": [
          "\nglobalSearch route handler context.\n"
        ],
        "path": "x-pack/plugins/global_search/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.RouteHandlerGlobalSearchContext.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nSee {@link SearchServiceStart.find | the find API}"
            ],
            "signature": [
              "(params: ",
              "GlobalSearchFindParams",
              ", options: ",
              {
                "pluginId": "globalSearch",
                "scope": "server",
                "docId": "kibGlobalSearchPluginApi",
                "section": "def-server.GlobalSearchFindOptions",
                "text": "GlobalSearchFindOptions"
              },
              ") => ",
              "Observable",
              "<",
              "GlobalSearchBatchedResults",
              ">"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.RouteHandlerGlobalSearchContext.find.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "GlobalSearchFindParams"
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "globalSearch",
                "id": "def-server.RouteHandlerGlobalSearchContext.find.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "globalSearch",
                    "scope": "server",
                    "docId": "kibGlobalSearchPluginApi",
                    "section": "def-server.GlobalSearchFindOptions",
                    "text": "GlobalSearchFindOptions"
                  }
                ],
                "path": "x-pack/plugins/global_search/server/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "globalSearch",
            "id": "def-server.RouteHandlerGlobalSearchContext.getSearchableTypes",
            "type": "Function",
            "tags": [],
            "label": "getSearchableTypes",
            "description": [
              "\nSee {@link SearchServiceStart.getSearchableTypes | the getSearchableTypes API}"
            ],
            "signature": [
              "() => Promise<string[]>"
            ],
            "path": "x-pack/plugins/global_search/server/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchProviderResultUrl",
        "type": "Type",
        "tags": [],
        "label": "GlobalSearchProviderResultUrl",
        "description": [
          "\nStructured type for the {@link GlobalSearchProviderResult.url | provider result's url property}"
        ],
        "signature": [
          "string | { path: string; prependBasePath: boolean; }"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "globalSearch",
        "id": "def-server.GlobalSearchResult",
        "type": "Type",
        "tags": [],
        "label": "GlobalSearchResult",
        "description": [
          "\nRepresentation of a result returned by the {@link GlobalSearchPluginStart.find | `find` API}"
        ],
        "signature": [
          "Pick<",
          "GlobalSearchProviderResult",
          ", \"title\" | \"type\" | \"id\" | \"meta\" | \"icon\" | \"score\"> & { url: string; }"
        ],
        "path": "x-pack/plugins/global_search/common/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "globalSearch",
      "id": "def-server.GlobalSearchPluginStart",
      "type": "Type",
      "tags": [],
      "label": "GlobalSearchPluginStart",
      "description": [],
      "signature": [
        "{ find: (params: ",
        "GlobalSearchFindParams",
        ", options: ",
        {
          "pluginId": "globalSearch",
          "scope": "server",
          "docId": "kibGlobalSearchPluginApi",
          "section": "def-server.GlobalSearchFindOptions",
          "text": "GlobalSearchFindOptions"
        },
        ", request: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCoreHttpPluginApi",
          "section": "def-server.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>) => ",
        "Observable",
        "<",
        "GlobalSearchBatchedResults",
        ">; getSearchableTypes: (request: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCoreHttpPluginApi",
          "section": "def-server.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>) => Promise<string[]>; }"
      ],
      "path": "x-pack/plugins/global_search/server/types.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    },
    "setup": {
      "parentPluginId": "globalSearch",
      "id": "def-server.GlobalSearchPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "GlobalSearchPluginSetup",
      "description": [],
      "signature": [
        "{ registerResultProvider: (provider: ",
        {
          "pluginId": "globalSearch",
          "scope": "server",
          "docId": "kibGlobalSearchPluginApi",
          "section": "def-server.GlobalSearchResultProvider",
          "text": "GlobalSearchResultProvider"
        },
        ") => void; }"
      ],
      "path": "x-pack/plugins/global_search/server/types.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}