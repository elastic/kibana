{
  "id": "@kbn/core-http-resources-server-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-http-resources-server-mocks",
        "id": "def-server.HttpResourcesMock",
        "type": "Type",
        "tags": [],
        "label": "HttpResourcesMock",
        "description": [],
        "signature": [
          "{ start: jest.MockInstance<void, [], unknown>; setup: jest.MockInstance<{ createRegistrar: (router: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.IRouter",
            "text": "IRouter"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-request-handler-context-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
            "section": "def-server.RequestHandlerContext",
            "text": "RequestHandlerContext"
          },
          ">) => ",
          {
            "pluginId": "@kbn/core-http-resources-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpResourcesServerPluginApi",
            "section": "def-server.HttpResources",
            "text": "HttpResources"
          },
          "; }, [deps: ",
          "SetupDeps",
          "], unknown>; stop: jest.MockInstance<void, [], unknown>; preboot: jest.MockInstance<{ createRegistrar: (router: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.IRouter",
            "text": "IRouter"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-request-handler-context-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
            "section": "def-server.RequestHandlerContext",
            "text": "RequestHandlerContext"
          },
          ">) => ",
          {
            "pluginId": "@kbn/core-http-resources-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpResourcesServerPluginApi",
            "section": "def-server.HttpResources",
            "text": "HttpResources"
          },
          "; }, [deps: ",
          "PrebootDeps",
          "], unknown>; } & ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.PublicMethodsOf",
            "text": "PublicMethodsOf"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-resources-server-internal",
            "scope": "server",
            "docId": "kibKbnCoreHttpResourcesServerInternalPluginApi",
            "section": "def-server.HttpResourcesService",
            "text": "HttpResourcesService"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/core-http-resources-server-mocks",
        "id": "def-server.httpResourcesMock",
        "type": "Object",
        "tags": [],
        "label": "httpResourcesMock",
        "description": [],
        "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-resources-server-mocks",
            "id": "def-server.httpResourcesMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-resources-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerMocksPluginApi",
                "section": "def-server.HttpResourcesMock",
                "text": "HttpResourcesMock"
              }
            ],
            "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-http-resources-server-mocks",
            "id": "def-server.httpResourcesMock.createRegistrar",
            "type": "Function",
            "tags": [],
            "label": "createRegistrar",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              ">"
            ],
            "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-http-resources-server-mocks",
            "id": "def-server.httpResourcesMock.createPrebootContract",
            "type": "Function",
            "tags": [],
            "label": "createPrebootContract",
            "description": [],
            "signature": [
              "() => { createRegistrar: jest.Mock<jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              ">, [], any>; }"
            ],
            "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-http-resources-server-mocks",
            "id": "def-server.httpResourcesMock.createSetupContract",
            "type": "Function",
            "tags": [],
            "label": "createSetupContract",
            "description": [],
            "signature": [
              "() => { createRegistrar: jest.Mock<jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              ">, [], any>; }"
            ],
            "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-http-resources-server-mocks",
            "id": "def-server.httpResourcesMock.createResponseFactory",
            "type": "Function",
            "tags": [],
            "label": "createResponseFactory",
            "description": [],
            "signature": [
              "() => { renderCoreApp: jest.MockInstance<Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>, [options?: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>); renderAnonymousCoreApp: jest.MockInstance<Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>, [options?: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>); renderHtml: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              "], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); renderJs: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              "], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); renderCss: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              "], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResourcesResponseOptions",
                "text": "HttpResourcesResponseOptions"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); ok: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined> | undefined], unknown> & (<T extends string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined = any>(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<T> | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<T>); created: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined> | undefined], unknown> & (<T extends string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined = any>(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<T> | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<T>); accepted: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined> | undefined], unknown> & (<T extends string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined = any>(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<T> | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<T>); noContent: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any> | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any> | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); multiStatus: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any> | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any> | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); redirected: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RedirectResponseOptions",
                "text": "RedirectResponseOptions"
              },
              "], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RedirectResponseOptions",
                "text": "RedirectResponseOptions"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); notModified: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any>], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              "<any>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); badRequest: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); unauthorized: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); forbidden: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); notFound: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); conflict: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); unprocessableContent: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined], unknown> & ((options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); customError: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseError",
                "text": "ResponseError"
              },
              ">], unknown> & ((options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseError",
                "text": "ResponseError"
              },
              ">) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); file: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.FileHttpResponseOptions",
                "text": "FileHttpResponseOptions"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>], unknown> & (<T extends string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>(options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.FileHttpResponseOptions",
                "text": "FileHttpResponseOptions"
              },
              "<T>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); custom: jest.MockInstance<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>, [options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>], unknown> & (<T extends string | Record<string, any> | Error | Buffer | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | undefined>(options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>); }"
            ],
            "path": "packages/core/http/core-http-resources-server-mocks/src/http_resources_server.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}