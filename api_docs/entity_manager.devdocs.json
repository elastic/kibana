{
  "id": "entityManager",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "entityManager",
        "id": "def-server.EntityManagerConfig",
        "type": "Type",
        "tags": [],
        "label": "EntityManagerConfig",
        "description": [],
        "signature": [
          "{}"
        ],
        "path": "x-pack/platform/plugins/shared/entity_manager/common/config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "entityManager",
        "id": "def-server.EntityManagerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "EntityManagerRouteRepository",
        "description": [],
        "signature": [
          "{ \"PATCH /internal/entities/definition/{id}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"PATCH /internal/entities/definition/{id}\", ",
          "ZodObject",
          "<{ path: ",
          "ZodObject",
          "<{ id: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; }, { id: string; }>; body: ",
          "ZodObject",
          "<{ type: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; filter: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodString",
          ">>; name: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; capabilities: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodNativeEnum",
          "<typeof ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          ">, \"many\">>>; description: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodString",
          ">>; metrics: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; metrics: ",
          "ZodArray",
          "<",
          "ZodDiscriminatedUnion",
          "<\"aggregation\", [",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodNativeEnum",
          "<typeof ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          ">; field: ",
          "ZodString",
          "; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; }, { name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; }>, ",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodLiteral",
          "<\"doc_count\">; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; aggregation: \"doc_count\"; filter?: string | undefined; }, { name: string; aggregation: \"doc_count\"; filter?: string | undefined; }>, ",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodLiteral",
          "<\"percentile\">; field: ",
          "ZodString",
          "; percentile: ",
          "ZodNumber",
          "; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; }, { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; }>]>, \"many\">; equation: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }, { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }>, \"many\">>>; indexPatterns: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">>; metadata: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodEffects",
          "<",
          "ZodEffects",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ source: ",
          "ZodString",
          "; destination: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; aggregation: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ type: ",
          "ZodLiteral",
          "<\"terms\">; limit: ",
          "ZodDefault",
          "<",
          "ZodNumber",
          ">; lookbackPeriod: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; }, { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; }>, ",
          "ZodObject",
          "<{ type: ",
          "ZodLiteral",
          "<\"top_value\">; sort: ",
          "ZodRecord",
          "<",
          "ZodString",
          ", ",
          "ZodUnion",
          "<[",
          "ZodLiteral",
          "<\"asc\">, ",
          "ZodLiteral",
          "<\"desc\">]>>; lookbackPeriod: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }, { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }>]>>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; destination?: string | undefined; }, { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, ",
          "ZodEffects",
          "<",
          "ZodString",
          ", { source: string; destination: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string>]>, { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, \"many\">>>; identityFields: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ field: ",
          "ZodString",
          "; optional: ",
          "ZodLiteral",
          "<false>; }, \"strip\", ",
          "ZodTypeAny",
          ", { field: string; optional: false; }, { field: string; optional: false; }>, ",
          "ZodEffects",
          "<",
          "ZodString",
          ", { field: string; optional: boolean; }, string>]>, \"many\">>; displayNameTemplate: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; staticFields: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodRecord",
          "<",
          "ZodString",
          ", ",
          "ZodString",
          ">>>; installedComponents: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ type: ",
          "ZodUnion",
          "<[",
          "ZodLiteral",
          "<\"transform\">, ",
          "ZodLiteral",
          "<\"ingest_pipeline\">, ",
          "ZodLiteral",
          "<\"template\">, ",
          "ZodLiteral",
          "<\"ilm_policy\">]>; id: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }, { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }>, \"many\">>>; } & { latest: ",
          "ZodOptional",
          "<",
          "ZodObject",
          "<{ timestampField: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; lookbackPeriod: ",
          "ZodOptional",
          "<",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<",
          "ZodString",
          ">>>; settings: ",
          "ZodOptional",
          "<",
          "ZodOptional",
          "<",
          "ZodObject",
          "<{ syncField: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; syncDelay: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; frequency: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; timeout: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; docsPerSecond: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; maxPageSearchSize: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; }, { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; }>>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; }, { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; }>>; version: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { version: string; type?: string | undefined; filter?: string | undefined; name?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; indexPatterns?: string[] | undefined; metadata?: ({ destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; })[] | undefined; identityFields?: ({ field: string; optional: false; } | { field: string; optional: boolean; })[] | undefined; displayNameTemplate?: string | undefined; staticFields?: Record<string, string> | undefined; latest?: { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; } | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }, { version: string; type?: string | undefined; filter?: string | undefined; name?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; indexPatterns?: string[] | undefined; metadata?: (string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; })[] | undefined; identityFields?: (string | { field: string; optional: false; })[] | undefined; displayNameTemplate?: string | undefined; staticFields?: Record<string, string> | undefined; latest?: { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; } | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { path: { id: string; }; body: { version: string; type?: string | undefined; filter?: string | undefined; name?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; indexPatterns?: string[] | undefined; metadata?: ({ destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; })[] | undefined; identityFields?: ({ field: string; optional: false; } | { field: string; optional: boolean; })[] | undefined; displayNameTemplate?: string | undefined; staticFields?: Record<string, string> | undefined; latest?: { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; } | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }; }, { path: { id: string; }; body: { version: string; type?: string | undefined; filter?: string | undefined; name?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; indexPatterns?: string[] | undefined; metadata?: (string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; })[] | undefined; identityFields?: (string | { field: string; optional: false; })[] | undefined; displayNameTemplate?: string | undefined; staticFields?: Record<string, string> | undefined; latest?: { settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; timestampField?: string | undefined; } | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"POST /internal/entities/definition/{id}/_reset\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /internal/entities/definition/{id}/_reset\", ",
          "ZodObject",
          "<{ path: ",
          "ZodObject",
          "<{ id: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; }, { id: string; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { path: { id: string; }; }, { path: { id: string; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"GET /internal/entities/definition/{id?}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/entities/definition/{id?}\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ page: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; perPage: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; includeState: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<KbnZodBooleanFromString>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { page?: number | undefined; perPage?: number | undefined; includeState?: any; }, { page?: number | undefined; perPage?: number | undefined; includeState?: any; }>; path: ",
          "ZodObject",
          "<{ id: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { id?: string | undefined; }, { id?: string | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { page?: number | undefined; perPage?: number | undefined; includeState?: any; }; path: { id?: string | undefined; }; }, { query: { page?: number | undefined; perPage?: number | undefined; includeState?: any; }; path: { id?: string | undefined; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"DELETE /internal/entities/definition/{id}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"DELETE /internal/entities/definition/{id}\", ",
          "ZodObject",
          "<{ path: ",
          "ZodObject",
          "<{ id: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; }, { id: string; }>; query: ",
          "ZodObject",
          "<{ deleteData: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<KbnZodBooleanFromString>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { deleteData?: any; }, { deleteData?: any; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { deleteData?: any; }; path: { id: string; }; }, { query: { deleteData?: any; }; path: { id: string; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"POST /internal/entities/definition\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /internal/entities/definition\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ installOnly: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<KbnZodBooleanFromString>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { installOnly?: any; }, { installOnly?: any; }>; body: ",
          "ZodObject",
          "<{ id: ",
          "ZodString",
          "; version: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", string, string>; name: ",
          "ZodString",
          "; description: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; type: ",
          "ZodString",
          "; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; indexPatterns: ",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">; identityFields: ",
          "ZodArray",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ field: ",
          "ZodString",
          "; optional: ",
          "ZodLiteral",
          "<false>; }, \"strip\", ",
          "ZodTypeAny",
          ", { field: string; optional: false; }, { field: string; optional: false; }>, ",
          "ZodEffects",
          "<",
          "ZodString",
          ", { field: string; optional: boolean; }, string>]>, \"many\">; capabilities: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodNativeEnum",
          "<typeof ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          ">, \"many\">>; displayNameTemplate: ",
          "ZodString",
          "; metadata: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodEffects",
          "<",
          "ZodEffects",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ source: ",
          "ZodString",
          "; destination: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; aggregation: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<",
          "ZodUnion",
          "<[",
          "ZodObject",
          "<{ type: ",
          "ZodLiteral",
          "<\"terms\">; limit: ",
          "ZodDefault",
          "<",
          "ZodNumber",
          ">; lookbackPeriod: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; }, { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; }>, ",
          "ZodObject",
          "<{ type: ",
          "ZodLiteral",
          "<\"top_value\">; sort: ",
          "ZodRecord",
          "<",
          "ZodString",
          ", ",
          "ZodUnion",
          "<[",
          "ZodLiteral",
          "<\"asc\">, ",
          "ZodLiteral",
          "<\"desc\">]>>; lookbackPeriod: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }, { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }>]>>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; destination?: string | undefined; }, { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, ",
          "ZodEffects",
          "<",
          "ZodString",
          ", { source: string; destination: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string>]>, { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; }, string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; }>, \"many\">>; metrics: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; metrics: ",
          "ZodArray",
          "<",
          "ZodDiscriminatedUnion",
          "<\"aggregation\", [",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodNativeEnum",
          "<typeof ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          ">; field: ",
          "ZodString",
          "; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; }, { name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; }>, ",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodLiteral",
          "<\"doc_count\">; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; aggregation: \"doc_count\"; filter?: string | undefined; }, { name: string; aggregation: \"doc_count\"; filter?: string | undefined; }>, ",
          "ZodObject",
          "<{ name: ",
          "ZodString",
          "; aggregation: ",
          "ZodLiteral",
          "<\"percentile\">; field: ",
          "ZodString",
          "; percentile: ",
          "ZodNumber",
          "; filter: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; }, { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; }>]>, \"many\">; equation: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }, { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }>, \"many\">>; staticFields: ",
          "ZodOptional",
          "<",
          "ZodRecord",
          "<",
          "ZodString",
          ", ",
          "ZodString",
          ">>; managed: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<",
          "ZodBoolean",
          ">>; latest: ",
          "ZodObject",
          "<{ timestampField: ",
          "ZodString",
          "; lookbackPeriod: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<",
          "ZodString",
          ">>; settings: ",
          "ZodOptional",
          "<",
          "ZodObject",
          "<{ syncField: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; syncDelay: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; frequency: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; timeout: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; docsPerSecond: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; maxPageSearchSize: ",
          "ZodOptional",
          "<",
          "ZodNumber",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; }, { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; }>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { lookbackPeriod: string; timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; }, { timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; }>; installStatus: ",
          "ZodOptional",
          "<",
          "ZodUnion",
          "<[",
          "ZodLiteral",
          "<\"installing\">, ",
          "ZodLiteral",
          "<\"upgrading\">, ",
          "ZodLiteral",
          "<\"installed\">, ",
          "ZodLiteral",
          "<\"failed\">]>>; installStartedAt: ",
          "ZodOptional",
          "<",
          "ZodString",
          ">; installedComponents: ",
          "ZodOptional",
          "<",
          "ZodArray",
          "<",
          "ZodObject",
          "<{ type: ",
          "ZodUnion",
          "<[",
          "ZodLiteral",
          "<\"transform\">, ",
          "ZodLiteral",
          "<\"ingest_pipeline\">, ",
          "ZodLiteral",
          "<\"template\">, ",
          "ZodLiteral",
          "<\"ilm_policy\">]>; id: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }, { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }>, \"many\">>; }, \"strip\", ",
          "ZodTypeAny",
          ", { id: string; type: string; version: string; name: string; managed: boolean; indexPatterns: string[]; identityFields: ({ field: string; optional: false; } | { field: string; optional: boolean; })[]; displayNameTemplate: string; latest: { lookbackPeriod: string; timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; }; filter?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; metadata?: ({ destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; })[] | undefined; staticFields?: Record<string, string> | undefined; installStatus?: \"failed\" | \"installing\" | \"upgrading\" | \"installed\" | undefined; installStartedAt?: string | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }, { id: string; type: string; version: string; name: string; indexPatterns: string[]; identityFields: (string | { field: string; optional: false; })[]; displayNameTemplate: string; latest: { timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; }; filter?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; managed?: boolean | undefined; metadata?: (string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; })[] | undefined; staticFields?: Record<string, string> | undefined; installStatus?: \"failed\" | \"installing\" | \"upgrading\" | \"installed\" | undefined; installStartedAt?: string | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { installOnly?: any; }; body: { id: string; type: string; version: string; name: string; managed: boolean; indexPatterns: string[]; identityFields: ({ field: string; optional: false; } | { field: string; optional: boolean; })[]; displayNameTemplate: string; latest: { lookbackPeriod: string; timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; }; filter?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; metadata?: ({ destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; }; } | { destination: string; source: string; aggregation: { type: \"terms\"; limit: number; lookbackPeriod: undefined; }; })[] | undefined; staticFields?: Record<string, string> | undefined; installStatus?: \"failed\" | \"installing\" | \"upgrading\" | \"installed\" | undefined; installStartedAt?: string | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }; }, { query: { installOnly?: any; }; body: { id: string; type: string; version: string; name: string; indexPatterns: string[]; identityFields: (string | { field: string; optional: false; })[]; displayNameTemplate: string; latest: { timestampField: string; settings?: { frequency?: string | undefined; timeout?: string | undefined; syncField?: string | undefined; syncDelay?: string | undefined; docsPerSecond?: number | undefined; maxPageSearchSize?: number | undefined; } | undefined; lookbackPeriod?: string | undefined; }; filter?: string | undefined; capabilities?: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.EntityStoreCapability",
            "text": "EntityStoreCapability"
          },
          "[] | undefined; description?: string | undefined; metrics?: { name: string; metrics: ({ name: string; field: string; aggregation: ",
          {
            "pluginId": "@kbn/entities-schema",
            "scope": "common",
            "docId": "kibKbnEntitiesSchemaPluginApi",
            "section": "def-common.BasicAggregations",
            "text": "BasicAggregations"
          },
          "; filter?: string | undefined; } | { name: string; aggregation: \"doc_count\"; filter?: string | undefined; } | { name: string; field: string; percentile: number; aggregation: \"percentile\"; filter?: string | undefined; })[]; equation: string; }[] | undefined; managed?: boolean | undefined; metadata?: (string | { source: string; destination?: string | undefined; aggregation?: { type: \"terms\"; limit?: number | undefined; lookbackPeriod?: string | undefined; } | { type: \"top_value\"; sort: Record<string, \"asc\" | \"desc\">; lookbackPeriod?: string | undefined; } | undefined; })[] | undefined; staticFields?: Record<string, string> | undefined; installStatus?: \"failed\" | \"installing\" | \"upgrading\" | \"installed\" | undefined; installStartedAt?: string | undefined; installedComponents?: { id: string; type: \"transform\" | \"template\" | \"ingest_pipeline\" | \"ilm_policy\"; }[] | undefined; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"DELETE /internal/entities/managed/enablement\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"DELETE /internal/entities/managed/enablement\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ deleteData: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<KbnZodBooleanFromString>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { deleteData?: any; }, { deleteData?: any; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { deleteData?: any; }; }, { query: { deleteData?: any; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"PUT /internal/entities/managed/enablement\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"PUT /internal/entities/managed/enablement\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ installOnly: ",
          "ZodDefault",
          "<",
          "ZodOptional",
          "<KbnZodBooleanFromString>>; }, \"strip\", ",
          "ZodTypeAny",
          ", { installOnly?: any; }, { installOnly?: any; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { installOnly?: any; }; }, { query: { installOnly?: any; }; }>, ",
          "EntityManagerRouteHandlerResources",
          ", ",
          "IKibanaResponse",
          "<any>, undefined>; \"GET /internal/entities/managed/enablement\": { endpoint: \"GET /internal/entities/managed/enablement\"; handler: ServerRouteHandler<",
          "EntityManagerRouteHandlerResources",
          ", undefined, ",
          "IKibanaResponse",
          "<any>>; security: ",
          "RouteSecurity",
          "; }; }"
        ],
        "path": "x-pack/platform/plugins/shared/entity_manager/server/routes/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "entityManager",
      "id": "def-server.EntityManagerServerPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "EntityManagerServerPluginSetup",
      "description": [],
      "path": "x-pack/platform/plugins/shared/entity_manager/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "entityManager",
      "id": "def-server.EntityManagerServerPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "EntityManagerServerPluginStart",
      "description": [],
      "path": "x-pack/platform/plugins/shared/entity_manager/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "entityManager",
          "id": "def-server.EntityManagerServerPluginStart.getScopedClient",
          "type": "Function",
          "tags": [],
          "label": "getScopedClient",
          "description": [],
          "signature": [
            "(options: { request: ",
            "KibanaRequest",
            "<unknown, unknown, unknown, any>; }) => Promise<",
            "EntityClient",
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/entity_manager/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "entityManager",
              "id": "def-server.EntityManagerServerPluginStart.getScopedClient.$1",
              "type": "Object",
              "tags": [],
              "label": "options",
              "description": [],
              "path": "x-pack/platform/plugins/shared/entity_manager/server/plugin.ts",
              "deprecated": false,
              "trackAdoption": false,
              "children": [
                {
                  "parentPluginId": "entityManager",
                  "id": "def-server.EntityManagerServerPluginStart.getScopedClient.$1.request",
                  "type": "Object",
                  "tags": [],
                  "label": "request",
                  "description": [],
                  "signature": [
                    "KibanaRequest",
                    "<unknown, unknown, unknown, any>"
                  ],
                  "path": "x-pack/platform/plugins/shared/entity_manager/server/plugin.ts",
                  "deprecated": false,
                  "trackAdoption": false
                }
              ]
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}