{
  "id": "sharedUX",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "sharedUX",
        "id": "def-public.ExitFullScreenButton",
        "type": "Function",
        "tags": [],
        "label": "ExitFullScreenButton",
        "description": [
          "\nA `ExitFullScreenButton` component that is wrapped by the `withSuspense` HOC.  This component can\nbe used directly by consumers and will load the `LazyExitFullScreenButton` component lazily with\na predefined fallback and error boundary."
        ],
        "signature": [
          "React.ForwardRefExoticComponent<",
          "Props",
          " & React.RefAttributes<{}>>"
        ],
        "path": "src/plugins/shared_ux/public/components/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "sharedUX",
            "id": "def-public.ExitFullScreenButton.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "sharedUX",
        "id": "def-public.LazyExitFullScreenButton",
        "type": "Function",
        "tags": [],
        "label": "LazyExitFullScreenButton",
        "description": [
          "\nThe Lazily-loaded `ExitFullScreenButton` component.  Consumers should use `React.Suspennse` or the\n`withSuspense` HOC to load this component."
        ],
        "signature": [
          "React.ExoticComponent<",
          "Props",
          "> & { readonly _result: ({ onExit, toggleChrome }: ",
          "Props",
          ") => JSX.Element; }"
        ],
        "path": "src/plugins/shared_ux/public/components/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "sharedUX",
            "id": "def-public.LazyExitFullScreenButton.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "sharedUX",
        "id": "def-public.LazyNoDataViewsPage",
        "type": "Function",
        "tags": [],
        "label": "LazyNoDataViewsPage",
        "description": [
          "\nThe Lazily-loaded `NoDataViews` component.  Consumers should use `React.Suspennse` or the\n`withSuspense` HOC to load this component."
        ],
        "signature": [
          "React.ExoticComponent<",
          "Props",
          "> & { readonly _result: ({ onDataViewCreated, dataViewsDocLink }: ",
          "Props",
          ") => JSX.Element; }"
        ],
        "path": "src/plugins/shared_ux/public/components/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "sharedUX",
            "id": "def-public.LazyNoDataViewsPage.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "sharedUX",
        "id": "def-public.NoDataViewsPage",
        "type": "Function",
        "tags": [],
        "label": "NoDataViewsPage",
        "description": [
          "\nA `NoDataViewsPage` component that is wrapped by the `withSuspense` HOC.  This component can\nbe used directly by consumers and will load the `LazyNoDataViewsPage` component lazily with\na predefined fallback and error boundary."
        ],
        "signature": [
          "React.ForwardRefExoticComponent<",
          "Props",
          " & React.RefAttributes<{}>>"
        ],
        "path": "src/plugins/shared_ux/public/components/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "sharedUX",
            "id": "def-public.NoDataViewsPage.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "start": {
      "parentPluginId": "sharedUX",
      "id": "def-public.SharedUXPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SharedUXPluginStart",
      "description": [
        "\nThe Shared UX plugin public contract, containing prewired components, services, and\nother constructs useful to consumers."
      ],
      "path": "src/plugins/shared_ux/public/types/index.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "sharedUX",
          "id": "def-public.SharedUXPluginStart.ServicesContext",
          "type": "Function",
          "tags": [],
          "label": "ServicesContext",
          "description": [
            "\nA React component that provides a pre-wired `React.Context` which connects components to Shared UX services."
          ],
          "signature": [
            "React.FunctionComponent<{}>"
          ],
          "path": "src/plugins/shared_ux/public/types/index.ts",
          "deprecated": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "sharedUX",
              "id": "def-public.SharedUXPluginStart.ServicesContext.$1",
              "type": "CompoundType",
              "tags": [],
              "label": "props",
              "description": [],
              "signature": [
                "P & { children?: React.ReactNode; }"
              ],
              "path": "node_modules/@types/react/index.d.ts",
              "deprecated": false
            },
            {
              "parentPluginId": "sharedUX",
              "id": "def-public.SharedUXPluginStart.ServicesContext.$2",
              "type": "Any",
              "tags": [],
              "label": "context",
              "description": [],
              "signature": [
                "any"
              ],
              "path": "node_modules/@types/react/index.d.ts",
              "deprecated": false
            }
          ]
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "sharedUX",
        "id": "def-common.PLUGIN_ID",
        "type": "string",
        "tags": [],
        "label": "PLUGIN_ID",
        "description": [
          "The ID of the Shared UX plugin."
        ],
        "signature": [
          "\"sharedUX\""
        ],
        "path": "src/plugins/shared_ux/common/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "sharedUX",
        "id": "def-common.PLUGIN_NAME",
        "type": "string",
        "tags": [],
        "label": "PLUGIN_NAME",
        "description": [
          "The name of the Shared UX plugin."
        ],
        "signature": [
          "\"sharedUX\""
        ],
        "path": "src/plugins/shared_ux/common/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}