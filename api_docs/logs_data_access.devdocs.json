{
  "id": "logsDataAccess",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "logsDataAccess",
        "id": "def-public.LogSourcesProvider",
        "type": "Function",
        "tags": [],
        "label": "LogSourcesProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<React.PropsWithChildren<{ logSourcesService: ",
          "LogSourcesService",
          "; }>>"
        ],
        "path": "x-pack/plugins/observability_solution/logs_data_access/public/hooks/use_log_sources.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-public.LogSourcesProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-public.LogSourcesProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsDataAccess",
        "id": "def-public.LogSourcesSettingSynchronisationInfo",
        "type": "Function",
        "tags": [],
        "label": "LogSourcesSettingSynchronisationInfo",
        "description": [],
        "signature": [
          "({ isLoading, logSourcesValue, getUrlForApp, title }: React.PropsWithChildren<{ isLoading: boolean; logSourcesValue: string; getUrlForApp: (appId: string, options?: { path?: string | undefined; absolute?: boolean | undefined; deepLinkId?: string | undefined; } | undefined) => string; title?: string | undefined; }>) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/logs_data_access/public/components/logs_sources_setting.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-public.LogSourcesSettingSynchronisationInfo.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ isLoading, logSourcesValue, getUrlForApp, title }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<{ isLoading: boolean; logSourcesValue: string; getUrlForApp: (appId: string, options?: { path?: string | undefined; absolute?: boolean | undefined; deepLinkId?: string | undefined; } | undefined) => string; title?: string | undefined; }>"
            ],
            "path": "x-pack/plugins/observability_solution/logs_data_access/public/components/logs_sources_setting.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsDataAccess",
        "id": "def-public.useLogSourcesContext",
        "type": "Function",
        "tags": [],
        "label": "useLogSourcesContext",
        "description": [],
        "signature": [
          "() => { isUninitialized: boolean; isLoadingLogSources: boolean; hasFailedLoadingLogSources: boolean; logSourcesError: Error | undefined; logSources: ",
          "LogSource",
          "[]; combinedIndices: string; }"
        ],
        "path": "x-pack/plugins/observability_solution/logs_data_access/public/hooks/use_log_sources.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "logsDataAccess",
      "id": "def-public.LogsDataAccessPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "LogsDataAccessPluginSetup",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "x-pack/plugins/observability_solution/logs_data_access/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "logsDataAccess",
      "id": "def-public.LogsDataAccessPluginStart",
      "type": "Type",
      "tags": [],
      "label": "LogsDataAccessPluginStart",
      "description": [],
      "signature": [
        "{ services: { logSourcesService: ",
        "LogSourcesService",
        "; }; }"
      ],
      "path": "x-pack/plugins/observability_solution/logs_data_access/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "logsDataAccess",
        "id": "def-server.LogsRatesMetrics",
        "type": "Interface",
        "tags": [],
        "label": "LogsRatesMetrics",
        "description": [],
        "path": "x-pack/plugins/observability_solution/logs_data_access/server/services/get_logs_rates_service/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-server.LogsRatesMetrics.logRatePerMinute",
            "type": "number",
            "tags": [],
            "label": "logRatePerMinute",
            "description": [],
            "path": "x-pack/plugins/observability_solution/logs_data_access/server/services/get_logs_rates_service/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-server.LogsRatesMetrics.logErrorRate",
            "type": "CompoundType",
            "tags": [],
            "label": "logErrorRate",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability_solution/logs_data_access/server/services/get_logs_rates_service/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsDataAccess",
        "id": "def-server.LogsRatesServiceReturnType",
        "type": "Interface",
        "tags": [],
        "label": "LogsRatesServiceReturnType",
        "description": [],
        "path": "x-pack/plugins/observability_solution/logs_data_access/server/services/get_logs_rates_service/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsDataAccess",
            "id": "def-server.LogsRatesServiceReturnType.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[serviceName: string]: LogsRatesMetrics",
            "description": [],
            "signature": [
              "[serviceName: string]:  ",
              {
                "pluginId": "logsDataAccess",
                "scope": "server",
                "docId": "kibLogsDataAccessPluginApi",
                "section": "def-server.LogsRatesMetrics",
                "text": "LogsRatesMetrics"
              }
            ],
            "path": "x-pack/plugins/observability_solution/logs_data_access/server/services/get_logs_rates_service/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "logsDataAccess",
      "id": "def-server.LogsDataAccessPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "LogsDataAccessPluginSetup",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "x-pack/plugins/observability_solution/logs_data_access/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "logsDataAccess",
      "id": "def-server.LogsDataAccessPluginStart",
      "type": "Type",
      "tags": [],
      "label": "LogsDataAccessPluginStart",
      "description": [],
      "signature": [
        "{ services: { getLogsRatesService: ({ esClient, identifyingMetadata, serviceNames, timeFrom, timeTo, }: ",
        "LogsRatesServiceParams",
        ") => Promise<",
        {
          "pluginId": "logsDataAccess",
          "scope": "server",
          "docId": "kibLogsDataAccessPluginApi",
          "section": "def-server.LogsRatesServiceReturnType",
          "text": "LogsRatesServiceReturnType"
        },
        ">; getLogsRateTimeseries: ({ esClient, identifyingMetadata, serviceNames, timeFrom, timeTo, kuery, serviceEnvironmentQuery, }: ",
        "LogsRateTimeseries",
        ") => Promise<",
        "LogsRateTimeseriesReturnType",
        ">; getLogsErrorRateTimeseries: ({ esClient, identifyingMetadata, serviceNames, timeFrom, timeTo, kuery, serviceEnvironmentQuery, }: ",
        "LogsErrorRateTimeseries",
        ") => Promise<",
        "LogsErrorRateTimeseriesReturnType",
        ">; logSourcesServiceFactory: { getLogSourcesService(savedObjectsClient: ",
        {
          "pluginId": "@kbn/core-saved-objects-api-server",
          "scope": "server",
          "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
          "section": "def-server.SavedObjectsClientContract",
          "text": "SavedObjectsClientContract"
        },
        "): Promise<",
        "LogSourcesService",
        ">; getScopedLogSourcesService(request: ",
        {
          "pluginId": "@kbn/core-http-server",
          "scope": "server",
          "docId": "kibKbnCoreHttpServerPluginApi",
          "section": "def-server.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>): Promise<",
        "LogSourcesService",
        ">; }; }; }"
      ],
      "path": "x-pack/plugins/observability_solution/logs_data_access/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}