{
  "id": "monitoring",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "monitoring",
        "id": "def-server.IBulkUploader",
        "type": "Interface",
        "tags": [],
        "label": "IBulkUploader",
        "description": [],
        "path": "x-pack/plugins/monitoring/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "monitoring",
            "id": "def-server.IBulkUploader.getKibanaStats",
            "type": "Function",
            "tags": [],
            "label": "getKibanaStats",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "x-pack/plugins/monitoring/server/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "monitoring",
            "id": "def-server.IBulkUploader.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/monitoring/server/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "monitoring",
            "id": "def-server.IBulkUploader.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(esClient: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              },
              ") => void"
            ],
            "path": "x-pack/plugins/monitoring/server/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "monitoring",
                "id": "def-server.IBulkUploader.start.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "esClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.ElasticsearchClient",
                    "text": "ElasticsearchClient"
                  }
                ],
                "path": "x-pack/plugins/monitoring/server/types.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "monitoring",
            "id": "def-server.IBulkUploader.handleNotEnabled",
            "type": "Function",
            "tags": [],
            "label": "handleNotEnabled",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/monitoring/server/types.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "monitoring",
        "id": "def-server.KibanaSettingsCollector",
        "type": "Type",
        "tags": [],
        "label": "KibanaSettingsCollector",
        "description": [],
        "signature": [
          {
            "pluginId": "usageCollection",
            "scope": "server",
            "docId": "kibUsageCollectionPluginApi",
            "section": "def-server.ICollector",
            "text": "ICollector"
          },
          "<EmailSettingData | undefined, {}> & ",
          "KibanaSettingsCollectorExtraOptions"
        ],
        "path": "x-pack/plugins/monitoring/server/kibana_monitoring/collectors/get_settings_collector.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "monitoring",
        "id": "def-server.MonitoringConfig",
        "type": "Type",
        "tags": [],
        "label": "MonitoringConfig",
        "description": [],
        "signature": [
          "{ ui: { elasticsearch: ",
          "MonitoringElasticsearchConfig",
          "; enabled: boolean; container: Readonly<{} & { logstash: Readonly<{} & { enabled: boolean; }>; apm: Readonly<{} & { enabled: boolean; }>; elasticsearch: Readonly<{} & { enabled: boolean; }>; }>; logs: Readonly<{} & { index: string; }>; metricbeat: Readonly<{} & { index: string; }>; debug_mode: boolean; debug_log_path: string; ccs: Readonly<{} & { enabled: boolean; }>; max_bucket_size: number; min_interval_seconds: number; show_license_expiration: boolean; }; kibana: Readonly<{} & { collection: Readonly<{} & { enabled: boolean; interval: number; }>; }>; licensing: Readonly<{} & { api_polling_frequency: moment.Duration; }>; agent: Readonly<{} & { interval: string; }>; cluster_alerts: Readonly<{} & { enabled: boolean; allowedSpaces: string[]; email_notifications: Readonly<{} & { enabled: boolean; email_address: string; }>; }>; tests: Readonly<{} & { cloud_detector: Readonly<{} & { enabled: boolean; }>; }>; }"
        ],
        "path": "x-pack/plugins/monitoring/server/config.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "monitoring",
      "id": "def-server.MonitoringPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "MonitoringPluginSetup",
      "description": [],
      "path": "x-pack/plugins/monitoring/server/types.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "monitoring",
          "id": "def-server.MonitoringPluginSetup.getKibanaStats",
          "type": "Function",
          "tags": [],
          "label": "getKibanaStats",
          "description": [],
          "signature": [
            "() => any"
          ],
          "path": "x-pack/plugins/monitoring/server/types.ts",
          "deprecated": false,
          "returnComment": [],
          "children": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}