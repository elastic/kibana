{
  "id": "licenseApiGuard",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "licenseApiGuard",
        "id": "def-server.License",
        "type": "Class",
        "tags": [],
        "label": "License",
        "description": [],
        "path": "x-pack/plugins/license_api_guard/server/license.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "({ pluginName, logger }: SetupSettings) => void"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "{ pluginName, logger }",
                "description": [],
                "signature": [
                  "SetupSettings"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({ pluginId, minimumLicenseType, licensing }: StartSettings) => void"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{ pluginId, minimumLicenseType, licensing }",
                "description": [],
                "signature": [
                  "StartSettings"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.guardApiRoute",
            "type": "Function",
            "tags": [],
            "label": "guardApiRoute",
            "description": [],
            "signature": [
              "<Context extends ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", Params, Query, Body>(handler: ",
              "RequestHandler",
              "<Params, Query, Body, Context, any, ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => (ctx: Context, request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<Params, Query, Body, any>, response: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any> | Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.guardApiRoute.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [],
                "signature": [
                  "RequestHandler",
                  "<Params, Query, Body, Context, any, ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ">"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.isEsSecurityEnabled",
            "type": "boolean",
            "tags": [],
            "label": "isEsSecurityEnabled",
            "description": [],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}