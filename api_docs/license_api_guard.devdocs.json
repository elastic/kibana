{
  "id": "licenseApiGuard",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "licenseApiGuard",
        "id": "def-server.License",
        "type": "Class",
        "tags": [],
        "label": "License",
        "description": [],
        "path": "x-pack/plugins/license_api_guard/server/license.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "({ pluginName, logger }: SetupSettings) => void"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "{ pluginName, logger }",
                "description": [],
                "signature": [
                  "SetupSettings"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({ pluginId, minimumLicenseType, licensing }: StartSettings) => void"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{ pluginId, minimumLicenseType, licensing }",
                "description": [],
                "signature": [
                  "StartSettings"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.guardApiRoute",
            "type": "Function",
            "tags": [],
            "label": "guardApiRoute",
            "description": [],
            "signature": [
              "<Context extends ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", Params, Query, Body>(handler: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandler",
                "text": "RequestHandler"
              },
              "<Params, Query, Body, Context, any, { custom: <T extends string | Record<string, any> | Error | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | Buffer | undefined>(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              "KibanaResponse",
              "<T>; badRequest: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; unauthorized: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; forbidden: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; notFound: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; conflict: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; customError: (options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<",
              "Stream",
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseError",
                "text": "ResponseError"
              },
              " | Buffer>) => ",
              "KibanaResponse",
              "<string | Error | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | Buffer>; redirected: (options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RedirectResponseOptions",
                "text": "RedirectResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; ok: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; accepted: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; noContent: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<undefined>; }>) => (ctx: Context, request: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<Params, Query, Body, any>, response: { custom: <T extends string | Record<string, any> | Error | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | Buffer | undefined>(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              "KibanaResponse",
              "<T>; badRequest: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; unauthorized: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; forbidden: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; notFound: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; conflict: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Error | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; }>; customError: (options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<",
              "Stream",
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseError",
                "text": "ResponseError"
              },
              " | Buffer>) => ",
              "KibanaResponse",
              "<string | Error | ",
              "Stream",
              " | { message: string | Error; attributes?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ResponseErrorAttributes",
                "text": "ResponseErrorAttributes"
              },
              " | undefined; } | Buffer>; redirected: (options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RedirectResponseOptions",
                "text": "RedirectResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; ok: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; accepted: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<string | Record<string, any> | ",
              "Stream",
              " | Buffer>; noContent: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              "KibanaResponse",
              "<undefined>; }) => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any> | Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "licenseApiGuard",
                "id": "def-server.License.guardApiRoute.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.RequestHandler",
                    "text": "RequestHandler"
                  },
                  "<Params, Query, Body, Context, any, { custom: <T extends string | Record<string, any> | Error | ",
                  "Stream",
                  " | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; } | Buffer | undefined>(options: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.CustomHttpResponseOptions",
                    "text": "CustomHttpResponseOptions"
                  },
                  "<T>) => ",
                  "KibanaResponse",
                  "<T>; badRequest: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Error | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; }>; unauthorized: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Error | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; }>; forbidden: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Error | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; }>; notFound: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Error | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; }>; conflict: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Error | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; }>; customError: (options: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.CustomHttpResponseOptions",
                    "text": "CustomHttpResponseOptions"
                  },
                  "<",
                  "Stream",
                  " | ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseError",
                    "text": "ResponseError"
                  },
                  " | Buffer>) => ",
                  "KibanaResponse",
                  "<string | Error | ",
                  "Stream",
                  " | { message: string | Error; attributes?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.ResponseErrorAttributes",
                    "text": "ResponseErrorAttributes"
                  },
                  " | undefined; } | Buffer>; redirected: (options: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.RedirectResponseOptions",
                    "text": "RedirectResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Record<string, any> | ",
                  "Stream",
                  " | Buffer>; ok: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Record<string, any> | ",
                  "Stream",
                  " | Buffer>; accepted: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<string | Record<string, any> | ",
                  "Stream",
                  " | Buffer>; noContent: (options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  ") => ",
                  "KibanaResponse",
                  "<undefined>; }>"
                ],
                "path": "x-pack/plugins/license_api_guard/server/license.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licenseApiGuard",
            "id": "def-server.License.isEsSecurityEnabled",
            "type": "boolean",
            "tags": [],
            "label": "isEsSecurityEnabled",
            "description": [],
            "path": "x-pack/plugins/license_api_guard/server/license.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}