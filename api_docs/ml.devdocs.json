{
  "id": "ml",
  "client": {
    "classes": [
      {
        "parentPluginId": "ml",
        "id": "def-public.MlLocatorDefinition",
        "type": "Class",
        "tags": [],
        "label": "MlLocatorDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "ml",
            "scope": "public",
            "docId": "kibMlPluginApi",
            "section": "def-public.MlLocatorDefinition",
            "text": "MlLocatorDefinition"
          },
          " implements ",
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorDefinition",
            "text": "LocatorDefinition"
          },
          "<",
          "MlLocatorParams",
          ">"
        ],
        "path": "x-pack/plugins/ml/public/locator/ml_locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.MlLocatorDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "signature": [
              "\"ML_APP_LOCATOR\""
            ],
            "path": "x-pack/plugins/ml/public/locator/ml_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlLocatorDefinition.getLocation",
            "type": "Function",
            "tags": [],
            "label": "getLocation",
            "description": [],
            "signature": [
              "(params: ",
              "MlLocatorParams",
              ") => Promise<",
              "KibanaLocation",
              "<object>>"
            ],
            "path": "x-pack/plugins/ml/public/locator/ml_locator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "ml",
                "id": "def-public.MlLocatorDefinition.getLocation.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "MlLocatorParams"
                ],
                "path": "x-pack/plugins/ml/public/locator/ml_locator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "ml",
        "id": "def-public.getMlSharedImports",
        "type": "Function",
        "tags": [],
        "label": "getMlSharedImports",
        "description": [],
        "signature": [
          "() => Promise<typeof ",
          "x-pack/plugins/ml/public/shared",
          ">"
        ],
        "path": "x-pack/plugins/ml/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.MLJobsAwaitingNodeWarning",
        "type": "Function",
        "tags": [],
        "label": "MLJobsAwaitingNodeWarning",
        "description": [],
        "signature": [
          "({ jobIds }: React.PropsWithChildren<Props>) => JSX.Element"
        ],
        "path": "x-pack/plugins/ml/public/application/components/jobs_awaiting_node_warning/new_job_awaiting_node_shared/lazy_loader.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.MLJobsAwaitingNodeWarning.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ jobIds }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<Props>"
            ],
            "path": "x-pack/plugins/ml/public/application/components/jobs_awaiting_node_warning/new_job_awaiting_node_shared/lazy_loader.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.MlNodeAvailableWarningShared",
        "type": "Function",
        "tags": [],
        "label": "MlNodeAvailableWarningShared",
        "description": [],
        "signature": [
          "({ nodeAvailableCallback, size }: React.PropsWithChildren<Props>) => JSX.Element | null"
        ],
        "path": "x-pack/plugins/ml/public/application/components/node_available_warning/node_available_warning_shared.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.MlNodeAvailableWarningShared.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ nodeAvailableCallback, size }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<Props>"
            ],
            "path": "x-pack/plugins/ml/public/application/components/node_available_warning/node_available_warning_shared.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.useMlHref",
        "type": "Function",
        "tags": [],
        "label": "useMlHref",
        "description": [
          "\nProvides a URL to ML plugin page\nTODO remove basePath parameter"
        ],
        "signature": [
          "(ml: { locator?: ",
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<",
          "MlLocatorParams",
          "> | undefined; elasticModels?: ",
          "ElasticModels",
          " | undefined; } | undefined, basePath: string | undefined, params: ",
          "MlLocatorParams",
          ", dependencies?: React.DependencyList | undefined) => string"
        ],
        "path": "x-pack/plugins/ml/public/locator/use_ml_href.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.useMlHref.$1",
            "type": "Object",
            "tags": [],
            "label": "ml",
            "description": [],
            "signature": [
              "{ locator?: ",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<",
              "MlLocatorParams",
              "> | undefined; elasticModels?: ",
              "ElasticModels",
              " | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/ml/public/locator/use_ml_href.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.useMlHref.$2",
            "type": "string",
            "tags": [],
            "label": "basePath",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/public/locator/use_ml_href.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.useMlHref.$3",
            "type": "CompoundType",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "MlLocatorParams"
            ],
            "path": "x-pack/plugins/ml/public/locator/use_ml_href.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.useMlHref.$4",
            "type": "Object",
            "tags": [],
            "label": "dependencies",
            "description": [],
            "signature": [
              "React.DependencyList | undefined"
            ],
            "path": "x-pack/plugins/ml/public/locator/use_ml_href.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.useMlNodeAvailableCheck",
        "type": "Function",
        "tags": [],
        "label": "useMlNodeAvailableCheck",
        "description": [],
        "signature": [
          "() => { mlNodesAvailable: boolean; isCloud: boolean; deploymentId: string | null; isCloudTrial: boolean; }"
        ],
        "path": "x-pack/plugins/ml/public/application/components/node_available_warning/hooks.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "ml",
        "id": "def-public.DataRecognizerConfigResponse",
        "type": "Interface",
        "tags": [],
        "label": "DataRecognizerConfigResponse",
        "description": [],
        "path": "x-pack/plugins/ml/common/types/modules.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.DataRecognizerConfigResponse.datafeeds",
            "type": "Array",
            "tags": [],
            "label": "datafeeds",
            "description": [],
            "signature": [
              "DatafeedResponse",
              "[]"
            ],
            "path": "x-pack/plugins/ml/common/types/modules.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.DataRecognizerConfigResponse.jobs",
            "type": "Array",
            "tags": [],
            "label": "jobs",
            "description": [],
            "signature": [
              "JobResponse",
              "[]"
            ],
            "path": "x-pack/plugins/ml/common/types/modules.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.DataRecognizerConfigResponse.kibana",
            "type": "Object",
            "tags": [],
            "label": "kibana",
            "description": [],
            "signature": [
              "{ search: ",
              "KibanaObjectResponse",
              "[]; visualization: ",
              "KibanaObjectResponse",
              "[]; dashboard: ",
              "KibanaObjectResponse",
              "[]; }"
            ],
            "path": "x-pack/plugins/ml/common/types/modules.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.JobExistResult",
        "type": "Interface",
        "tags": [],
        "label": "JobExistResult",
        "description": [],
        "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.JobExistResult.jobsExist",
            "type": "boolean",
            "tags": [],
            "label": "jobsExist",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.JobExistResult.jobs",
            "type": "Array",
            "tags": [],
            "label": "jobs",
            "description": [],
            "signature": [
              "JobStat",
              "[]"
            ],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.JobStat",
        "type": "Interface",
        "tags": [],
        "label": "JobStat",
        "description": [],
        "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.JobStat.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.JobStat.earliestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestTimestampMs",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.JobStat.latestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestTimestampMs",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.JobStat.latestResultsTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestResultsTimestampMs",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/data_recognizer.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.MlCapabilitiesResponse",
        "type": "Interface",
        "tags": [],
        "label": "MlCapabilitiesResponse",
        "description": [],
        "path": "x-pack/plugins/ml/common/types/capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.MlCapabilitiesResponse.capabilities",
            "type": "CompoundType",
            "tags": [],
            "label": "capabilities",
            "description": [],
            "signature": [
              "{ isADEnabled: boolean; isDFAEnabled: boolean; isNLPEnabled: boolean; } & { canGetJobs: boolean; canGetDatafeeds: boolean; canGetCalendars: boolean; canFindFileStructure: boolean; canGetDataFrameAnalytics: boolean; canGetAnnotations: boolean; canCreateAnnotation: boolean; canDeleteAnnotation: boolean; canUseMlAlerts: boolean; canGetTrainedModels: boolean; canTestTrainedModels: boolean; canGetFieldInfo: boolean; canGetMlInfo: boolean; canUseAiops: boolean; } & { canCreateJob: boolean; canDeleteJob: boolean; canOpenJob: boolean; canCloseJob: boolean; canResetJob: boolean; canUpdateJob: boolean; canForecastJob: boolean; canCreateDatafeed: boolean; canDeleteDatafeed: boolean; canStartStopDatafeed: boolean; canUpdateDatafeed: boolean; canPreviewDatafeed: boolean; canGetFilters: boolean; canCreateCalendar: boolean; canDeleteCalendar: boolean; canCreateFilter: boolean; canDeleteFilter: boolean; canCreateDataFrameAnalytics: boolean; canDeleteDataFrameAnalytics: boolean; canStartStopDataFrameAnalytics: boolean; canCreateMlAlerts: boolean; canUseMlAlerts: boolean; canViewMlNodes: boolean; canCreateTrainedModels: boolean; canDeleteTrainedModels: boolean; canStartStopTrainedModels: boolean; }"
            ],
            "path": "x-pack/plugins/ml/common/types/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlCapabilitiesResponse.upgradeInProgress",
            "type": "boolean",
            "tags": [],
            "label": "upgradeInProgress",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlCapabilitiesResponse.isPlatinumOrTrialLicense",
            "type": "boolean",
            "tags": [],
            "label": "isPlatinumOrTrialLicense",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlCapabilitiesResponse.mlFeatureEnabledInSpace",
            "type": "boolean",
            "tags": [],
            "label": "mlFeatureEnabledInSpace",
            "description": [],
            "path": "x-pack/plugins/ml/common/types/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.MlSummaryJob",
        "type": "Interface",
        "tags": [],
        "label": "MlSummaryJob",
        "description": [
          "\nA summary of an anomaly detection job."
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe identifier for the anomaly detection job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nA description of the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.groups",
            "type": "Array",
            "tags": [],
            "label": "groups",
            "description": [
              "\nA list of job groups. A job can belong to no groups, one or many."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.processed_record_count",
            "type": "number",
            "tags": [],
            "label": "processed_record_count",
            "description": [
              "\nThe number of input documents that have been processed by the anomaly detection job.\nThis value includes documents with missing fields, since they are nonetheless analyzed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.memory_status",
            "type": "string",
            "tags": [],
            "label": "memory_status",
            "description": [
              "\nThe status of the mathematical models, which can take the values ok, soft_limit or hard_limit."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.jobState",
            "type": "CompoundType",
            "tags": [],
            "label": "jobState",
            "description": [
              "\nThe status of the job."
            ],
            "signature": [
              "MlJobState",
              " | ",
              "JobActionState"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.datafeedIndices",
            "type": "Array",
            "tags": [],
            "label": "datafeedIndices",
            "description": [
              "\nAn array of index names used by the datafeed. Wildcards are supported."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.hasDatafeed",
            "type": "boolean",
            "tags": [],
            "label": "hasDatafeed",
            "description": [
              "\nFlag indicating whether a datafeed exists for the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.datafeedId",
            "type": "string",
            "tags": [],
            "label": "datafeedId",
            "description": [
              "\nThe identifier for the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.datafeedState",
            "type": "string",
            "tags": [],
            "label": "datafeedState",
            "description": [
              "\nThe status of the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.latestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestTimestampMs",
            "description": [
              "\nThe timestamp of the latest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.earliestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestTimestampMs",
            "description": [
              "\nThe timestamp of the earliest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.latestResultsTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestResultsTimestampMs",
            "description": [
              "\nThe latest of the timestamp of the latest chronologically input document or the latest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.fullJob",
            "type": "Object",
            "tags": [],
            "label": "fullJob",
            "description": [
              "\nUsed in older implementations of the job config, where the datafeed was placed inside the job for convenience.\nThis will be populated if the job's id has been passed to the /internal/ml/jobs/jobs_summary endpoint."
            ],
            "signature": [
              "CombinedJob",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.nodeName",
            "type": "string",
            "tags": [],
            "label": "nodeName",
            "description": [
              "\nThe name of the node that runs the job."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.auditMessage",
            "type": "Object",
            "tags": [],
            "label": "auditMessage",
            "description": [
              "\nAudit message for the job."
            ],
            "signature": [
              "Partial<",
              "AuditMessage",
              "> | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.isSingleMetricViewerJob",
            "type": "boolean",
            "tags": [],
            "label": "isSingleMetricViewerJob",
            "description": [
              "\nFlag indicating whether results of the job can be viewed in the Single Metric Viewer."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.isNotSingleMetricViewerJobMessage",
            "type": "string",
            "tags": [],
            "label": "isNotSingleMetricViewerJobMessage",
            "description": [
              "\nFor jobs which cannot be viewed in the Single Metric Viewer, a message indicating the reason why\nresults for the job cannot be viewed in the Single Metric Viewer."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.blocked",
            "type": "Object",
            "tags": [],
            "label": "blocked",
            "description": [
              "\nWhen present, it explains that a task is currently running on the job, which is stopping\nany other actions from being performed on the job."
            ],
            "signature": [
              "MlJobBlocked",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.latestTimestampSortValue",
            "type": "number",
            "tags": [],
            "label": "latestTimestampSortValue",
            "description": [
              "\nValue of the latest timestamp for the job used for sorting."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.earliestStartTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestStartTimestampMs",
            "description": [
              "\nThe earlist of the timestamp of the earliest chronologically input document or the earliest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.awaitingNodeAssignment",
            "type": "boolean",
            "tags": [],
            "label": "awaitingNodeAssignment",
            "description": [
              "\nIndicates whether the job is currently awaiting assignment to a node before opening."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.alertingRules",
            "type": "Array",
            "tags": [],
            "label": "alertingRules",
            "description": [
              "\nList of anomaly detection alerting rules configured for the job."
            ],
            "signature": [
              "MlAnomalyDetectionAlertRule",
              "[] | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.jobTags",
            "type": "Object",
            "tags": [],
            "label": "jobTags",
            "description": [
              "\nList of tags that have been added to the job."
            ],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.bucketSpanSeconds",
            "type": "number",
            "tags": [],
            "label": "bucketSpanSeconds",
            "description": [
              "\nThe size of the interval that the analysis is aggregated into, typically between 5m and 1h."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-public.MlSummaryJob.customSettings",
            "type": "Any",
            "tags": [],
            "label": "customSettings",
            "description": [
              "\nAdvanced configuration option. Contains custom meta data about the job. For example, it can contain custom URL information."
            ],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "ml",
        "id": "def-public.ANOMALY_SWIMLANE_EMBEDDABLE_TYPE",
        "type": "string",
        "tags": [],
        "label": "ANOMALY_SWIMLANE_EMBEDDABLE_TYPE",
        "description": [],
        "signature": [
          "\"ml_anomaly_swimlane\""
        ],
        "path": "x-pack/plugins/ml/public/embeddables/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.AnomalySwimlaneEmbeddableInput",
        "type": "Type",
        "tags": [],
        "label": "AnomalySwimlaneEmbeddableInput",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          },
          " & ",
          "AnomalySwimlaneEmbeddableCustomInput"
        ],
        "path": "x-pack/plugins/ml/public/embeddables/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.CONTROLLED_BY_SWIM_LANE_FILTER",
        "type": "string",
        "tags": [],
        "label": "CONTROLLED_BY_SWIM_LANE_FILTER",
        "description": [],
        "signature": [
          "\"anomaly-swim-lane\""
        ],
        "path": "x-pack/plugins/ml/public/ui_actions/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.GetMlSharedImportsReturnType",
        "type": "Type",
        "tags": [],
        "label": "GetMlSharedImportsReturnType",
        "description": [],
        "signature": [
          "typeof ",
          "x-pack/plugins/ml/public/shared"
        ],
        "path": "x-pack/plugins/ml/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-public.MlLocator",
        "type": "Type",
        "tags": [],
        "label": "MlLocator",
        "description": [],
        "signature": [
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<",
          "MlLocatorParams",
          ">"
        ],
        "path": "x-pack/plugins/ml/common/types/locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "ml",
        "id": "def-public.ML_PAGES",
        "type": "Object",
        "tags": [],
        "label": "ML_PAGES",
        "description": [],
        "signature": [
          "{ readonly ANOMALY_DETECTION_JOBS_MANAGE: \"jobs\"; readonly ANOMALY_EXPLORER: \"explorer\"; readonly SINGLE_METRIC_VIEWER: \"timeseriesexplorer\"; readonly DATA_FRAME_ANALYTICS_JOBS_MANAGE: \"data_frame_analytics\"; readonly DATA_FRAME_ANALYTICS_SOURCE_SELECTION: \"data_frame_analytics/source_selection\"; readonly DATA_FRAME_ANALYTICS_CREATE_JOB: \"data_frame_analytics/new_job\"; readonly TRAINED_MODELS_MANAGE: \"trained_models\"; readonly DATA_DRIFT_INDEX_SELECT: \"data_drift_index_select\"; readonly DATA_DRIFT_CUSTOM: \"data_drift_custom\"; readonly DATA_DRIFT: \"data_drift\"; readonly NODES: \"nodes\"; readonly MEMORY_USAGE: \"memory_usage\"; readonly DATA_FRAME_ANALYTICS_EXPLORATION: \"data_frame_analytics/exploration\"; readonly DATA_FRAME_ANALYTICS_MAP: \"data_frame_analytics/map\"; readonly DATA_VISUALIZER: \"datavisualizer\"; readonly DATA_VISUALIZER_INDEX_SELECT: \"datavisualizer_index_select\"; readonly DATA_VISUALIZER_FILE: \"filedatavisualizer\"; readonly DATA_VISUALIZER_ESQL: \"datavisualizer/esql\"; readonly DATA_VISUALIZER_INDEX_VIEWER: \"jobs/new_job/datavisualizer\"; readonly ANOMALY_DETECTION_CREATE_JOB: \"jobs/new_job\"; readonly ANOMALY_DETECTION_CREATE_JOB_RECOGNIZER: \"jobs/new_job/recognize\"; readonly ANOMALY_DETECTION_CREATE_JOB_SINGLE_METRIC: \"jobs/new_job/single_metric\"; readonly ANOMALY_DETECTION_CREATE_JOB_MULTI_METRIC: \"jobs/new_job/multi_metric\"; readonly ANOMALY_DETECTION_CREATE_JOB_CONVERT_TO_MULTI_METRIC: \"jobs/new_job/convert_to_multi_metric\"; readonly ANOMALY_DETECTION_CREATE_JOB_ADVANCED: \"jobs/new_job/advanced\"; readonly ANOMALY_DETECTION_CREATE_JOB_POPULATION: \"jobs/new_job/population\"; readonly ANOMALY_DETECTION_CREATE_JOB_CATEGORIZATION: \"jobs/new_job/categorization\"; readonly ANOMALY_DETECTION_CREATE_JOB_RARE: \"jobs/new_job/rare\"; readonly ANOMALY_DETECTION_CREATE_JOB_GEO: \"jobs/new_job/geo\"; readonly ANOMALY_DETECTION_CREATE_JOB_CONVERT_TO_ADVANCED: \"jobs/new_job/convert_to_advanced\"; readonly ANOMALY_DETECTION_CREATE_JOB_SELECT_TYPE: \"jobs/new_job/step/job_type\"; readonly ANOMALY_DETECTION_CREATE_JOB_SELECT_INDEX: \"jobs/new_job/step/index_or_search\"; readonly ANOMALY_DETECTION_CREATE_JOB_FROM_LENS: \"jobs/new_job/from_lens\"; readonly ANOMALY_DETECTION_CREATE_JOB_FROM_PATTERN_ANALYSIS: \"jobs/new_job/from_pattern_analysis\"; readonly ANOMALY_DETECTION_CREATE_JOB_FROM_MAP: \"jobs/new_job/from_map\"; readonly ANOMALY_DETECTION_MODULES_VIEW_OR_CREATE: \"modules/check_view_or_create\"; readonly SETTINGS: \"settings\"; readonly CALENDARS_MANAGE: \"settings/calendars_list\"; readonly CALENDARS_NEW: \"settings/calendars_list/new_calendar\"; readonly CALENDARS_EDIT: \"settings/calendars_list/edit_calendar\"; readonly FILTER_LISTS_MANAGE: \"settings/filter_lists\"; readonly FILTER_LISTS_NEW: \"settings/filter_lists/new_filter_list\"; readonly FILTER_LISTS_EDIT: \"settings/filter_lists/edit_filter_list\"; readonly OVERVIEW: \"overview\"; readonly NOTIFICATIONS: \"notifications\"; readonly AIOPS: \"aiops\"; readonly AIOPS_EXPLAIN_LOG_RATE_SPIKES: \"aiops/explain_log_rate_spikes\"; readonly AIOPS_EXPLAIN_LOG_RATE_SPIKES_INDEX_SELECT: \"aiops/explain_log_rate_spikes_index_select\"; readonly AIOPS_LOG_RATE_ANALYSIS: \"aiops/log_rate_analysis\"; readonly AIOPS_LOG_RATE_ANALYSIS_INDEX_SELECT: \"aiops/log_rate_analysis_index_select\"; readonly AIOPS_LOG_CATEGORIZATION: \"aiops/log_categorization\"; readonly AIOPS_LOG_CATEGORIZATION_INDEX_SELECT: \"aiops/log_categorization_index_select\"; readonly AIOPS_CHANGE_POINT_DETECTION: \"aiops/change_point_detection\"; readonly AIOPS_CHANGE_POINT_DETECTION_INDEX_SELECT: \"aiops/change_point_detection_index_select\"; }"
        ],
        "path": "x-pack/plugins/ml/common/constants/locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "ml",
      "id": "def-public.MlPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "MlPluginSetup",
      "description": [],
      "signature": [
        "{ locator?: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "MlLocatorParams",
        "> | undefined; elasticModels?: ",
        "ElasticModels",
        " | undefined; }"
      ],
      "path": "x-pack/plugins/ml/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "ml",
      "id": "def-public.MlPluginStart",
      "type": "Type",
      "tags": [],
      "label": "MlPluginStart",
      "description": [],
      "signature": [
        "{ locator?: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "MlLocatorParams",
        "> | undefined; elasticModels?: ",
        "ElasticModels",
        " | undefined; mlApi?: { getJobs(obj?: { jobId?: string | undefined; } | undefined): Promise<{ jobs: ",
        "MlJob",
        "[]; count: number; }>; getJobs$(obj?: { jobId?: string | undefined; } | undefined): ",
        "Observable",
        "<{ count: number; jobs: ",
        "MlJob",
        "[]; }>; getJobStats(obj: { jobId?: string | undefined; }): Promise<{ jobs: ",
        "MlJobStats",
        "[]; count: number; }>; addJob({ jobId, job }: { jobId: string; job: ",
        "MlJob",
        "; }): Promise<",
        "MlPutJobResponse",
        ">; openJob({ jobId }: { jobId: string; }): Promise<any>; closeJob({ jobId }: { jobId: string; }): Promise<any>; forceCloseJob({ jobId }: { jobId: string; }): Promise<any>; deleteJob({ jobId }: { jobId: string; }): Promise<",
        "AcknowledgedResponseBase",
        ">; forceDeleteJob({ jobId }: { jobId: string; }): Promise<",
        "AcknowledgedResponseBase",
        ">; updateJob({ jobId, job }: { jobId: string; job: ",
        "MlJob",
        "; }): Promise<any>; estimateBucketSpan(obj: ",
        "BucketSpanEstimatorData",
        "): Promise<",
        "BucketSpanEstimatorResponse",
        ">; validateJob(payload: { job: ",
        "CombinedJob",
        "; duration: { start?: number | undefined; end?: number | undefined; }; fields?: any[] | undefined; }): Promise<any>; validateDatafeedPreview(payload: { job: ",
        "CombinedJob",
        "; start?: number | undefined; end?: number | undefined; }): Promise<",
        "DatafeedValidationResponse",
        ">; validateCardinality$(job: ",
        "CombinedJob",
        "): ",
        "Observable",
        "<",
        "CardinalityValidationResults",
        ">; getDatafeeds(obj: { datafeedId: string; }): Promise<any>; getDatafeedStats(obj: { datafeedId: string; }): Promise<any>; addDatafeed({ datafeedId, datafeedConfig }: { datafeedId: string; datafeedConfig: ",
        "MlDatafeed",
        "; }): Promise<",
        "MlPutDatafeedResponse",
        ">; updateDatafeed({ datafeedId, datafeedConfig, }: { datafeedId: string; datafeedConfig: Partial<",
        "MlDatafeed",
        ">; }): Promise<any>; deleteDatafeed({ datafeedId }: { datafeedId: string; }): Promise<any>; forceDeleteDatafeed({ datafeedId }: { datafeedId: string; }): Promise<any>; startDatafeed({ datafeedId, start, end, }: { datafeedId: string; start?: number | undefined; end?: number | undefined; }): Promise<any>; stopDatafeed({ datafeedId }: { datafeedId: string; }): Promise<any>; forceStopDatafeed({ datafeedId }: { datafeedId: string; }): Promise<any>; datafeedPreview({ datafeedId }: { datafeedId: string; }): Promise<any>; validateDetector({ detector }: { detector: ",
        "MlDetector",
        "; }): Promise<any>; forecast({ jobId, duration }: { jobId: string; duration?: string | undefined; }): Promise<any>; overallBuckets({ jobId, topN, bucketSpan, start, end, overallScore, }: { jobId: string; topN: string; bucketSpan: string; start: number; end: number; overallScore?: number | undefined; }): Promise<any>; hasPrivileges(obj: any): Promise<",
        "MlHasPrivilegesResponse",
        ">; checkMlCapabilities(): Promise<",
        "MlCapabilitiesResponse",
        ">; checkIndicesExists({ indices }: { indices: string[]; }): Promise<Record<string, { exists: boolean; }>>; getFieldCaps({ index, fields }: { index: string; fields: string[]; }): Promise<any>; recognizeIndex({ indexPatternTitle, filter, }: { indexPatternTitle: string; filter?: string[] | undefined; }): Promise<",
        "RecognizeResult",
        "[]>; listDataRecognizerModules(filter?: string[] | undefined): Promise<any>; getDataRecognizerModule({ moduleId, filter }: { moduleId: string; filter?: string[] | undefined; }): Promise<",
        "Module",
        ">; dataRecognizerModuleJobsExist({ moduleId }: { moduleId: string; }): Promise<any>; setupDataRecognizerConfig({ moduleId, prefix, groups, indexPatternName, query, useDedicatedIndex, startDatafeed, start, end, jobOverrides, estimateModelMemory, }: { moduleId: string; prefix?: string | undefined; groups?: string[] | undefined; indexPatternName?: string | undefined; query?: any; useDedicatedIndex?: boolean | undefined; startDatafeed?: boolean | undefined; start?: number | undefined; end?: number | undefined; jobOverrides?: Partial<",
        "MlJob",
        ">[] | undefined; estimateModelMemory?: boolean | undefined; }): Promise<",
        "DataRecognizerConfigResponse",
        ">; getVisualizerFieldHistograms({ indexPattern, query, fields, samplerShardSize, runtimeMappings, }: { indexPattern: string; query: any; fields: ",
        "FieldHistogramRequestConfig",
        "[]; samplerShardSize?: number | undefined; runtimeMappings?: ",
        "MappingRuntimeFields",
        " | undefined; }): Promise<any>; calendars(obj?: { calendarId?: string | undefined; calendarIds?: string[] | undefined; } | undefined): Promise<",
        "Calendar",
        "[]>; addCalendar(obj: ",
        "Calendar",
        "): Promise<any>; updateCalendar(obj: ",
        "UpdateCalendar",
        "): Promise<any>; deleteCalendar({ calendarId }: { calendarId?: string | undefined; }): Promise<any>; mlNodeCount(): Promise<",
        "MlNodeCount",
        ">; mlInfo(): Promise<",
        "MlInfoResponse",
        ">; calculateModelMemoryLimit$({ datafeedConfig, analysisConfig, indexPattern, query, timeFieldName, earliestMs, latestMs, }: { datafeedConfig?: ",
        "MlDatafeed",
        " | undefined; analysisConfig: ",
        "MlAnalysisConfig",
        "; indexPattern: string; query: any; timeFieldName: string; earliestMs: number; latestMs: number; }): ",
        "Observable",
        "<{ modelMemoryLimit: string; }>; getCardinalityOfFields({ index, fieldNames, query, timeFieldName, earliestMs, latestMs, }: { index: string; fieldNames: string[]; query: any; timeFieldName: string; earliestMs: number; latestMs: number; }): Promise<any>; getTimeFieldRange({ index, timeFieldName, query, runtimeMappings, indicesOptions, allowFutureTime, }: { index: string; timeFieldName?: string | undefined; query: any; runtimeMappings?: ",
        "MappingRuntimeFields",
        " | undefined; indicesOptions?: ",
        "IndicesOptions",
        " | undefined; allowFutureTime?: boolean | undefined; }): Promise<",
        "GetTimeFieldRangeResponse",
        ">; esSearch(obj: any): Promise<any>; esSearch$(obj: any): ",
        "Observable",
        "<any>; getIndices(): Promise<{ name: string; }[]>; getModelSnapshots(jobId: string, snapshotId?: string | undefined): Promise<",
        "GetModelSnapshotsResponse",
        ">; updateModelSnapshot(jobId: string, snapshotId: string, body: { description?: string | undefined; retain?: boolean | undefined; }): Promise<any>; deleteModelSnapshot(jobId: string, snapshotId: string): Promise<any>; reindexWithPipeline(pipelineName: string, sourceIndex: string, destinationIndex: string): Promise<",
        "ReindexResponse",
        ">; annotations: { getAnnotations$(obj: { jobIds: string[]; earliestMs: number; latestMs: number; maxAnnotations: number; detectorIndex?: number | undefined; entities?: any[] | undefined; }): ",
        "Observable",
        "<",
        "GetAnnotationsResponse",
        ">; getAnnotations(obj: { jobIds: string[]; earliestMs: number | null; latestMs: number | null; maxAnnotations: number; detectorIndex?: number | undefined; entities?: any[] | undefined; }): Promise<",
        "GetAnnotationsResponse",
        ">; indexAnnotation(obj: ",
        "Annotation",
        "): Promise<any>; deleteAnnotation(id: string): Promise<any>; }; dataFrameAnalytics: { getDataFrameAnalytics(analyticsId?: string | undefined, excludeGenerated?: boolean | undefined, size?: number | undefined): Promise<",
        "GetDataFrameAnalyticsResponse",
        ">; getDataFrameAnalyticsStats(analyticsId?: string | undefined): Promise<",
        "GetDataFrameAnalyticsStatsResponse",
        ">; createDataFrameAnalytics(analyticsId: string, analyticsConfig: ",
        "DeepPartial",
        "<",
        {
          "pluginId": "@kbn/ml-data-frame-analytics-utils",
          "scope": "common",
          "docId": "kibKbnMlDataFrameAnalyticsUtilsPluginApi",
          "section": "def-common.DataFrameAnalyticsConfig",
          "text": "DataFrameAnalyticsConfig"
        },
        ">, createDataView?: boolean, timeFieldName?: string | undefined): Promise<",
        "PutDataFrameAnalyticsResponseSchema",
        ">; updateDataFrameAnalytics(analyticsId: string, updateConfig: ",
        {
          "pluginId": "@kbn/ml-data-frame-analytics-utils",
          "scope": "common",
          "docId": "kibKbnMlDataFrameAnalyticsUtilsPluginApi",
          "section": "def-common.UpdateDataFrameAnalyticsConfig",
          "text": "UpdateDataFrameAnalyticsConfig"
        },
        "): Promise<any>; getDataFrameAnalyticsMap(id: string, treatAsRoot: boolean, type?: string | undefined): Promise<",
        {
          "pluginId": "@kbn/ml-data-frame-analytics-utils",
          "scope": "common",
          "docId": "kibKbnMlDataFrameAnalyticsUtilsPluginApi",
          "section": "def-common.AnalyticsMapReturnType",
          "text": "AnalyticsMapReturnType"
        },
        ">; jobsExist(analyticsIds: string[], allSpaces?: boolean): Promise<",
        "JobsExistsResponse",
        ">; evaluateDataFrameAnalytics(evaluateConfig: any): Promise<any>; explainDataFrameAnalytics(jobConfig: ",
        "DeepPartial",
        "<",
        {
          "pluginId": "@kbn/ml-data-frame-analytics-utils",
          "scope": "common",
          "docId": "kibKbnMlDataFrameAnalyticsUtilsPluginApi",
          "section": "def-common.DataFrameAnalyticsConfig",
          "text": "DataFrameAnalyticsConfig"
        },
        ">): Promise<any>; deleteDataFrameAnalytics(analyticsId: string, force?: boolean): Promise<any>; deleteDataFrameAnalyticsAndDestIndex(analyticsId: string, deleteDestIndex: boolean, deleteDestDataView: boolean, force?: boolean): Promise<",
        "DeleteDataFrameAnalyticsWithIndexResponse",
        ">; startDataFrameAnalytics(analyticsId: string): Promise<any>; stopDataFrameAnalytics(analyticsId: string, force?: boolean): Promise<any>; getAnalyticsAuditMessages(analyticsId: string): Promise<",
        "JobMessage",
        "[]>; validateDataFrameAnalytics(analyticsConfig: ",
        "DeepPartial",
        "<",
        {
          "pluginId": "@kbn/ml-data-frame-analytics-utils",
          "scope": "common",
          "docId": "kibKbnMlDataFrameAnalyticsUtilsPluginApi",
          "section": "def-common.DataFrameAnalyticsConfig",
          "text": "DataFrameAnalyticsConfig"
        },
        ">): Promise<",
        "ValidateAnalyticsJobResponse",
        ">; newJobCapsAnalytics(indexPatternTitle: string, isRollup?: boolean): Promise<",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.NewJobCapsResponse",
          "text": "NewJobCapsResponse"
        },
        ">; }; filters: { filters(obj?: { filterId?: string | undefined; } | undefined): Promise<",
        "Filter",
        "[]>; filtersStats(): Promise<",
        "FilterStats",
        "[]>; addFilter(filterId: string, description: string, items: string[]): Promise<",
        "Filter",
        ">; updateFilter(filterId: string, description: string, addItems: string[], removeItems: string[]): Promise<",
        "Filter",
        ">; deleteFilter(filterId: string): Promise<{ acknowledged: boolean; }>; }; results: { getAnomaliesTableData(jobIds: string[], criteriaFields: string[], influencers: ",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.MlEntityField",
          "text": "MlEntityField"
        },
        "[], aggregationInterval: string, threshold: number, earliestMs: number, latestMs: number, dateFormatTz: string, maxRecords: number, maxExamples?: number | undefined, influencersFilterQuery?: any, functionDescription?: string | undefined): ",
        "Observable",
        "<any>; getMaxAnomalyScore(jobIds: string[], earliestMs: number, latestMs: number): Promise<any>; getCategoryDefinition(jobId: string, categoryId: string): Promise<",
        "CategoryDefinition",
        ">; getCategoryExamples(jobId: string, categoryIds: string[], maxExamples: number): Promise<any>; fetchPartitionFieldsValues(jobId: string, searchTerm: Record<string, string>, criteriaFields: { fieldName: string; fieldValue: any; }[], earliestMs: number, latestMs: number, fieldsConfig?: ",
        "PartitionFieldsConfig",
        "): ",
        "Observable",
        "<",
        "PartitionFieldsDefinition",
        ">; anomalySearch(query: ",
        "SearchRequest",
        ", jobIds: string[]): Promise<",
        {
          "pluginId": "@kbn/es-types",
          "scope": "common",
          "docId": "kibKbnEsTypesPluginApi",
          "section": "def-common.ESSearchResponse",
          "text": "ESSearchResponse"
        },
        "<",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.MlAnomalyRecordDoc",
          "text": "MlAnomalyRecordDoc"
        },
        ", ",
        "SearchRequest",
        ", { restTotalHitsAsInt: false; }>>; anomalySearch$(query: ",
        "SearchRequest",
        ", jobIds: string[]): ",
        "Observable",
        "<",
        {
          "pluginId": "@kbn/es-types",
          "scope": "common",
          "docId": "kibKbnEsTypesPluginApi",
          "section": "def-common.ESSearchResponse",
          "text": "ESSearchResponse"
        },
        "<",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.MlAnomalyRecordDoc",
          "text": "MlAnomalyRecordDoc"
        },
        ", ",
        "SearchRequest",
        ", { restTotalHitsAsInt: false; }>>; getCategoryStoppedPartitions(jobIds: string[], fieldToBucket?: \"job_id\" | \"partition_field_value\" | undefined): Promise<",
        "GetStoppedPartitionResult",
        ">; getDatafeedResultChartData(jobId: string, start: number, end: number): Promise<",
        "GetDatafeedResultsChartDataResult",
        ">; getAnomalyCharts$(jobIds: string[], influencers: ",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.MlEntityField",
          "text": "MlEntityField"
        },
        "[], threshold: number, earliestMs: number, latestMs: number, timeBounds: { min?: number | undefined; max?: number | undefined; }, maxResults: number, numberOfPoints: number, influencersFilterQuery?: ",
        "QueryDslQueryContainer",
        " | undefined): ",
        "Observable",
        "<",
        "ExplorerChartsData",
        ">; getAnomalyRecords$(jobIds: string[], criteriaFields: ",
        "CriteriaField",
        "[], severity: number, earliestMs: number | null, latestMs: number | null, interval: string, functionDescription?: string | undefined): ",
        "Observable",
        "<{ success: boolean; records: ",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.MlAnomalyRecordDoc",
          "text": "MlAnomalyRecordDoc"
        },
        "[]; }>; }; jobs: { jobsSummary(jobIds: string[]): Promise<",
        "MlSummaryJobs",
        ">; jobIdsWithGeo(): Promise<string[]>; jobsWithTimerange(dateFormatTz: string): Promise<{ jobs: ",
        "MlJobWithTimeRange",
        "[]; jobsMap: ",
        "Dictionary",
        "<",
        "MlJobWithTimeRange",
        ">; }>; jobForCloning(jobId: string, retainCreatedBy?: boolean): Promise<{ job?: ",
        "MlJob",
        " | undefined; datafeed?: ",
        "MlDatafeed",
        " | undefined; } | undefined>; jobs(jobIds: string[]): Promise<",
        "CombinedJobWithStats",
        "[]>; groups(): Promise<",
        "Group",
        "[]>; updateGroups(updatedJobs: { jobId: string; groups: string[]; }[]): Promise<any>; forceStartDatafeeds(datafeedIds: string[], start: string, end: string): Promise<any>; stopDatafeeds(datafeedIds: string[]): Promise<any>; deleteJobs(jobIds: string[], deleteUserAnnotations?: boolean | undefined, deleteAlertingRules?: boolean | undefined): Promise<any>; closeJobs(jobIds: string[]): Promise<any>; resetJobs(jobIds: string[], deleteUserAnnotations?: boolean | undefined): Promise<",
        "ResetJobsResponse",
        ">; forceStopAndCloseJob(jobId: string): Promise<{ success: boolean; }>; jobAuditMessages({ jobId, from, start, end, }: { jobId: string; from?: number | undefined; start?: string | undefined; end?: string | undefined; }): Promise<{ messages: ",
        "JobMessage",
        "[]; notificationIndices: string[]; }>; clearJobAuditMessages(jobId: string, notificationIndices: string[]): Promise<{ success: boolean; latest_cleared: number; }>; blockingJobTasks(): Promise<Record<string, ",
        "JobAction",
        ">>; jobsExist(jobIds: string[], allSpaces?: boolean): Promise<",
        "JobsExistResponse",
        ">; jobsExist$(jobIds: string[], allSpaces?: boolean): ",
        "Observable",
        "<",
        "JobsExistResponse",
        ">; newJobCaps(indexPatternTitle: string, isRollup?: boolean): Promise<any>; newJobLineChart(indexPatternTitle: string, timeField: string, start: number, end: number, intervalMs: number, query: any, aggFieldNamePairs: ",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.AggFieldNamePair",
          "text": "AggFieldNamePair"
        },
        "[], splitFieldName: string | null, splitFieldValue: string | null, runtimeMappings?: ",
        "MappingRuntimeFields",
        " | undefined, indicesOptions?: ",
        "IndicesOptions",
        " | undefined): Promise<any>; newJobPopulationsChart(indexPatternTitle: string, timeField: string, start: number, end: number, intervalMs: number, query: any, aggFieldNamePairs: ",
        {
          "pluginId": "@kbn/ml-anomaly-utils",
          "scope": "common",
          "docId": "kibKbnMlAnomalyUtilsPluginApi",
          "section": "def-common.AggFieldNamePair",
          "text": "AggFieldNamePair"
        },
        "[], splitFieldName: string, runtimeMappings?: ",
        "MappingRuntimeFields",
        " | undefined, indicesOptions?: ",
        "IndicesOptions",
        " | undefined): Promise<any>; getAllJobAndGroupIds(): Promise<",
        "ExistingJobsAndGroups",
        ">; getLookBackProgress(jobId: string, start: number, end: number): Promise<{ progress: number; isRunning: boolean; isJobClosed: boolean; }>; categorizationFieldExamples(indexPatternTitle: string, query: any, size: number, field: string, timeField: string, start: number, end: number, analyzer: ",
        {
          "pluginId": "@kbn/ml-category-validator",
          "scope": "common",
          "docId": "kibKbnMlCategoryValidatorPluginApi",
          "section": "def-common.CategorizationAnalyzer",
          "text": "CategorizationAnalyzer"
        },
        ", runtimeMappings?: ",
        "MappingRuntimeFields",
        " | undefined, indicesOptions?: ",
        "IndicesOptions",
        " | undefined, includeExamples?: boolean | undefined): Promise<",
        {
          "pluginId": "@kbn/ml-category-validator",
          "scope": "common",
          "docId": "kibKbnMlCategoryValidatorPluginApi",
          "section": "def-common.FieldValidationResults",
          "text": "FieldValidationResults"
        },
        ">; topCategories(jobId: string, count: number): Promise<{ total: number; categories: { count?: number | undefined; category: ",
        "Category",
        "; }[]; }>; revertModelSnapshot(jobId: string, snapshotId: string, replay: boolean, end?: number | undefined, calendarEvents?: { start: number; end: number; description: string; }[] | undefined): Promise<{ success: boolean; }>; datafeedPreview(datafeedId?: string | undefined, job?: ",
        "MlJob",
        " | undefined, datafeed?: ",
        "MlDatafeed",
        " | undefined): Promise<unknown[]>; bulkCreateJobs(jobs: { job: ",
        "MlJob",
        "; datafeed: ",
        "MlDatafeed",
        "; } | { job: ",
        "MlJob",
        "; datafeed: ",
        "MlDatafeed",
        "; }[]): Promise<",
        "BulkCreateResults",
        ">; }; savedObjects: { jobsSpaces(): Promise<",
        "JobsSpacesResponse",
        ">; updateJobsSpaces(jobType: ",
        "JobType",
        ", jobIds: string[], spacesToAdd: string[], spacesToRemove: string[]): Promise<",
        "SavedObjectResult",
        ">; removeItemFromCurrentSpace(mlSavedObjectType: ",
        "MlSavedObjectType",
        ", ids: string[]): Promise<",
        "SavedObjectResult",
        ">; syncSavedObjects(simulate?: boolean): Promise<",
        "SyncSavedObjectResponse",
        ">; initSavedObjects(simulate?: boolean): Promise<",
        "InitializeSavedObjectResponse",
        ">; syncCheck(mlSavedObjectType?: ",
        "MlSavedObjectType",
        " | undefined): Promise<",
        "SyncCheckResponse",
        ">; canDeleteMLSpaceAwareItems(mlSavedObjectType: ",
        "MlSavedObjectType",
        ", ids: string[]): Promise<",
        "CanDeleteMLSpaceAwareItemsResponse",
        ">; trainedModelsSpaces(): Promise<",
        "TrainedModelsSpacesResponse",
        ">; updateModelsSpaces(modelIds: string[], spacesToAdd: string[], spacesToRemove: string[]): Promise<",
        "SavedObjectResult",
        ">; }; trainedModels: { getTrainedModelDownloads(): Promise<",
        {
          "pluginId": "@kbn/ml-trained-models-utils",
          "scope": "common",
          "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
          "section": "def-common.ModelDefinitionResponse",
          "text": "ModelDefinitionResponse"
        },
        "[]>; getElserConfig(options?: ",
        {
          "pluginId": "@kbn/ml-trained-models-utils",
          "scope": "common",
          "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
          "section": "def-common.GetModelDownloadConfigOptions",
          "text": "GetModelDownloadConfigOptions"
        },
        " | undefined): Promise<",
        {
          "pluginId": "@kbn/ml-trained-models-utils",
          "scope": "common",
          "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
          "section": "def-common.ModelDefinitionResponse",
          "text": "ModelDefinitionResponse"
        },
        ">; getTrainedModels(modelId?: string | string[] | undefined, params?: ",
        "InferenceQueryParams",
        " | undefined): Promise<",
        "TrainedModelConfigResponse",
        "[]>; getTrainedModelStats(modelId?: string | string[] | undefined, params?: ",
        "InferenceStatsQueryParams",
        " | undefined): Promise<",
        "InferenceStatsResponse",
        ">; getTrainedModelPipelines(modelId: string | string[]): Promise<",
        "ModelPipelines",
        "[]>; getAllIngestPipelines(): Promise<",
        "NodesOverviewResponse",
        ">; createInferencePipeline(pipelineName: string, pipeline: ",
        "IngestPipeline",
        "): Promise<",
        "IngestSimulateResponse",
        ">; deleteTrainedModel(modelId: string, options?: { with_pipelines?: boolean | undefined; force?: boolean | undefined; }): Promise<{ acknowledge: boolean; }>; getTrainedModelsNodesOverview(): Promise<",
        "NodesOverviewResponse",
        ">; startModelAllocation(modelId: string, queryParams?: { number_of_allocations: number; threads_per_allocation: number; priority: \"normal\" | \"low\"; deployment_id?: string | undefined; } | undefined): Promise<{ acknowledge: boolean; }>; stopModelAllocation(modelId: string, deploymentsIds: string[], options?: { force: boolean; }): Promise<Record<string, { acknowledge: boolean; error?: ",
        {
          "pluginId": "@kbn/ml-error-utils",
          "scope": "common",
          "docId": "kibKbnMlErrorUtilsPluginApi",
          "section": "def-common.ErrorType",
          "text": "ErrorType"
        },
        "; }>>; updateModelDeployment(modelId: string, deploymentId: string, params: { number_of_allocations: number; }): Promise<{ acknowledge: boolean; }>; inferTrainedModel(modelId: string, deploymentsId: string, payload: { docs: Record<string, any>[]; inference_config?: ",
        "MlInferenceConfigUpdateContainer",
        " | undefined; } | undefined, timeout?: string | undefined): Promise<",
        "MlInferTrainedModelResponse",
        ">; trainedModelPipelineSimulate(pipeline: ",
        "IngestPipeline",
        ", docs: ",
        "IngestSimulateDocument",
        "[]): Promise<",
        "IngestSimulateResponse",
        ">; memoryUsage(type?: ",
        "MlSavedObjectType",
        " | undefined, node?: string | undefined, showClosedJobs?: boolean): Promise<",
        "MemoryUsageInfo",
        "[]>; putTrainedModelConfig(modelId: string, config: object): Promise<",
        "MlTrainedModelConfig",
        ">; installElasticTrainedModelConfig(modelId: string): Promise<",
        "MlTrainedModelConfig",
        ">; }; notifications: { findMessages(params: ",
        "NotificationsQueryParams",
        "): Promise<",
        "NotificationsSearchResponse",
        ">; countMessages$(params: ",
        "NotificationsCountQueryParams",
        "): ",
        "Observable",
        "<",
        "NotificationsCountResponse",
        ">; }; jsonSchema: { getSchemaDefinition(params: ",
        "GetSchemaDefinitionParams",
        "): Promise<object>; }; } | undefined; }"
      ],
      "path": "x-pack/plugins/ml/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "ml",
        "id": "def-server.InsufficientMLCapabilities",
        "type": "Class",
        "tags": [],
        "label": "InsufficientMLCapabilities",
        "description": [],
        "signature": [
          {
            "pluginId": "ml",
            "scope": "server",
            "docId": "kibMlPluginApi",
            "section": "def-server.InsufficientMLCapabilities",
            "text": "InsufficientMLCapabilities"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-server.InsufficientMLCapabilities.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "ml",
                "id": "def-server.InsufficientMLCapabilities.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.MLPrivilegesUninitialized",
        "type": "Class",
        "tags": [],
        "label": "MLPrivilegesUninitialized",
        "description": [],
        "signature": [
          {
            "pluginId": "ml",
            "scope": "server",
            "docId": "kibMlPluginApi",
            "section": "def-server.MLPrivilegesUninitialized",
            "text": "MLPrivilegesUninitialized"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-server.MLPrivilegesUninitialized.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "ml",
                "id": "def-server.MLPrivilegesUninitialized.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.UnknownMLCapabilitiesError",
        "type": "Class",
        "tags": [],
        "label": "UnknownMLCapabilitiesError",
        "description": [],
        "signature": [
          {
            "pluginId": "ml",
            "scope": "server",
            "docId": "kibMlPluginApi",
            "section": "def-server.UnknownMLCapabilitiesError",
            "text": "UnknownMLCapabilitiesError"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-server.UnknownMLCapabilitiesError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "ml",
                "id": "def-server.UnknownMLCapabilitiesError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/ml/server/lib/capabilities/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "ml",
        "id": "def-server.MlSummaryJob",
        "type": "Interface",
        "tags": [],
        "label": "MlSummaryJob",
        "description": [
          "\nA summary of an anomaly detection job."
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe identifier for the anomaly detection job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nA description of the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.groups",
            "type": "Array",
            "tags": [],
            "label": "groups",
            "description": [
              "\nA list of job groups. A job can belong to no groups, one or many."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.processed_record_count",
            "type": "number",
            "tags": [],
            "label": "processed_record_count",
            "description": [
              "\nThe number of input documents that have been processed by the anomaly detection job.\nThis value includes documents with missing fields, since they are nonetheless analyzed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.memory_status",
            "type": "string",
            "tags": [],
            "label": "memory_status",
            "description": [
              "\nThe status of the mathematical models, which can take the values ok, soft_limit or hard_limit."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.jobState",
            "type": "CompoundType",
            "tags": [],
            "label": "jobState",
            "description": [
              "\nThe status of the job."
            ],
            "signature": [
              "MlJobState",
              " | ",
              "JobActionState"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.datafeedIndices",
            "type": "Array",
            "tags": [],
            "label": "datafeedIndices",
            "description": [
              "\nAn array of index names used by the datafeed. Wildcards are supported."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.hasDatafeed",
            "type": "boolean",
            "tags": [],
            "label": "hasDatafeed",
            "description": [
              "\nFlag indicating whether a datafeed exists for the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.datafeedId",
            "type": "string",
            "tags": [],
            "label": "datafeedId",
            "description": [
              "\nThe identifier for the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.datafeedState",
            "type": "string",
            "tags": [],
            "label": "datafeedState",
            "description": [
              "\nThe status of the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.latestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestTimestampMs",
            "description": [
              "\nThe timestamp of the latest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.earliestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestTimestampMs",
            "description": [
              "\nThe timestamp of the earliest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.latestResultsTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestResultsTimestampMs",
            "description": [
              "\nThe latest of the timestamp of the latest chronologically input document or the latest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.fullJob",
            "type": "Object",
            "tags": [],
            "label": "fullJob",
            "description": [
              "\nUsed in older implementations of the job config, where the datafeed was placed inside the job for convenience.\nThis will be populated if the job's id has been passed to the /internal/ml/jobs/jobs_summary endpoint."
            ],
            "signature": [
              "CombinedJob",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.nodeName",
            "type": "string",
            "tags": [],
            "label": "nodeName",
            "description": [
              "\nThe name of the node that runs the job."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.auditMessage",
            "type": "Object",
            "tags": [],
            "label": "auditMessage",
            "description": [
              "\nAudit message for the job."
            ],
            "signature": [
              "Partial<",
              "AuditMessage",
              "> | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.isSingleMetricViewerJob",
            "type": "boolean",
            "tags": [],
            "label": "isSingleMetricViewerJob",
            "description": [
              "\nFlag indicating whether results of the job can be viewed in the Single Metric Viewer."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.isNotSingleMetricViewerJobMessage",
            "type": "string",
            "tags": [],
            "label": "isNotSingleMetricViewerJobMessage",
            "description": [
              "\nFor jobs which cannot be viewed in the Single Metric Viewer, a message indicating the reason why\nresults for the job cannot be viewed in the Single Metric Viewer."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.blocked",
            "type": "Object",
            "tags": [],
            "label": "blocked",
            "description": [
              "\nWhen present, it explains that a task is currently running on the job, which is stopping\nany other actions from being performed on the job."
            ],
            "signature": [
              "MlJobBlocked",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.latestTimestampSortValue",
            "type": "number",
            "tags": [],
            "label": "latestTimestampSortValue",
            "description": [
              "\nValue of the latest timestamp for the job used for sorting."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.earliestStartTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestStartTimestampMs",
            "description": [
              "\nThe earlist of the timestamp of the earliest chronologically input document or the earliest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.awaitingNodeAssignment",
            "type": "boolean",
            "tags": [],
            "label": "awaitingNodeAssignment",
            "description": [
              "\nIndicates whether the job is currently awaiting assignment to a node before opening."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.alertingRules",
            "type": "Array",
            "tags": [],
            "label": "alertingRules",
            "description": [
              "\nList of anomaly detection alerting rules configured for the job."
            ],
            "signature": [
              "MlAnomalyDetectionAlertRule",
              "[] | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.jobTags",
            "type": "Object",
            "tags": [],
            "label": "jobTags",
            "description": [
              "\nList of tags that have been added to the job."
            ],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.bucketSpanSeconds",
            "type": "number",
            "tags": [],
            "label": "bucketSpanSeconds",
            "description": [
              "\nThe size of the interval that the analysis is aggregated into, typically between 5m and 1h."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-server.MlSummaryJob.customSettings",
            "type": "Any",
            "tags": [],
            "label": "customSettings",
            "description": [
              "\nAdvanced configuration option. Contains custom meta data about the job. For example, it can contain custom URL information."
            ],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "ml",
        "id": "def-server.AlertingService",
        "type": "Type",
        "tags": [],
        "label": "AlertingService",
        "description": [],
        "signature": [
          "{ preview: (args_0: Readonly<{} & { timeRange: string; alertParams: Readonly<{} & { severity: number; jobSelection: Readonly<{} & { groupIds: string[]; jobIds: string[]; }>; resultType: \"record\" | \"bucket\" | \"influencer\"; includeInterim: boolean; lookbackInterval: string | null; topNBuckets: number | null; }>; sampleSize: number; }>) => Promise<any>; execute: (params: Readonly<{} & { severity: number; jobSelection: Readonly<{} & { groupIds: string[]; jobIds: string[]; }>; resultType: \"record\" | \"bucket\" | \"influencer\"; includeInterim: boolean; lookbackInterval: string | null; topNBuckets: number | null; }>, spaceId: string, state?: ",
          "AnomalyDetectionRuleState",
          " | undefined) => Promise<{ payload: ",
          "AnomalyDetectionAlertPayload",
          "; context: ",
          "AnomalyDetectionAlertContext",
          "; name: string; isHealthy: boolean; stateUpdate: ",
          "AnomalyDetectionRuleState",
          "; } | undefined>; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.AnomalyDetectors",
        "type": "Type",
        "tags": [],
        "label": "AnomalyDetectors",
        "description": [],
        "signature": [
          "{ jobs(jobId?: string | undefined): Promise<{ count: number; jobs: ",
          "MlJob",
          "[]; }>; jobStats(jobId?: string | undefined): Promise<{ count: number; jobs: ",
          "MlJobStats",
          "[]; }>; datafeeds(datafeedId?: string | undefined): Promise<{ count: number; datafeeds: ",
          "MlDatafeed",
          "[]; }>; datafeedStats(datafeedId?: string | undefined): Promise<{ count: number; datafeeds: ",
          "MlDatafeedStats",
          "[]; }>; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.DatafeedStats",
        "type": "Type",
        "tags": [],
        "label": "DatafeedStats",
        "description": [],
        "signature": [
          "MlDatafeedStats"
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/datafeed_stats.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.Job",
        "type": "Type",
        "tags": [],
        "label": "Job",
        "description": [],
        "signature": [
          "MlJob"
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.JobService",
        "type": "Type",
        "tags": [],
        "label": "JobService",
        "description": [],
        "signature": [
          "{ jobsSummary: (jobIds?: string[]) => Promise<",
          {
            "pluginId": "ml",
            "scope": "common",
            "docId": "kibMlPluginApi",
            "section": "def-common.MlSummaryJob",
            "text": "MlSummaryJob"
          },
          "[]>; forceStartDatafeeds: (datafeedIds: string[], start?: number | undefined, end?: number | undefined) => Promise<",
          "Results",
          ">; stopDatafeeds: (datafeedIds: string[]) => Promise<",
          "Results",
          ">; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.MlSystem",
        "type": "Type",
        "tags": [],
        "label": "MlSystem",
        "description": [],
        "signature": [
          "{ mlCapabilities(): Promise<",
          "MlCapabilitiesResponse",
          ">; mlInfo(): Promise<",
          "MlInfoResponse",
          ">; mlAnomalySearch<T>(searchParams: any, jobIds: string[]): Promise<",
          "SearchResponse",
          "<T, Record<string, ",
          "AggregationsAggregate",
          ">>>; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.Modules",
        "type": "Type",
        "tags": [],
        "label": "Modules",
        "description": [],
        "signature": [
          "{ recognize: (indexPattern: string, moduleTagFilters?: string[] | undefined) => Promise<",
          "RecognizeResult",
          "[]>; getModule: (id: string, moduleTagFilters?: string[] | undefined, prefix?: string) => Promise<",
          "Module",
          ">; listModules: (moduleTagFilters?: string[] | undefined) => Promise<",
          "Module",
          "[]>; setup(payload: ",
          "ModuleSetupPayload",
          "): Promise<",
          "DataRecognizerConfigResponse",
          ">; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.ResultsService",
        "type": "Type",
        "tags": [],
        "label": "ResultsService",
        "description": [],
        "signature": [
          "{ getAnomaliesTableData: (jobIds: string[], criteriaFields: ",
          "CriteriaField",
          "[], influencers: Influencer[], aggregationInterval: string, threshold: number, earliestMs: number, latestMs: number, dateFormatTz: string, maxRecords?: number, maxExamples?: number, influencersFilterQuery?: any, functionDescription?: string | undefined) => Promise<{ anomalies: ",
          {
            "pluginId": "@kbn/ml-anomaly-utils",
            "scope": "common",
            "docId": "kibKbnMlAnomalyUtilsPluginApi",
            "section": "def-common.MlAnomaliesTableRecord",
            "text": "MlAnomaliesTableRecord"
          },
          "[]; interval: string; examplesByJobId?: { [key: string]: any; } | undefined; }>; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.SummaryJobState",
        "type": "Type",
        "tags": [],
        "label": "SummaryJobState",
        "description": [],
        "signature": [
          "MlJobState",
          " | ",
          "JobActionState"
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-server.TrainedModels",
        "type": "Type",
        "tags": [],
        "label": "TrainedModels",
        "description": [],
        "signature": [
          "{ getTrainedModels(params: ",
          "MlGetTrainedModelsRequest",
          "): Promise<",
          "MlGetTrainedModelsResponse",
          ">; getTrainedModelsStats(params: ",
          "MlGetTrainedModelsStatsRequest",
          "): Promise<",
          "MlGetTrainedModelsStatsResponse",
          ">; startTrainedModelDeployment(params: ",
          "MlStartTrainedModelDeploymentRequest",
          "): Promise<",
          "MlStartTrainedModelDeploymentResponse",
          ">; stopTrainedModelDeployment(params: ",
          "MlStopTrainedModelDeploymentRequest",
          "): Promise<",
          "MlStopTrainedModelDeploymentResponse",
          ">; inferTrainedModel(params: ",
          "MlInferTrainedModelRequest",
          "): Promise<",
          "MlInferTrainedModelResponse",
          ">; deleteTrainedModel(params: ",
          "MlDeleteTrainedModelRequest",
          "): Promise<",
          "AcknowledgedResponseBase",
          ">; updateTrainedModelDeployment(params: ",
          "UpdateTrainedModelDeploymentRequest",
          "): Promise<",
          "UpdateTrainedModelDeploymentResponse",
          ">; putTrainedModel(params: ",
          "MlPutTrainedModelRequest",
          "): Promise<",
          "MlTrainedModelConfig",
          ">; getELSER(params?: ",
          {
            "pluginId": "@kbn/ml-trained-models-utils",
            "scope": "common",
            "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
            "section": "def-common.GetModelDownloadConfigOptions",
            "text": "GetModelDownloadConfigOptions"
          },
          " | undefined): Promise<",
          {
            "pluginId": "@kbn/ml-trained-models-utils",
            "scope": "common",
            "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
            "section": "def-common.ModelDefinitionResponse",
            "text": "ModelDefinitionResponse"
          },
          ">; getCuratedModelConfig(modelName: ",
          {
            "pluginId": "@kbn/ml-trained-models-utils",
            "scope": "common",
            "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
            "section": "def-common.ElasticCuratedModelName",
            "text": "ElasticCuratedModelName"
          },
          ", options?: ",
          {
            "pluginId": "@kbn/ml-trained-models-utils",
            "scope": "common",
            "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
            "section": "def-common.GetModelDownloadConfigOptions",
            "text": "GetModelDownloadConfigOptions"
          },
          " | undefined): Promise<",
          {
            "pluginId": "@kbn/ml-trained-models-utils",
            "scope": "common",
            "docId": "kibKbnMlTrainedModelsUtilsPluginApi",
            "section": "def-common.ModelDefinitionResponse",
            "text": "ModelDefinitionResponse"
          },
          ">; installElasticModel(modelId: string): Promise<",
          "MlTrainedModelConfig",
          ">; }"
        ],
        "path": "x-pack/plugins/ml/server/shared.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "ml",
      "id": "def-server.MlPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "MlPluginSetup",
      "description": [],
      "signature": [
        "JobServiceProvider",
        " & ",
        "AnomalyDetectorsProvider",
        " & ",
        "MlSystemProvider",
        " & ",
        "ModulesProvider",
        " & ",
        "ResultsServiceProvider",
        " & { alertingServiceProvider(savedObjectsClient: ",
        {
          "pluginId": "@kbn/core-saved-objects-api-server",
          "scope": "common",
          "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
          "section": "def-common.SavedObjectsClientContract",
          "text": "SavedObjectsClientContract"
        },
        ", request: ",
        {
          "pluginId": "@kbn/core-http-server",
          "scope": "common",
          "docId": "kibKbnCoreHttpServerPluginApi",
          "section": "def-common.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>): { preview: (args_0: Readonly<{} & { timeRange: string; alertParams: Readonly<{} & { severity: number; jobSelection: Readonly<{} & { groupIds: string[]; jobIds: string[]; }>; resultType: \"record\" | \"bucket\" | \"influencer\"; includeInterim: boolean; lookbackInterval: string | null; topNBuckets: number | null; }>; sampleSize: number; }>) => Promise<any>; execute: (params: Readonly<{} & { severity: number; jobSelection: Readonly<{} & { groupIds: string[]; jobIds: string[]; }>; resultType: \"record\" | \"bucket\" | \"influencer\"; includeInterim: boolean; lookbackInterval: string | null; topNBuckets: number | null; }>, spaceId: string, state?: ",
        "AnomalyDetectionRuleState",
        " | undefined) => Promise<{ payload: ",
        "AnomalyDetectionAlertPayload",
        "; context: ",
        "AnomalyDetectionAlertContext",
        "; name: string; isHealthy: boolean; stateUpdate: ",
        "AnomalyDetectionRuleState",
        "; } | undefined>; }; } & ",
        "TrainedModelsProvider"
      ],
      "path": "x-pack/plugins/ml/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "ml",
      "id": "def-server.MlPluginStart",
      "type": "Type",
      "tags": [],
      "label": "MlPluginStart",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "x-pack/plugins/ml/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "ml",
        "id": "def-common.composeValidators",
        "type": "Function",
        "tags": [],
        "label": "composeValidators",
        "description": [
          "\nComposes multiple validators into a single function"
        ],
        "signature": [
          "(validators: ((value: any) => { [key: string]: any; } | null)[]) => (value: any) => { [key: string]: any; } | null"
        ],
        "path": "x-pack/plugins/ml/common/util/validators.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-common.composeValidators.$1",
            "type": "Array",
            "tags": [],
            "label": "validators",
            "description": [],
            "signature": [
              "((value: any) => { [key: string]: any; } | null)[]"
            ],
            "path": "x-pack/plugins/ml/common/util/validators.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-common.getDefaultCapabilities",
        "type": "Function",
        "tags": [],
        "label": "getDefaultCapabilities",
        "description": [],
        "signature": [
          "() => ",
          "MlCapabilities"
        ],
        "path": "x-pack/plugins/ml/common/types/capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-common.patternValidator",
        "type": "Function",
        "tags": [],
        "label": "patternValidator",
        "description": [
          "\nProvides a validator function for checking against pattern."
        ],
        "signature": [
          "(pattern: RegExp) => (value: string) => { pattern: { matchPattern: string; }; } | null"
        ],
        "path": "x-pack/plugins/ml/common/util/validators.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-common.patternValidator.$1",
            "type": "Object",
            "tags": [],
            "label": "pattern",
            "description": [],
            "signature": [
              "RegExp"
            ],
            "path": "x-pack/plugins/ml/common/util/validators.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "ml",
        "id": "def-common.MlSummaryJob",
        "type": "Interface",
        "tags": [],
        "label": "MlSummaryJob",
        "description": [
          "\nA summary of an anomaly detection job."
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe identifier for the anomaly detection job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nA description of the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.groups",
            "type": "Array",
            "tags": [],
            "label": "groups",
            "description": [
              "\nA list of job groups. A job can belong to no groups, one or many."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.processed_record_count",
            "type": "number",
            "tags": [],
            "label": "processed_record_count",
            "description": [
              "\nThe number of input documents that have been processed by the anomaly detection job.\nThis value includes documents with missing fields, since they are nonetheless analyzed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.memory_status",
            "type": "string",
            "tags": [],
            "label": "memory_status",
            "description": [
              "\nThe status of the mathematical models, which can take the values ok, soft_limit or hard_limit."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.jobState",
            "type": "CompoundType",
            "tags": [],
            "label": "jobState",
            "description": [
              "\nThe status of the job."
            ],
            "signature": [
              "MlJobState",
              " | ",
              "JobActionState"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.datafeedIndices",
            "type": "Array",
            "tags": [],
            "label": "datafeedIndices",
            "description": [
              "\nAn array of index names used by the datafeed. Wildcards are supported."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.hasDatafeed",
            "type": "boolean",
            "tags": [],
            "label": "hasDatafeed",
            "description": [
              "\nFlag indicating whether a datafeed exists for the job."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.datafeedId",
            "type": "string",
            "tags": [],
            "label": "datafeedId",
            "description": [
              "\nThe identifier for the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.datafeedState",
            "type": "string",
            "tags": [],
            "label": "datafeedState",
            "description": [
              "\nThe status of the datafeed."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.latestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestTimestampMs",
            "description": [
              "\nThe timestamp of the latest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.earliestTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestTimestampMs",
            "description": [
              "\nThe timestamp of the earliest chronologically input document."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.latestResultsTimestampMs",
            "type": "number",
            "tags": [],
            "label": "latestResultsTimestampMs",
            "description": [
              "\nThe latest of the timestamp of the latest chronologically input document or the latest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.fullJob",
            "type": "Object",
            "tags": [],
            "label": "fullJob",
            "description": [
              "\nUsed in older implementations of the job config, where the datafeed was placed inside the job for convenience.\nThis will be populated if the job's id has been passed to the /internal/ml/jobs/jobs_summary endpoint."
            ],
            "signature": [
              "CombinedJob",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.nodeName",
            "type": "string",
            "tags": [],
            "label": "nodeName",
            "description": [
              "\nThe name of the node that runs the job."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.auditMessage",
            "type": "Object",
            "tags": [],
            "label": "auditMessage",
            "description": [
              "\nAudit message for the job."
            ],
            "signature": [
              "Partial<",
              "AuditMessage",
              "> | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.isSingleMetricViewerJob",
            "type": "boolean",
            "tags": [],
            "label": "isSingleMetricViewerJob",
            "description": [
              "\nFlag indicating whether results of the job can be viewed in the Single Metric Viewer."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.isNotSingleMetricViewerJobMessage",
            "type": "string",
            "tags": [],
            "label": "isNotSingleMetricViewerJobMessage",
            "description": [
              "\nFor jobs which cannot be viewed in the Single Metric Viewer, a message indicating the reason why\nresults for the job cannot be viewed in the Single Metric Viewer."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.blocked",
            "type": "Object",
            "tags": [],
            "label": "blocked",
            "description": [
              "\nWhen present, it explains that a task is currently running on the job, which is stopping\nany other actions from being performed on the job."
            ],
            "signature": [
              "MlJobBlocked",
              " | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.latestTimestampSortValue",
            "type": "number",
            "tags": [],
            "label": "latestTimestampSortValue",
            "description": [
              "\nValue of the latest timestamp for the job used for sorting."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.earliestStartTimestampMs",
            "type": "number",
            "tags": [],
            "label": "earliestStartTimestampMs",
            "description": [
              "\nThe earlist of the timestamp of the earliest chronologically input document or the earliest bucket that was processed."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.awaitingNodeAssignment",
            "type": "boolean",
            "tags": [],
            "label": "awaitingNodeAssignment",
            "description": [
              "\nIndicates whether the job is currently awaiting assignment to a node before opening."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.alertingRules",
            "type": "Array",
            "tags": [],
            "label": "alertingRules",
            "description": [
              "\nList of anomaly detection alerting rules configured for the job."
            ],
            "signature": [
              "MlAnomalyDetectionAlertRule",
              "[] | undefined"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.jobTags",
            "type": "Object",
            "tags": [],
            "label": "jobTags",
            "description": [
              "\nList of tags that have been added to the job."
            ],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.bucketSpanSeconds",
            "type": "number",
            "tags": [],
            "label": "bucketSpanSeconds",
            "description": [
              "\nThe size of the interval that the analysis is aggregated into, typically between 5m and 1h."
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "ml",
            "id": "def-common.MlSummaryJob.customSettings",
            "type": "Any",
            "tags": [],
            "label": "customSettings",
            "description": [
              "\nAdvanced configuration option. Contains custom meta data about the job. For example, it can contain custom URL information."
            ],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "ml",
        "id": "def-common.DATAFEED_STATE",
        "type": "Enum",
        "tags": [],
        "label": "DATAFEED_STATE",
        "description": [
          "\nThe status of the datafeed."
        ],
        "path": "x-pack/plugins/ml/common/constants/states.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ml",
        "id": "def-common.JOB_STATE",
        "type": "Enum",
        "tags": [],
        "label": "JOB_STATE",
        "description": [
          "\nThe status of the anomaly detection job."
        ],
        "path": "x-pack/plugins/ml/common/constants/states.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "ml",
        "id": "def-common.SummaryJobState",
        "type": "Type",
        "tags": [],
        "label": "SummaryJobState",
        "description": [],
        "signature": [
          "MlJobState",
          " | ",
          "JobActionState"
        ],
        "path": "x-pack/plugins/ml/common/types/anomaly_detection_jobs/summary_job.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "ml",
        "id": "def-common.ML_ALERT_TYPES",
        "type": "Object",
        "tags": [],
        "label": "ML_ALERT_TYPES",
        "description": [],
        "signature": [
          "{ readonly ANOMALY_DETECTION: \"xpack.ml.anomaly_detection_alert\"; readonly AD_JOBS_HEALTH: \"xpack.ml.anomaly_detection_jobs_health\"; }"
        ],
        "path": "x-pack/plugins/ml/common/constants/alerts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}