{
  "id": "logsShared",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "logsShared",
        "id": "def-public.getLogViewReferenceFromUrl",
        "type": "Function",
        "tags": [],
        "label": "getLogViewReferenceFromUrl",
        "description": [],
        "signature": [
          "({ logViewKey, sourceIdKey, toastsService, urlStateStorage, }: LogViewUrlStateDependencies) => { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } | null"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.getLogViewReferenceFromUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  logViewKey,\n  sourceIdKey,\n  toastsService,\n  urlStateStorage,\n}",
            "description": [],
            "signature": [
              "LogViewUrlStateDependencies"
            ],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.initializeFromUrl",
        "type": "Function",
        "tags": [],
        "label": "initializeFromUrl",
        "description": [],
        "signature": [
          "({ logViewKey, sourceIdKey, toastsService, urlStateStorage, }: LogViewUrlStateDependencies) => ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          ">"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.initializeFromUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    logViewKey = defaultLogViewKey,\n    sourceIdKey = defaultLegacySourceIdKey,\n    toastsService,\n    urlStateStorage,\n  }",
            "description": [],
            "signature": [
              "LogViewUrlStateDependencies"
            ],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.listenForUrlChanges",
        "type": "Function",
        "tags": [],
        "label": "listenForUrlChanges",
        "description": [],
        "signature": [
          "({ urlStateStorage, logViewKey, }: { urlStateStorage: ",
          {
            "pluginId": "kibanaUtils",
            "scope": "public",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-public.IKbnUrlStateStorage",
            "text": "IKbnUrlStateStorage"
          },
          "; logViewKey?: string | undefined; }) => ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          ">"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.listenForUrlChanges.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    urlStateStorage,\n    logViewKey = defaultLogViewKey,\n  }",
            "description": [],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-public.listenForUrlChanges.$1.urlStateStorage",
                "type": "Object",
                "tags": [],
                "label": "urlStateStorage",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaUtils",
                    "scope": "public",
                    "docId": "kibKibanaUtilsPluginApi",
                    "section": "def-public.IKbnUrlStateStorage",
                    "text": "IKbnUrlStateStorage"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.listenForUrlChanges.$1.logViewKey",
                "type": "string",
                "tags": [],
                "label": "logViewKey",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogColumnHeader",
        "type": "Function",
        "tags": [],
        "label": "LogColumnHeader",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogColumnHeader.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogColumnHeadersWrapper",
        "type": "Function",
        "tags": [],
        "label": "LogColumnHeadersWrapper",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogColumnHeadersWrapper.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryColumn",
        "type": "Function",
        "tags": [],
        "label": "LogEntryColumn",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryColumn.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryContextMenu",
        "type": "Function",
        "tags": [],
        "label": "LogEntryContextMenu",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryContextMenu.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryFieldColumn",
        "type": "Function",
        "tags": [],
        "label": "LogEntryFieldColumn",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryFieldColumn.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryFlyout",
        "type": "Function",
        "tags": [],
        "label": "LogEntryFlyout",
        "description": [],
        "signature": [
          "({ logEntryId, onCloseFlyout, onSetFieldFilter, logViewReference, }: ",
          "LogEntryFlyoutProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_entry_flyout/log_entry_flyout.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryFlyout.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  logEntryId,\n  onCloseFlyout,\n  onSetFieldFilter,\n  logViewReference,\n}",
            "description": [],
            "signature": [
              "LogEntryFlyoutProps"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_entry_flyout/log_entry_flyout.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryMessageColumn",
        "type": "Function",
        "tags": [],
        "label": "LogEntryMessageColumn",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryMessageColumn.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryRowWrapper",
        "type": "Function",
        "tags": [],
        "label": "LogEntryRowWrapper",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryRowWrapper.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryTimestampColumn",
        "type": "Function",
        "tags": [],
        "label": "LogEntryTimestampColumn",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryTimestampColumn.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogHighlightsStateProvider",
        "type": "Function",
        "tags": [],
        "label": "LogHighlightsStateProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<React.PropsWithChildren<UseLogHighlightsStateProps>>"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_highlights/log_highlights.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogHighlightsStateProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogHighlightsStateProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogPositionStateProvider",
        "type": "Function",
        "tags": [],
        "label": "LogPositionStateProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<React.PropsWithChildren<{ logStreamPageState: ",
          "State",
          "<any, any, any, any, any> & { value: { hasLogViewIndices: \"initialized\"; }; }; logStreamPageCallbacks: ",
          "LogStreamPageCallbacks",
          "; }>>"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_position/use_log_position.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogPositionStateProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogPositionStateProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogStream",
        "type": "Function",
        "tags": [],
        "label": "LogStream",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogStream.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogStreamProvider",
        "type": "Function",
        "tags": [],
        "label": "LogStreamProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<React.PropsWithChildren<LogStreamProps>>"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_stream/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogStreamProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogStreamProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogViewProvider",
        "type": "Function",
        "tags": [],
        "label": "LogViewProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<React.PropsWithChildren<{ initialLogViewReference?: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } | undefined; logViews: ",
          "ILogViewsClient",
          "; useDevTools?: boolean | undefined; initializeFromUrl?: ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          "> | undefined; updateContextInUrl?: ((context: ",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), _event: ",
          "LogViewEvent",
          ") => void) | undefined; listenForUrlChanges?: ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          "> | undefined; }>>"
        ],
        "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogViewProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogViewProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.ScrollableLogTextStreamView",
        "type": "Function",
        "tags": [],
        "label": "ScrollableLogTextStreamView",
        "description": [],
        "signature": [
          "(props: any) => JSX.Element"
        ],
        "path": "x-pack/plugins/logs_shared/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.ScrollableLogTextStreamView.$1",
            "type": "Any",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/dynamic.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.updateContextInUrl",
        "type": "Function",
        "tags": [],
        "label": "updateContextInUrl",
        "description": [],
        "signature": [
          "({ urlStateStorage, logViewKey }: LogViewUrlStateDependencies) => (context: ",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), _event: ",
          "LogViewEvent",
          ") => void"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.updateContextInUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{ urlStateStorage, logViewKey = defaultLogViewKey }",
            "description": [],
            "signature": [
              "LogViewUrlStateDependencies"
            ],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/url_state_storage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useColumnWidths",
        "type": "Function",
        "tags": [],
        "label": "useColumnWidths",
        "description": [
          "\nThis hook calculates the column widths based on the given configuration. It\ndepends on the `CharacterDimensionsProbe` it returns being rendered so it can\nmeasure the monospace character size."
        ],
        "signature": [
          "({ columnConfigurations, scale, timeFormat, }: { columnConfigurations: ",
          "LogColumnRenderConfiguration",
          "[]; scale: ",
          "TextScale",
          "; timeFormat?: ",
          "TimeFormat",
          " | undefined; }) => { columnWidths: ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogEntryColumnWidths",
            "text": "LogEntryColumnWidths"
          },
          "; CharacterDimensionsProbe: () => JSX.Element; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useColumnWidths.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  columnConfigurations,\n  scale,\n  timeFormat = 'time',\n}",
            "description": [],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useColumnWidths.$1.columnConfigurations",
                "type": "Array",
                "tags": [],
                "label": "columnConfigurations",
                "description": [],
                "signature": [
                  "LogColumnRenderConfiguration",
                  "[]"
                ],
                "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useColumnWidths.$1.scale",
                "type": "CompoundType",
                "tags": [],
                "label": "scale",
                "description": [],
                "signature": [
                  "\"small\" | \"medium\" | \"large\""
                ],
                "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useColumnWidths.$1.timeFormat",
                "type": "CompoundType",
                "tags": [],
                "label": "timeFormat",
                "description": [],
                "signature": [
                  "TimeFormat",
                  " | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogEntryFlyout",
        "type": "Function",
        "tags": [],
        "label": "useLogEntryFlyout",
        "description": [],
        "signature": [
          "(logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }) => { openLogEntryFlyout: (logEntryId: any) => void; closeLogEntryFlyout: () => void; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_entry_flyout/log_entry_flyout.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogEntryFlyout.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "logViewReference",
            "description": [],
            "signature": [
              "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_entry_flyout/log_entry_flyout.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogHighlightsStateContext",
        "type": "Function",
        "tags": [],
        "label": "useLogHighlightsStateContext",
        "description": [],
        "signature": [
          "() => { highlightTerms: string[]; setHighlightTerms: React.Dispatch<React.SetStateAction<string[]>>; logEntryHighlights: ({ topCursor: null; bottomCursor: null; entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; } | { topCursor: { time: number; tiebreaker: number; }; bottomCursor: { time: number; tiebreaker: number; }; entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; })[]; logEntryHighlightsById: Record<string, { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]>; logSummaryHighlights: { start: number; end: number; buckets: ({ start: number; end: number; entriesCount: number; } & { representativeKey: { time: number; tiebreaker: number; }; })[]; }[]; loadLogEntryHighlightsRequest: ",
          "PromiseState",
          "<{ data: ({ topCursor: null; bottomCursor: null; entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; } | { topCursor: { time: number; tiebreaker: number; }; bottomCursor: { time: number; tiebreaker: number; }; entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; })[]; }, unknown>; loadLogSummaryHighlightsRequest: ",
          "PromiseState",
          "<{ data: { start: number; end: number; buckets: ({ start: number; end: number; entriesCount: number; } & { representativeKey: { time: number; tiebreaker: number; }; })[]; }[]; }, unknown>; currentHighlightKey: ",
          "UniqueTimeKey",
          " | null; hasPreviousHighlight: boolean; hasNextHighlight: boolean; goToPreviousHighlight: () => void; goToNextHighlight: () => void; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_highlights/log_highlights.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogPositionStateContext",
        "type": "Function",
        "tags": [],
        "label": "useLogPositionStateContext",
        "description": [],
        "signature": [
          "() => DateRange & { targetPosition: TimeKeyOrNull; isStreaming: boolean; firstVisiblePosition: TimeKeyOrNull; pagesBeforeStart: number; pagesAfterEnd: number; visibleMidpoint: TimeKeyOrNull; visibleMidpointTime: number | null; visibleTimeInterval: { start: number; end: number; } | null; } & ",
          "LogPositionCallbacks"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_position/use_log_position.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogStreamContext",
        "type": "Function",
        "tags": [],
        "label": "useLogStreamContext",
        "description": [],
        "signature": [
          "() => { fetchEntries: () => void; fetchNextEntries: FetchPageCallback; fetchPreviousEntries: FetchPageCallback; fetchNewestEntries: () => void; isLoadingMore: boolean; isReloading: boolean; entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; topCursor: { time: number; tiebreaker: number; } | null; bottomCursor: { time: number; tiebreaker: number; } | null; hasMoreBefore: boolean; hasMoreAfter: boolean; lastLoadedTime?: Date | undefined; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_stream/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogSummary",
        "type": "Function",
        "tags": [],
        "label": "useLogSummary",
        "description": [],
        "signature": [
          "(logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, startTimestamp: number | null, endTimestamp: number | null, filterQuery: string | null) => { buckets: { start: number; end: number; entriesCount: number; }[]; start: number | null; end: number | null; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogSummary.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "logViewReference",
            "description": [],
            "signature": [
              "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogSummary.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "startTimestamp",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogSummary.$3",
            "type": "CompoundType",
            "tags": [],
            "label": "endTimestamp",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogSummary.$4",
            "type": "CompoundType",
            "tags": [],
            "label": "filterQuery",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogView",
        "type": "Function",
        "tags": [],
        "label": "useLogView",
        "description": [],
        "signature": [
          "({ initialLogViewReference, logViews, useDevTools, initializeFromUrl, updateContextInUrl, listenForUrlChanges, }: { initialLogViewReference?: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } | undefined; logViews: ",
          "ILogViewsClient",
          "; useDevTools?: boolean | undefined; initializeFromUrl?: ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          "> | undefined; updateContextInUrl?: ((context: ",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), _event: ",
          "LogViewEvent",
          ") => void) | undefined; listenForUrlChanges?: ",
          "InvokeCreator",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, any, ",
          "LogViewEvent",
          "> | undefined; }) => { logViewStateService: ",
          "Interpreter",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), any, ",
          "LogViewEvent",
          ", ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; logViewStateNotifications: ",
          "NotificationChannel",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewNotificationEvent",
            "text": "LogViewNotificationEvent"
          },
          ">; hasFailedLoading: boolean; hasFailedLoadingLogView: boolean; hasFailedLoadingLogViewStatus: boolean; hasFailedResolvingLogView: boolean; latestLoadLogViewFailures: Error[]; isUninitialized: boolean; isLoading: boolean; isLoadingLogView: boolean; isLoadingLogViewStatus: boolean; isResolvingLogView: boolean; logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }; logView: ({ id: string; origin: \"internal\" | \"inline\" | \"stored\" | \"infra-source-stored\" | \"infra-source-internal\" | \"infra-source-fallback\"; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } & { updatedAt?: number | undefined; version?: string | undefined; }) | undefined; resolvedLogView: ",
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.ResolvedLogView",
            "text": "ResolvedLogView"
          },
          " | undefined; logViewStatus: { index: \"missing\" | \"unknown\" | \"empty\" | \"available\"; } | undefined; derivedDataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | undefined; isInlineLogView: boolean; isPersistedLogView: boolean; load: () => ",
          "State",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; retry: () => ",
          "State",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; update: (logViewAttributes: Partial<{ name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }>) => Promise<void>; changeLogViewReference: (logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }) => void; revertToDefaultLogView: () => void; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.useLogView.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  initialLogViewReference,\n  logViews,\n  useDevTools = isDevMode(),\n  initializeFromUrl,\n  updateContextInUrl,\n  listenForUrlChanges,\n}",
            "description": [],
            "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.initialLogViewReference",
                "type": "CompoundType",
                "tags": [],
                "label": "initialLogViewReference",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.logViews",
                "type": "Object",
                "tags": [],
                "label": "logViews",
                "description": [],
                "signature": [
                  "ILogViewsClient"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.useDevTools",
                "type": "CompoundType",
                "tags": [],
                "label": "useDevTools",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.initializeFromUrl",
                "type": "Function",
                "tags": [],
                "label": "initializeFromUrl",
                "description": [],
                "signature": [
                  "InvokeCreator",
                  "<",
                  "LogViewContextWithReference",
                  " | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  " & ",
                  "LogViewContextWithStatus",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  "), ",
                  "LogViewEvent",
                  ", any, any, ",
                  "LogViewEvent",
                  "> | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.updateContextInUrl",
                "type": "Function",
                "tags": [],
                "label": "updateContextInUrl",
                "description": [],
                "signature": [
                  "((context: ",
                  "LogViewContextWithReference",
                  " | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  " & ",
                  "LogViewContextWithStatus",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  "), _event: ",
                  "LogViewEvent",
                  ") => void) | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-public.useLogView.$1.listenForUrlChanges",
                "type": "Function",
                "tags": [],
                "label": "listenForUrlChanges",
                "description": [],
                "signature": [
                  "InvokeCreator",
                  "<",
                  "LogViewContextWithReference",
                  " | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithResolvedLogView",
                    "text": "LogViewContextWithResolvedLogView"
                  },
                  " & ",
                  "LogViewContextWithStatus",
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  ") | (",
                  "LogViewContextWithReference",
                  " & ",
                  "LogViewContextWithLogView",
                  " & ",
                  {
                    "pluginId": "logsShared",
                    "scope": "public",
                    "docId": "kibLogsSharedPluginApi",
                    "section": "def-public.LogViewContextWithError",
                    "text": "LogViewContextWithError"
                  },
                  "), ",
                  "LogViewEvent",
                  ", any, any, ",
                  "LogViewEvent",
                  "> | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.useLogViewContext",
        "type": "Function",
        "tags": [],
        "label": "useLogViewContext",
        "description": [],
        "signature": [
          "() => { logViewStateService: ",
          "Interpreter",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), any, ",
          "LogViewEvent",
          ", ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; logViewStateNotifications: ",
          "NotificationChannel",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewNotificationEvent",
            "text": "LogViewNotificationEvent"
          },
          ">; hasFailedLoading: boolean; hasFailedLoadingLogView: boolean; hasFailedLoadingLogViewStatus: boolean; hasFailedResolvingLogView: boolean; latestLoadLogViewFailures: Error[]; isUninitialized: boolean; isLoading: boolean; isLoadingLogView: boolean; isLoadingLogViewStatus: boolean; isResolvingLogView: boolean; logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }; logView: ({ id: string; origin: \"internal\" | \"inline\" | \"stored\" | \"infra-source-stored\" | \"infra-source-internal\" | \"infra-source-fallback\"; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } & { updatedAt?: number | undefined; version?: string | undefined; }) | undefined; resolvedLogView: ",
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.ResolvedLogView",
            "text": "ResolvedLogView"
          },
          " | undefined; logViewStatus: { index: \"missing\" | \"unknown\" | \"empty\" | \"available\"; } | undefined; derivedDataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | undefined; isInlineLogView: boolean; isPersistedLogView: boolean; load: () => ",
          "State",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; retry: () => ",
          "State",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", any, ",
          "LogViewTypestate",
          ", ",
          "ResolveTypegenMeta",
          "<",
          "TypegenDisabled",
          ", ",
          "LogViewEvent",
          ", ",
          "BaseActionObject",
          ", ",
          "ServiceMap",
          ">>; update: (logViewAttributes: Partial<{ name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }>) => Promise<void>; changeLogViewReference: (logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }) => void; revertToDefaultLogView: () => void; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/hooks/use_log_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.WithSummary",
        "type": "Function",
        "tags": [],
        "label": "WithSummary",
        "description": [],
        "signature": [
          "({ serializedParsedQuery, children }: ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.WithSummaryProps",
            "text": "WithSummaryProps"
          },
          ") => ",
          "RendererResult"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/with_summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.WithSummary.$1",
            "type": "Object",
            "tags": [],
            "label": "{ serializedParsedQuery, children }",
            "description": [],
            "signature": [
              {
                "pluginId": "logsShared",
                "scope": "public",
                "docId": "kibLogsSharedPluginApi",
                "section": "def-public.WithSummaryProps",
                "text": "WithSummaryProps"
              }
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/with_summary.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryColumnWidths",
        "type": "Interface",
        "tags": [],
        "label": "LogEntryColumnWidths",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryColumnWidths.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[columnId: string]: LogEntryColumnWidth",
            "description": [],
            "signature": [
              "[columnId: string]:  ",
              "LogEntryColumnWidth"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryColumnWidths.iconColumnId",
            "type": "Object",
            "tags": [],
            "label": "[iconColumnId]",
            "description": [],
            "signature": [
              "{ baseWidth: string; growWeight: number; shrinkWeight: number; }"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogEntryStreamItem",
        "type": "Interface",
        "tags": [],
        "label": "LogEntryStreamItem",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/item.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryStreamItem.kind",
            "type": "string",
            "tags": [],
            "label": "kind",
            "description": [],
            "signature": [
              "\"logEntry\""
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/item.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryStreamItem.logEntry",
            "type": "Object",
            "tags": [],
            "label": "logEntry",
            "description": [],
            "signature": [
              "{ id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/item.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogEntryStreamItem.highlights",
            "type": "Array",
            "tags": [],
            "label": "highlights",
            "description": [],
            "signature": [
              "{ id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/item.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogsSharedClientSetupDeps",
        "type": "Interface",
        "tags": [],
        "label": "LogsSharedClientSetupDeps",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogsSharedClientStartDeps",
        "type": "Interface",
        "tags": [],
        "label": "LogsSharedClientStartDeps",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogsSharedClientStartDeps.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/logs_shared/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogsSharedClientStartDeps.dataViews",
            "type": "Object",
            "tags": [],
            "label": "dataViews",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsServicePublic",
                "text": "DataViewsServicePublic"
              }
            ],
            "path": "x-pack/plugins/logs_shared/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogsSharedClientStartDeps.uiActions",
            "type": "Object",
            "tags": [],
            "label": "uiActions",
            "description": [],
            "signature": [
              "{ readonly addTriggerAction: (triggerId: string, action: ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.ActionDefinition",
                "text": "ActionDefinition"
              },
              "<any>) => void; readonly attachAction: (triggerId: string, actionId: string) => void; readonly detachAction: (triggerId: string, actionId: string) => void; readonly registerAction: <Context extends object>(definition: ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.ActionDefinition",
                "text": "ActionDefinition"
              },
              "<Context>) => ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.Action",
                "text": "Action"
              },
              "<Context>; readonly registerTrigger: (trigger: ",
              {
                "pluginId": "@kbn/ui-actions-browser",
                "scope": "common",
                "docId": "kibKbnUiActionsBrowserPluginApi",
                "section": "def-common.Trigger",
                "text": "Trigger"
              },
              ") => void; readonly unregisterAction: (actionId: string) => void; readonly getTrigger: (triggerId: string) => ",
              "TriggerContract",
              "<object>; readonly hasAction: (actionId: string) => boolean; readonly getAction: (id: string) => ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.Action",
                "text": "Action"
              },
              "<object>; readonly getTriggerActions: (triggerId: string) => ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.Action",
                "text": "Action"
              },
              "<object>[]; readonly getTriggerCompatibleActions: (triggerId: string, context: object) => Promise<",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.Action",
                "text": "Action"
              },
              "<object>[]>; readonly executeTriggerActions: (triggerId: string, context: object) => Promise<void>; readonly clear: () => void; readonly fork: () => ",
              {
                "pluginId": "uiActions",
                "scope": "public",
                "docId": "kibUiActionsPluginApi",
                "section": "def-public.UiActionsService",
                "text": "UiActionsService"
              },
              "; }"
            ],
            "path": "x-pack/plugins/logs_shared/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogStreamProps",
        "type": "Interface",
        "tags": [],
        "label": "LogStreamProps",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogStreamProps",
            "text": "LogStreamProps"
          },
          " extends LogStreamContentProps"
        ],
        "path": "x-pack/plugins/logs_shared/public/components/log_stream/log_stream.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogStreamProps.height",
            "type": "CompoundType",
            "tags": [],
            "label": "height",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "x-pack/plugins/logs_shared/public/components/log_stream/log_stream.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogViewContextWithError",
        "type": "Interface",
        "tags": [],
        "label": "LogViewContextWithError",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogViewContextWithError.error",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "Error"
            ],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogViewContextWithResolvedLogView",
        "type": "Interface",
        "tags": [],
        "label": "LogViewContextWithResolvedLogView",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.LogViewContextWithResolvedLogView.resolvedLogView",
            "type": "Object",
            "tags": [],
            "label": "resolvedLogView",
            "description": [],
            "signature": [
              {
                "pluginId": "logsShared",
                "scope": "common",
                "docId": "kibLogsSharedPluginApi",
                "section": "def-common.ResolvedLogView",
                "text": "ResolvedLogView"
              }
            ],
            "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.WithSummaryProps",
        "type": "Interface",
        "tags": [],
        "label": "WithSummaryProps",
        "description": [],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/with_summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-public.WithSummaryProps.serializedParsedQuery",
            "type": "CompoundType",
            "tags": [],
            "label": "serializedParsedQuery",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/with_summary.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-public.WithSummaryProps.children",
            "type": "Function",
            "tags": [],
            "label": "children",
            "description": [],
            "signature": [
              "(args: { buckets: { start: number; end: number; entriesCount: number; }[]; start: number | null; end: number | null; }) => ",
              "RendererResult"
            ],
            "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/with_summary.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-public.WithSummaryProps.children.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "RenderArgs"
                ],
                "path": "x-pack/plugins/logs_shared/public/utils/typed_react.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "logsShared",
        "id": "def-public.iconColumnId",
        "type": "Uncategorized",
        "tags": [],
        "label": "iconColumnId",
        "description": [],
        "signature": [
          "typeof ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.iconColumnId",
            "text": "iconColumnId"
          }
        ],
        "path": "x-pack/plugins/logs_shared/public/components/logging/log_text_stream/log_entry_column.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogSummaryBuckets",
        "type": "Type",
        "tags": [],
        "label": "LogSummaryBuckets",
        "description": [],
        "signature": [
          "{ start: number; end: number; entriesCount: number; }[]"
        ],
        "path": "x-pack/plugins/logs_shared/public/containers/logs/log_summary/log_summary.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogViewNotificationChannel",
        "type": "Type",
        "tags": [],
        "label": "LogViewNotificationChannel",
        "description": [],
        "signature": [
          "NotificationChannel",
          "<",
          "LogViewContextWithReference",
          " | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithResolvedLogView",
            "text": "LogViewContextWithResolvedLogView"
          },
          " & ",
          "LogViewContextWithStatus",
          ") | (",
          "LogViewContextWithReference",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          ") | (",
          "LogViewContextWithReference",
          " & ",
          "LogViewContextWithLogView",
          " & ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewContextWithError",
            "text": "LogViewContextWithError"
          },
          "), ",
          "LogViewEvent",
          ", ",
          {
            "pluginId": "logsShared",
            "scope": "public",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-public.LogViewNotificationEvent",
            "text": "LogViewNotificationEvent"
          },
          ">"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-public.LogViewNotificationEvent",
        "type": "Type",
        "tags": [],
        "label": "LogViewNotificationEvent",
        "description": [],
        "signature": [
          "{ type: \"LOADING_LOG_VIEW_STARTED\"; logViewReference: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }; } | { type: \"LOADING_LOG_VIEW_SUCCEEDED\"; resolvedLogView: ",
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.ResolvedLogView",
            "text": "ResolvedLogView"
          },
          "; status: { index: \"missing\" | \"unknown\" | \"empty\" | \"available\"; }; } | { type: \"LOADING_LOG_VIEW_FAILED\"; error: Error; }"
        ],
        "path": "x-pack/plugins/logs_shared/public/observability_logs/log_view_state/src/notifications.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "logsShared",
      "id": "def-public.LogsSharedClientSetupExports",
      "type": "Interface",
      "tags": [],
      "label": "LogsSharedClientSetupExports",
      "description": [],
      "path": "x-pack/plugins/logs_shared/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "logsShared",
          "id": "def-public.LogsSharedClientSetupExports.logViews",
          "type": "Object",
          "tags": [],
          "label": "logViews",
          "description": [],
          "signature": [
            "LogViewsServiceSetup"
          ],
          "path": "x-pack/plugins/logs_shared/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "logsShared",
      "id": "def-public.LogsSharedClientStartExports",
      "type": "Interface",
      "tags": [],
      "label": "LogsSharedClientStartExports",
      "description": [],
      "path": "x-pack/plugins/logs_shared/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "logsShared",
          "id": "def-public.LogsSharedClientStartExports.logViews",
          "type": "Object",
          "tags": [],
          "label": "logViews",
          "description": [],
          "signature": [
            "LogViewsServiceStart"
          ],
          "path": "x-pack/plugins/logs_shared/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "logsShared",
        "id": "def-server.LogsSharedLogEntriesDomain",
        "type": "Class",
        "tags": [],
        "label": "LogsSharedLogEntriesDomain",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "server",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-server.LogsSharedLogEntriesDomain",
            "text": "LogsSharedLogEntriesDomain"
          },
          " implements ",
          {
            "pluginId": "logsShared",
            "scope": "server",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-server.ILogsSharedLogEntriesDomain",
            "text": "ILogsSharedLogEntriesDomain"
          }
        ],
        "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "adapter",
                "description": [],
                "signature": [
                  "LogEntriesAdapter"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "libs",
                "description": [],
                "signature": [
                  "Pick<",
                  "LogsSharedBackendLibs",
                  ", \"framework\" | \"getStartServices\">"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.getLogEntriesAround",
            "type": "Function",
            "tags": [],
            "label": "getLogEntriesAround",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, params: ",
              "LogEntriesAroundParams",
              ", columnOverrides?: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined) => Promise<{ entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; hasMoreBefore?: boolean | undefined; hasMoreAfter?: boolean | undefined; }>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntriesAround.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntriesAround.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntriesAround.$3",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "LogEntriesAroundParams"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntriesAround.$4",
                "type": "Array",
                "tags": [],
                "label": "columnOverrides",
                "description": [],
                "signature": [
                  "({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.getLogEntries",
            "type": "Function",
            "tags": [],
            "label": "getLogEntries",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, params: ",
              "LogEntriesParams",
              ", columnOverrides?: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined) => Promise<{ entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; hasMoreBefore?: boolean | undefined; hasMoreAfter?: boolean | undefined; }>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntries.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntries.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntries.$3",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "LogEntriesParams"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntries.$4",
                "type": "Array",
                "tags": [],
                "label": "columnOverrides",
                "description": [],
                "signature": [
                  "({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween",
            "type": "Function",
            "tags": [],
            "label": "getLogSummaryBucketsBetween",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, start: number, end: number, bucketSize: number, filterQuery?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonObject",
                "text": "JsonObject"
              },
              " | undefined) => Promise<{ start: number; end: number; entriesCount: number; }[]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$3",
                "type": "number",
                "tags": [],
                "label": "start",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$4",
                "type": "number",
                "tags": [],
                "label": "end",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$5",
                "type": "number",
                "tags": [],
                "label": "bucketSize",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$6",
                "type": "Object",
                "tags": [],
                "label": "filterQuery",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.JsonObject",
                    "text": "JsonObject"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween",
            "type": "Function",
            "tags": [],
            "label": "getLogSummaryHighlightBucketsBetween",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, startTimestamp: number, endTimestamp: number, bucketSize: number, highlightQueries: string[], filterQuery?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonObject",
                "text": "JsonObject"
              },
              " | undefined) => Promise<({ start: number; end: number; entriesCount: number; } & { representativeKey: { time: number; tiebreaker: number; }; })[][]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$3",
                "type": "number",
                "tags": [],
                "label": "startTimestamp",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$4",
                "type": "number",
                "tags": [],
                "label": "endTimestamp",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$5",
                "type": "number",
                "tags": [],
                "label": "bucketSize",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$6",
                "type": "Array",
                "tags": [],
                "label": "highlightQueries",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$7",
                "type": "Object",
                "tags": [],
                "label": "filterQuery",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.JsonObject",
                    "text": "JsonObject"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets",
            "type": "Function",
            "tags": [],
            "label": "getLogEntryDatasets",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", timestampField: string, indexName: string, startTime: number, endTime: number, runtimeMappings: ",
              "MappingRuntimeFields",
              ") => Promise<string[]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$2",
                "type": "string",
                "tags": [],
                "label": "timestampField",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$3",
                "type": "string",
                "tags": [],
                "label": "indexName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$4",
                "type": "number",
                "tags": [],
                "label": "startTime",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$5",
                "type": "number",
                "tags": [],
                "label": "endTime",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.LogsSharedLogEntriesDomain.getLogEntryDatasets.$6",
                "type": "Object",
                "tags": [],
                "label": "runtimeMappings",
                "description": [],
                "signature": [
                  "MappingRuntimeFields"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "logsShared",
        "id": "def-server.ILogsSharedLogEntriesDomain",
        "type": "Interface",
        "tags": [],
        "label": "ILogsSharedLogEntriesDomain",
        "description": [],
        "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntriesAround",
            "type": "Function",
            "tags": [],
            "label": "getLogEntriesAround",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, params: ",
              "LogEntriesAroundParams",
              ", columnOverrides?: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined) => Promise<{ entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; hasMoreBefore?: boolean | undefined; hasMoreAfter?: boolean | undefined; }>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntriesAround.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntriesAround.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntriesAround.$3",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "LogEntriesAroundParams"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntriesAround.$4",
                "type": "Array",
                "tags": [],
                "label": "columnOverrides",
                "description": [],
                "signature": [
                  "({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntries",
            "type": "Function",
            "tags": [],
            "label": "getLogEntries",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, params: ",
              "LogEntriesParams",
              ", columnOverrides?: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined) => Promise<{ entries: { id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonArray",
                "text": "JsonArray"
              },
              "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }[]; hasMoreBefore?: boolean | undefined; hasMoreAfter?: boolean | undefined; }>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntries.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntries.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntries.$3",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "LogEntriesParams"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntries.$4",
                "type": "Array",
                "tags": [],
                "label": "columnOverrides",
                "description": [],
                "signature": [
                  "({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[] | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween",
            "type": "Function",
            "tags": [],
            "label": "getLogSummaryBucketsBetween",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, start: number, end: number, bucketSize: number, filterQuery?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonObject",
                "text": "JsonObject"
              },
              " | undefined) => Promise<{ start: number; end: number; entriesCount: number; }[]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$3",
                "type": "number",
                "tags": [],
                "label": "start",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$4",
                "type": "number",
                "tags": [],
                "label": "end",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$5",
                "type": "number",
                "tags": [],
                "label": "bucketSize",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryBucketsBetween.$6",
                "type": "Object",
                "tags": [],
                "label": "filterQuery",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.JsonObject",
                    "text": "JsonObject"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween",
            "type": "Function",
            "tags": [],
            "label": "getLogSummaryHighlightBucketsBetween",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", logView: { logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }, startTimestamp: number, endTimestamp: number, bucketSize: number, highlightQueries: string[], filterQuery?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonObject",
                "text": "JsonObject"
              },
              " | undefined) => Promise<({ start: number; end: number; entriesCount: number; } & { representativeKey: { time: number; tiebreaker: number; }; })[][]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "logView",
                "description": [],
                "signature": [
                  "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$3",
                "type": "number",
                "tags": [],
                "label": "startTimestamp",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$4",
                "type": "number",
                "tags": [],
                "label": "endTimestamp",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$5",
                "type": "number",
                "tags": [],
                "label": "bucketSize",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$6",
                "type": "Array",
                "tags": [],
                "label": "highlightQueries",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogSummaryHighlightBucketsBetween.$7",
                "type": "Object",
                "tags": [],
                "label": "filterQuery",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.JsonObject",
                    "text": "JsonObject"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets",
            "type": "Function",
            "tags": [],
            "label": "getLogEntryDatasets",
            "description": [],
            "signature": [
              "(requestContext: ",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", timestampField: string, indexName: string, startTime: number, endTime: number, runtimeMappings: ",
              "MappingRuntimeFields",
              ") => Promise<string[]>"
            ],
            "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$1",
                "type": "Object",
                "tags": [],
                "label": "requestContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-request-handler-context-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                    "section": "def-common.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  }
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$2",
                "type": "string",
                "tags": [],
                "label": "timestampField",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$3",
                "type": "string",
                "tags": [],
                "label": "indexName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$4",
                "type": "number",
                "tags": [],
                "label": "startTime",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$5",
                "type": "number",
                "tags": [],
                "label": "endTime",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-server.ILogsSharedLogEntriesDomain.getLogEntryDatasets.$6",
                "type": "Object",
                "tags": [],
                "label": "runtimeMappings",
                "description": [],
                "signature": [
                  "MappingRuntimeFields"
                ],
                "path": "x-pack/plugins/logs_shared/server/lib/domains/log_entries_domain/log_entries_domain.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "logsShared",
        "id": "def-server.logViewSavedObjectName",
        "type": "string",
        "tags": [],
        "label": "logViewSavedObjectName",
        "description": [],
        "signature": [
          "\"infrastructure-monitoring-log-view\""
        ],
        "path": "x-pack/plugins/logs_shared/server/saved_objects/log_view/log_view_saved_object.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "logsShared",
      "id": "def-server.LogsSharedPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "LogsSharedPluginSetup",
      "description": [],
      "signature": [
        {
          "pluginId": "logsShared",
          "scope": "server",
          "docId": "kibLogsSharedPluginApi",
          "section": "def-server.LogsSharedPluginSetup",
          "text": "LogsSharedPluginSetup"
        },
        " extends ",
        "LogsSharedDomainLibs"
      ],
      "path": "x-pack/plugins/logs_shared/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "logsShared",
          "id": "def-server.LogsSharedPluginSetup.logViews",
          "type": "Object",
          "tags": [],
          "label": "logViews",
          "description": [],
          "signature": [
            "LogViewsServiceSetup"
          ],
          "path": "x-pack/plugins/logs_shared/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "logsShared",
          "id": "def-server.LogsSharedPluginSetup.registerUsageCollectorActions",
          "type": "Function",
          "tags": [],
          "label": "registerUsageCollectorActions",
          "description": [],
          "signature": [
            "(usageCollector: ",
            "UsageCollector",
            ") => void"
          ],
          "path": "x-pack/plugins/logs_shared/server/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "logsShared",
              "id": "def-server.LogsSharedPluginSetup.registerUsageCollectorActions.$1",
              "type": "Object",
              "tags": [],
              "label": "usageCollector",
              "description": [],
              "signature": [
                "UsageCollector"
              ],
              "path": "x-pack/plugins/logs_shared/server/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "logsShared",
      "id": "def-server.LogsSharedPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "LogsSharedPluginStart",
      "description": [],
      "path": "x-pack/plugins/logs_shared/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "logsShared",
          "id": "def-server.LogsSharedPluginStart.logViews",
          "type": "Object",
          "tags": [],
          "label": "logViews",
          "description": [],
          "signature": [
            "LogViewsServiceStart"
          ],
          "path": "x-pack/plugins/logs_shared/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "logsShared",
        "id": "def-common.FetchLogViewError",
        "type": "Class",
        "tags": [],
        "label": "FetchLogViewError",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.FetchLogViewError",
            "text": "FetchLogViewError"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.FetchLogViewError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-common.FetchLogViewError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-common.FetchLogViewError.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "cause",
                "description": [],
                "signature": [
                  "Error | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.FetchLogViewStatusError",
        "type": "Class",
        "tags": [],
        "label": "FetchLogViewStatusError",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.FetchLogViewStatusError",
            "text": "FetchLogViewStatusError"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.FetchLogViewStatusError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-common.FetchLogViewStatusError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-common.FetchLogViewStatusError.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "cause",
                "description": [],
                "signature": [
                  "Error | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.ResolveLogViewError",
        "type": "Class",
        "tags": [],
        "label": "ResolveLogViewError",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.ResolveLogViewError",
            "text": "ResolveLogViewError"
          },
          " extends Error"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolveLogViewError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-common.ResolveLogViewError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-common.ResolveLogViewError.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "cause",
                "description": [],
                "signature": [
                  "Error | undefined"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/errors.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "logsShared",
        "id": "def-common.getLogEntryCursorFromHit",
        "type": "Function",
        "tags": [],
        "label": "getLogEntryCursorFromHit",
        "description": [],
        "signature": [
          "(hit: { sort: [number, number]; }) => { time: number; tiebreaker: number; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.getLogEntryCursorFromHit.$1",
            "type": "Object",
            "tags": [],
            "label": "hit",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-common.getLogEntryCursorFromHit.$1.sort",
                "type": "Object",
                "tags": [],
                "label": "sort",
                "description": [],
                "signature": [
                  "[number, number]"
                ],
                "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogsLocatorParams",
        "type": "Interface",
        "tags": [],
        "label": "LogsLocatorParams",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.LogsLocatorParams",
            "text": "LogsLocatorParams"
          },
          " extends ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          }
        ],
        "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.LogsLocatorParams.time",
            "type": "number",
            "tags": [],
            "label": "time",
            "description": [
              "Defines log position"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.LogsLocatorParams.timeRange",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [
              "\nOptionally set the time range in the time picker."
            ],
            "signature": [
              "{ startTime: number; endTime: number; } | undefined"
            ],
            "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.LogsLocatorParams.filter",
            "type": "string",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.LogsLocatorParams.logView",
            "type": "CompoundType",
            "tags": [],
            "label": "logView",
            "description": [],
            "signature": [
              "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } | undefined"
            ],
            "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.NodeLogsLocatorParams",
        "type": "Interface",
        "tags": [],
        "label": "NodeLogsLocatorParams",
        "description": [],
        "signature": [
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.NodeLogsLocatorParams",
            "text": "NodeLogsLocatorParams"
          },
          " extends ",
          {
            "pluginId": "logsShared",
            "scope": "common",
            "docId": "kibLogsSharedPluginApi",
            "section": "def-common.LogsLocatorParams",
            "text": "LogsLocatorParams"
          }
        ],
        "path": "x-pack/plugins/logs_shared/common/locators/node_logs_locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.NodeLogsLocatorParams.nodeId",
            "type": "string",
            "tags": [],
            "label": "nodeId",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/locators/node_logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.NodeLogsLocatorParams.nodeType",
            "type": "CompoundType",
            "tags": [],
            "label": "nodeType",
            "description": [],
            "signature": [
              "\"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\""
            ],
            "path": "x-pack/plugins/logs_shared/common/locators/node_logs_locator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.ResolvedLogView",
        "type": "Interface",
        "tags": [],
        "label": "ResolvedLogView",
        "description": [],
        "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.timestampField",
            "type": "string",
            "tags": [],
            "label": "timestampField",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.tiebreakerField",
            "type": "string",
            "tags": [],
            "label": "tiebreakerField",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.messageField",
            "type": "Array",
            "tags": [],
            "label": "messageField",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.runtimeMappings",
            "type": "Object",
            "tags": [],
            "label": "runtimeMappings",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              "MappingRuntimeField",
              "; }"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.columns",
            "type": "Array",
            "tags": [],
            "label": "columns",
            "description": [],
            "signature": [
              "({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.ResolvedLogView.dataViewReference",
            "type": "Object",
            "tags": [],
            "label": "dataViewReference",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              }
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "logsShared",
        "id": "def-common.defaultFilterStateKey",
        "type": "string",
        "tags": [],
        "label": "defaultFilterStateKey",
        "description": [],
        "signature": [
          "\"logFilter\""
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.defaultPositionStateKey",
        "type": "string",
        "tags": [],
        "label": "defaultPositionStateKey",
        "description": [],
        "signature": [
          "\"logPosition\""
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LOG_ENTRIES_HIGHLIGHTS_PATH",
        "type": "string",
        "tags": [],
        "label": "LOG_ENTRIES_HIGHLIGHTS_PATH",
        "description": [],
        "signature": [
          "\"/api/log_entries/highlights\""
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/highlights.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LOG_ENTRIES_SUMMARY_PATH",
        "type": "string",
        "tags": [],
        "label": "LOG_ENTRIES_SUMMARY_PATH",
        "description": [],
        "signature": [
          "\"/api/log_entries/summary\""
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogColumn",
        "type": "Type",
        "tags": [],
        "label": "LogColumn",
        "description": [],
        "signature": [
          "{ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogDataViewReference",
        "type": "Type",
        "tags": [],
        "label": "LogDataViewReference",
        "description": [],
        "signature": [
          "{ type: \"data_view\"; dataViewId: string; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntriesSummaryBucket",
        "type": "Type",
        "tags": [],
        "label": "LogEntriesSummaryBucket",
        "description": [],
        "signature": [
          "{ start: number; end: number; entriesCount: number; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntriesSummaryHighlightsBucket",
        "type": "Type",
        "tags": [],
        "label": "LogEntriesSummaryHighlightsBucket",
        "description": [],
        "signature": [
          "{ start: number; end: number; entriesCount: number; } & { representativeKey: { time: number; tiebreaker: number; }; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/summary_highlights.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntry",
        "type": "Type",
        "tags": [],
        "label": "LogEntry",
        "description": [],
        "signature": [
          "{ id: string; index: string; cursor: { time: number; tiebreaker: number; }; columns: ({ columnId: string; timestamp: number; } | { columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; } | { columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; })[]; context: {} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryAfterCursor",
        "type": "Type",
        "tags": [],
        "label": "LogEntryAfterCursor",
        "description": [],
        "signature": [
          "{ after: { time: number; tiebreaker: number; } | \"first\"; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryAroundCursor",
        "type": "Type",
        "tags": [],
        "label": "LogEntryAroundCursor",
        "description": [],
        "signature": [
          "{ center: { time: number; tiebreaker: number; }; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryBeforeCursor",
        "type": "Type",
        "tags": [],
        "label": "LogEntryBeforeCursor",
        "description": [],
        "signature": [
          "{ before: { time: number; tiebreaker: number; } | \"last\"; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryContext",
        "type": "Type",
        "tags": [],
        "label": "LogEntryContext",
        "description": [],
        "signature": [
          "{} | { 'container.id': string; } | { 'host.name': string; 'log.file.path': string; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryCursor",
        "type": "Type",
        "tags": [],
        "label": "LogEntryCursor",
        "description": [],
        "signature": [
          "{ time: number; tiebreaker: number; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryField",
        "type": "Type",
        "tags": [],
        "label": "LogEntryField",
        "description": [],
        "signature": [
          "{ field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogEntryTime",
        "type": "Type",
        "tags": [],
        "label": "LogEntryTime",
        "description": [],
        "signature": [
          "{ time: number; tiebreaker: number; } & { gid?: string | undefined; fromAutoReload?: boolean | undefined; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogFieldColumn",
        "type": "Type",
        "tags": [],
        "label": "LogFieldColumn",
        "description": [],
        "signature": [
          "{ columnId: string; field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogIndexNameReference",
        "type": "Type",
        "tags": [],
        "label": "LogIndexNameReference",
        "description": [],
        "signature": [
          "{ type: \"index_name\"; indexName: string; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogIndexReference",
        "type": "Type",
        "tags": [],
        "label": "LogIndexReference",
        "description": [],
        "signature": [
          "{ type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogMessageColumn",
        "type": "Type",
        "tags": [],
        "label": "LogMessageColumn",
        "description": [],
        "signature": [
          "{ columnId: string; message: ({ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; })[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogMessageConstantPart",
        "type": "Type",
        "tags": [],
        "label": "LogMessageConstantPart",
        "description": [],
        "signature": [
          "{ constant: string; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogMessageFieldPart",
        "type": "Type",
        "tags": [],
        "label": "LogMessageFieldPart",
        "description": [],
        "signature": [
          "{ field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogMessagePart",
        "type": "Type",
        "tags": [],
        "label": "LogMessagePart",
        "description": [],
        "signature": [
          "{ constant: string; } | { field: string; value: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          "; highlights: string[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LOGS_LOCATOR_ID",
        "type": "string",
        "tags": [],
        "label": "LOGS_LOCATOR_ID",
        "description": [],
        "signature": [
          "\"LOGS_LOCATOR\""
        ],
        "path": "x-pack/plugins/logs_shared/common/locators/logs_locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogTimestampColumn",
        "type": "Type",
        "tags": [],
        "label": "LogTimestampColumn",
        "description": [],
        "signature": [
          "{ columnId: string; timestamp: number; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogView",
        "type": "Type",
        "tags": [],
        "label": "LogView",
        "description": [],
        "signature": [
          "{ id: string; origin: \"internal\" | \"inline\" | \"stored\" | \"infra-source-stored\" | \"infra-source-internal\" | \"infra-source-fallback\"; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; } & { updatedAt?: number | undefined; version?: string | undefined; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogViewAttributes",
        "type": "Type",
        "tags": [],
        "label": "LogViewAttributes",
        "description": [],
        "signature": [
          "{ name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogViewColumnConfiguration",
        "type": "Type",
        "tags": [],
        "label": "LogViewColumnConfiguration",
        "description": [],
        "signature": [
          "{ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogViewReference",
        "type": "Type",
        "tags": [],
        "label": "LogViewReference",
        "description": [],
        "signature": [
          "{ logViewId: string; type: \"log-view-reference\"; } | { type: \"log-view-inline\"; id: string; attributes: { name: string; description: string; logIndices: { type: \"data_view\"; dataViewId: string; } | { type: \"index_name\"; indexName: string; }; logColumns: ({ timestampColumn: { id: string; }; } | { messageColumn: { id: string; }; } | { fieldColumn: { id: string; } & { field: string; }; })[]; }; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.LogViewStatus",
        "type": "Type",
        "tags": [],
        "label": "LogViewStatus",
        "description": [],
        "signature": [
          "{ index: \"missing\" | \"unknown\" | \"empty\" | \"available\"; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.NODE_LOGS_LOCATOR_ID",
        "type": "string",
        "tags": [],
        "label": "NODE_LOGS_LOCATOR_ID",
        "description": [],
        "signature": [
          "\"NODE_LOGS_LOCATOR\""
        ],
        "path": "x-pack/plugins/logs_shared/common/locators/node_logs_locator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.PersistedLogViewReference",
        "type": "Type",
        "tags": [],
        "label": "PersistedLogViewReference",
        "description": [],
        "signature": [
          "{ logViewId: string; type: \"log-view-reference\"; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.ResolvedLogViewField",
        "type": "Type",
        "tags": [],
        "label": "ResolvedLogViewField",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          },
          " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: ",
          "MappingTimeSeriesMetricType",
          " | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/resolved_log_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "logsShared",
        "id": "def-common.DEFAULT_LOG_VIEW",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_LOG_VIEW",
        "description": [],
        "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.DEFAULT_LOG_VIEW.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"log-view-reference\""
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.DEFAULT_LOG_VIEW.logViewId",
            "type": "string",
            "tags": [],
            "label": "logViewId",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.DEFAULT_REFRESH_INTERVAL",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_REFRESH_INTERVAL",
        "description": [],
        "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.DEFAULT_REFRESH_INTERVAL.pause",
            "type": "boolean",
            "tags": [],
            "label": "pause",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.DEFAULT_REFRESH_INTERVAL.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.defaultLogViewAttributes",
        "type": "Object",
        "tags": [],
        "label": "defaultLogViewAttributes",
        "description": [],
        "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "logsShared",
            "id": "def-common.defaultLogViewAttributes.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.defaultLogViewAttributes.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.defaultLogViewAttributes.logIndices",
            "type": "Object",
            "tags": [],
            "label": "logIndices",
            "description": [],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "logsShared",
                "id": "def-common.defaultLogViewAttributes.logIndices.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"index_name\""
                ],
                "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "logsShared",
                "id": "def-common.defaultLogViewAttributes.logIndices.indexName",
                "type": "string",
                "tags": [],
                "label": "indexName",
                "description": [],
                "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "logsShared",
            "id": "def-common.defaultLogViewAttributes.logColumns",
            "type": "Array",
            "tags": [],
            "label": "logColumns",
            "description": [],
            "signature": [
              "({ timestampColumn: { id: string; }; } | { fieldColumn: { id: string; field: string; }; } | { messageColumn: { id: string; }; })[]"
            ],
            "path": "x-pack/plugins/logs_shared/common/log_views/defaults.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logColumnRT",
        "type": "Object",
        "tags": [],
        "label": "logColumnRT",
        "description": [],
        "signature": [
          "UnionC",
          "<[",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; timestamp: ",
          "NumberC",
          "; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; message: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; }>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logDataViewReferenceRT",
        "type": "Object",
        "tags": [],
        "label": "logDataViewReferenceRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntriesHighlightsRequestRT",
        "type": "Object",
        "tags": [],
        "label": "logEntriesHighlightsRequestRT",
        "description": [],
        "signature": [
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ logView: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>; startTimestamp: ",
          "NumberC",
          "; endTimestamp: ",
          "NumberC",
          "; highlightTerms: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "PartialC",
          "<{ query: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>; size: ",
          "NumberC",
          "; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>]>, ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ logView: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>; startTimestamp: ",
          "NumberC",
          "; endTimestamp: ",
          "NumberC",
          "; highlightTerms: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "PartialC",
          "<{ query: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>; size: ",
          "NumberC",
          "; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>]>, ",
          "TypeC",
          "<{ before: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>, ",
          "LiteralC",
          "<\"last\">]>; }>]>, ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ logView: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>; startTimestamp: ",
          "NumberC",
          "; endTimestamp: ",
          "NumberC",
          "; highlightTerms: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "PartialC",
          "<{ query: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>; size: ",
          "NumberC",
          "; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>]>, ",
          "TypeC",
          "<{ after: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>, ",
          "LiteralC",
          "<\"first\">]>; }>]>, ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ logView: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>; startTimestamp: ",
          "NumberC",
          "; endTimestamp: ",
          "NumberC",
          "; highlightTerms: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "PartialC",
          "<{ query: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>; size: ",
          "NumberC",
          "; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>]>, ",
          "TypeC",
          "<{ center: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; }>]>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/highlights.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntriesHighlightsResponseRT",
        "type": "Object",
        "tags": [],
        "label": "logEntriesHighlightsResponseRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ data: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ topCursor: ",
          "NullC",
          "; bottomCursor: ",
          "NullC",
          "; entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; index: ",
          "StringC",
          "; cursor: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; timestamp: ",
          "NumberC",
          "; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; message: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; }>]>>; context: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{}>, ",
          "TypeC",
          "<{ 'container.id': ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ 'host.name': ",
          "StringC",
          "; 'log.file.path': ",
          "StringC",
          "; }>]>; }>>; }>, ",
          "TypeC",
          "<{ topCursor: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; bottomCursor: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; index: ",
          "StringC",
          "; cursor: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; timestamp: ",
          "NumberC",
          "; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; message: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; }>]>>; context: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{}>, ",
          "TypeC",
          "<{ 'container.id': ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ 'host.name': ",
          "StringC",
          "; 'log.file.path': ",
          "StringC",
          "; }>]>; }>>; }>]>>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/highlights.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntriesSummaryRequestRT",
        "type": "Object",
        "tags": [],
        "label": "logEntriesSummaryRequestRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ logView: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>; startTimestamp: ",
          "NumberC",
          "; endTimestamp: ",
          "NumberC",
          "; bucketSize: ",
          "NumberC",
          "; query: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC",
          ", ",
          "NullC",
          "]>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntriesSummaryResponseRT",
        "type": "Object",
        "tags": [],
        "label": "logEntriesSummaryResponseRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ data: ",
          "TypeC",
          "<{ start: ",
          "NumberC",
          "; end: ",
          "NumberC",
          "; buckets: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ start: ",
          "NumberC",
          "; end: ",
          "NumberC",
          "; entriesCount: ",
          "NumberC",
          "; }>>; }>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/http_api/log_entries/v1/summary.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryAfterCursorRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryAfterCursorRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ after: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>, ",
          "LiteralC",
          "<\"first\">]>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryAroundCursorRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryAroundCursorRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ center: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryBeforeCursorRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryBeforeCursorRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ before: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>, ",
          "LiteralC",
          "<\"last\">]>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryContextRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryContextRT",
        "description": [
          "\nfields"
        ],
        "signature": [
          "UnionC",
          "<[",
          "TypeC",
          "<{}>, ",
          "TypeC",
          "<{ 'container.id': ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ 'host.name': ",
          "StringC",
          "; 'log.file.path': ",
          "StringC",
          "; }>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryCursorRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryCursorRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry_cursor.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryFieldRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryFieldRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logEntryRT",
        "type": "Object",
        "tags": [],
        "label": "logEntryRT",
        "description": [
          "\nentry"
        ],
        "signature": [
          "TypeC",
          "<{ id: ",
          "StringC",
          "; index: ",
          "StringC",
          "; cursor: ",
          "TypeC",
          "<{ time: ",
          "NumberC",
          "; tiebreaker: ",
          "NumberC",
          "; }>; columns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; timestamp: ",
          "NumberC",
          "; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>, ",
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; message: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; }>]>>; context: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{}>, ",
          "TypeC",
          "<{ 'container.id': ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ 'host.name': ",
          "StringC",
          "; 'log.file.path': ",
          "StringC",
          "; }>]>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logFieldColumnRT",
        "type": "Object",
        "tags": [],
        "label": "logFieldColumnRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logIndexNameReferenceRT",
        "type": "Object",
        "tags": [],
        "label": "logIndexNameReferenceRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logMessageColumnRT",
        "type": "Object",
        "tags": [],
        "label": "logMessageColumnRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; message: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logMessageConstantPartRT",
        "type": "Object",
        "tags": [],
        "label": "logMessageConstantPartRT",
        "description": [
          "\nmessage parts"
        ],
        "signature": [
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logMessageFieldPartRT",
        "type": "Object",
        "tags": [],
        "label": "logMessageFieldPartRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logMessagePartRT",
        "type": "Object",
        "tags": [],
        "label": "logMessagePartRT",
        "description": [],
        "signature": [
          "UnionC",
          "<[",
          "TypeC",
          "<{ constant: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; value: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          ", unknown>; highlights: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logTimestampColumnRT",
        "type": "Object",
        "tags": [],
        "label": "logTimestampColumnRT",
        "description": [
          "\ncolumns"
        ],
        "signature": [
          "TypeC",
          "<{ columnId: ",
          "StringC",
          "; timestamp: ",
          "NumberC",
          "; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_entry/log_entry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logViewColumnConfigurationRT",
        "type": "Object",
        "tags": [],
        "label": "logViewColumnConfigurationRT",
        "description": [],
        "signature": [
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.logViewReferenceRT",
        "type": "Object",
        "tags": [],
        "label": "logViewReferenceRT",
        "description": [],
        "signature": [
          "UnionC",
          "<[",
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"log-view-inline\">; id: ",
          "StringC",
          "; attributes: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; logIndices: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"data_view\">; dataViewId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"index_name\">; indexName: ",
          "StringC",
          "; }>]>; logColumns: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ timestampColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ messageColumn: ",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ fieldColumn: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>>, ",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>>]>; }>>]>>; }>>; }>]>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "logsShared",
        "id": "def-common.persistedLogViewReferenceRT",
        "type": "Object",
        "tags": [],
        "label": "persistedLogViewReferenceRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ logViewId: ",
          "StringC",
          "; type: ",
          "LiteralC",
          "<\"log-view-reference\">; }>"
        ],
        "path": "x-pack/plugins/logs_shared/common/log_views/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}