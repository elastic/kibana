{
  "id": "features",
  "client": {
    "classes": [
      {
        "parentPluginId": "features",
        "id": "def-public.KibanaFeature",
        "type": "Class",
        "tags": [],
        "label": "KibanaFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.subFeatures",
            "type": "Array",
            "tags": [],
            "label": "subFeatures",
            "description": [],
            "signature": [
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeature",
                "text": "SubFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-public.KibanaFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ id: string; name: string; category: Readonly<{ id: string; label: string; ariaLabel?: string | undefined; order?: number | undefined; euiIconType?: string | undefined; }>; order?: number | undefined; excludeFromBasePrivileges?: boolean | undefined; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; app: readonly string[]; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: readonly string[] | undefined; cases?: readonly string[] | undefined; privileges: Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null; subFeatures?: readonly Readonly<{ name: string; privilegeGroups: readonly Readonly<{ groupType: ",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.SubFeaturePrivilegeGroupType",
                    "text": "SubFeaturePrivilegeGroupType"
                  },
                  "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]; }>[] | undefined; privilegesTooltip?: string | undefined; reserved?: Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined; }>"
                ],
                "path": "x-pack/plugins/features/common/kibana_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [],
            "signature": [
              "{ readonly id: string; readonly label: string; readonly ariaLabel?: string | undefined; readonly order?: number | undefined; readonly euiIconType?: string | undefined; }"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [],
            "signature": [
              "Readonly<{ [x: string]: readonly string[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.privileges",
            "type": "CompoundType",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              "Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.excludeFromBasePrivileges",
            "type": "boolean",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.reserved",
            "type": "Object",
            "tags": [],
            "label": "reserved",
            "description": [],
            "signature": [
              "Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeatureConfig",
                "text": "KibanaFeatureConfig"
              }
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "features",
        "id": "def-public.FeatureKibanaPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeatureKibanaPrivileges",
        "description": [
          "\nFeature privilege definition"
        ],
        "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this specific privilege should be excluded from the base privileges."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on user privileges.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on user permissions."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.api",
            "type": "Object",
            "tags": [],
            "label": "api",
            "description": [
              "\nIf your feature includes server-side APIs, you can tag those routes to secure access based on user permissions.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nIf your feature exposes a client-side application (most of them do!), then you can control access to them here.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature requires access to specific Alert Types, then specify your access needs here.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "{ rule?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; alert?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature requires access to specific owners of cases (aka plugins that have created cases), then specify your access needs here. The values here should\nbe unique identifiers for the owners of cases you want access to."
            ],
            "signature": [
              "{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.savedObject",
            "type": "Object",
            "tags": [],
            "label": "savedObject",
            "description": [
              "\nIf your feature requires access to specific saved objects, then specify your access needs here."
            ],
            "signature": [
              "{ all: readonly string[]; read: readonly string[]; }"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.FeatureKibanaPrivileges.ui",
            "type": "Object",
            "tags": [
              "see"
            ],
            "label": "ui",
            "description": [
              "\nA list of UI Capabilities that should be granted to users with this privilege.\nThese capabilities will automatically be namespaces within your feature id.\n"
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-public.KibanaFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "KibanaFeatureConfig",
        "description": [
          "\nInterface for registering a feature.\nFeature registration allows plugins to hide their applications with spaces,\nand secure access when configured for security."
        ],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.id",
            "type": "string",
            "tags": [
              "see"
            ],
            "label": "id",
            "description": [
              "\nUnique identifier for this feature.\nThis identifier is also used when generating UI Capabilities.\n"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this feature.\nThis will be displayed to end-users, so a translatable string is advised for i18n."
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [
              "\nThe category for this feature.\nThis will be used to organize the list of features for display within the\nSpaces and Roles management screens."
            ],
            "signature": [
              "AppCategory"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [
              "\nAn ordinal used to sort features relative to one another for display."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this feature should be excluded from the base privileges.\nThis is primarily helpful when migrating applications with a \"legacy\" privileges model\nto use Kibana privileges. We don't want these features to be considered part of the `all`\nor `read` base privileges in a minor release if the user was previously granted access\nusing an additional reserved role."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [
              "\nOptional minimum supported license.\nIf omitted, all licenses are allowed.\nThis does not restrict access to your feature based on license.\nIts only purpose is to inform the space and roles UIs on which features to display."
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nAn array of app ids that are enabled when this feature is enabled.\nApps specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature grants access to specific Alert Types, you can specify them here to control visibility based on the current space.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature grants access to specific case types, you can specify them here to control visibility based on the current space."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.privileges",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "privileges",
            "description": [
              "\nFeature privilege definition.\n"
            ],
            "signature": [
              "{ all: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; read: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; } | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.subFeatures",
            "type": "Object",
            "tags": [],
            "label": "subFeatures",
            "description": [
              "\nOptional sub-feature privilege definitions. This can only be specified if `privileges` are are also defined."
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeatureConfig",
                "text": "SubFeatureConfig"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.privilegesTooltip",
            "type": "string",
            "tags": [],
            "label": "privilegesTooltip",
            "description": [
              "\nOptional message to display on the Role Management screen when configuring permissions for this feature."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.KibanaFeatureConfig.reserved",
            "type": "Object",
            "tags": [
              "private"
            ],
            "label": "reserved",
            "description": [],
            "signature": [
              "{ description: string; privileges: readonly ",
              "ReservedKibanaPrivilege",
              "[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-public.SubFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "SubFeatureConfig",
        "description": [
          "\nConfiguration for a sub-feature."
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeatureConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "Display name for this sub-feature"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeatureConfig.privilegeGroups",
            "type": "Object",
            "tags": [],
            "label": "privilegeGroups",
            "description": [
              "Collection of privilege groups"
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeGroupConfig",
                "text": "SubFeaturePrivilegeGroupConfig"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-public.SubFeaturePrivilegeConfig",
        "type": "Interface",
        "tags": [],
        "label": "SubFeaturePrivilegeConfig",
        "description": [
          "\nConfiguration for a sub-feature privilege."
        ],
        "signature": [
          {
            "pluginId": "features",
            "scope": "common",
            "docId": "kibFeaturesPluginApi",
            "section": "def-common.SubFeaturePrivilegeConfig",
            "text": "SubFeaturePrivilegeConfig"
          },
          " extends Pick<",
          {
            "pluginId": "features",
            "scope": "common",
            "docId": "kibFeaturesPluginApi",
            "section": "def-common.FeatureKibanaPrivileges",
            "text": "FeatureKibanaPrivileges"
          },
          ", \"management\" | \"catalogue\" | \"alerting\" | \"ui\" | \"app\" | \"cases\" | \"api\" | \"savedObject\">"
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeaturePrivilegeConfig.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nIdentifier for this privilege. Must be unique across all other privileges within a feature."
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeaturePrivilegeConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nThe display name for this privilege."
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeaturePrivilegeConfig.includeIn",
            "type": "CompoundType",
            "tags": [],
            "label": "includeIn",
            "description": [
              "\nDenotes which Primary Feature Privilege this sub-feature privilege should be included in.\n`read` is also included in `all` automatically."
            ],
            "signature": [
              "\"none\" | \"all\" | \"read\""
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-public.SubFeaturePrivilegeConfig.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [
              "\nThe minimum supported license level for this sub-feature privilege.\nIf no license level is supplied, then this privilege will be available for all licences\nthat are valid for the overall feature."
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "features",
      "id": "def-public.FeaturesPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "FeaturesPluginSetup",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "x-pack/plugins/features/public/plugin.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "features",
      "id": "def-public.FeaturesPluginStart",
      "type": "Type",
      "tags": [],
      "label": "FeaturesPluginStart",
      "description": [],
      "signature": [
        "{ getFeatures: () => Promise<",
        {
          "pluginId": "features",
          "scope": "common",
          "docId": "kibFeaturesPluginApi",
          "section": "def-common.KibanaFeature",
          "text": "KibanaFeature"
        },
        "[]>; }"
      ],
      "path": "x-pack/plugins/features/public/plugin.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "features",
        "id": "def-server.ElasticsearchFeature",
        "type": "Class",
        "tags": [],
        "label": "ElasticsearchFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.ElasticsearchFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ id: string; management?: Readonly<{ [x: string]: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<string>; }> | undefined; catalogue?: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<string> | undefined; privileges: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.FeatureElasticsearchPrivileges",
                    "text": "FeatureElasticsearchPrivileges"
                  },
                  ">; }>"
                ],
                "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<string> | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [],
            "signature": [
              "Readonly<{ [x: string]: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<string>; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.privileges",
            "type": "Object",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureElasticsearchPrivileges",
                "text": "FeatureElasticsearchPrivileges"
              },
              ">"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.ElasticsearchFeatureConfig",
                "text": "ElasticsearchFeatureConfig"
              }
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.KibanaFeature",
        "type": "Class",
        "tags": [],
        "label": "KibanaFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.subFeatures",
            "type": "Array",
            "tags": [],
            "label": "subFeatures",
            "description": [],
            "signature": [
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeature",
                "text": "SubFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.KibanaFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ id: string; name: string; category: Readonly<{ id: string; label: string; ariaLabel?: string | undefined; order?: number | undefined; euiIconType?: string | undefined; }>; order?: number | undefined; excludeFromBasePrivileges?: boolean | undefined; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; app: readonly string[]; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: readonly string[] | undefined; cases?: readonly string[] | undefined; privileges: Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null; subFeatures?: readonly Readonly<{ name: string; privilegeGroups: readonly Readonly<{ groupType: ",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.SubFeaturePrivilegeGroupType",
                    "text": "SubFeaturePrivilegeGroupType"
                  },
                  "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]; }>[] | undefined; privilegesTooltip?: string | undefined; reserved?: Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined; }>"
                ],
                "path": "x-pack/plugins/features/common/kibana_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [],
            "signature": [
              "{ readonly id: string; readonly label: string; readonly ariaLabel?: string | undefined; readonly order?: number | undefined; readonly euiIconType?: string | undefined; }"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [],
            "signature": [
              "Readonly<{ [x: string]: readonly string[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.privileges",
            "type": "CompoundType",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              "Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.excludeFromBasePrivileges",
            "type": "boolean",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.reserved",
            "type": "Object",
            "tags": [],
            "label": "reserved",
            "description": [],
            "signature": [
              "Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeatureConfig",
                "text": "KibanaFeatureConfig"
              }
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "features",
        "id": "def-server.ElasticsearchFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "ElasticsearchFeatureConfig",
        "description": [
          "\nInterface for registering an Elasticsearch feature.\nFeature registration allows plugins to hide their applications based\non configured cluster or index privileges."
        ],
        "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeatureConfig.id",
            "type": "string",
            "tags": [
              "see"
            ],
            "label": "id",
            "description": [
              "\nUnique identifier for this feature.\nThis identifier is also used when generating UI Capabilities.\n"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeatureConfig.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nManagement sections associated with this feature.\n"
            ],
            "signature": [
              "{ [sectionId: string]: string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeatureConfig.catalogue",
            "type": "Array",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on the current space.\n"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.ElasticsearchFeatureConfig.privileges",
            "type": "Array",
            "tags": [
              "see"
            ],
            "label": "privileges",
            "description": [
              "\nFeature privilege definition. Specify one or more privileges which grant access to this feature.\nUsers must satisfy all privileges in at least one of the defined sets of privileges in order to be granted access.\n"
            ],
            "signature": [
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureElasticsearchPrivileges",
                "text": "FeatureElasticsearchPrivileges"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.FeatureElasticsearchPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeatureElasticsearchPrivileges",
        "description": [
          "\nElasticsearch Feature privilege definition"
        ],
        "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureElasticsearchPrivileges.requiredClusterPrivileges",
            "type": "Array",
            "tags": [],
            "label": "requiredClusterPrivileges",
            "description": [
              "\nA set of Elasticsearch cluster privileges which are required for this feature to be enabled.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html\n"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureElasticsearchPrivileges.requiredIndexPrivileges",
            "type": "Object",
            "tags": [],
            "label": "requiredIndexPrivileges",
            "description": [
              "\nA set of Elasticsearch index privileges which are required for this feature to be enabled, keyed on index name or pattern.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html#privileges-list-indices\n"
            ],
            "signature": [
              "{ [indexName: string]: string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureElasticsearchPrivileges.requiredRoles",
            "type": "Array",
            "tags": [
              "deprecated"
            ],
            "label": "requiredRoles",
            "description": [
              "\nA set of Elasticsearch roles which are required for this feature to be enabled.\n"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": true,
            "references": [
              {
                "plugin": "security",
                "path": "x-pack/plugins/security/server/authorization/disable_ui_capabilities.ts"
              }
            ]
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureElasticsearchPrivileges.ui",
            "type": "Array",
            "tags": [
              "see"
            ],
            "label": "ui",
            "description": [
              "\nA list of UI Capabilities that should be granted to users with this privilege.\nThese capabilities will automatically be namespaces within your feature id.\n"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.FeatureKibanaPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeatureKibanaPrivileges",
        "description": [
          "\nFeature privilege definition"
        ],
        "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this specific privilege should be excluded from the base privileges."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on user privileges.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on user permissions."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.api",
            "type": "Object",
            "tags": [],
            "label": "api",
            "description": [
              "\nIf your feature includes server-side APIs, you can tag those routes to secure access based on user permissions.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nIf your feature exposes a client-side application (most of them do!), then you can control access to them here.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature requires access to specific Alert Types, then specify your access needs here.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "{ rule?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; alert?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature requires access to specific owners of cases (aka plugins that have created cases), then specify your access needs here. The values here should\nbe unique identifiers for the owners of cases you want access to."
            ],
            "signature": [
              "{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.savedObject",
            "type": "Object",
            "tags": [],
            "label": "savedObject",
            "description": [
              "\nIf your feature requires access to specific saved objects, then specify your access needs here."
            ],
            "signature": [
              "{ all: readonly string[]; read: readonly string[]; }"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.FeatureKibanaPrivileges.ui",
            "type": "Object",
            "tags": [
              "see"
            ],
            "label": "ui",
            "description": [
              "\nA list of UI Capabilities that should be granted to users with this privilege.\nThese capabilities will automatically be namespaces within your feature id.\n"
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.KibanaFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "KibanaFeatureConfig",
        "description": [
          "\nInterface for registering a feature.\nFeature registration allows plugins to hide their applications with spaces,\nand secure access when configured for security."
        ],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.id",
            "type": "string",
            "tags": [
              "see"
            ],
            "label": "id",
            "description": [
              "\nUnique identifier for this feature.\nThis identifier is also used when generating UI Capabilities.\n"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this feature.\nThis will be displayed to end-users, so a translatable string is advised for i18n."
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [
              "\nThe category for this feature.\nThis will be used to organize the list of features for display within the\nSpaces and Roles management screens."
            ],
            "signature": [
              "AppCategory"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [
              "\nAn ordinal used to sort features relative to one another for display."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this feature should be excluded from the base privileges.\nThis is primarily helpful when migrating applications with a \"legacy\" privileges model\nto use Kibana privileges. We don't want these features to be considered part of the `all`\nor `read` base privileges in a minor release if the user was previously granted access\nusing an additional reserved role."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [
              "\nOptional minimum supported license.\nIf omitted, all licenses are allowed.\nThis does not restrict access to your feature based on license.\nIts only purpose is to inform the space and roles UIs on which features to display."
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nAn array of app ids that are enabled when this feature is enabled.\nApps specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature grants access to specific Alert Types, you can specify them here to control visibility based on the current space.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature grants access to specific case types, you can specify them here to control visibility based on the current space."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.privileges",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "privileges",
            "description": [
              "\nFeature privilege definition.\n"
            ],
            "signature": [
              "{ all: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; read: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; } | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.subFeatures",
            "type": "Object",
            "tags": [],
            "label": "subFeatures",
            "description": [
              "\nOptional sub-feature privilege definitions. This can only be specified if `privileges` are are also defined."
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeatureConfig",
                "text": "SubFeatureConfig"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.privilegesTooltip",
            "type": "string",
            "tags": [],
            "label": "privilegesTooltip",
            "description": [
              "\nOptional message to display on the Role Management screen when configuring permissions for this feature."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-server.KibanaFeatureConfig.reserved",
            "type": "Object",
            "tags": [
              "private"
            ],
            "label": "reserved",
            "description": [],
            "signature": [
              "{ description: string; privileges: readonly ",
              "ReservedKibanaPrivilege",
              "[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.PluginSetupContract",
        "type": "Interface",
        "tags": [],
        "label": "PluginSetupContract",
        "description": [
          "\nDescribes public Features plugin contract returned at the `setup` stage."
        ],
        "path": "x-pack/plugins/features/server/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.registerKibanaFeature",
            "type": "Function",
            "tags": [],
            "label": "registerKibanaFeature",
            "description": [],
            "signature": [
              "(feature: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeatureConfig",
                "text": "KibanaFeatureConfig"
              },
              ") => void"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.registerKibanaFeature.$1",
                "type": "Object",
                "tags": [],
                "label": "feature",
                "description": [],
                "signature": [
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.KibanaFeatureConfig",
                    "text": "KibanaFeatureConfig"
                  }
                ],
                "path": "x-pack/plugins/features/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.registerElasticsearchFeature",
            "type": "Function",
            "tags": [],
            "label": "registerElasticsearchFeature",
            "description": [],
            "signature": [
              "(feature: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.ElasticsearchFeatureConfig",
                "text": "ElasticsearchFeatureConfig"
              },
              ") => void"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.registerElasticsearchFeature.$1",
                "type": "Object",
                "tags": [],
                "label": "feature",
                "description": [],
                "signature": [
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.ElasticsearchFeatureConfig",
                    "text": "ElasticsearchFeatureConfig"
                  }
                ],
                "path": "x-pack/plugins/features/server/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.getKibanaFeatures",
            "type": "Function",
            "tags": [],
            "label": "getKibanaFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeature",
                "text": "KibanaFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.getElasticsearchFeatures",
            "type": "Function",
            "tags": [],
            "label": "getElasticsearchFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.ElasticsearchFeature",
                "text": "ElasticsearchFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.getFeaturesUICapabilities",
            "type": "Function",
            "tags": [],
            "label": "getFeaturesUICapabilities",
            "description": [],
            "signature": [
              "() => ",
              "Capabilities"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.enableReportingUiCapabilities",
            "type": "Function",
            "tags": [],
            "label": "enableReportingUiCapabilities",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.featurePrivilegeIterator",
            "type": "Function",
            "tags": [],
            "label": "featurePrivilegeIterator",
            "description": [
              "\nUtility for iterating through all privileges belonging to a specific feature.\n{@see FeaturePrivilegeIterator }"
            ],
            "signature": [
              "(feature: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeature",
                "text": "KibanaFeature"
              },
              ", options: ",
              "FeaturePrivilegeIteratorOptions",
              ") => IterableIterator<{ privilegeId: string; privilege: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; }>"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.featurePrivilegeIterator.$1",
                "type": "Object",
                "tags": [],
                "label": "feature",
                "description": [],
                "signature": [
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.KibanaFeature",
                    "text": "KibanaFeature"
                  }
                ],
                "path": "x-pack/plugins/features/server/feature_privilege_iterator/feature_privilege_iterator.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.featurePrivilegeIterator.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "FeaturePrivilegeIteratorOptions"
                ],
                "path": "x-pack/plugins/features/server/feature_privilege_iterator/feature_privilege_iterator.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginSetupContract.subFeaturePrivilegeIterator",
            "type": "Function",
            "tags": [],
            "label": "subFeaturePrivilegeIterator",
            "description": [
              "\nUtility for iterating through all sub-feature privileges belonging to a specific feature.\n{@see SubFeaturePrivilegeIterator }"
            ],
            "signature": [
              "(feature: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeature",
                "text": "KibanaFeature"
              },
              ", licenseHasAtLeast: (licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean | undefined) => IterableIterator<",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeConfig",
                "text": "SubFeaturePrivilegeConfig"
              },
              ">"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.subFeaturePrivilegeIterator.$1",
                "type": "Object",
                "tags": [],
                "label": "feature",
                "description": [],
                "signature": [
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.KibanaFeature",
                    "text": "KibanaFeature"
                  }
                ],
                "path": "x-pack/plugins/features/server/feature_privilege_iterator/sub_feature_privilege_iterator.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "features",
                "id": "def-server.PluginSetupContract.subFeaturePrivilegeIterator.$2",
                "type": "Function",
                "tags": [],
                "label": "licenseHasAtLeast",
                "description": [],
                "signature": [
                  "(licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean | undefined"
                ],
                "path": "x-pack/plugins/features/server/feature_privilege_iterator/sub_feature_privilege_iterator.ts",
                "deprecated": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "features",
                    "id": "def-server.PluginSetupContract.subFeaturePrivilegeIterator.$2.$1",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "licenseType",
                    "description": [],
                    "signature": [
                      "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                    ],
                    "path": "x-pack/plugins/features/server/feature_privilege_iterator/sub_feature_privilege_iterator.ts",
                    "deprecated": false
                  }
                ]
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-server.PluginStartContract",
        "type": "Interface",
        "tags": [],
        "label": "PluginStartContract",
        "description": [],
        "path": "x-pack/plugins/features/server/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-server.PluginStartContract.getElasticsearchFeatures",
            "type": "Function",
            "tags": [],
            "label": "getElasticsearchFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.ElasticsearchFeature",
                "text": "ElasticsearchFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-server.PluginStartContract.getKibanaFeatures",
            "type": "Function",
            "tags": [],
            "label": "getKibanaFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeature",
                "text": "KibanaFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/server/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "parentPluginId": "features",
        "id": "def-server.uiCapabilitiesRegex",
        "type": "Object",
        "tags": [],
        "label": "uiCapabilitiesRegex",
        "description": [],
        "signature": [
          "RegExp"
        ],
        "path": "x-pack/plugins/features/server/feature_schema.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "features",
        "id": "def-common.ElasticsearchFeature",
        "type": "Class",
        "tags": [],
        "label": "ElasticsearchFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-common.ElasticsearchFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ id: string; management?: Readonly<{ [x: string]: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<string>; }> | undefined; catalogue?: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<string> | undefined; privileges: ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "server",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-server.RecursiveReadonlyArray",
                    "text": "RecursiveReadonlyArray"
                  },
                  "<",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.FeatureElasticsearchPrivileges",
                    "text": "FeatureElasticsearchPrivileges"
                  },
                  ">; }>"
                ],
                "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<string> | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [],
            "signature": [
              "Readonly<{ [x: string]: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<string>; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.privileges",
            "type": "Object",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/utility-types",
                "scope": "server",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-server.RecursiveReadonlyArray",
                "text": "RecursiveReadonlyArray"
              },
              "<",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureElasticsearchPrivileges",
                "text": "FeatureElasticsearchPrivileges"
              },
              ">"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.ElasticsearchFeatureConfig",
                "text": "ElasticsearchFeatureConfig"
              }
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.KibanaFeature",
        "type": "Class",
        "tags": [],
        "label": "KibanaFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.subFeatures",
            "type": "Array",
            "tags": [],
            "label": "subFeatures",
            "description": [],
            "signature": [
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeature",
                "text": "SubFeature"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-common.KibanaFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ id: string; name: string; category: Readonly<{ id: string; label: string; ariaLabel?: string | undefined; order?: number | undefined; euiIconType?: string | undefined; }>; order?: number | undefined; excludeFromBasePrivileges?: boolean | undefined; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; app: readonly string[]; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: readonly string[] | undefined; cases?: readonly string[] | undefined; privileges: Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null; subFeatures?: readonly Readonly<{ name: string; privilegeGroups: readonly Readonly<{ groupType: ",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.SubFeaturePrivilegeGroupType",
                    "text": "SubFeaturePrivilegeGroupType"
                  },
                  "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]; }>[] | undefined; privilegesTooltip?: string | undefined; reserved?: Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined; }>"
                ],
                "path": "x-pack/plugins/features/common/kibana_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [],
            "signature": [
              "{ readonly id: string; readonly label: string; readonly ariaLabel?: string | undefined; readonly order?: number | undefined; readonly euiIconType?: string | undefined; }"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [],
            "signature": [
              "Readonly<{ [x: string]: readonly string[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.privileges",
            "type": "CompoundType",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              "Readonly<{ all: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; read: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }> | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.excludeFromBasePrivileges",
            "type": "boolean",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.reserved",
            "type": "Object",
            "tags": [],
            "label": "reserved",
            "description": [],
            "signature": [
              "Readonly<{ description: string; privileges: readonly Readonly<{ id: string; privilege: Readonly<{ excludeFromBasePrivileges?: boolean | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; api?: readonly string[] | undefined; app?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; ui: readonly string[]; }>; }>[]; }> | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.KibanaFeatureConfig",
                "text": "KibanaFeatureConfig"
              }
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.SubFeature",
        "type": "Class",
        "tags": [],
        "label": "SubFeature",
        "description": [],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeature.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "features",
                "id": "def-common.SubFeature.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Readonly<{ name: string; privilegeGroups: readonly Readonly<{ groupType: ",
                  {
                    "pluginId": "features",
                    "scope": "common",
                    "docId": "kibFeaturesPluginApi",
                    "section": "def-common.SubFeaturePrivilegeGroupType",
                    "text": "SubFeaturePrivilegeGroupType"
                  },
                  "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]; }>"
                ],
                "path": "x-pack/plugins/features/common/sub_feature.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeature.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeature.privilegeGroups",
            "type": "Object",
            "tags": [],
            "label": "privilegeGroups",
            "description": [],
            "signature": [
              "readonly Readonly<{ groupType: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeGroupType",
                "text": "SubFeaturePrivilegeGroupType"
              },
              "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeature.toRaw",
            "type": "Function",
            "tags": [],
            "label": "toRaw",
            "description": [],
            "signature": [
              "() => { name: string; privilegeGroups: readonly Readonly<{ groupType: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeGroupType",
                "text": "SubFeaturePrivilegeGroupType"
              },
              "; privileges: readonly Readonly<{ id: string; name: string; includeIn: \"none\" | \"all\" | \"read\"; minimumLicense?: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined; management?: Readonly<{ [x: string]: readonly string[]; }> | undefined; catalogue?: readonly string[] | undefined; alerting?: Readonly<{ rule?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; alert?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; }> | undefined; ui: readonly string[]; app?: readonly string[] | undefined; cases?: Readonly<{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; }> | undefined; api?: readonly string[] | undefined; savedObject: Readonly<{ all: readonly string[]; read: readonly string[]; }>; }>[]; }>[]; }"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "features",
        "id": "def-common.ElasticsearchFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "ElasticsearchFeatureConfig",
        "description": [
          "\nInterface for registering an Elasticsearch feature.\nFeature registration allows plugins to hide their applications based\non configured cluster or index privileges."
        ],
        "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeatureConfig.id",
            "type": "string",
            "tags": [
              "see"
            ],
            "label": "id",
            "description": [
              "\nUnique identifier for this feature.\nThis identifier is also used when generating UI Capabilities.\n"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeatureConfig.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nManagement sections associated with this feature.\n"
            ],
            "signature": [
              "{ [sectionId: string]: string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeatureConfig.catalogue",
            "type": "Array",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on the current space.\n"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.ElasticsearchFeatureConfig.privileges",
            "type": "Array",
            "tags": [
              "see"
            ],
            "label": "privileges",
            "description": [
              "\nFeature privilege definition. Specify one or more privileges which grant access to this feature.\nUsers must satisfy all privileges in at least one of the defined sets of privileges in order to be granted access.\n"
            ],
            "signature": [
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureElasticsearchPrivileges",
                "text": "FeatureElasticsearchPrivileges"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/elasticsearch_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.FeatureElasticsearchPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeatureElasticsearchPrivileges",
        "description": [
          "\nElasticsearch Feature privilege definition"
        ],
        "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureElasticsearchPrivileges.requiredClusterPrivileges",
            "type": "Array",
            "tags": [],
            "label": "requiredClusterPrivileges",
            "description": [
              "\nA set of Elasticsearch cluster privileges which are required for this feature to be enabled.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html\n"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureElasticsearchPrivileges.requiredIndexPrivileges",
            "type": "Object",
            "tags": [],
            "label": "requiredIndexPrivileges",
            "description": [
              "\nA set of Elasticsearch index privileges which are required for this feature to be enabled, keyed on index name or pattern.\nSee https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html#privileges-list-indices\n"
            ],
            "signature": [
              "{ [indexName: string]: string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureElasticsearchPrivileges.requiredRoles",
            "type": "Array",
            "tags": [
              "deprecated"
            ],
            "label": "requiredRoles",
            "description": [
              "\nA set of Elasticsearch roles which are required for this feature to be enabled.\n"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": true,
            "references": [
              {
                "plugin": "security",
                "path": "x-pack/plugins/security/server/authorization/disable_ui_capabilities.ts"
              }
            ]
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureElasticsearchPrivileges.ui",
            "type": "Array",
            "tags": [
              "see"
            ],
            "label": "ui",
            "description": [
              "\nA list of UI Capabilities that should be granted to users with this privilege.\nThese capabilities will automatically be namespaces within your feature id.\n"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_elasticsearch_privileges.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.FeatureKibanaPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeatureKibanaPrivileges",
        "description": [
          "\nFeature privilege definition"
        ],
        "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this specific privilege should be excluded from the base privileges."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on user privileges.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on user permissions."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.api",
            "type": "Object",
            "tags": [],
            "label": "api",
            "description": [
              "\nIf your feature includes server-side APIs, you can tag those routes to secure access based on user permissions.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nIf your feature exposes a client-side application (most of them do!), then you can control access to them here.\n"
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature requires access to specific Alert Types, then specify your access needs here.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "{ rule?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; alert?: { all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature requires access to specific owners of cases (aka plugins that have created cases), then specify your access needs here. The values here should\nbe unique identifiers for the owners of cases you want access to."
            ],
            "signature": [
              "{ all?: readonly string[] | undefined; read?: readonly string[] | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.savedObject",
            "type": "Object",
            "tags": [],
            "label": "savedObject",
            "description": [
              "\nIf your feature requires access to specific saved objects, then specify your access needs here."
            ],
            "signature": [
              "{ all: readonly string[]; read: readonly string[]; }"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.FeatureKibanaPrivileges.ui",
            "type": "Object",
            "tags": [
              "see"
            ],
            "label": "ui",
            "description": [
              "\nA list of UI Capabilities that should be granted to users with this privilege.\nThese capabilities will automatically be namespaces within your feature id.\n"
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/feature_kibana_privileges.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.KibanaFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "KibanaFeatureConfig",
        "description": [
          "\nInterface for registering a feature.\nFeature registration allows plugins to hide their applications with spaces,\nand secure access when configured for security."
        ],
        "path": "x-pack/plugins/features/common/kibana_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.id",
            "type": "string",
            "tags": [
              "see"
            ],
            "label": "id",
            "description": [
              "\nUnique identifier for this feature.\nThis identifier is also used when generating UI Capabilities.\n"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this feature.\nThis will be displayed to end-users, so a translatable string is advised for i18n."
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.category",
            "type": "Object",
            "tags": [],
            "label": "category",
            "description": [
              "\nThe category for this feature.\nThis will be used to organize the list of features for display within the\nSpaces and Roles management screens."
            ],
            "signature": [
              "AppCategory"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [
              "\nAn ordinal used to sort features relative to one another for display."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.excludeFromBasePrivileges",
            "type": "CompoundType",
            "tags": [],
            "label": "excludeFromBasePrivileges",
            "description": [
              "\nWhether or not this feature should be excluded from the base privileges.\nThis is primarily helpful when migrating applications with a \"legacy\" privileges model\nto use Kibana privileges. We don't want these features to be considered part of the `all`\nor `read` base privileges in a minor release if the user was previously granted access\nusing an additional reserved role."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [
              "\nOptional minimum supported license.\nIf omitted, all licenses are allowed.\nThis does not restrict access to your feature based on license.\nIts only purpose is to inform the space and roles UIs on which features to display."
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [
              "\nAn array of app ids that are enabled when this feature is enabled.\nApps specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.management",
            "type": "Object",
            "tags": [],
            "label": "management",
            "description": [
              "\nIf this feature includes management sections, you can specify them here to control visibility of those\npages based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there.\n"
            ],
            "signature": [
              "{ [sectionId: string]: readonly string[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.catalogue",
            "type": "Object",
            "tags": [],
            "label": "catalogue",
            "description": [
              "\nIf this feature includes a catalogue entry, you can specify them here to control visibility based on the current space.\n\nItems specified here will automatically cascade to the privileges defined below, unless specified differently there."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.alerting",
            "type": "Object",
            "tags": [],
            "label": "alerting",
            "description": [
              "\nIf your feature grants access to specific Alert Types, you can specify them here to control visibility based on the current space.\nInclude both Alert Types registered by the feature and external Alert Types such as built-in\nAlert Types and Alert Types provided by other features to which you wish to grant access."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [
              "\nIf your feature grants access to specific case types, you can specify them here to control visibility based on the current space."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.privileges",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "privileges",
            "description": [
              "\nFeature privilege definition.\n"
            ],
            "signature": [
              "{ all: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; read: ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.FeatureKibanaPrivileges",
                "text": "FeatureKibanaPrivileges"
              },
              "; } | null"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.subFeatures",
            "type": "Object",
            "tags": [],
            "label": "subFeatures",
            "description": [
              "\nOptional sub-feature privilege definitions. This can only be specified if `privileges` are are also defined."
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeatureConfig",
                "text": "SubFeatureConfig"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.privilegesTooltip",
            "type": "string",
            "tags": [],
            "label": "privilegesTooltip",
            "description": [
              "\nOptional message to display on the Role Management screen when configuring permissions for this feature."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.KibanaFeatureConfig.reserved",
            "type": "Object",
            "tags": [
              "private"
            ],
            "label": "reserved",
            "description": [],
            "signature": [
              "{ description: string; privileges: readonly ",
              "ReservedKibanaPrivilege",
              "[]; } | undefined"
            ],
            "path": "x-pack/plugins/features/common/kibana_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.SubFeatureConfig",
        "type": "Interface",
        "tags": [],
        "label": "SubFeatureConfig",
        "description": [
          "\nConfiguration for a sub-feature."
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeatureConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "Display name for this sub-feature"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeatureConfig.privilegeGroups",
            "type": "Object",
            "tags": [],
            "label": "privilegeGroups",
            "description": [
              "Collection of privilege groups"
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeGroupConfig",
                "text": "SubFeaturePrivilegeGroupConfig"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.SubFeaturePrivilegeConfig",
        "type": "Interface",
        "tags": [],
        "label": "SubFeaturePrivilegeConfig",
        "description": [
          "\nConfiguration for a sub-feature privilege."
        ],
        "signature": [
          {
            "pluginId": "features",
            "scope": "common",
            "docId": "kibFeaturesPluginApi",
            "section": "def-common.SubFeaturePrivilegeConfig",
            "text": "SubFeaturePrivilegeConfig"
          },
          " extends Pick<",
          {
            "pluginId": "features",
            "scope": "common",
            "docId": "kibFeaturesPluginApi",
            "section": "def-common.FeatureKibanaPrivileges",
            "text": "FeatureKibanaPrivileges"
          },
          ", \"management\" | \"catalogue\" | \"alerting\" | \"ui\" | \"app\" | \"cases\" | \"api\" | \"savedObject\">"
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeConfig.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nIdentifier for this privilege. Must be unique across all other privileges within a feature."
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeConfig.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nThe display name for this privilege."
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeConfig.includeIn",
            "type": "CompoundType",
            "tags": [],
            "label": "includeIn",
            "description": [
              "\nDenotes which Primary Feature Privilege this sub-feature privilege should be included in.\n`read` is also included in `all` automatically."
            ],
            "signature": [
              "\"none\" | \"all\" | \"read\""
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeConfig.minimumLicense",
            "type": "CompoundType",
            "tags": [],
            "label": "minimumLicense",
            "description": [
              "\nThe minimum supported license level for this sub-feature privilege.\nIf no license level is supplied, then this privilege will be available for all licences\nthat are valid for the overall feature."
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "features",
        "id": "def-common.SubFeaturePrivilegeGroupConfig",
        "type": "Interface",
        "tags": [],
        "label": "SubFeaturePrivilegeGroupConfig",
        "description": [
          "\nConfiguration for a sub-feature privilege group."
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeGroupConfig.groupType",
            "type": "CompoundType",
            "tags": [],
            "label": "groupType",
            "description": [
              "\nThe type of privilege group.\n- `mutually_exclusive`::\n    Users will be able to select at most one privilege within this group.\n    Privileges must be specified in descending order of permissiveness (e.g. `All`, `Read`, not `Read`, `All)\n- `independent`::\n    Users will be able to select any combination of privileges within this group."
            ],
            "signature": [
              "\"mutually_exclusive\" | \"independent\""
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "features",
            "id": "def-common.SubFeaturePrivilegeGroupConfig.privileges",
            "type": "Object",
            "tags": [],
            "label": "privileges",
            "description": [
              "\nThe privileges which belong to this group."
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "features",
                "scope": "common",
                "docId": "kibFeaturesPluginApi",
                "section": "def-common.SubFeaturePrivilegeConfig",
                "text": "SubFeaturePrivilegeConfig"
              },
              "[]"
            ],
            "path": "x-pack/plugins/features/common/sub_feature.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "features",
        "id": "def-common.SubFeaturePrivilegeGroupType",
        "type": "Type",
        "tags": [],
        "label": "SubFeaturePrivilegeGroupType",
        "description": [
          "\nThe type of privilege group.\n- `mutually_exclusive`::\n    Users will be able to select at most one privilege within this group.\n    Privileges must be specified in descending order of permissiveness (e.g. `All`, `Read`, not `Read`, `All)\n- `independent`::\n    Users will be able to select any combination of privileges within this group."
        ],
        "signature": [
          "\"mutually_exclusive\" | \"independent\""
        ],
        "path": "x-pack/plugins/features/common/sub_feature.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}