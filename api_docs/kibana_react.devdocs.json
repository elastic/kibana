{
  "id": "kibanaReact",
  "client": {
    "classes": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListView",
        "type": "Class",
        "tags": [],
        "label": "TableListView",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListView",
            "text": "TableListView"
          },
          "<V> extends React.Component<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewProps",
            "text": "TableListViewProps"
          },
          "<V>, ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewState",
            "text": "TableListViewState"
          },
          "<V>, any>"
        ],
        "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaReact",
                    "scope": "public",
                    "docId": "kibKibanaReactPluginApi",
                    "section": "def-public.TableListViewProps",
                    "text": "TableListViewProps"
                  },
                  "<V>"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.UNSAFE_componentWillMount",
            "type": "Function",
            "tags": [],
            "label": "UNSAFE_componentWillMount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.componentWillUnmount",
            "type": "Function",
            "tags": [],
            "label": "componentWillUnmount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.componentDidMount",
            "type": "Function",
            "tags": [],
            "label": "componentDidMount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.componentDidUpdate",
            "type": "Function",
            "tags": [],
            "label": "componentDidUpdate",
            "description": [],
            "signature": [
              "(prevProps: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.TableListViewProps",
                "text": "TableListViewProps"
              },
              "<V>, prevState: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.TableListViewState",
                "text": "TableListViewState"
              },
              "<V>) => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.componentDidUpdate.$1",
                "type": "Object",
                "tags": [],
                "label": "prevProps",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaReact",
                    "scope": "public",
                    "docId": "kibKibanaReactPluginApi",
                    "section": "def-public.TableListViewProps",
                    "text": "TableListViewProps"
                  },
                  "<V>"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.componentDidUpdate.$2",
                "type": "Object",
                "tags": [],
                "label": "prevState",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaReact",
                    "scope": "public",
                    "docId": "kibKibanaReactPluginApi",
                    "section": "def-public.TableListViewState",
                    "text": "TableListViewState"
                  },
                  "<V>"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.debouncedFetch",
            "type": "Function",
            "tags": [],
            "label": "debouncedFetch",
            "description": [],
            "signature": [
              "((filter: string) => Promise<void>) & _.Cancelable"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.debouncedFetch.$1",
                "type": "string",
                "tags": [],
                "label": "filter",
                "description": [],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.fetchItems",
            "type": "Function",
            "tags": [],
            "label": "fetchItems",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.deleteSelectedItems",
            "type": "Function",
            "tags": [],
            "label": "deleteSelectedItems",
            "description": [],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.closeDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "closeDeleteModal",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.openDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "openDeleteModal",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.setFilter",
            "type": "Function",
            "tags": [],
            "label": "setFilter",
            "description": [],
            "signature": [
              "({ queryText }: { queryText: string; }) => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.setFilter.$1",
                "type": "Object",
                "tags": [],
                "label": "{ queryText }",
                "description": [],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "kibanaReact",
                    "id": "def-public.TableListView.setFilter.$1.queryText",
                    "type": "string",
                    "tags": [],
                    "label": "queryText",
                    "description": [],
                    "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.hasNoItems",
            "type": "Function",
            "tags": [],
            "label": "hasNoItems",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderConfirmDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "renderConfirmDeleteModal",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderListingLimitWarning",
            "type": "Function",
            "tags": [],
            "label": "renderListingLimitWarning",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderFetchError",
            "type": "Function",
            "tags": [],
            "label": "renderFetchError",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderNoItemsMessage",
            "type": "Function",
            "tags": [],
            "label": "renderNoItemsMessage",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderToolsLeft",
            "type": "Function",
            "tags": [],
            "label": "renderToolsLeft",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.onTableChange",
            "type": "Function",
            "tags": [],
            "label": "onTableChange",
            "description": [],
            "signature": [
              "(criteria: ",
              "CriteriaWithPagination",
              "<V>) => void"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.onTableChange.$1",
                "type": "Object",
                "tags": [],
                "label": "criteria",
                "description": [],
                "signature": [
                  "CriteriaWithPagination",
                  "<V>"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderTable",
            "type": "Function",
            "tags": [],
            "label": "renderTable",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.getTableColumns",
            "type": "Function",
            "tags": [],
            "label": "getTableColumns",
            "description": [],
            "signature": [
              "() => ",
              "EuiBasicTableColumn",
              "<V>[]"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderCreateButton",
            "type": "Function",
            "tags": [],
            "label": "renderCreateButton",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ValidatedDualRange",
        "type": "Class",
        "tags": [],
        "label": "ValidatedDualRange",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ValidatedDualRange",
            "text": "ValidatedDualRange"
          },
          " extends React.Component<Props, {}, any>"
        ],
        "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.defaultProps",
            "type": "Object",
            "tags": [],
            "label": "defaultProps",
            "description": [],
            "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.allowEmptyRange",
                "type": "boolean",
                "tags": [],
                "label": "allowEmptyRange",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.fullWidth",
                "type": "boolean",
                "tags": [],
                "label": "fullWidth",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.compressed",
                "type": "boolean",
                "tags": [],
                "label": "compressed",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.getDerivedStateFromProps",
            "type": "Function",
            "tags": [],
            "label": "getDerivedStateFromProps",
            "description": [],
            "signature": [
              "(nextProps: Props, prevState: State) => { value: [ValueMember, ValueMember] | undefined; prevValue: [ValueMember, ValueMember] | undefined; isValid: boolean; errorMessage: string; } | null"
            ],
            "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.getDerivedStateFromProps.$1",
                "type": "Object",
                "tags": [],
                "label": "nextProps",
                "description": [],
                "signature": [
                  "Props"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.getDerivedStateFromProps.$2",
                "type": "Object",
                "tags": [],
                "label": "prevState",
                "description": [],
                "signature": [
                  "State"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.state",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [],
            "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
            "deprecated": false,
            "children": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange._onChange",
            "type": "Function",
            "tags": [],
            "label": "_onChange",
            "description": [],
            "signature": [
              "(value: [ValueMember, ValueMember]) => void"
            ],
            "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange._onChange.$1",
                "type": "Object",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "[ValueMember, ValueMember]"
                ],
                "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.CodeEditor",
        "type": "Function",
        "tags": [
          "see"
        ],
        "label": "CodeEditor",
        "description": [
          "\nRenders a Monaco code editor with EUI color theme.\n"
        ],
        "signature": [
          "(props: React.PropsWithChildren<",
          "Props",
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.CodeEditor.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              "Props",
              ">"
            ],
            "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.CodeEditorField",
        "type": "Function",
        "tags": [],
        "label": "CodeEditorField",
        "description": [
          "\nRenders a Monaco code editor in the same style as other EUI form fields."
        ],
        "signature": [
          "(props: React.PropsWithChildren<",
          "Props",
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.CodeEditorField.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              "Props",
              ">"
            ],
            "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createKibanaReactContext",
        "type": "Function",
        "tags": [],
        "label": "createKibanaReactContext",
        "description": [],
        "signature": [
          "<Services extends Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">>(services: Services) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContext",
            "text": "KibanaReactContext"
          },
          "<Services>"
        ],
        "path": "src/plugins/kibana_react/public/context/context.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createKibanaReactContext.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Services"
            ],
            "path": "src/plugins/kibana_react/public/context/context.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createNotifications",
        "type": "Function",
        "tags": [],
        "label": "createNotifications",
        "description": [],
        "signature": [
          "(services: Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactNotifications",
            "text": "KibanaReactNotifications"
          }
        ],
        "path": "src/plugins/kibana_react/public/notifications/create_notifications.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createNotifications.$1",
            "type": "Object",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Partial<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/notifications/create_notifications.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createReactOverlays",
        "type": "Function",
        "tags": [],
        "label": "createReactOverlays",
        "description": [],
        "signature": [
          "(services: Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactOverlays",
            "text": "KibanaReactOverlays"
          }
        ],
        "path": "src/plugins/kibana_react/public/overlays/create_react_overlays.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createReactOverlays.$1",
            "type": "Object",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Partial<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/overlays/create_react_overlays.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ElasticAgentCard",
        "type": "Function",
        "tags": [],
        "label": "ElasticAgentCard",
        "description": [
          "\nApplies extra styling to a typical EuiAvatar"
        ],
        "signature": [
          "({ solution, recommended, title, href, button, layout, category, ...cardRest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ElasticAgentCardProps",
            "text": "ElasticAgentCardProps"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_card/elastic_agent_card.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ElasticAgentCard.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  solution,\n  recommended,\n  title,\n  href,\n  button,\n  layout,\n  category,\n  ...cardRest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ElasticAgentCardProps",
                "text": "ElasticAgentCardProps"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_card/elastic_agent_card.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaContextProvider",
        "type": "Function",
        "tags": [],
        "label": "KibanaContextProvider",
        "description": [],
        "signature": [
          "React.FunctionComponent<{ services?: {} | undefined; }>"
        ],
        "path": "src/plugins/kibana_react/public/context/context.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaContextProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaContextProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaPageTemplate",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "KibanaPageTemplate",
        "description": [],
        "signature": [
          "({ template, className, children, solutionNav, noDataConfig, ...rest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaPageTemplateProps",
            "text": "KibanaPageTemplateProps"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/page_template/page_template.tsx",
        "deprecated": true,
        "references": [
          {
            "plugin": "management",
            "path": "src/plugins/management/public/components/management_app/management_app.tsx"
          },
          {
            "plugin": "management",
            "path": "src/plugins/management/public/components/management_app/management_app.tsx"
          },
          {
            "plugin": "management",
            "path": "src/plugins/management/public/components/management_app/management_app.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/space_selector/space_selector.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/space_selector/space_selector.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/space_selector/space_selector.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/home.component.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/home.component.tsx"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/home.component.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/version_mismatch/version_mismatch_page.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/version_mismatch/version_mismatch_page.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/version_mismatch/version_mismatch_page.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_overview/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_overview/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_overview/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/layout/page_template.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/layout/page_template.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/layout/page_template.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_content/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_content/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/enterprise_search_content/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/app_search/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/app_search/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/app_search/components/error_connecting/error_connecting.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/error_state/error_state.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/error_state/error_state.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/error_state/error_state.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/components/empty_state.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/components/empty_state.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/home.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/home.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/home.tsx"
          }
        ],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaPageTemplate.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  template,\n  className,\n  children,\n  solutionNav,\n  noDataConfig,\n  ...rest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaPageTemplateProps",
                "text": "KibanaPageTemplateProps"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/page_template/page_template.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaPageTemplateSolutionNavAvatar",
        "type": "Function",
        "tags": [],
        "label": "KibanaPageTemplateSolutionNavAvatar",
        "description": [
          "\nApplies extra styling to a typical EuiAvatar"
        ],
        "signature": [
          "({ className, size, ...rest }: React.PropsWithChildren<",
          "KibanaPageTemplateSolutionNavAvatarProps",
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/page_template/solution_nav/solution_nav_avatar.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaPageTemplateSolutionNavAvatar.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ className, size, ...rest }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              "KibanaPageTemplateSolutionNavAvatarProps",
              ">"
            ],
            "path": "src/plugins/kibana_react/public/page_template/solution_nav/solution_nav_avatar.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaThemeProvider",
        "type": "Function",
        "tags": [],
        "label": "KibanaThemeProvider",
        "description": [],
        "signature": [
          "({ theme$, children }: React.PropsWithChildren<KibanaThemeProviderProps>) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/theme/kibana_theme_provider.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaThemeProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ theme$, children }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<KibanaThemeProviderProps>"
            ],
            "path": "src/plugins/kibana_react/public/theme/kibana_theme_provider.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Markdown",
        "type": "Function",
        "tags": [],
        "label": "Markdown",
        "description": [],
        "signature": [
          "(props: ",
          "MarkdownProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/markdown/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.Markdown.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "MarkdownProps"
            ],
            "path": "src/plugins/kibana_react/public/markdown/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.MarkdownSimple",
        "type": "Function",
        "tags": [],
        "label": "MarkdownSimple",
        "description": [],
        "signature": [
          "(props: ",
          "MarkdownSimpleProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/markdown/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.MarkdownSimple.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "MarkdownSimpleProps"
            ],
            "path": "src/plugins/kibana_react/public/markdown/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.MountPointPortal",
        "type": "Function",
        "tags": [],
        "label": "MountPointPortal",
        "description": [
          "\nUtility component to portal a part of a react application into the provided `MountPoint`."
        ],
        "signature": [
          "({ children, setMountPoint }: React.PropsWithChildren<MountPointPortalProps>) => React.ReactPortal | null"
        ],
        "path": "src/plugins/kibana_react/public/util/mount_point_portal.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.MountPointPortal.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ children, setMountPoint }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<MountPointPortalProps>"
            ],
            "path": "src/plugins/kibana_react/public/util/mount_point_portal.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NoDataCard",
        "type": "Function",
        "tags": [],
        "label": "NoDataCard",
        "description": [],
        "signature": [
          "({ recommended, title, button, layout, ...cardRest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageActions",
            "text": "NoDataPageActions"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_card/no_data_card.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataCard.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  recommended,\n  title,\n  button,\n  layout,\n  ...cardRest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.NoDataPageActions",
                "text": "NoDataPageActions"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_card/no_data_card.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NoDataPage",
        "type": "Function",
        "tags": [],
        "label": "NoDataPage",
        "description": [],
        "signature": [
          "({ solution, logo, actions, docsLink, pageTitle, ...rest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageProps",
            "text": "NoDataPageProps"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPage.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  solution,\n  logo,\n  actions,\n  docsLink,\n  pageTitle,\n  ...rest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.NoDataPageProps",
                "text": "NoDataPageProps"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.overviewPageActions",
        "type": "Function",
        "tags": [],
        "label": "overviewPageActions",
        "description": [],
        "signature": [
          "({ addDataHref, application, devToolsHref, hidden, managementHref, showDevToolsLink, showManagementLink, }: Props) => (JSX.Element | null)[]"
        ],
        "path": "src/plugins/kibana_react/public/overview_page/overview_page_actions/overview_page_actions.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.overviewPageActions.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  addDataHref,\n  application,\n  devToolsHref,\n  hidden,\n  managementHref,\n  showDevToolsLink,\n  showManagementLink,\n}",
            "description": [],
            "signature": [
              "Props"
            ],
            "path": "src/plugins/kibana_react/public/overview_page/overview_page_actions/overview_page_actions.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.OverviewPageFooter",
        "type": "Function",
        "tags": [],
        "label": "OverviewPageFooter",
        "description": [],
        "signature": [
          "({ addBasePath, path, onSetDefaultRoute, onChangeDefaultRoute, }: React.PropsWithChildren<Props>) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/overview_page/overview_page_footer/overview_page_footer.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.OverviewPageFooter.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  addBasePath,\n  path,\n  onSetDefaultRoute,\n  onChangeDefaultRoute,\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<Props>"
            ],
            "path": "src/plugins/kibana_react/public/overview_page/overview_page_footer/overview_page_footer.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactRouterNavigate",
        "type": "Function",
        "tags": [],
        "label": "reactRouterNavigate",
        "description": [],
        "signature": [
          "(history: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreApplicationPluginApi",
            "section": "def-public.ScopedHistory",
            "text": "ScopedHistory"
          },
          "<unknown> | ",
          "History",
          "<unknown>, to: string | LocationObject, onClickCallback?: Function | undefined) => { href: string; onClick: (event: React.MouseEvent<Element, MouseEvent>) => void; }"
        ],
        "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ScopedHistory",
                "text": "ScopedHistory"
              },
              "<unknown> | ",
              "History",
              "<unknown>"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "to",
            "description": [],
            "signature": [
              "string | LocationObject"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$3",
            "type": "Object",
            "tags": [],
            "label": "onClickCallback",
            "description": [],
            "signature": [
              "Function | undefined"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactRouterOnClickHandler",
        "type": "Function",
        "tags": [],
        "label": "reactRouterOnClickHandler",
        "description": [],
        "signature": [
          "(history: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreApplicationPluginApi",
            "section": "def-public.ScopedHistory",
            "text": "ScopedHistory"
          },
          "<unknown> | ",
          "History",
          "<unknown>, to: string | LocationObject, onClickCallback?: Function | undefined) => (event: React.MouseEvent<Element, MouseEvent>) => void"
        ],
        "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ScopedHistory",
                "text": "ScopedHistory"
              },
              "<unknown> | ",
              "History",
              "<unknown>"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "to",
            "description": [],
            "signature": [
              "string | LocationObject"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "onClickCallback",
            "description": [],
            "signature": [
              "Function | undefined"
            ],
            "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactToUiComponent",
        "type": "Function",
        "tags": [],
        "label": "reactToUiComponent",
        "description": [
          "\nTransform a React component into a `UiComponent`.\n"
        ],
        "signature": [
          "<Props extends object>(ReactComp: React.ComponentType<Props>) => ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.UiComponent",
            "text": "UiComponent"
          },
          "<Props>"
        ],
        "path": "src/plugins/kibana_react/public/adapters/react_to_ui_component.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactToUiComponent.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "ReactComp",
            "description": [
              "A React component."
            ],
            "signature": [
              "React.ComponentType<Props>"
            ],
            "path": "src/plugins/kibana_react/public/adapters/react_to_ui_component.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.RedirectAppLinks",
        "type": "Function",
        "tags": [
          "deprecated",
          "kbn-shared-ux-components"
        ],
        "label": "RedirectAppLinks",
        "description": [
          "\nUtility component that will intercept click events on children anchor (`<a>`) elements to call\n`application.navigateToUrl` with the link's href. This will trigger SPA friendly navigation\nwhen the link points to a valid Kibana app.\n"
        ],
        "signature": [
          "({ application, children, className, ...otherProps }: React.PropsWithChildren<RedirectCrossAppLinksProps>) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/app_links/redirect_app_link.tsx",
        "deprecated": true,
        "references": [
          {
            "plugin": "esUiShared",
            "path": "src/plugins/es_ui_shared/public/components/view_api_request_flyout/view_api_request_flyout.tsx"
          },
          {
            "plugin": "esUiShared",
            "path": "src/plugins/es_ui_shared/public/components/view_api_request_flyout/view_api_request_flyout.tsx"
          },
          {
            "plugin": "esUiShared",
            "path": "src/plugins/es_ui_shared/public/components/view_api_request_flyout/view_api_request_flyout.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/application.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/application.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/application.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/session_indicator/connected_search_session_indicator/connected_search_session_indicator.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/session_indicator/connected_search_session_indicator/connected_search_session_indicator.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/session_indicator/connected_search_session_indicator/connected_search_session_indicator.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/get_columns.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/get_columns.tsx"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/get_columns.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/management/spaces_management_app.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/management/spaces_management_app.tsx"
          },
          {
            "plugin": "spaces",
            "path": "x-pack/plugins/spaces/public/management/spaces_management_app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/home_integration/tutorial_directory_header_link.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/home_integration/tutorial_directory_header_link.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/home_integration/tutorial_directory_header_link.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/custom_assets_accordion.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/custom_assets_accordion.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/components/custom_assets_accordion.tsx"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/visualize_app/utils/get_table_columns.tsx"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/visualize_app/utils/get_table_columns.tsx"
          },
          {
            "plugin": "visualizations",
            "path": "src/plugins/visualizations/public/visualize_app/utils/get_table_columns.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/editor_frame_service/editor_frame/workspace_panel/workspace_panel.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/editor_frame_service/editor_frame/workspace_panel/workspace_panel.tsx"
          },
          {
            "plugin": "lens",
            "path": "x-pack/plugins/lens/public/editor_frame_service/editor_frame/workspace_panel/workspace_panel.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/application/index.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/application/index.tsx"
          },
          {
            "plugin": "observability",
            "path": "x-pack/plugins/observability/public/application/index.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/components/ml_page/ml_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/management/jobs_list/components/jobs_list_page/jobs_list_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/management/jobs_list/components/jobs_list_page/jobs_list_page.tsx"
          },
          {
            "plugin": "ml",
            "path": "x-pack/plugins/ml/public/application/management/jobs_list/components/jobs_list_page/jobs_list_page.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/agent_logs.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/agent_logs.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/agent_logs.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/integrations/app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/integrations/app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/integrations/app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/app.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/public/applications/fleet/app.tsx"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/routing/app_root.tsx"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/routing/app_root.tsx"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/public/components/routing/app_root.tsx"
          },
          {
            "plugin": "indexLifecycleManagement",
            "path": "x-pack/plugins/index_lifecycle_management/public/shared_imports.ts"
          },
          {
            "plugin": "indexLifecycleManagement",
            "path": "x-pack/plugins/index_lifecycle_management/public/application/index.tsx"
          },
          {
            "plugin": "indexLifecycleManagement",
            "path": "x-pack/plugins/index_lifecycle_management/public/application/index.tsx"
          },
          {
            "plugin": "indexLifecycleManagement",
            "path": "x-pack/plugins/index_lifecycle_management/public/application/index.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/lib/alert_types/alert_messages.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/lib/alert_types/alert_messages.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/lib/alert_types/alert_messages.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/app/uptime_app.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/app/uptime_app.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/legacy_uptime/app/uptime_app.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/synthetics_app.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/synthetics_app.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/synthetics_app.tsx"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/public/shared_imports.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/public/application/app.tsx"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/public/application/app.tsx"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/public/application/app.tsx"
          },
          {
            "plugin": "ux",
            "path": "x-pack/plugins/ux/public/application/ux_app.tsx"
          },
          {
            "plugin": "ux",
            "path": "x-pack/plugins/ux/public/application/ux_app.tsx"
          },
          {
            "plugin": "ux",
            "path": "x-pack/plugins/ux/public/application/ux_app.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/saved_objects_edition_page.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/saved_objects_edition_page.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/saved_objects_edition_page.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/objects_table/saved_objects_table.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/objects_table/saved_objects_table.tsx"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/public/management_section/objects_table/saved_objects_table.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/add_data/add_data.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/add_data/add_data.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/add_data/add_data.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "kibanaOverview",
            "path": "src/plugins/kibana_overview/public/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/add_data/add_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/add_data/add_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/add_data/add_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/manage_data/manage_data.tsx"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/public/application/components/manage_data/manage_data.tsx"
          }
        ],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.RedirectAppLinks.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  application,\n  children,\n  className,\n  ...otherProps\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<RedirectCrossAppLinksProps>"
            ],
            "path": "src/plugins/kibana_react/public/app_links/redirect_app_link.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Route",
        "type": "Function",
        "tags": [],
        "label": "Route",
        "description": [
          "\nIt's a wrapper around the react-router-dom Route component that inserts\nMatchPropagator in every application route. It helps track all route changes\nand send them to the execution context, later used to enrich APM\n'route-change' transactions."
        ],
        "signature": [
          "({ children, component: Component, render, ...rest }: ",
          "RouteProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/router/router.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.Route.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children, component: Component, render, ...rest }",
            "description": [],
            "signature": [
              "RouteProps"
            ],
            "path": "src/plugins/kibana_react/public/router/router.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.toMountPoint",
        "type": "Function",
        "tags": [],
        "label": "toMountPoint",
        "description": [
          "\nMountPoint converter for react nodes.\n"
        ],
        "signature": [
          "(node: React.ReactNode, { theme$ }?: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ToMountPointOptions",
            "text": "ToMountPointOptions"
          },
          ") => ",
          "MountPoint",
          "<HTMLElement>"
        ],
        "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.toMountPoint.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "node",
            "description": [
              "to get a mount point for"
            ],
            "signature": [
              "React.ReactNode"
            ],
            "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.toMountPoint.$2",
            "type": "Object",
            "tags": [],
            "label": "{ theme$ }",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToMountPointOptions",
                "text": "ToMountPointOptions"
              }
            ],
            "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToolbarButton",
        "type": "Function",
        "tags": [],
        "label": "ToolbarButton",
        "description": [],
        "signature": [
          "({ children, className, fontWeight, size, hasArrow, groupPosition, dataTestSubj, ...rest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ToolbarButtonProps",
            "text": "ToolbarButtonProps"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToolbarButton.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  children,\n  className,\n  fontWeight = 'normal',\n  size = 'm',\n  hasArrow = true,\n  groupPosition = 'none',\n  dataTestSubj = '',\n  ...rest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToolbarButtonProps",
                "text": "ToolbarButtonProps"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.uiToReactComponent",
        "type": "Function",
        "tags": [],
        "label": "uiToReactComponent",
        "description": [
          "\nTransforms `UiComponent` into a React component."
        ],
        "signature": [
          "<Props extends object>(Comp: ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.UiComponent",
            "text": "UiComponent"
          },
          "<Props>, as?: string) => React.FC<Props>"
        ],
        "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.uiToReactComponent.$1",
            "type": "Function",
            "tags": [],
            "label": "Comp",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaUtils",
                "scope": "common",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-common.UiComponent",
                "text": "UiComponent"
              },
              "<Props>"
            ],
            "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.uiToReactComponent.$2",
            "type": "string",
            "tags": [],
            "label": "as",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditor",
        "type": "Function",
        "tags": [],
        "label": "UrlTemplateEditor",
        "description": [],
        "signature": [
          "({ height, value, variables, onChange, placeholder, onEditor, Editor, }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.UrlTemplateEditorProps",
            "text": "UrlTemplateEditorProps"
          },
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditor.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  height = 105,\n  value,\n  variables,\n  onChange,\n  placeholder,\n  onEditor,\n  Editor = CodeEditor,\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.UrlTemplateEditorProps",
                "text": "UrlTemplateEditorProps"
              },
              ">"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useExecutionContext",
        "type": "Function",
        "tags": [],
        "label": "useExecutionContext",
        "description": [
          "\nSet and clean up application level execution context"
        ],
        "signature": [
          "(executionContext: ",
          "ExecutionContextSetup",
          " | undefined, context: ",
          "KibanaExecutionContext",
          ") => void"
        ],
        "path": "src/plugins/kibana_react/public/use_execution_context/use_execution_context.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useExecutionContext.$1",
            "type": "Object",
            "tags": [],
            "label": "executionContext",
            "description": [],
            "signature": [
              "ExecutionContextSetup",
              " | undefined"
            ],
            "path": "src/plugins/kibana_react/public/use_execution_context/use_execution_context.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useExecutionContext.$2",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "KibanaExecutionContext"
            ],
            "path": "src/plugins/kibana_react/public/use_execution_context/use_execution_context.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useKibana",
        "type": "Function",
        "tags": [],
        "label": "useKibana",
        "description": [],
        "signature": [
          "<Extra extends object = {}>() => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          "> & Extra>"
        ],
        "path": "src/plugins/kibana_react/public/context/context.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useUiSetting",
        "type": "Function",
        "tags": [],
        "label": "useUiSetting",
        "description": [
          "\nReturns the current UI-settings value.\n\nUsage:\n\n```js\nconst darkMode = useUiSetting('theme:darkMode');\n```"
        ],
        "signature": [
          "<T>(key: string, defaultValue?: T | undefined) => T"
        ],
        "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting.$1",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultValue",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useUiSetting$",
        "type": "Function",
        "tags": [],
        "label": "useUiSetting$",
        "description": [
          "\nReturns a 2-tuple, where first entry is the setting value and second is a\nfunction to update the setting value.\n\nSynchronously returns the most current value of the setting and subscribes\nto all subsequent updates, which will re-render your component on new values.\n\nUsage:\n\n```js\nconst [darkMode, setDarkMode] = useUiSetting$('theme:darkMode');\n```"
        ],
        "signature": [
          "<T>(key: string, defaultValue?: T | undefined) => [T, Setter<T>]"
        ],
        "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting$.$1",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting$.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultValue",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.withKibana",
        "type": "Function",
        "tags": [],
        "label": "withKibana",
        "description": [],
        "signature": [
          "<Props extends { kibana: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<{}>; }>(type: React.ComponentType<Props>) => React.FC<Omit<Props, \"kibana\">>"
        ],
        "path": "src/plugins/kibana_react/public/context/context.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.withKibana.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "React.ComponentType<Props>"
            ],
            "path": "src/plugins/kibana_react/public/context/context.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.wrapWithTheme",
        "type": "Function",
        "tags": [],
        "label": "wrapWithTheme",
        "description": [],
        "signature": [
          "(node: React.ReactNode, theme$: ",
          "Observable",
          "<",
          "CoreTheme",
          ">) => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
        ],
        "path": "src/plugins/kibana_react/public/theme/wrap_with_theme.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.wrapWithTheme.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "node",
            "description": [],
            "signature": [
              "React.ReactNode"
            ],
            "path": "src/plugins/kibana_react/public/theme/wrap_with_theme.tsx",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.wrapWithTheme.$2",
            "type": "Object",
            "tags": [],
            "label": "theme$",
            "description": [],
            "signature": [
              "Observable",
              "<",
              "CoreTheme",
              ">"
            ],
            "path": "src/plugins/kibana_react/public/theme/wrap_with_theme.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ExitFullScreenButtonProps",
        "type": "Interface",
        "tags": [],
        "label": "ExitFullScreenButtonProps",
        "description": [],
        "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ExitFullScreenButtonProps.onExitFullScreenMode",
            "type": "Function",
            "tags": [],
            "label": "onExitFullScreenMode",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ExitFullScreenButtonProps.chrome",
            "type": "Object",
            "tags": [],
            "label": "chrome",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreChromePluginApi",
                "section": "def-public.ChromeStart",
                "text": "ChromeStart"
              }
            ],
            "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ExitFullScreenButtonProps.toggleChrome",
            "type": "CompoundType",
            "tags": [
              "note",
              "default"
            ],
            "label": "toggleChrome",
            "description": [
              "\nOptional argument that determines whether we toggle the chrome bar\nthe button unmounts.\n"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactContext",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactContext",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContext",
            "text": "KibanaReactContext"
          },
          "<T>"
        ],
        "path": "src/plugins/kibana_react/public/context/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.value",
            "type": "Object",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactContextValue",
                "text": "KibanaReactContextValue"
              },
              "<T>"
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.Provider",
            "type": "Function",
            "tags": [],
            "label": "Provider",
            "description": [],
            "signature": [
              "React.FunctionComponent<{ services?: T | undefined; }>"
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactContext.Provider.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "P & { children?: React.ReactNode; }"
                ],
                "path": "node_modules/@types/react/index.d.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactContext.Provider.$2",
                "type": "Any",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "node_modules/@types/react/index.d.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.Consumer",
            "type": "Function",
            "tags": [],
            "label": "Consumer",
            "description": [],
            "signature": [
              "React.ExoticComponent<React.ConsumerProps<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactContextValue",
                "text": "KibanaReactContextValue"
              },
              "<T>>>"
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactContext.Consumer.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "P"
                ],
                "path": "node_modules/@types/react/index.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactContextValue",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactContextValue",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Services>"
        ],
        "path": "src/plugins/kibana_react/public/context/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.services",
            "type": "Uncategorized",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Services"
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.overlays",
            "type": "Object",
            "tags": [],
            "label": "overlays",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactOverlays",
                "text": "KibanaReactOverlays"
              }
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.notifications",
            "type": "Object",
            "tags": [],
            "label": "notifications",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactNotifications",
                "text": "KibanaReactNotifications"
              }
            ],
            "path": "src/plugins/kibana_react/public/context/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactNotifications",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactNotifications",
        "description": [],
        "path": "src/plugins/kibana_react/public/notifications/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactNotifications.toasts",
            "type": "Object",
            "tags": [],
            "label": "toasts",
            "description": [],
            "signature": [
              "{ show: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; success: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; warning: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; danger: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; }"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactOverlays",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactOverlays",
        "description": [],
        "path": "src/plugins/kibana_react/public/overlays/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactOverlays.openFlyout",
            "type": "Function",
            "tags": [],
            "label": "openFlyout",
            "description": [],
            "signature": [
              "(node: React.ReactNode, options?: ",
              "OverlayFlyoutOpenOptions",
              " | undefined) => ",
              "OverlayRef"
            ],
            "path": "src/plugins/kibana_react/public/overlays/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactOverlays.openFlyout.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "node",
                "description": [],
                "signature": [
                  "React.ReactNode"
                ],
                "path": "src/plugins/kibana_react/public/overlays/types.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactOverlays.openFlyout.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "OverlayFlyoutOpenOptions",
                  " | undefined"
                ],
                "path": "src/plugins/kibana_react/public/overlays/types.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactOverlays.openModal",
            "type": "Function",
            "tags": [],
            "label": "openModal",
            "description": [],
            "signature": [
              "(node: React.ReactNode, options?: ",
              "OverlayModalOpenOptions",
              " | undefined) => ",
              "OverlayRef"
            ],
            "path": "src/plugins/kibana_react/public/overlays/types.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactOverlays.openModal.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "node",
                "description": [],
                "signature": [
                  "React.ReactNode"
                ],
                "path": "src/plugins/kibana_react/public/overlays/types.ts",
                "deprecated": false,
                "isRequired": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.KibanaReactOverlays.openModal.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "OverlayModalOpenOptions",
                  " | undefined"
                ],
                "path": "src/plugins/kibana_react/public/overlays/types.ts",
                "deprecated": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NoDataPageProps",
        "type": "Interface",
        "tags": [],
        "label": "NoDataPageProps",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageProps",
            "text": "NoDataPageProps"
          },
          " extends ",
          "CommonProps"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPageProps.solution",
            "type": "string",
            "tags": [],
            "label": "solution",
            "description": [
              "\nSingle name for the current solution, used to auto-generate the title, logo, description, and button label"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPageProps.logo",
            "type": "string",
            "tags": [],
            "label": "logo",
            "description": [
              "\nOptionally replace the auto-generated logo"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPageProps.docsLink",
            "type": "string",
            "tags": [],
            "label": "docsLink",
            "description": [
              "\nRequired to set the docs link for the whole solution"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPageProps.pageTitle",
            "type": "string",
            "tags": [],
            "label": "pageTitle",
            "description": [
              "\nOptionally replace the auto-generated page title (h1)"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NoDataPageProps.actions",
            "type": "Object",
            "tags": [],
            "label": "actions",
            "description": [
              "\nAn object of `NoDataPageActions` configurations with unique primary keys.\nUse `elasticAgent` or `beats` as the primary key for pre-configured cards of this type.\nOtherwise use a custom key that contains `EuiCard` props."
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.NoDataPageActions",
                "text": "NoDataPageActions"
              },
              "; }"
            ],
            "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListViewProps",
        "type": "Interface",
        "tags": [],
        "label": "TableListViewProps",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewProps",
            "text": "TableListViewProps"
          },
          "<V>"
        ],
        "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.createItem",
            "type": "Function",
            "tags": [],
            "label": "createItem",
            "description": [],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.deleteItems",
            "type": "Function",
            "tags": [],
            "label": "deleteItems",
            "description": [],
            "signature": [
              "((items: V[]) => Promise<void>) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.deleteItems.$1",
                "type": "Array",
                "tags": [],
                "label": "items",
                "description": [],
                "signature": [
                  "V[]"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.editItem",
            "type": "Function",
            "tags": [],
            "label": "editItem",
            "description": [],
            "signature": [
              "((item: V) => void) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.editItem.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "item",
                "description": [],
                "signature": [
                  "V"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.entityName",
            "type": "string",
            "tags": [],
            "label": "entityName",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.entityNamePlural",
            "type": "string",
            "tags": [],
            "label": "entityNamePlural",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.findItems",
            "type": "Function",
            "tags": [],
            "label": "findItems",
            "description": [],
            "signature": [
              "(query: string) => Promise<{ total: number; hits: V[]; }>"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.findItems.$1",
                "type": "string",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.listingLimit",
            "type": "number",
            "tags": [],
            "label": "listingLimit",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.initialFilter",
            "type": "string",
            "tags": [],
            "label": "initialFilter",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.initialPageSize",
            "type": "number",
            "tags": [],
            "label": "initialPageSize",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.emptyPrompt",
            "type": "Object",
            "tags": [],
            "label": "emptyPrompt",
            "description": [
              "\nShould be an EuiEmptyPrompt (but TS doesn't support this typing)"
            ],
            "signature": [
              "JSX.Element | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableColumns",
            "type": "Array",
            "tags": [],
            "label": "tableColumns",
            "description": [],
            "signature": [
              "EuiBasicTableColumn",
              "<V>[]"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableListTitle",
            "type": "string",
            "tags": [],
            "label": "tableListTitle",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.toastNotifications",
            "type": "Object",
            "tags": [],
            "label": "toastNotifications",
            "description": [],
            "signature": [
              "IToasts"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.headingId",
            "type": "string",
            "tags": [],
            "label": "headingId",
            "description": [
              "\nId of the heading element describing the table. This id will be used as `aria-labelledby` of the wrapper element.\nIf the table is not empty, this component renders its own h1 element using the same id."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.rowHeader",
            "type": "string",
            "tags": [],
            "label": "rowHeader",
            "description": [
              "\nIndicates which column should be used as the identifying cell in each row."
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableCaption",
            "type": "string",
            "tags": [],
            "label": "tableCaption",
            "description": [
              "\nDescribes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\""
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.searchFilters",
            "type": "Array",
            "tags": [],
            "label": "searchFilters",
            "description": [],
            "signature": [
              "SearchFilterConfig",
              "[] | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.theme",
            "type": "Object",
            "tags": [],
            "label": "theme",
            "description": [],
            "signature": [
              "ThemeServiceStart"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.application",
            "type": "Object",
            "tags": [],
            "label": "application",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ApplicationStart",
                "text": "ApplicationStart"
              }
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListViewState",
        "type": "Interface",
        "tags": [],
        "label": "TableListViewState",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewState",
            "text": "TableListViewState"
          },
          "<V>"
        ],
        "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.items",
            "type": "Array",
            "tags": [],
            "label": "items",
            "description": [],
            "signature": [
              "V[]"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.hasInitialFetchReturned",
            "type": "boolean",
            "tags": [],
            "label": "hasInitialFetchReturned",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.hasUpdatedAtMetadata",
            "type": "CompoundType",
            "tags": [],
            "label": "hasUpdatedAtMetadata",
            "description": [],
            "signature": [
              "boolean | null"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.isFetchingItems",
            "type": "boolean",
            "tags": [],
            "label": "isFetchingItems",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.isDeletingItems",
            "type": "boolean",
            "tags": [],
            "label": "isDeletingItems",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.showDeleteModal",
            "type": "boolean",
            "tags": [],
            "label": "showDeleteModal",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.showLimitError",
            "type": "boolean",
            "tags": [],
            "label": "showLimitError",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.fetchError",
            "type": "Object",
            "tags": [],
            "label": "fetchError",
            "description": [],
            "signature": [
              "IHttpFetchError",
              "<Error> | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.filter",
            "type": "string",
            "tags": [],
            "label": "filter",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.selectedIds",
            "type": "Array",
            "tags": [],
            "label": "selectedIds",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.totalItems",
            "type": "number",
            "tags": [],
            "label": "totalItems",
            "description": [],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.pagination",
            "type": "Object",
            "tags": [],
            "label": "pagination",
            "description": [],
            "signature": [
              "Pagination"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.tableSort",
            "type": "Object",
            "tags": [],
            "label": "tableSort",
            "description": [],
            "signature": [
              "{ field: keyof V; direction: ",
              "Direction",
              "; } | undefined"
            ],
            "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToastInput",
        "type": "Interface",
        "tags": [],
        "label": "ToastInput",
        "description": [],
        "path": "src/plugins/kibana_react/public/notifications/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.title",
            "type": "CompoundType",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.body",
            "type": "CompoundType",
            "tags": [],
            "label": "body",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.color",
            "type": "CompoundType",
            "tags": [],
            "label": "color",
            "description": [],
            "signature": [
              "ToastColor | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.iconType",
            "type": "CompoundType",
            "tags": [],
            "label": "iconType",
            "description": [],
            "signature": [
              "IconType",
              " | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.toastLifeTimeMs",
            "type": "number",
            "tags": [],
            "label": "toastLifeTimeMs",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/notifications/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToMountPointOptions",
        "type": "Interface",
        "tags": [],
        "label": "ToMountPointOptions",
        "description": [],
        "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToMountPointOptions.theme$",
            "type": "Object",
            "tags": [],
            "label": "theme$",
            "description": [],
            "signature": [
              "Observable",
              "<",
              "CoreTheme",
              "> | undefined"
            ],
            "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditorProps",
        "type": "Interface",
        "tags": [],
        "label": "UrlTemplateEditorProps",
        "description": [],
        "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.value",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.height",
            "type": "CompoundType",
            "tags": [],
            "label": "height",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.variables",
            "type": "Array",
            "tags": [],
            "label": "variables",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.UrlTemplateEditorVariable",
                "text": "UrlTemplateEditorVariable"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.onChange",
            "type": "Function",
            "tags": [],
            "label": "onChange",
            "description": [],
            "signature": [
              "((value: string, event: ",
              "editor",
              ".IModelContentChangedEvent) => void) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.onEditor",
            "type": "Function",
            "tags": [],
            "label": "onEditor",
            "description": [],
            "signature": [
              "((editor: ",
              "editor",
              ".IStandaloneCodeEditor) => void) | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.UrlTemplateEditorProps.onEditor.$1",
                "type": "Object",
                "tags": [],
                "label": "editor",
                "description": [],
                "signature": [
                  "editor",
                  ".IStandaloneCodeEditor"
                ],
                "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.placeholder",
            "type": "string",
            "tags": [],
            "label": "placeholder",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.Editor",
            "type": "CompoundType",
            "tags": [],
            "label": "Editor",
            "description": [],
            "signature": [
              "React.ComponentType<",
              "Props",
              "> | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditorVariable",
        "type": "Interface",
        "tags": [],
        "label": "UrlTemplateEditorVariable",
        "description": [],
        "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.documentation",
            "type": "string",
            "tags": [],
            "label": "documentation",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.kind",
            "type": "CompoundType",
            "tags": [],
            "label": "kind",
            "description": [],
            "signature": [
              "languages",
              ".CompletionItemKind | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.sortText",
            "type": "string",
            "tags": [],
            "label": "sortText",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.CodeEditorProps",
        "type": "Type",
        "tags": [],
        "label": "CodeEditorProps",
        "description": [],
        "signature": [
          "Props"
        ],
        "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ElasticAgentCardProps",
        "type": "Type",
        "tags": [],
        "label": "ElasticAgentCardProps",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageActions",
            "text": "NoDataPageActions"
          },
          " & { solution: string; }"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_card/elastic_agent_card.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaPageTemplateProps",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "KibanaPageTemplateProps",
        "description": [
          "\nA thin wrapper around EuiPageTemplate with a few Kibana specific additions"
        ],
        "signature": [
          "Omit<",
          "EuiPageProps",
          ", \"paddingSize\"> & { template?: \"default\" | \"empty\" | \"centeredBody\" | \"centeredContent\" | undefined; paddingSize?: \"none\" | \"s\" | \"m\" | \"l\" | undefined; pageSideBar?: React.ReactNode; pageSideBarProps?: ",
          "EuiPageSideBarProps",
          " | undefined; pageHeader?: ",
          "EuiPageHeaderProps",
          " | undefined; pageBodyProps?: ",
          "EuiPageBodyProps",
          "<\"main\"> | undefined; pageContentProps?: ",
          "EuiPageContentProps",
          " | undefined; pageContentBodyProps?: ",
          "EuiPageContentBodyProps",
          " | undefined; bottomBar?: React.ReactNode; bottomBarProps?: ",
          "EuiBottomBarProps",
          " | undefined; fullHeight?: boolean | \"noscroll\" | undefined; minHeight?: ",
          "Property",
          ".MinHeight<string | number> | undefined; } & { isEmptyState?: boolean | undefined; solutionNav?: ",
          "KibanaPageTemplateSolutionNavProps",
          " | undefined; noDataConfig?: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageProps",
            "text": "NoDataPageProps"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/kibana_react/public/page_template/page_template.tsx",
        "deprecated": true,
        "references": [
          {
            "plugin": "management",
            "path": "src/plugins/management/public/components/management_app/management_app.tsx"
          },
          {
            "plugin": "management",
            "path": "src/plugins/management/public/components/management_app/management_app.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/layout/page_template.tsx"
          },
          {
            "plugin": "enterpriseSearch",
            "path": "x-pack/plugins/enterprise_search/public/applications/shared/layout/page_template.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaServices",
        "type": "Type",
        "tags": [],
        "label": "KibanaServices",
        "description": [],
        "signature": [
          "{ analytics?: ",
          "AnalyticsServiceStart",
          " | undefined; application?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreApplicationPluginApi",
            "section": "def-public.ApplicationStart",
            "text": "ApplicationStart"
          },
          " | undefined; chrome?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreChromePluginApi",
            "section": "def-public.ChromeStart",
            "text": "ChromeStart"
          },
          " | undefined; docLinks?: ",
          "DocLinksStart",
          " | undefined; executionContext?: ",
          "ExecutionContextSetup",
          " | undefined; http?: ",
          "HttpSetup",
          " | undefined; savedObjects?: ",
          "SavedObjectsStart",
          " | undefined; i18n?: ",
          "I18nStart",
          " | undefined; notifications?: ",
          "NotificationsStart",
          " | undefined; overlays?: ",
          "OverlayStart",
          " | undefined; uiSettings?: ",
          "IUiSettingsClient",
          " | undefined; fatalErrors?: ",
          "FatalErrorsSetup",
          " | undefined; deprecations?: ",
          "DeprecationsServiceStart",
          " | undefined; theme?: ",
          "ThemeServiceStart",
          " | undefined; injectedMetadata?: ",
          "InjectedMetadataStart",
          " | undefined; }"
        ],
        "path": "src/plugins/kibana_react/public/context/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.LANG",
        "type": "string",
        "tags": [],
        "label": "LANG",
        "description": [],
        "signature": [
          "\"css\""
        ],
        "path": "src/plugins/kibana_react/public/code_editor/languages/css/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.LANG",
        "type": "string",
        "tags": [],
        "label": "LANG",
        "description": [],
        "signature": [
          "\"markdown\""
        ],
        "path": "src/plugins/kibana_react/public/code_editor/languages/markdown/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.LANG",
        "type": "string",
        "tags": [],
        "label": "LANG",
        "description": [],
        "signature": [
          "\"yaml\""
        ],
        "path": "src/plugins/kibana_react/public/code_editor/languages/yaml/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.LANG",
        "type": "string",
        "tags": [],
        "label": "LANG",
        "description": [],
        "signature": [
          "\"handlebars\""
        ],
        "path": "src/plugins/kibana_react/public/code_editor/languages/handlebars/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.LANG",
        "type": "string",
        "tags": [],
        "label": "LANG",
        "description": [],
        "signature": [
          "\"hjson\""
        ],
        "path": "src/plugins/kibana_react/public/code_editor/languages/hjson/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NO_DATA_PAGE_MAX_WIDTH",
        "type": "number",
        "tags": [],
        "label": "NO_DATA_PAGE_MAX_WIDTH",
        "description": [],
        "signature": [
          "950"
        ],
        "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NO_DATA_RECOMMENDED",
        "type": "string",
        "tags": [],
        "label": "NO_DATA_RECOMMENDED",
        "description": [],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NoDataPageActions",
        "type": "Type",
        "tags": [],
        "label": "NoDataPageActions",
        "description": [],
        "signature": [
          "Partial<",
          "EuiCardProps",
          "> & { recommended?: boolean | undefined; button?: React.ReactNode; onClick?: React.MouseEventHandler<HTMLElement> | undefined; category?: string | undefined; }"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NoDataPageActionsProps",
        "type": "Type",
        "tags": [],
        "label": "NoDataPageActionsProps",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.NoDataPageActions",
            "text": "NoDataPageActions"
          },
          "; }"
        ],
        "path": "src/plugins/kibana_react/public/page_template/no_data_page/no_data_page.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.POSITIONS",
        "type": "Array",
        "tags": [],
        "label": "POSITIONS",
        "description": [],
        "signature": [
          "(\"none\" | \"left\" | \"right\" | \"center\")[]"
        ],
        "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TOOLBAR_BUTTON_SIZES",
        "type": "Array",
        "tags": [],
        "label": "TOOLBAR_BUTTON_SIZES",
        "description": [],
        "signature": [
          "(",
          "ButtonSize",
          " | undefined)[]"
        ],
        "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToolbarButtonProps",
        "type": "Type",
        "tags": [],
        "label": "ToolbarButtonProps",
        "description": [],
        "signature": [
          "((",
          "DisambiguateSet",
          "<",
          "EuiButtonPropsForAnchor",
          ", ",
          "EuiButtonPropsForButton",
          "> & ",
          "EuiButtonProps",
          " & { onClick?: React.MouseEventHandler<HTMLButtonElement> | undefined; } & React.ButtonHTMLAttributes<HTMLButtonElement> & { buttonRef?: React.Ref<HTMLButtonElement> | undefined; }) | (",
          "DisambiguateSet",
          "<",
          "EuiButtonPropsForButton",
          ", ",
          "EuiButtonPropsForAnchor",
          "> & ",
          "EuiButtonProps",
          " & { href?: string | undefined; onClick?: React.MouseEventHandler<HTMLAnchorElement> | undefined; } & React.AnchorHTMLAttributes<HTMLAnchorElement> & { buttonRef?: React.Ref<HTMLAnchorElement> | undefined; })) & { fontWeight?: Weights | undefined; size?: ",
          "ButtonSize",
          " | undefined; hasArrow?: boolean | undefined; groupPosition?: \"none\" | \"left\" | \"right\" | \"center\" | undefined; dataTestSubj?: string | undefined; }"
        ],
        "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Value",
        "type": "Type",
        "tags": [],
        "label": "Value",
        "description": [],
        "signature": [
          "[ValueMember, ValueMember]"
        ],
        "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.WEIGHTS",
        "type": "Array",
        "tags": [],
        "label": "WEIGHTS",
        "description": [],
        "signature": [
          "Weights[]"
        ],
        "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.context",
        "type": "Object",
        "tags": [],
        "label": "context",
        "description": [],
        "signature": [
          "React.Context<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">>>"
        ],
        "path": "src/plugins/kibana_react/public/context/context.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ExitFullScreenButton",
        "type": "Object",
        "tags": [
          "deprecated"
        ],
        "label": "ExitFullScreenButton",
        "description": [],
        "signature": [
          "typeof ExitFullScreenButtonUi"
        ],
        "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
        "deprecated": true,
        "references": [
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/services/kibana_react.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/plugin.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/plugin.tsx"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/plugin.tsx"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS",
        "type": "Object",
        "tags": [],
        "label": "NO_DATA_PAGE_TEMPLATE_PROPS",
        "description": [],
        "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS.restrictWidth",
            "type": "number",
            "tags": [],
            "label": "restrictWidth",
            "description": [],
            "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS.template",
            "type": "string",
            "tags": [],
            "label": "template",
            "description": [],
            "signature": [
              "\"centeredBody\""
            ],
            "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS.pageContentProps",
            "type": "Object",
            "tags": [],
            "label": "pageContentProps",
            "description": [],
            "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS.pageContentProps.hasShadow",
                "type": "boolean",
                "tags": [],
                "label": "hasShadow",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.NO_DATA_PAGE_TEMPLATE_PROPS.pageContentProps.color",
                "type": "string",
                "tags": [],
                "label": "color",
                "description": [],
                "signature": [
                  "\"transparent\""
                ],
                "path": "src/plugins/kibana_react/public/page_template/util/constants.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.createGlobalStyle",
        "type": "Function",
        "tags": [],
        "label": "createGlobalStyle",
        "description": [],
        "signature": [
          "<P extends object = {}>(first: TemplateStringsArray | ",
          "CSSObject",
          " | ",
          "InterpolationFunction",
          "<",
          "ThemedStyledProps",
          "<P, ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">>, ...interpolations: ",
          "Interpolation",
          "<",
          "ThemedStyledProps",
          "<P, ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">>[]) => ",
          "GlobalStyleComponent",
          "<P, ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.createGlobalStyle.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "first",
            "description": [],
            "signature": [
              "TemplateStringsArray | ",
              "CSSObject",
              " | ",
              "InterpolationFunction",
              "<",
              "ThemedStyledProps",
              "<P, T>>"
            ],
            "path": "node_modules/@types/styled-components/ts3.7/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.createGlobalStyle.$2",
            "type": "Array",
            "tags": [],
            "label": "interpolations",
            "description": [],
            "signature": [
              "Interpolation",
              "<",
              "ThemedStyledProps",
              "<P, T>>[]"
            ],
            "path": "node_modules/@types/styled-components/ts3.7/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.css",
        "type": "Function",
        "tags": [],
        "label": "css",
        "description": [],
        "signature": [
          "BaseThemedCssFunction",
          "<",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.euiStyled",
        "type": "Function",
        "tags": [],
        "label": "euiStyled",
        "description": [],
        "signature": [
          "ThemedBaseStyledInterface",
          "<",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.EuiThemeProvider",
        "type": "Function",
        "tags": [],
        "label": "EuiThemeProvider",
        "description": [],
        "signature": [
          "<OuterTheme extends ",
          "DefaultTheme",
          " = ",
          "DefaultTheme",
          ">({ darkMode, ...otherProps }: Omit<",
          "ThemeProviderProps",
          "<OuterTheme, OuterTheme & ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">, \"theme\"> & { darkMode?: boolean | undefined; }) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiThemeProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  darkMode = false,\n  ...otherProps\n}",
            "description": [],
            "signature": [
              "Omit<",
              "ThemeProviderProps",
              "<OuterTheme, OuterTheme & ",
              {
                "pluginId": "kibanaReact",
                "scope": "common",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-common.EuiTheme",
                "text": "EuiTheme"
              },
              ">, \"theme\"> & { darkMode?: boolean | undefined; }"
            ],
            "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.EuiThemeProviderDecorator",
        "type": "Function",
        "tags": [],
        "label": "EuiThemeProviderDecorator",
        "description": [
          "\nStorybook decorator using the EUI theme provider. Uses the value from\n`globals` provided by the Storybook theme switcher."
        ],
        "signature": [
          "(storyFn: ",
          "PartialStoryFn",
          "<ReturnTypeFramework<",
          "StoryFnReactReturnType",
          ">, ",
          "Args",
          ">, { globals }: ",
          "StoryContext",
          "<ReturnTypeFramework<",
          "StoryFnReactReturnType",
          ">, ",
          "Args",
          ">) => JSX.Element"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiThemeProviderDecorator.$1",
            "type": "Function",
            "tags": [],
            "label": "storyFn",
            "description": [],
            "signature": [
              "PartialStoryFn",
              "<ReturnTypeFramework<",
              "StoryFnReactReturnType",
              ">, ",
              "Args",
              ">"
            ],
            "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiThemeProviderDecorator.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "{ globals }",
            "description": [],
            "signature": [
              "StoryContext",
              "<ReturnTypeFramework<",
              "StoryFnReactReturnType",
              ">, ",
              "Args",
              ">"
            ],
            "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.keyframes",
        "type": "Function",
        "tags": [],
        "label": "keyframes",
        "description": [],
        "signature": [
          "(strings: TemplateStringsArray | ",
          "CSSKeyframes",
          ", ...interpolations: ",
          "SimpleInterpolation",
          "[]) => ",
          "Keyframes"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.keyframes.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "strings",
            "description": [],
            "signature": [
              "TemplateStringsArray | ",
              "CSSKeyframes"
            ],
            "path": "node_modules/@types/styled-components/ts3.7/index.d.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.keyframes.$2",
            "type": "Array",
            "tags": [],
            "label": "interpolations",
            "description": [],
            "signature": [
              "SimpleInterpolation",
              "[]"
            ],
            "path": "node_modules/@types/styled-components/ts3.7/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.withTheme",
        "type": "Function",
        "tags": [],
        "label": "withTheme",
        "description": [],
        "signature": [
          "<C extends React.ComponentType<any>>(component: React.ComponentProps<C> extends { theme?: ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          " | undefined; } ? C : never) => React.ForwardRefExoticComponent<WithOptionalTheme<React.ComponentPropsWithRef<C>, ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">>"
        ],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.withTheme.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "component",
            "description": [],
            "signature": [
              "React.ComponentProps<C> extends { theme?: T | undefined; } ? C : never"
            ],
            "path": "node_modules/@types/styled-components/ts3.7/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.EuiTheme",
        "type": "Interface",
        "tags": [],
        "label": "EuiTheme",
        "description": [],
        "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiTheme.eui",
            "type": "Object",
            "tags": [],
            "label": "eui",
            "description": [],
            "signature": [
              "{ euiBadgeGroupGutterTypes: { gutterExtraSmall: string; gutterSmall: string; }; euiBreadcrumbSpacing: string; euiBreadcrumbTruncateWidth: string; euiButtonEmptyTypes: { primary: string; danger: string; disabled: string; ghost: string; text: string; success: string; warning: string; }; euiCallOutTypes: { primary: string; success: string; warning: string; danger: string; }; euiCardSpacing: string; euiCardBottomNodeHeight: string; euiCardSelectButtonBorders: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardSelectButtonBackgrounds: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiCheckableCardPadding: string; euiCodeBlockPaddingModifiers: { paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiCollapsibleNavGroupLightBackgroundColor: string; euiCollapsibleNavGroupDarkBackgroundColor: string; euiCollapsibleNavGroupDarkHighContrastColor: string; euiColorPickerValueRange0: string; euiColorPickerValueRange1: string; euiColorPickerSaturationRange0: string; euiColorPickerSaturationRange1: string; euiColorPickerIndicatorSize: string; euiColorPickerWidth: string; euiColorPaletteDisplaySizes: { sizeExtraSmall: string; sizeSmall: string; sizeMedium: string; }; euiContextMenuWidth: string; euiControlBarBackground: string; euiControlBarText: string; euiControlBarBorderColor: string; euiControlBarInitialHeight: string; euiControlBarMaxHeight: string; euiControlBarHeights: { s: string; m: string; l: string; }; euiDataGridPrefix: string; euiDataGridStyles: string; euiZDataGrid: number; euiZHeaderBelowDataGrid: number; euiZDataGridCellPopover: number; euiDataGridColumnResizerWidth: string; euiDataGridPopoverMaxHeight: string; euiDataGridCellPaddingS: string; euiDataGridCellPaddingM: string; euiDataGridCellPaddingL: string; euiDataGridVerticalBorder: string; euiSuperDatePickerWidth: string; euiSuperDatePickerButtonWidth: string; euiDragAndDropSpacing: { s: string; m: string; l: string; }; euiEmptyPromptContentMaxWidth: string; gutterTypes: { gutterExtraSmall: string; gutterSmall: string; gutterMedium: string; gutterLarge: string; gutterExtraLarge: string; }; fractions: { fourths: { percentage: string; count: number; }; thirds: { percentage: string; count: number; }; halves: { percentage: string; count: number; }; single: { percentage: string; count: number; }; }; flyoutSizes: { small: { min: string; width: string; max: string; }; medium: { min: string; width: string; max: string; }; large: { min: string; width: string; max: string; }; }; euiFlyoutBorder: string; euiFlyoutPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiFilePickerTallHeight: string; euiRangeLevelColors: { primary: string; success: string; warning: string; danger: string; }; textareaResizing: { vertical: string; horizontal: string; both: string; none: string; }; euiHeaderLinksGutterSizes: { gutterXS: string; gutterS: string; gutterM: string; gutterL: string; }; euiKeyPadMenuSize: string; euiKeyPadMenuMarginSize: string; euiListGroupItemHoverBackground: string; euiListGroupItemHoverBackgroundGhost: string; euiListGroupGutterTypes: { gutterSmall: string; gutterMedium: string; }; euiListGroupItemColorTypes: { primary: string; text: string; subdued: string; ghost: string; }; euiListGroupItemSizeTypes: { xSmall: string; small: string; medium: string; large: string; }; euiMarkdownEditorMinHeight: string; euiPopoverArrowSize: string; euiPopoverTranslateDistance: string; euiResizableButtonTransitionSpeed: string; euiResizableButtonSize: string; euiSelectableListItemBorder: string; euiSelectableListItemPadding: string; euiSelectableTemplateSitewideTypes: { application: { color: string; 'font-weight': number; }; deployment: { color: string; 'font-weight': number; }; article: { color: string; 'font-weight': number; }; case: { color: string; 'font-weight': number; }; platform: { color: string; 'font-weight': number; }; }; euiSideNavEmphasizedBackgroundColor: string; euiSideNavRootTextcolor: string; euiSideNavBranchTextcolor: string; euiSideNavSelectedTextcolor: string; euiSideNavDisabledTextcolor: string; euiStepNumberSize: string; euiStepNumberSmallSize: string; euiStepNumberMargin: string; euiStepStatusColorsToFade: { warning: string; danger: string; disabled: string; incomplete: string; }; euiSuggestItemColors: { tint0: string; tint1: string; tint2: string; tint3: string; tint4: string; tint5: string; tint6: string; tint7: string; tint8: string; tint9: string; tint10: string; }; euiTableCellContentPadding: string; euiTableCellContentPaddingCompressed: string; euiTableCellCheckboxWidth: string; euiTableActionsAreaWidth: string; euiTableHoverColor: string; euiTableSelectedColor: string; euiTableHoverSelectedColor: string; euiTableActionsBorderColor: string; euiTableHoverClickableColor: string; euiTableFocusClickableColor: string; euiToastWidth: string; euiToastTypes: { primary: string; success: string; warning: string; danger: string; }; euiTokenGrayColor: string; euiTokenTypes: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; gray: { graphic: string; behindText: string; }; }; euiTokenTypeKeys: string; euiContrastRatioText: number; euiContrastRatioGraphic: number; euiContrastRatioDisabled: number; euiAnimSlightBounce: string; euiAnimSlightResistance: string; euiAnimSpeedExtraFast: string; euiAnimSpeedFast: string; euiAnimSpeedNormal: string; euiAnimSpeedSlow: string; euiAnimSpeedExtraSlow: string; euiBorderWidthThin: string; euiBorderWidthThick: string; euiBorderColor: string; euiBorderRadius: string; euiBorderRadiusSmall: string; euiBorderThick: string; euiBorderThin: string; euiBorderEditable: string; euiButtonHeight: string; euiButtonHeightSmall: string; euiButtonHeightXSmall: string; euiButtonColorDisabled: string; euiButtonColorDisabledText: string; euiButtonColorGhostDisabled: string; euiButtonTypes: { primary: string; accent: string; success: string; warning: string; danger: string; ghost: string; text: string; }; euiCodeBlockBackgroundColor: string; euiCodeBlockColor: string; euiCodeBlockSelectedBackgroundColor: string; euiCodeBlockCommentColor: string; euiCodeBlockSelectorTagColor: string; euiCodeBlockStringColor: string; euiCodeBlockTagColor: string; euiCodeBlockNameColor: string; euiCodeBlockNumberColor: string; euiCodeBlockKeywordColor: string; euiCodeBlockFunctionTitleColor: string; euiCodeBlockTypeColor: string; euiCodeBlockAttributeColor: string; euiCodeBlockSymbolColor: string; euiCodeBlockParamsColor: string; euiCodeBlockMetaColor: string; euiCodeBlockTitleColor: string; euiCodeBlockSectionColor: string; euiCodeBlockAdditionColor: string; euiCodeBlockDeletionColor: string; euiCodeBlockSelectorClassColor: string; euiCodeBlockSelectorIdColor: string; euiPaletteColorBlind: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; }; euiPaletteColorBlindKeys: string; euiColorVis0: string; euiColorVis1: string; euiColorVis2: string; euiColorVis3: string; euiColorVis4: string; euiColorVis5: string; euiColorVis6: string; euiColorVis7: string; euiColorVis8: string; euiColorVis9: string; euiColorVis0_behindText: string; euiColorVis1_behindText: string; euiColorVis2_behindText: string; euiColorVis3_behindText: string; euiColorVis4_behindText: string; euiColorVis5_behindText: string; euiColorVis6_behindText: string; euiColorVis7_behindText: string; euiColorVis8_behindText: string; euiColorVis9_behindText: string; euiFontWeightLight: number; euiFontWeightRegular: number; euiFontWeightMedium: number; euiFontWeightSemiBold: number; euiFontWeightBold: number; euiCodeFontWeightRegular: number; euiCodeFontWeightBold: number; euiFormMaxWidth: string; euiFormControlHeight: string; euiFormControlCompressedHeight: string; euiFormControlPadding: string; euiFormControlCompressedPadding: string; euiFormControlBorderRadius: string; euiFormControlCompressedBorderRadius: string; euiRadioSize: string; euiCheckBoxSize: string; euiCheckboxBorderRadius: string; euiSwitchHeight: string; euiSwitchWidth: string; euiSwitchThumbSize: string; euiSwitchIconHeight: string; euiSwitchHeightCompressed: string; euiSwitchWidthCompressed: string; euiSwitchThumbSizeCompressed: string; euiSwitchHeightMini: string; euiSwitchWidthMini: string; euiSwitchThumbSizeMini: string; euiFormBackgroundColor: string; euiFormBackgroundDisabledColor: string; euiFormBackgroundReadOnlyColor: string; euiFormBorderOpaqueColor: string; euiFormBorderColor: string; euiFormBorderDisabledColor: string; euiFormCustomControlDisabledIconColor: string; euiFormCustomControlBorderColor: string; euiFormControlDisabledColor: string; euiFormControlBoxShadow: string; euiFormControlPlaceholderText: string; euiFormInputGroupLabelBackground: string; euiFormInputGroupBorder: string; euiSwitchOffColor: string; euiFormControlIconSizes: { small: string; medium: string; large: string; xLarge: string; xxLarge: string; }; euiFormControlLayoutGroupInputHeight: string; euiFormControlLayoutGroupInputCompressedHeight: string; euiFormControlLayoutGroupInputCompressedBorderRadius: string; euiRangeTrackColor: string; euiRangeThumbRadius: string; euiRangeThumbHeight: string; euiRangeThumbWidth: string; euiRangeThumbBorderColor: string; euiRangeTrackWidth: string; euiRangeTrackHeight: string; euiRangeTrackBorderWidth: number; euiRangeTrackBorderColor: string; euiRangeTrackRadius: string; euiRangeDisabledOpacity: number; euiRangeHighlightHeight: string; euiHeaderBackgroundColor: string; euiHeaderDarkBackgroundColor: string; euiHeaderBorderColor: string; euiHeaderBreadcrumbColor: string; euiHeaderHeight: string; euiHeaderChildSize: string; euiHeaderHeightCompensation: string; euiPageDefaultMaxWidth: string; euiPageSidebarMinWidth: string; euiPanelPaddingModifiers: { paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiPanelBorderRadiusModifiers: { borderRadiusNone: number; borderRadiusMedium: string; }; euiPanelBackgroundColorModifiers: { transparent: string; plain: string; subdued: string; accent: string; primary: string; success: string; warning: string; danger: string; }; euiBreakpoints: { xs: number; s: string; m: string; l: string; xl: string; }; euiBreakpointKeys: string; euiShadowColor: string; euiSize: string; euiSizeXS: string; euiSizeS: string; euiSizeM: string; euiSizeL: string; euiSizeXL: string; euiSizeXXL: string; euiButtonMinWidth: string; euiScrollBar: string; euiScrollBarCorner: string; euiScrollBarCornerThin: string; euiFocusRingColor: string; euiFocusRingAnimStartColor: string; euiFocusRingAnimStartSize: string; euiFocusRingAnimStartSizeLarge: string; euiFocusRingSizeLarge: string; euiFocusRingSize: string; euiFocusTransparency: number; euiFocusTransparencyPercent: string; euiFocusBackgroundColor: string; euiTooltipBackgroundColor: string; euiTooltipBorderColor: string; euiTooltipAnimations: { top: string; left: string; bottom: string; right: string; }; euiFontFamily: string; euiCodeFontFamily: string; euiFontFeatureSettings: string; euiTextScale: string; euiFontSize: string; euiFontSizeXS: string; euiFontSizeS: string; euiFontSizeM: string; euiFontSizeL: string; euiFontSizeXL: string; euiFontSizeXXL: string; euiLineHeight: number; euiBodyLineHeight: number; euiTitles: { xxxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; s: { 'font-size': string; 'line-height': string; 'font-weight': number; }; m: { 'font-size': string; 'line-height': string; 'font-weight': number; }; l: { 'font-size': string; 'line-height': string; 'font-weight': number; }; }; euiZLevel0: number; euiZLevel1: number; euiZLevel2: number; euiZLevel3: number; euiZLevel4: number; euiZLevel5: number; euiZLevel6: number; euiZLevel7: number; euiZLevel8: number; euiZLevel9: number; euiZToastList: number; euiZModal: number; euiZMask: number; euiZNavigation: number; euiZContentMenu: number; euiZHeader: number; euiZFlyout: number; euiZMaskBelowHeader: number; euiZContent: number; euiColorGhost: string; euiColorInk: string; euiColorPrimary: string; euiColorAccent: string; euiColorSuccess: string; euiColorWarning: string; euiColorDanger: string; euiColorEmptyShade: string; euiColorLightestShade: string; euiColorLightShade: string; euiColorMediumShade: string; euiColorDarkShade: string; euiColorDarkestShade: string; euiColorFullShade: string; euiPageBackgroundColor: string; euiColorHighlight: string; euiTextColor: string; euiTitleColor: string; euiTextSubduedColor: string; euiColorDisabled: string; euiColorPrimaryText: string; euiColorSuccessText: string; euiColorAccentText: string; euiColorWarningText: string; euiColorDangerText: string; euiColorDisabledText: string; euiLinkColor: string; euiColorChartLines: string; euiColorChartBand: string; euiDatePickerCalendarWidth: string; euiDatePickerPadding: string; euiDatePickerGap: string; euiDatePickerCalendarColumns: number; euiDatePickerButtonSize: string; euiDatePickerMinControlWidth: string; euiDatePickerMaxControlWidth: string; euiButtonDefaultTransparency: number; euiButtonFontWeight: number; euiRangeHighlightColor: string; euiRangeThumbBackgroundColor: string; euiRangeTrackCompressedHeight: string; euiRangeHighlightCompressedHeight: string; euiRangeHeight: string; euiRangeCompressedHeight: string; euiStepStatusColors: { default: string; complete: string; warning: string; danger: string; }; }"
            ],
            "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiTheme.darkMode",
            "type": "boolean",
            "tags": [],
            "label": "darkMode",
            "description": [],
            "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  }
}