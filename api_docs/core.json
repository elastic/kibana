{
  "id": "core",
  "client": {
    "classes": [
      {
        "id": "def-public.ToastsApi",
        "type": "Class",
        "tags": [
          "public"
        ],
        "label": "ToastsApi",
        "description": [
          "\nMethods for adding and removing global toast messages."
        ],
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastsApi",
            "text": "ToastsApi"
          },
          " implements Pick<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastsApi",
            "text": "ToastsApi"
          },
          ", \"get$\" | \"add\" | \"remove\" | \"addSuccess\" | \"addWarning\" | \"addDanger\" | \"addError\" | \"addInfo\">"
        ],
        "children": [
          {
            "id": "def-public.ToastsApi.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.ToastsApi.Unnamed.$1.deps",
                "type": "Object",
                "label": "deps",
                "tags": [],
                "description": [],
                "children": [
                  {
                    "tags": [],
                    "id": "def-public.ToastsApi.Unnamed.$1.deps.uiSettings",
                    "type": "Object",
                    "label": "uiSettings",
                    "description": [],
                    "source": {
                      "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                      "lineNumber": 102
                    },
                    "signature": [
                      {
                        "pluginId": "core",
                        "scope": "public",
                        "docId": "kibCorePluginApi",
                        "section": "def-public.IUiSettingsClient",
                        "text": "IUiSettingsClient"
                      }
                    ]
                  }
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 102
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 102
            }
          },
          {
            "id": "def-public.ToastsApi.get$",
            "type": "Function",
            "label": "get$",
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              },
              "[]>"
            ],
            "description": [
              "Observable of the toast messages to show to the user."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 113
            }
          },
          {
            "id": "def-public.ToastsApi.add",
            "type": "Function",
            "label": "add",
            "signature": [
              "(toastOrTitle: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast to current array of toast.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.add.$1",
                "type": "CompoundType",
                "label": "toastOrTitle",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastInput",
                    "text": "ToastInput"
                  }
                ],
                "description": [
                  "- a {@link ToastInput}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 123
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 123
            }
          },
          {
            "id": "def-public.ToastsApi.remove",
            "type": "Function",
            "label": "remove",
            "signature": [
              "(toastOrId: string | ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              },
              ") => void"
            ],
            "description": [
              "\nRemoves a toast from the current array of toasts if present."
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.remove.$1",
                "type": "CompoundType",
                "label": "toastOrId",
                "isRequired": true,
                "signature": [
                  "string | ",
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.Toast",
                    "text": "Toast"
                  }
                ],
                "description": [
                  "- a {@link Toast} returned by {@link ToastsApi.add} or its id"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 139
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 139
            }
          },
          {
            "id": "def-public.ToastsApi.addInfo",
            "type": "Function",
            "label": "addInfo",
            "signature": [
              "(toastOrTitle: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ", options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastOptions",
                "text": "ToastOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast pre-configured with the info color and info icon.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.addInfo.$1",
                "type": "CompoundType",
                "label": "toastOrTitle",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastInput",
                    "text": "ToastInput"
                  }
                ],
                "description": [
                  "- a {@link ToastInput}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 155
                }
              },
              {
                "id": "def-public.ToastsApi.addInfo.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastOptions",
                    "text": "ToastOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- a {@link ToastOptions}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 155
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 155
            }
          },
          {
            "id": "def-public.ToastsApi.addSuccess",
            "type": "Function",
            "label": "addSuccess",
            "signature": [
              "(toastOrTitle: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ", options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastOptions",
                "text": "ToastOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast pre-configured with the success color and check icon.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.addSuccess.$1",
                "type": "CompoundType",
                "label": "toastOrTitle",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastInput",
                    "text": "ToastInput"
                  }
                ],
                "description": [
                  "- a {@link ToastInput}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 171
                }
              },
              {
                "id": "def-public.ToastsApi.addSuccess.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastOptions",
                    "text": "ToastOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- a {@link ToastOptions}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 171
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 171
            }
          },
          {
            "id": "def-public.ToastsApi.addWarning",
            "type": "Function",
            "label": "addWarning",
            "signature": [
              "(toastOrTitle: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ", options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastOptions",
                "text": "ToastOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast pre-configured with the warning color and help icon.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.addWarning.$1",
                "type": "CompoundType",
                "label": "toastOrTitle",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastInput",
                    "text": "ToastInput"
                  }
                ],
                "description": [
                  "- a {@link ToastInput}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 187
                }
              },
              {
                "id": "def-public.ToastsApi.addWarning.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastOptions",
                    "text": "ToastOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- a {@link ToastOptions}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 187
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 187
            }
          },
          {
            "id": "def-public.ToastsApi.addDanger",
            "type": "Function",
            "label": "addDanger",
            "signature": [
              "(toastOrTitle: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ", options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastOptions",
                "text": "ToastOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast pre-configured with the danger color and alert icon.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.addDanger.$1",
                "type": "CompoundType",
                "label": "toastOrTitle",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastInput",
                    "text": "ToastInput"
                  }
                ],
                "description": [
                  "- a {@link ToastInput}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 204
                }
              },
              {
                "id": "def-public.ToastsApi.addDanger.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ToastOptions",
                    "text": "ToastOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- a {@link ToastOptions}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 204
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 204
            }
          },
          {
            "id": "def-public.ToastsApi.addError",
            "type": "Function",
            "label": "addError",
            "signature": [
              "(error: Error, options: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ErrorToastOptions",
                "text": "ErrorToastOptions"
              },
              ") => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.Toast",
                "text": "Toast"
              }
            ],
            "description": [
              "\nAdds a new toast that displays an exception message with a button to open the full stacktrace in a modal.\n"
            ],
            "children": [
              {
                "id": "def-public.ToastsApi.addError.$1",
                "type": "Object",
                "label": "error",
                "isRequired": true,
                "signature": [
                  "Error"
                ],
                "description": [
                  "- an `Error` instance."
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 221
                }
              },
              {
                "id": "def-public.ToastsApi.addError.$2",
                "type": "Object",
                "label": "options",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.ErrorToastOptions",
                    "text": "ErrorToastOptions"
                  }
                ],
                "description": [
                  "- {@link ErrorToastOptions}"
                ],
                "source": {
                  "path": "src/core/public/notifications/toasts/toasts_api.tsx",
                  "lineNumber": 221
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a {@link Toast}"
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 221
            }
          }
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 94
        },
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "id": "def-public.AppCategory",
        "type": "Interface",
        "label": "AppCategory",
        "description": [
          "\n\nA category definition for nav links to know where to sort them in the left hand nav"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.AppCategory.id",
            "type": "string",
            "label": "id",
            "description": [
              "\nUnique identifier for the categories"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-public.AppCategory.label",
            "type": "string",
            "label": "label",
            "description": [
              "\nLabel used for category name.\nAlso used as aria-label if one isn't set."
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 25
            }
          },
          {
            "tags": [],
            "id": "def-public.AppCategory.ariaLabel",
            "type": "string",
            "label": "ariaLabel",
            "description": [
              "\nIf the visual label isn't appropriate for screen readers,\ncan override it here"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 31
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.AppCategory.order",
            "type": "number",
            "label": "order",
            "description": [
              "\nThe order that categories will be sorted in\nPrefer large steps between categories to allow for further editing\n(Default categories are in steps of 1000)"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 38
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.AppCategory.euiIconType",
            "type": "string",
            "label": "euiIconType",
            "description": [
              "\nDefine an icon to be used for the category\nIf the category is only 1 item, and no icon is defined, will default to the product icon\nDefaults to initials if no icon is defined"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 45
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/app_category.ts",
          "lineNumber": 15
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.AsyncPlugin",
        "type": "Interface",
        "label": "AsyncPlugin",
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.AsyncPlugin",
            "text": "AsyncPlugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "description": [
          "\nA plugin with asynchronous lifecycle methods.\n"
        ],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "id": "def-public.AsyncPlugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<TPluginsStart, TStart>, plugins: TPluginsSetup) => TSetup | Promise<TSetup>"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.AsyncPlugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<TPluginsStart, TStart>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 45
                }
              },
              {
                "id": "def-public.AsyncPlugin.setup.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsSetup"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 45
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 45
            }
          },
          {
            "id": "def-public.AsyncPlugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: TPluginsStart) => TStart | Promise<TStart>"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.AsyncPlugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 46
                }
              },
              {
                "id": "def-public.AsyncPlugin.start.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsStart"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 46
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 46
            }
          },
          {
            "id": "def-public.AsyncPlugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "(() => void) | undefined"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 47
            }
          }
        ],
        "source": {
          "path": "src/core/public/plugins/plugin.ts",
          "lineNumber": 39
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Capabilities",
        "type": "Interface",
        "label": "Capabilities",
        "description": [
          "\nThe read-only set of capabilities available for the current UI session.\nCapabilities are simple key-value pairs of (string, boolean), where the string denotes the capability ID,\nand the boolean is a flag indicating if the capability is enabled or disabled.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.Capabilities.navLinks",
            "type": "Object",
            "label": "navLinks",
            "description": [
              "Navigation link capabilities."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 18
            },
            "signature": [
              "Record<string, boolean>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.Capabilities.management",
            "type": "Object",
            "label": "management",
            "description": [
              "Management section capabilities."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 21
            },
            "signature": [
              "{ [sectionId: string]: Record<string, boolean>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.Capabilities.catalogue",
            "type": "Object",
            "label": "catalogue",
            "description": [
              "Catalogue capabilities. Catalogue entries drive the visibility of the Kibana homepage options."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 26
            },
            "signature": [
              "Record<string, boolean>"
            ]
          },
          {
            "id": "def-public.Capabilities.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [
              "Custom capabilities, registered by plugins."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 29
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/capabilities.ts",
          "lineNumber": 16
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.CoreSetup",
        "type": "Interface",
        "label": "CoreSetup",
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreSetup",
            "text": "CoreSetup"
          },
          "<TPluginsStart, TStart>"
        ],
        "description": [
          "\nCore services exposed to the `Plugin` setup lifecycle\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.CoreSetup.application",
            "type": "Object",
            "label": "application",
            "description": [
              "{@link ApplicationSetup}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 210
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ApplicationSetup",
                "text": "ApplicationSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreSetup.fatalErrors",
            "type": "Object",
            "label": "fatalErrors",
            "description": [
              "{@link FatalErrorsSetup}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 212
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreSetup.http",
            "type": "Object",
            "label": "http",
            "description": [
              "{@link HttpSetup}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 214
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-public.HttpSetup",
                "text": "HttpSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreSetup.notifications",
            "type": "Object",
            "label": "notifications",
            "description": [
              "{@link NotificationsSetup}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 216
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.NotificationsSetup",
                "text": "NotificationsSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreSetup.uiSettings",
            "type": "Object",
            "label": "uiSettings",
            "description": [
              "{@link IUiSettingsClient}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 218
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              }
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.CoreSetup.injectedMetadata",
            "type": "Object",
            "label": "injectedMetadata",
            "description": [
              "\nexposed temporarily until https://github.com/elastic/kibana/issues/41990 done\nuse *only* to retrieve config values. There is no way to set injected values\nin the new platform."
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 225
            },
            "signature": [
              "{ getInjectedVar: (name: string, defaultValue?: any) => unknown; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreSetup.getStartServices",
            "type": "Function",
            "label": "getStartServices",
            "description": [
              "{@link StartServicesAccessor}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 229
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.StartServicesAccessor",
                "text": "StartServicesAccessor"
              },
              "<TPluginsStart, TStart>"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/index.ts",
          "lineNumber": 208
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.CoreStart",
        "type": "Interface",
        "label": "CoreStart",
        "description": [
          "\nCore services exposed to the `Plugin` start lifecycle\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.CoreStart.application",
            "type": "Object",
            "label": "application",
            "description": [
              "{@link ApplicationStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 255
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ApplicationStart",
                "text": "ApplicationStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.chrome",
            "type": "Object",
            "label": "chrome",
            "description": [
              "{@link ChromeStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 257
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreChromePluginApi",
                "section": "def-public.ChromeStart",
                "text": "ChromeStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.docLinks",
            "type": "Object",
            "label": "docLinks",
            "description": [
              "{@link DocLinksStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 259
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.DocLinksStart",
                "text": "DocLinksStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.http",
            "type": "Object",
            "label": "http",
            "description": [
              "{@link HttpStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 261
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-public.HttpSetup",
                "text": "HttpSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.savedObjects",
            "type": "Object",
            "label": "savedObjects",
            "description": [
              "{@link SavedObjectsStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 263
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-public.SavedObjectsStart",
                "text": "SavedObjectsStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.i18n",
            "type": "Object",
            "label": "i18n",
            "description": [
              "{@link I18nStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 265
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.I18nStart",
                "text": "I18nStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.notifications",
            "type": "Object",
            "label": "notifications",
            "description": [
              "{@link NotificationsStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 267
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.NotificationsStart",
                "text": "NotificationsStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.overlays",
            "type": "Object",
            "label": "overlays",
            "description": [
              "{@link OverlayStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 269
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayStart",
                "text": "OverlayStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.uiSettings",
            "type": "Object",
            "label": "uiSettings",
            "description": [
              "{@link IUiSettingsClient}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 271
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.fatalErrors",
            "type": "Object",
            "label": "fatalErrors",
            "description": [
              "{@link FatalErrorsStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 273
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.CoreStart.deprecations",
            "type": "Object",
            "label": "deprecations",
            "description": [
              "{@link DeprecationsServiceStart}"
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 275
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.DeprecationsServiceStart",
                "text": "DeprecationsServiceStart"
              }
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.CoreStart.injectedMetadata",
            "type": "Object",
            "label": "injectedMetadata",
            "description": [
              "\nexposed temporarily until https://github.com/elastic/kibana/issues/41990 done\nuse *only* to retrieve config values. There is no way to set injected values\nin the new platform."
            ],
            "source": {
              "path": "src/core/public/index.ts",
              "lineNumber": 282
            },
            "signature": [
              "{ getInjectedVar: (name: string, defaultValue?: any) => unknown; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/index.ts",
          "lineNumber": 253
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.DeprecationsServiceStart",
        "type": "Interface",
        "label": "DeprecationsServiceStart",
        "description": [
          "\nDeprecationsService provides methods to fetch domain deprecation details from\nthe Kibana server.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.DeprecationsServiceStart.getAllDeprecations",
            "type": "Function",
            "label": "getAllDeprecations",
            "description": [
              "\nGrabs deprecations details for all domains."
            ],
            "source": {
              "path": "src/core/public/deprecations/deprecations_service.ts",
              "lineNumber": 24
            },
            "signature": [
              "() => Promise<",
              "DomainDeprecationDetails",
              "[]>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.DeprecationsServiceStart.getDeprecations",
            "type": "Function",
            "label": "getDeprecations",
            "description": [
              "\nGrabs deprecations for a specific domain.\n"
            ],
            "source": {
              "path": "src/core/public/deprecations/deprecations_service.ts",
              "lineNumber": 30
            },
            "signature": [
              "(domainId: string) => Promise<",
              "DomainDeprecationDetails",
              "[]>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.DeprecationsServiceStart.isDeprecationResolvable",
            "type": "Function",
            "label": "isDeprecationResolvable",
            "description": [
              "\nReturns a boolean if the provided deprecation can be automatically resolvable.\n"
            ],
            "source": {
              "path": "src/core/public/deprecations/deprecations_service.ts",
              "lineNumber": 36
            },
            "signature": [
              "(details: ",
              "DomainDeprecationDetails",
              ") => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-public.DeprecationsServiceStart.resolveDeprecation",
            "type": "Function",
            "label": "resolveDeprecation",
            "description": [
              "\nCalls the correctiveActions.api to automatically resolve the depprecation.\n"
            ],
            "source": {
              "path": "src/core/public/deprecations/deprecations_service.ts",
              "lineNumber": 42
            },
            "signature": [
              "(details: ",
              "DomainDeprecationDetails",
              ") => Promise<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ResolveDeprecationResponse",
                "text": "ResolveDeprecationResponse"
              },
              ">"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/deprecations/deprecations_service.ts",
          "lineNumber": 20
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.DocLinksStart",
        "type": "Interface",
        "label": "DocLinksStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.DocLinksStart.DOC_LINK_VERSION",
            "type": "string",
            "label": "DOC_LINK_VERSION",
            "description": [],
            "source": {
              "path": "src/core/public/doc_links/doc_links_service.ts",
              "lineNumber": 349
            }
          },
          {
            "tags": [],
            "id": "def-public.DocLinksStart.ELASTIC_WEBSITE_URL",
            "type": "string",
            "label": "ELASTIC_WEBSITE_URL",
            "description": [],
            "source": {
              "path": "src/core/public/doc_links/doc_links_service.ts",
              "lineNumber": 350
            }
          },
          {
            "tags": [],
            "id": "def-public.DocLinksStart.links",
            "type": "Object",
            "label": "links",
            "description": [],
            "source": {
              "path": "src/core/public/doc_links/doc_links_service.ts",
              "lineNumber": 351
            },
            "signature": [
              "{ readonly dashboard: { readonly guide: string; readonly drilldowns: string; readonly drilldownsTriggerPicker: string; readonly urlDrilldownTemplateSyntax: string; readonly urlDrilldownVariables: string; }; readonly discover: Record<string, string>; readonly filebeat: { readonly base: string; readonly installation: string; readonly configuration: string; readonly elasticsearchOutput: string; readonly elasticsearchModule: string; readonly startup: string; readonly exportedFields: string; }; readonly auditbeat: { readonly base: string; }; readonly metricbeat: { readonly base: string; readonly configure: string; readonly httpEndpoint: string; readonly install: string; readonly start: string; }; readonly enterpriseSearch: { readonly base: string; readonly appSearchBase: string; readonly workplaceSearchBase: string; }; readonly heartbeat: { readonly base: string; }; readonly logstash: { readonly base: string; }; readonly functionbeat: { readonly base: string; }; readonly winlogbeat: { readonly base: string; }; readonly aggs: { readonly composite: string; readonly composite_missing_bucket: string; readonly date_histogram: string; readonly date_range: string; readonly date_format_pattern: string; readonly filter: string; readonly filters: string; readonly geohash_grid: string; readonly histogram: string; readonly ip_range: string; readonly range: string; readonly significant_terms: string; readonly terms: string; readonly avg: string; readonly avg_bucket: string; readonly max_bucket: string; readonly min_bucket: string; readonly sum_bucket: string; readonly cardinality: string; readonly count: string; readonly cumulative_sum: string; readonly derivative: string; readonly geo_bounds: string; readonly geo_centroid: string; readonly max: string; readonly median: string; readonly min: string; readonly moving_avg: string; readonly percentile_ranks: string; readonly serial_diff: string; readonly std_dev: string; readonly sum: string; readonly top_hits: string; }; readonly runtimeFields: { readonly mapping: string; }; readonly scriptedFields: { readonly scriptFields: string; readonly scriptAggs: string; readonly painless: string; readonly painlessApi: string; readonly painlessLangSpec: string; readonly painlessSyntax: string; readonly painlessWalkthrough: string; readonly luceneExpressions: string; }; readonly indexPatterns: { readonly introduction: string; readonly fieldFormattersNumber: string; readonly fieldFormattersString: string; }; readonly addData: string; readonly kibana: string; readonly elasticsearch: Record<string, string>; readonly siem: { readonly guide: string; readonly gettingStarted: string; }; readonly query: { readonly eql: string; readonly luceneQuerySyntax: string; readonly queryDsl: string; readonly kueryQuerySyntax: string; }; readonly date: { readonly dateMath: string; readonly dateMathIndexNames: string; }; readonly management: Record<string, string>; readonly ml: Record<string, string>; readonly transforms: Record<string, string>; readonly visualize: Record<string, string>; readonly apis: Readonly<{ createIndex: string; createSnapshotLifecyclePolicy: string; createRoleMapping: string; createRoleMappingTemplates: string; createApiKey: string; createPipeline: string; createTransformRequest: string; cronExpressions: string; executeWatchActionModes: string; indexExists: string; openIndex: string; putComponentTemplate: string; painlessExecute: string; painlessExecuteAPIContexts: string; putComponentTemplateMetadata: string; putSnapshotLifecyclePolicy: string; putWatch: string; simulatePipeline: string; updateTransform: string; }>; readonly observability: Record<string, string>; readonly alerting: Record<string, string>; readonly maps: Record<string, string>; readonly monitoring: Record<string, string>; readonly security: Readonly<{ apiKeyServiceSettings: string; clusterPrivileges: string; elasticsearchSettings: string; elasticsearchEnableSecurity: string; indicesPrivileges: string; kibanaTLS: string; kibanaPrivileges: string; mappingRoles: string; mappingRolesFieldRules: string; runAsPrivilege: string; }>; readonly watcher: Record<string, string>; readonly ccs: Record<string, string>; readonly plugins: Record<string, string>; readonly snapshotRestore: Record<string, string>; readonly ingest: Record<string, string>; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/doc_links/doc_links_service.ts",
          "lineNumber": 348
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.EnvironmentMode",
        "type": "Interface",
        "label": "EnvironmentMode",
        "signature": [
          "EnvironmentMode"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.EnvironmentMode.name",
            "type": "CompoundType",
            "label": "name",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 15
            },
            "signature": [
              "\"production\" | \"development\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.EnvironmentMode.dev",
            "type": "boolean",
            "label": "dev",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 16
            }
          },
          {
            "tags": [],
            "id": "def-public.EnvironmentMode.prod",
            "type": "boolean",
            "label": "prod",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 17
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/types.d.ts",
          "lineNumber": 14
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ErrorToastOptions",
        "type": "Interface",
        "label": "ErrorToastOptions",
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ErrorToastOptions",
            "text": "ErrorToastOptions"
          },
          " extends ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastOptions",
            "text": "ToastOptions"
          }
        ],
        "description": [
          "\nOptions available for {@link IToasts} error APIs."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ErrorToastOptions.title",
            "type": "string",
            "label": "title",
            "description": [
              "\nThe title of the toast and the dialog when expanding the message."
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 62
            }
          },
          {
            "tags": [],
            "id": "def-public.ErrorToastOptions.toastMessage",
            "type": "string",
            "label": "toastMessage",
            "description": [
              "\nThe message to be shown in the toast. If this is not specified the error's\nmessage will be shown in the toast instead. Overwriting that message can\nbe used to provide more user-friendly toasts. If you specify this, the error\nmessage will still be shown in the detailed error modal."
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 69
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 58
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.FatalErrorInfo",
        "type": "Interface",
        "label": "FatalErrorInfo",
        "description": [
          "\nRepresents the `message` and `stack` of a fatal Error\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.FatalErrorInfo.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/public/fatal_errors/get_error_info.ts",
              "lineNumber": 73
            }
          },
          {
            "tags": [],
            "id": "def-public.FatalErrorInfo.stack",
            "type": "string",
            "label": "stack",
            "description": [],
            "source": {
              "path": "src/core/public/fatal_errors/get_error_info.ts",
              "lineNumber": 74
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/fatal_errors/get_error_info.ts",
          "lineNumber": 72
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.FatalErrorsSetup",
        "type": "Interface",
        "label": "FatalErrorsSetup",
        "description": [
          "\nFatalErrors stop the Kibana Public Core and displays a fatal error screen\nwith details about the Kibana build and the error.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.FatalErrorsSetup.add",
            "type": "Function",
            "label": "add",
            "description": [
              "\nAdd a new fatal error. This will stop the Kibana Public Core and display\na fatal error screen with details about the Kibana build and the error.\n"
            ],
            "source": {
              "path": "src/core/public/fatal_errors/fatal_errors_service.tsx",
              "lineNumber": 38
            },
            "signature": [
              "(error: string | Error, source?: string | undefined) => never"
            ]
          },
          {
            "tags": [],
            "id": "def-public.FatalErrorsSetup.get$",
            "type": "Function",
            "label": "get$",
            "description": [
              "\nAn Observable that will emit whenever a fatal error is added with `add()`"
            ],
            "source": {
              "path": "src/core/public/fatal_errors/fatal_errors_service.tsx",
              "lineNumber": 43
            },
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.FatalErrorInfo",
                "text": "FatalErrorInfo"
              },
              ">"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/fatal_errors/fatal_errors_service.tsx",
          "lineNumber": 30
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.I18nStart",
        "type": "Interface",
        "label": "I18nStart",
        "description": [
          "\nI18nStart.Context is required by any localizable React component from \\@kbn/i18n and \\@elastic/eui packages\nand is supposed to be used as the topmost component for any i18n-compatible React tree.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.I18nStart.Context",
            "type": "Function",
            "label": "Context",
            "description": [
              "\nReact Context provider required as the topmost component for any i18n-compatible React tree."
            ],
            "source": {
              "path": "src/core/public/i18n/i18n_service.tsx",
              "lineNumber": 65
            },
            "signature": [
              "({ children }: { children: React.ReactNode; }) => JSX.Element"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/i18n/i18n_service.tsx",
          "lineNumber": 61
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.IExternalUrlPolicy",
        "type": "Interface",
        "label": "IExternalUrlPolicy",
        "description": [
          "\nA policy describing whether access to an external destination is allowed."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.IExternalUrlPolicy.allow",
            "type": "boolean",
            "label": "allow",
            "description": [
              "\nIndicates if this policy allows or denies access to the described destination."
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 33
            }
          },
          {
            "tags": [],
            "id": "def-public.IExternalUrlPolicy.host",
            "type": "string",
            "label": "host",
            "description": [
              "\nOptional host describing the external destination.\nMay be combined with `protocol`.\n"
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 46
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IExternalUrlPolicy.protocol",
            "type": "string",
            "label": "protocol",
            "description": [
              "\nOptional protocol describing the external destination.\nMay be combined with `host`.\n"
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 59
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/external_url/external_url_config.ts",
          "lineNumber": 29
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ImageValidation",
        "type": "Interface",
        "label": "ImageValidation",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ImageValidation.maxSize",
            "type": "Object",
            "label": "maxSize",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 132
            },
            "signature": [
              "{ length: number; description: string; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 131
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.IUiSettingsClient",
        "type": "Interface",
        "label": "IUiSettingsClient",
        "description": [
          "\nClient-side client that provides access to the advanced settings stored in elasticsearch.\nThe settings provide control over the behavior of the Kibana application.\nFor example, a user can specify how to display numeric or date fields.\nUsers can adjust the settings via Management UI.\n{@link IUiSettingsClient}\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.get",
            "type": "Function",
            "label": "get",
            "description": [
              "\nGets the value for a specific uiSetting. If this setting has no user-defined value\nthen the `defaultOverride` parameter is returned (and parsed if setting is of type\n\"json\" or \"number). If the parameter is not defined and the key is not registered\nby any plugin then an error is thrown, otherwise reads the default value defined by a plugin."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 33
            },
            "signature": [
              "<T = any>(key: string, defaultOverride?: T | undefined) => T"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.get$",
            "type": "Function",
            "label": "get$",
            "description": [
              "\nGets an observable of the current value for a config key, and all updates to that config\nkey in the future. Providing a `defaultOverride` argument behaves the same as it does in #get()"
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 39
            },
            "signature": [
              "<T = any>(key: string, defaultOverride?: T | undefined) => ",
              "Observable",
              "<T>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.getAll",
            "type": "Function",
            "label": "getAll",
            "description": [
              "\nGets the metadata about all uiSettings, including the type, default value, and user value\nfor each key."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 45
            },
            "signature": [
              "() => Readonly<Record<string, Pick<",
              "UiSettingsParams",
              "<unknown>, \"type\" | \"options\" | \"description\" | \"name\" | \"order\" | \"value\" | \"category\" | \"metric\" | \"validation\" | \"optionLabels\" | \"requiresPageReload\" | \"readonly\" | \"sensitive\" | \"deprecation\"> & ",
              "UserProvidedValues",
              "<any>>>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.set",
            "type": "Function",
            "label": "set",
            "description": [
              "\nSets the value for a uiSetting. If the setting is not registered by any plugin\nit will be stored as a custom setting. The new value will be synchronously available via\nthe `get()` method and sent to the server in the background. If the request to the\nserver fails then a updateErrors$ will be notified and the setting will be\nreverted to its value before `set()` was called."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 54
            },
            "signature": [
              "(key: string, value: any) => Promise<boolean>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.overrideLocalDefault",
            "type": "Function",
            "label": "overrideLocalDefault",
            "description": [
              "\nOverrides the default value for a setting in this specific browser tab. If the page\nis reloaded the default override is lost."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 60
            },
            "signature": [
              "(key: string, newDefault: any) => void"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.remove",
            "type": "Function",
            "label": "remove",
            "description": [
              "\nRemoves the user-defined value for a setting, causing it to revert to the default. This\nmethod behaves the same as calling `set(key, null)`, including the synchronization, custom\nsetting, and error behavior of that method."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 67
            },
            "signature": [
              "(key: string) => Promise<boolean>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.isDeclared",
            "type": "Function",
            "label": "isDeclared",
            "description": [
              "\nReturns true if the key is a \"known\" uiSetting, meaning it is either registered\nby any plugin or was previously added as a custom setting via the `set()` method."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 73
            },
            "signature": [
              "(key: string) => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.isDefault",
            "type": "Function",
            "label": "isDefault",
            "description": [
              "\nReturns true if the setting has no user-defined value or is unknown"
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 78
            },
            "signature": [
              "(key: string) => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.isCustom",
            "type": "Function",
            "label": "isCustom",
            "description": [
              "\nReturns true if the setting wasn't registered by any plugin, but was either\nadded directly via `set()`, or is an unknown setting found in the uiSettings saved\nobject"
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 85
            },
            "signature": [
              "(key: string) => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.isOverridden",
            "type": "Function",
            "label": "isOverridden",
            "description": [
              "\nShows whether the uiSettings value set by the user."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 90
            },
            "signature": [
              "(key: string) => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.getUpdate$",
            "type": "Function",
            "label": "getUpdate$",
            "description": [
              "\nReturns an Observable that notifies subscribers of each update to the uiSettings,\nincluding the key, newValue, and oldValue of the setting that changed."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 96
            },
            "signature": [
              "<T = any>() => ",
              "Observable",
              "<{ key: string; newValue: T; oldValue: T; }>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.getSaved$",
            "type": "Function",
            "label": "getSaved$",
            "description": [
              "\nReturns an Observable that notifies subscribers of each update to the uiSettings,\nincluding the key, newValue, and oldValue of the setting that changed."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 106
            },
            "signature": [
              "<T = any>() => ",
              "Observable",
              "<{ key: string; newValue: T; oldValue: T; }>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.IUiSettingsClient.getUpdateErrors$",
            "type": "Function",
            "label": "getUpdateErrors$",
            "description": [
              "\nReturns an Observable that notifies subscribers of each error while trying to update\nthe settings, containing the actual Error class."
            ],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 116
            },
            "signature": [
              "() => ",
              "Observable",
              "<Error>"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/ui_settings/types.ts",
          "lineNumber": 26
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.NotificationsSetup",
        "type": "Interface",
        "label": "NotificationsSetup",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.NotificationsSetup.toasts",
            "type": "Object",
            "label": "toasts",
            "description": [
              "{@link ToastsSetup}"
            ],
            "source": {
              "path": "src/core/public/notifications/notifications_service.ts",
              "lineNumber": 78
            },
            "signature": [
              "Pick<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastsApi",
                "text": "ToastsApi"
              },
              ", \"get$\" | \"add\" | \"remove\" | \"addSuccess\" | \"addWarning\" | \"addDanger\" | \"addError\" | \"addInfo\">"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/notifications/notifications_service.ts",
          "lineNumber": 76
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.NotificationsStart",
        "type": "Interface",
        "label": "NotificationsStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.NotificationsStart.toasts",
            "type": "Object",
            "label": "toasts",
            "description": [
              "{@link ToastsStart}"
            ],
            "source": {
              "path": "src/core/public/notifications/notifications_service.ts",
              "lineNumber": 84
            },
            "signature": [
              "Pick<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastsApi",
                "text": "ToastsApi"
              },
              ", \"get$\" | \"add\" | \"remove\" | \"addSuccess\" | \"addWarning\" | \"addDanger\" | \"addError\" | \"addInfo\">"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/notifications/notifications_service.ts",
          "lineNumber": 82
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayBannersStart",
        "type": "Interface",
        "label": "OverlayBannersStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.OverlayBannersStart.add",
            "type": "Function",
            "label": "add",
            "signature": [
              "(mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, priority?: number | undefined) => string"
            ],
            "description": [
              "\nAdd a new banner\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayBannersStart.add.$1",
                "type": "Function",
                "label": "mount",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 30
                }
              },
              {
                "id": "def-public.OverlayBannersStart.add.$2",
                "type": "number",
                "label": "priority",
                "isRequired": false,
                "signature": [
                  "number | undefined"
                ],
                "description": [
                  "optional priority order to display this banner. Higher priority values are shown first."
                ],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 30
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a unique identifier for the given banner to be used with {@link OverlayBannersStart.remove} and\n{@link OverlayBannersStart.replace}"
            ],
            "source": {
              "path": "src/core/public/overlays/banners/banners_service.tsx",
              "lineNumber": 30
            }
          },
          {
            "id": "def-public.OverlayBannersStart.remove",
            "type": "Function",
            "label": "remove",
            "signature": [
              "(id: string) => boolean"
            ],
            "description": [
              "\nRemove a banner\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayBannersStart.remove.$1",
                "type": "string",
                "label": "id",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "the unique identifier for the banner returned by {@link OverlayBannersStart.add}"
                ],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 38
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "if the banner was found or not"
            ],
            "source": {
              "path": "src/core/public/overlays/banners/banners_service.tsx",
              "lineNumber": 38
            }
          },
          {
            "id": "def-public.OverlayBannersStart.replace",
            "type": "Function",
            "label": "replace",
            "signature": [
              "(id: string | undefined, mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, priority?: number | undefined) => string"
            ],
            "description": [
              "\nReplace a banner in place\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayBannersStart.replace.$1",
                "type": "string",
                "label": "id",
                "isRequired": false,
                "signature": [
                  "string | undefined"
                ],
                "description": [
                  "the unique identifier for the banner returned by {@link OverlayBannersStart.add}"
                ],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 49
                }
              },
              {
                "id": "def-public.OverlayBannersStart.replace.$2",
                "type": "Function",
                "label": "mount",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 49
                }
              },
              {
                "id": "def-public.OverlayBannersStart.replace.$3",
                "type": "number",
                "label": "priority",
                "isRequired": false,
                "signature": [
                  "number | undefined"
                ],
                "description": [
                  "optional priority order to display this banner. Higher priority values are shown first."
                ],
                "source": {
                  "path": "src/core/public/overlays/banners/banners_service.tsx",
                  "lineNumber": 49
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "a new identifier for the given banner to be used with {@link OverlayBannersStart.remove} and\n{@link OverlayBannersStart.replace}"
            ],
            "source": {
              "path": "src/core/public/overlays/banners/banners_service.tsx",
              "lineNumber": 49
            }
          },
          {
            "id": "def-public.OverlayBannersStart.getComponent",
            "type": "Function",
            "label": "getComponent",
            "signature": [
              "() => JSX.Element"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/overlays/banners/banners_service.tsx",
              "lineNumber": 53
            }
          }
        ],
        "source": {
          "path": "src/core/public/overlays/banners/banners_service.tsx",
          "lineNumber": 21
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayFlyoutOpenOptions",
        "type": "Interface",
        "label": "OverlayFlyoutOpenOptions",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.className",
            "type": "string",
            "label": "className",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 81
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.closeButtonAriaLabel",
            "type": "string",
            "label": "closeButtonAriaLabel",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 82
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.ownFocus",
            "type": "CompoundType",
            "label": "ownFocus",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 83
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.datatestsubj",
            "type": "string",
            "label": "'data-test-subj'",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 84
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.size",
            "type": "CompoundType",
            "label": "size",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 85
            },
            "signature": [
              "\"m\" | \"s\" | \"l\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayFlyoutOpenOptions.maxWidth",
            "type": "CompoundType",
            "label": "maxWidth",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 86
            },
            "signature": [
              "string | number | boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/overlays/flyout/flyout_service.tsx",
          "lineNumber": 80
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayFlyoutStart",
        "type": "Interface",
        "label": "OverlayFlyoutStart",
        "description": [
          "\nAPIs to open and manage fly-out dialogs.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.OverlayFlyoutStart.open",
            "type": "Function",
            "label": "open",
            "signature": [
              "(mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayFlyoutOpenOptions",
                "text": "OverlayFlyoutOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ],
            "description": [
              "\nOpens a flyout panel with the given mount point inside. You can use\n`close()` on the returned FlyoutRef to close the flyout.\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayFlyoutStart.open.$1",
                "type": "Function",
                "label": "mount",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/flyout/flyout_service.tsx",
                  "lineNumber": 74
                }
              },
              {
                "id": "def-public.OverlayFlyoutStart.open.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.OverlayFlyoutOpenOptions",
                    "text": "OverlayFlyoutOpenOptions"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/flyout/flyout_service.tsx",
                  "lineNumber": 74
                }
              }
            ],
            "tags": [
              "return"
            ],
            "returnComment": [],
            "source": {
              "path": "src/core/public/overlays/flyout/flyout_service.tsx",
              "lineNumber": 74
            }
          }
        ],
        "source": {
          "path": "src/core/public/overlays/flyout/flyout_service.tsx",
          "lineNumber": 65
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayModalConfirmOptions",
        "type": "Interface",
        "label": "OverlayModalConfirmOptions",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.title",
            "type": "string",
            "label": "title",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 54
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.cancelButtonText",
            "type": "string",
            "label": "cancelButtonText",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 55
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.confirmButtonText",
            "type": "string",
            "label": "confirmButtonText",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 56
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.className",
            "type": "string",
            "label": "className",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 57
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.closeButtonAriaLabel",
            "type": "string",
            "label": "closeButtonAriaLabel",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 58
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.datatestsubj",
            "type": "string",
            "label": "'data-test-subj'",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 59
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.defaultFocusedButton",
            "type": "CompoundType",
            "label": "defaultFocusedButton",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 60
            },
            "signature": [
              "\"cancel\" | \"confirm\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.buttonColor",
            "type": "CompoundType",
            "label": "buttonColor",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 61
            },
            "signature": [
              "\"warning\" | \"text\" | \"primary\" | \"danger\" | \"secondary\" | \"ghost\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalConfirmOptions.maxWidth",
            "type": "CompoundType",
            "label": "maxWidth",
            "description": [
              "\nSets the max-width of the modal.\nSet to `true` to use the default (`euiBreakpoints 'm'`),\nset to `false` to not restrict the width,\nset to a number for a custom width in px,\nset to a string for a custom width in custom measurement."
            ],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 69
            },
            "signature": [
              "string | number | boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/overlays/modal/modal_service.tsx",
          "lineNumber": 53
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayModalOpenOptions",
        "type": "Interface",
        "label": "OverlayModalOpenOptions",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.OverlayModalOpenOptions.className",
            "type": "string",
            "label": "className",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 101
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalOpenOptions.closeButtonAriaLabel",
            "type": "string",
            "label": "closeButtonAriaLabel",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 102
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalOpenOptions.datatestsubj",
            "type": "string",
            "label": "'data-test-subj'",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 103
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayModalOpenOptions.maxWidth",
            "type": "CompoundType",
            "label": "maxWidth",
            "description": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 104
            },
            "signature": [
              "string | number | boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/overlays/modal/modal_service.tsx",
          "lineNumber": 100
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayModalStart",
        "type": "Interface",
        "label": "OverlayModalStart",
        "description": [
          "\nAPIs to open and manage modal dialogs.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.OverlayModalStart.open",
            "type": "Function",
            "label": "open",
            "signature": [
              "(mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayModalOpenOptions",
                "text": "OverlayModalOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ],
            "description": [
              "\nOpens a modal panel with the given mount point inside. You can use\n`close()` on the returned OverlayRef to close the modal.\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayModalStart.open.$1",
                "type": "Function",
                "label": "mount",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/modal/modal_service.tsx",
                  "lineNumber": 86
                }
              },
              {
                "id": "def-public.OverlayModalStart.open.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.OverlayModalOpenOptions",
                    "text": "OverlayModalOpenOptions"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/modal/modal_service.tsx",
                  "lineNumber": 86
                }
              }
            ],
            "tags": [
              "return"
            ],
            "returnComment": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 86
            }
          },
          {
            "id": "def-public.OverlayModalStart.openConfirm",
            "type": "Function",
            "label": "openConfirm",
            "signature": [
              "(message: string | ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayModalConfirmOptions",
                "text": "OverlayModalConfirmOptions"
              },
              " | undefined) => Promise<boolean>"
            ],
            "description": [
              "\nOpens a confirmation modal with the given text or mountpoint as a message.\nReturns a Promise resolving to `true` if user confirmed or `false` otherwise.\n"
            ],
            "children": [
              {
                "id": "def-public.OverlayModalStart.openConfirm.$1",
                "type": "CompoundType",
                "label": "message",
                "isRequired": true,
                "signature": [
                  "string | ",
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/modal/modal_service.tsx",
                  "lineNumber": 94
                }
              },
              {
                "id": "def-public.OverlayModalStart.openConfirm.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.OverlayModalConfirmOptions",
                    "text": "OverlayModalConfirmOptions"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/overlays/modal/modal_service.tsx",
                  "lineNumber": 94
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/overlays/modal/modal_service.tsx",
              "lineNumber": 94
            }
          }
        ],
        "source": {
          "path": "src/core/public/overlays/modal/modal_service.tsx",
          "lineNumber": 77
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayRef",
        "type": "Interface",
        "label": "OverlayRef",
        "description": [
          "\nReturned by {@link OverlayStart} methods for closing a mounted overlay."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.OverlayRef.onClose",
            "type": "Object",
            "label": "onClose",
            "description": [
              "\nA Promise that will resolve once this overlay is closed.\n\nOverlays can close from user interaction, calling `close()` on the overlay\nreference or another overlay replacing yours via `openModal` or `openFlyout`."
            ],
            "source": {
              "path": "src/core/public/overlays/types.ts",
              "lineNumber": 20
            },
            "signature": [
              "Promise<void>"
            ]
          },
          {
            "id": "def-public.OverlayRef.close",
            "type": "Function",
            "label": "close",
            "signature": [
              "() => Promise<void>"
            ],
            "description": [
              "\nCloses the referenced overlay if it's still open which in turn will\nresolve the `onClose` Promise. If the overlay had already been\nclosed this method does nothing."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/overlays/types.ts",
              "lineNumber": 27
            }
          }
        ],
        "source": {
          "path": "src/core/public/overlays/types.ts",
          "lineNumber": 13
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.OverlayStart",
        "type": "Interface",
        "label": "OverlayStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.OverlayStart.banners",
            "type": "Object",
            "label": "banners",
            "description": [
              "{@link OverlayBannersStart}"
            ],
            "source": {
              "path": "src/core/public/overlays/overlay_service.ts",
              "lineNumber": 50
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayBannersStart",
                "text": "OverlayBannersStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayStart.openFlyout",
            "type": "Function",
            "label": "openFlyout",
            "description": [
              "{@link OverlayFlyoutStart#open}"
            ],
            "source": {
              "path": "src/core/public/overlays/overlay_service.ts",
              "lineNumber": 52
            },
            "signature": [
              "(mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayFlyoutOpenOptions",
                "text": "OverlayFlyoutOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayStart.openModal",
            "type": "Function",
            "label": "openModal",
            "description": [
              "{@link OverlayModalStart#open}"
            ],
            "source": {
              "path": "src/core/public/overlays/overlay_service.ts",
              "lineNumber": 54
            },
            "signature": [
              "(mount: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayModalOpenOptions",
                "text": "OverlayModalOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.OverlayStart.openConfirm",
            "type": "Function",
            "label": "openConfirm",
            "description": [
              "{@link OverlayModalStart#openConfirm}"
            ],
            "source": {
              "path": "src/core/public/overlays/overlay_service.ts",
              "lineNumber": 56
            },
            "signature": [
              "(message: string | ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement>, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayModalConfirmOptions",
                "text": "OverlayModalConfirmOptions"
              },
              " | undefined) => Promise<boolean>"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/overlays/overlay_service.ts",
          "lineNumber": 48
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.PackageInfo",
        "type": "Interface",
        "label": "PackageInfo",
        "signature": [
          "PackageInfo"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.PackageInfo.version",
            "type": "string",
            "label": "version",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 5
            }
          },
          {
            "tags": [],
            "id": "def-public.PackageInfo.branch",
            "type": "string",
            "label": "branch",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 6
            }
          },
          {
            "tags": [],
            "id": "def-public.PackageInfo.buildNum",
            "type": "number",
            "label": "buildNum",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 7
            }
          },
          {
            "tags": [],
            "id": "def-public.PackageInfo.buildSha",
            "type": "string",
            "label": "buildSha",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 8
            }
          },
          {
            "tags": [],
            "id": "def-public.PackageInfo.dist",
            "type": "boolean",
            "label": "dist",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 9
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/types.d.ts",
          "lineNumber": 4
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Plugin",
        "type": "Interface",
        "label": "Plugin",
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "description": [
          "\nThe interface that should be returned by a `PluginInitializer`.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.Plugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<TPluginsStart, TStart>, plugins: TPluginsSetup) => TSetup"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<TPluginsStart, TStart>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 28
                }
              },
              {
                "id": "def-public.Plugin.setup.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsSetup"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 28
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 28
            }
          },
          {
            "id": "def-public.Plugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: TPluginsStart) => TStart"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 29
                }
              },
              {
                "id": "def-public.Plugin.start.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsStart"
                ],
                "description": [],
                "source": {
                  "path": "src/core/public/plugins/plugin.ts",
                  "lineNumber": 29
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 29
            }
          },
          {
            "id": "def-public.Plugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "(() => void) | undefined"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/public/plugins/plugin.ts",
              "lineNumber": 30
            }
          }
        ],
        "source": {
          "path": "src/core/public/plugins/plugin.ts",
          "lineNumber": 22
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.PluginInitializerContext",
        "type": "Interface",
        "label": "PluginInitializerContext",
        "signature": [
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.PluginInitializerContext",
            "text": "PluginInitializerContext"
          },
          "<ConfigSchema>"
        ],
        "description": [
          "\nThe available core services passed to a `PluginInitializer`\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.PluginInitializerContext.opaqueId",
            "type": "Uncategorized",
            "label": "opaqueId",
            "description": [
              "\nA symbol used to identify this plugin in the system. Needed when registering handlers or context providers."
            ],
            "source": {
              "path": "src/core/public/plugins/plugin_context.ts",
              "lineNumber": 26
            },
            "signature": [
              "symbol"
            ]
          },
          {
            "tags": [],
            "id": "def-public.PluginInitializerContext.env",
            "type": "Object",
            "label": "env",
            "description": [],
            "source": {
              "path": "src/core/public/plugins/plugin_context.ts",
              "lineNumber": 27
            },
            "signature": [
              "{ mode: Readonly<",
              "EnvironmentMode",
              ">; packageInfo: Readonly<",
              "PackageInfo",
              ">; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.PluginInitializerContext.config",
            "type": "Object",
            "label": "config",
            "description": [],
            "source": {
              "path": "src/core/public/plugins/plugin_context.ts",
              "lineNumber": 31
            },
            "signature": [
              "{ get: <T extends object = ConfigSchema>() => T; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/plugins/plugin_context.ts",
          "lineNumber": 22
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObject",
        "type": "Interface",
        "label": "SavedObject",
        "signature": [
          "SavedObject",
          "<T>"
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObject.id",
            "type": "string",
            "label": "id",
            "description": [
              "The ID of this Saved Object, guaranteed to be unique for all objects of the same `type`"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 71
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.type",
            "type": "string",
            "label": "type",
            "description": [
              " The type of Saved Object. Each plugin can define it's own custom Saved Object types."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 73
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.version",
            "type": "string",
            "label": "version",
            "description": [
              "An opaque version number which changes on each successful write operation. Can be used for implementing optimistic concurrency control."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 75
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.updated_at",
            "type": "string",
            "label": "updated_at",
            "description": [
              "Timestamp of the last time this document had been updated."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 77
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.error",
            "type": "Object",
            "label": "error",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 78
            },
            "signature": [
              "SavedObjectError",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.attributes",
            "type": "Uncategorized",
            "label": "attributes",
            "description": [
              "{@inheritdoc SavedObjectAttributes}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 80
            },
            "signature": [
              "T"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.references",
            "type": "Array",
            "label": "references",
            "description": [
              "{@inheritdoc SavedObjectReference}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 82
            },
            "signature": [
              "SavedObjectReference",
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.migrationVersion",
            "type": "Object",
            "label": "migrationVersion",
            "description": [
              "{@inheritdoc SavedObjectsMigrationVersion}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 84
            },
            "signature": [
              "SavedObjectsMigrationVersion",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.coreMigrationVersion",
            "type": "string",
            "label": "coreMigrationVersion",
            "description": [
              "A semver value that is used when upgrading objects between Kibana versions."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 86
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.namespaces",
            "type": "Array",
            "label": "namespaces",
            "description": [
              "Namespace(s) that this saved object exists in. This attribute is only used for multi-namespace saved object types."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 88
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObject.originId",
            "type": "string",
            "label": "originId",
            "description": [
              "\nThe ID of the saved object this originated from. This is set if this object's `id` was regenerated; that can happen during migration\nfrom a legacy single-namespace type, or during import. It is only set during migration or create operations. This is used during import\nto ensure that ID regeneration is deterministic, so saved objects will be overwritten if they are imported multiple times into a given\nspace."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 95
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 69
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectAttributes",
        "type": "Interface",
        "label": "SavedObjectAttributes",
        "description": [
          "\nThe data for a Saved Object is stored as an object in the `attributes`\nproperty.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.SavedObjectAttributes.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 36
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 35
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectError",
        "type": "Interface",
        "label": "SavedObjectError",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectError.error",
            "type": "string",
            "label": "error",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 99
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectError.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 100
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectError.statusCode",
            "type": "number",
            "label": "statusCode",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 101
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectError.metadata",
            "type": "Object",
            "label": "metadata",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 102
            },
            "signature": [
              "Record<string, unknown> | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 98
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectReference",
        "type": "Interface",
        "label": "SavedObjectReference",
        "description": [
          "\nA reference to another saved object.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectReference.name",
            "type": "string",
            "label": "name",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 45
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectReference.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 46
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectReference.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 47
            }
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 44
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsBaseOptions",
        "type": "Interface",
        "label": "SavedObjectsBaseOptions",
        "description": [
          "\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsBaseOptions.namespace",
            "type": "string",
            "label": "namespace",
            "description": [
              "Specify the namespace for this operation"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 142
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/types.ts",
          "lineNumber": 140
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsFindOptions",
        "type": "Interface",
        "label": "SavedObjectsFindOptions",
        "description": [
          "\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.type",
            "type": "CompoundType",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 79
            },
            "signature": [
              "string | string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.page",
            "type": "number",
            "label": "page",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 80
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.perPage",
            "type": "number",
            "label": "perPage",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 81
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.sortField",
            "type": "string",
            "label": "sortField",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 82
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.sortOrder",
            "type": "CompoundType",
            "label": "sortOrder",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 83
            },
            "signature": [
              "\"asc\" | \"desc\" | \"_doc\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.fields",
            "type": "Array",
            "label": "fields",
            "description": [
              "\nAn array of fields to include in the results"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 89
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.search",
            "type": "string",
            "label": "search",
            "description": [
              "Search documents using the Elasticsearch Simple Query String syntax. See Elasticsearch Simple Query String `query` argument for more information"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 91
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.searchFields",
            "type": "Array",
            "label": "searchFields",
            "description": [
              "The fields to perform the parsed query against. See Elasticsearch Simple Query String `fields` argument for more information"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 93
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.searchAfter",
            "type": "Array",
            "label": "searchAfter",
            "description": [
              "\nUse the sort values from the previous page to retrieve the next page of results."
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 97
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.rootSearchFields",
            "type": "Array",
            "label": "rootSearchFields",
            "description": [
              "\nThe fields to perform the parsed query against. Unlike the `searchFields` argument, these are expected to be root fields and will not\nbe modified. If used in conjunction with `searchFields`, both are concatenated together."
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 102
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.hasReference",
            "type": "CompoundType",
            "label": "hasReference",
            "description": [
              "\nSearch for documents having a reference to the specified objects.\nUse `hasReferenceOperator` to specify the operator to use when searching for multiple references."
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 108
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsFindOptionsReference",
                "text": "SavedObjectsFindOptionsReference"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsFindOptionsReference",
                "text": "SavedObjectsFindOptionsReference"
              },
              "[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.hasReferenceOperator",
            "type": "CompoundType",
            "label": "hasReferenceOperator",
            "description": [
              "\nThe operator to use when searching by multiple references using the `hasReference` option. Defaults to `OR`"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 112
            },
            "signature": [
              "\"AND\" | \"OR\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.defaultSearchOperator",
            "type": "CompoundType",
            "label": "defaultSearchOperator",
            "description": [
              "\nThe search operator to use with the provided filter. Defaults to `OR`"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 117
            },
            "signature": [
              "\"AND\" | \"OR\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.filter",
            "type": "Any",
            "label": "filter",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 118
            },
            "signature": [
              "any"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.namespaces",
            "type": "Array",
            "label": "namespaces",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 119
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.typeToNamespacesMap",
            "type": "Object",
            "label": "typeToNamespacesMap",
            "description": [
              "\nThis map defines each type to search for, and the namespace(s) to search for the type in; this is only intended to be used by a saved\nobject client wrapper.\nIf this is defined, it supersedes the `type` and `namespaces` fields when building the Elasticsearch query.\nAny types that are not included in this map will be excluded entirely.\nIf a type is included but its value is undefined, the operation will search for that type in the Default namespace."
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "Map<string, string[] | undefined> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.preference",
            "type": "string",
            "label": "preference",
            "description": [
              "An optional ES preference value to be used for the query"
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 129
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptions.pit",
            "type": "Object",
            "label": "pit",
            "description": [
              "\nSearch against a specific Point In Time (PIT) that you've opened with {@link SavedObjectsClient.openPointInTimeForType}."
            ],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 133
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsPitParams",
                "text": "SavedObjectsPitParams"
              },
              " | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/types.ts",
          "lineNumber": 78
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsFindOptionsReference",
        "type": "Interface",
        "label": "SavedObjectsFindOptionsReference",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptionsReference.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 62
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsFindOptionsReference.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/types.ts",
              "lineNumber": 63
            }
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/types.ts",
          "lineNumber": 61
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportActionRequiredWarning",
        "type": "Interface",
        "label": "SavedObjectsImportActionRequiredWarning",
        "description": [
          "\nA warning meant to notify that a specific user action is required to finalize the import\nof some type of object.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportActionRequiredWarning.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 201
            },
            "signature": [
              "\"action_required\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportActionRequiredWarning.message",
            "type": "string",
            "label": "message",
            "description": [
              "The translated message to display to the user."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 203
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportActionRequiredWarning.actionPath",
            "type": "string",
            "label": "actionPath",
            "description": [
              "The path (without the basePath) that the user should be redirect to address this warning."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 205
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportActionRequiredWarning.buttonLabel",
            "type": "string",
            "label": "buttonLabel",
            "description": [
              "An optional label to use for the link button. If unspecified, a default label will be used."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 207
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 200
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportAmbiguousConflictError",
        "type": "Interface",
        "label": "SavedObjectsImportAmbiguousConflictError",
        "description": [
          "\nRepresents a failure to import due to a conflict, which can be resolved in different ways with an overwrite."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportAmbiguousConflictError.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 54
            },
            "signature": [
              "\"ambiguous_conflict\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportAmbiguousConflictError.destinations",
            "type": "Array",
            "label": "destinations",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 55
            },
            "signature": [
              "{ id: string; title?: string | undefined; updatedAt?: string | undefined; }[]"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 53
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportConflictError",
        "type": "Interface",
        "label": "SavedObjectsImportConflictError",
        "description": [
          "\nRepresents a failure to import due to a conflict."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportConflictError.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 45
            },
            "signature": [
              "\"conflict\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportConflictError.destinationId",
            "type": "string",
            "label": "destinationId",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 46
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 44
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportFailure",
        "type": "Interface",
        "label": "SavedObjectsImportFailure",
        "description": [
          "\nRepresents a failure to import."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportFailure.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 90
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportFailure.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 91
            }
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.SavedObjectsImportFailure.title",
            "type": "string",
            "label": "title",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 95
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportFailure.meta",
            "type": "Object",
            "label": "meta",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 96
            },
            "signature": [
              "{ title?: string | undefined; icon?: string | undefined; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportFailure.overwrite",
            "type": "CompoundType",
            "label": "overwrite",
            "description": [
              "\nIf `overwrite` is specified, an attempt was made to overwrite an existing object."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 100
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportFailure.error",
            "type": "CompoundType",
            "label": "error",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 101
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportConflictError",
                "text": "SavedObjectsImportConflictError"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportAmbiguousConflictError",
                "text": "SavedObjectsImportAmbiguousConflictError"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportUnsupportedTypeError",
                "text": "SavedObjectsImportUnsupportedTypeError"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportMissingReferencesError",
                "text": "SavedObjectsImportMissingReferencesError"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportUnknownError",
                "text": "SavedObjectsImportUnknownError"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 89
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportMissingReferencesError",
        "type": "Interface",
        "label": "SavedObjectsImportMissingReferencesError",
        "description": [
          "\nRepresents a failure to import due to missing references."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportMissingReferencesError.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 81
            },
            "signature": [
              "\"missing_references\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportMissingReferencesError.references",
            "type": "Array",
            "label": "references",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 82
            },
            "signature": [
              "{ type: string; id: string; }[]"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 80
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportResponse",
        "type": "Interface",
        "label": "SavedObjectsImportResponse",
        "description": [
          "\nThe response describing the result of an import."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportResponse.success",
            "type": "boolean",
            "label": "success",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 142
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportResponse.successCount",
            "type": "number",
            "label": "successCount",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 143
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportResponse.successResults",
            "type": "Array",
            "label": "successResults",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 144
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportSuccess",
                "text": "SavedObjectsImportSuccess"
              },
              "[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportResponse.warnings",
            "type": "Array",
            "label": "warnings",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 145
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportWarning",
                "text": "SavedObjectsImportWarning"
              },
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportResponse.errors",
            "type": "Array",
            "label": "errors",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 146
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsImportFailure",
                "text": "SavedObjectsImportFailure"
              },
              "[] | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 141
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportRetry",
        "type": "Interface",
        "label": "SavedObjectsImportRetry",
        "description": [
          "\nDescribes a retry operation for importing a saved object."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 17
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 18
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.overwrite",
            "type": "boolean",
            "label": "overwrite",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.destinationId",
            "type": "string",
            "label": "destinationId",
            "description": [
              "\nThe object ID that will be created or overwritten. If not specified, the `id` field will be used."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 23
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.replaceReferences",
            "type": "Array",
            "label": "replaceReferences",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 24
            },
            "signature": [
              "{ type: string; from: string; to: string; }[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.createNewCopy",
            "type": "CompoundType",
            "label": "createNewCopy",
            "description": [
              "\nIf `createNewCopy` is specified, the new object has a new (undefined) origin ID. This is only needed for the case where\n`createNewCopies` mode is disabled and ambiguous source conflicts are detected."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 33
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportRetry.ignoreMissingReferences",
            "type": "CompoundType",
            "label": "ignoreMissingReferences",
            "description": [
              "\nIf `ignoreMissingReferences` is specified, reference validation will be skipped for this object."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 37
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 16
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportSimpleWarning",
        "type": "Interface",
        "label": "SavedObjectsImportSimpleWarning",
        "description": [
          "\nA simple informative warning that will be displayed to the user.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSimpleWarning.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 187
            },
            "signature": [
              "\"simple\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSimpleWarning.message",
            "type": "string",
            "label": "message",
            "description": [
              "The translated message to display to the user"
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 189
            }
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 186
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportSuccess",
        "type": "Interface",
        "label": "SavedObjectsImportSuccess",
        "description": [
          "\nRepresents a successful import."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSuccess.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 114
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSuccess.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 115
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSuccess.destinationId",
            "type": "string",
            "label": "destinationId",
            "description": [
              "\nIf `destinationId` is specified, the new object has a new ID that is different from the import ID."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 119
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.SavedObjectsImportSuccess.createNewCopy",
            "type": "CompoundType",
            "label": "createNewCopy",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 126
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSuccess.meta",
            "type": "Object",
            "label": "meta",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "{ title?: string | undefined; icon?: string | undefined; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportSuccess.overwrite",
            "type": "CompoundType",
            "label": "overwrite",
            "description": [
              "\nIf `overwrite` is specified, this object overwrote an existing one (or will do so, in the case of a pending resolution)."
            ],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 134
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 113
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportUnknownError",
        "type": "Interface",
        "label": "SavedObjectsImportUnknownError",
        "description": [
          "\nRepresents a failure to import due to an unknown reason."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportUnknownError.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 71
            },
            "signature": [
              "\"unknown\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportUnknownError.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 72
            }
          },
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportUnknownError.statusCode",
            "type": "number",
            "label": "statusCode",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 73
            }
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 70
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportUnsupportedTypeError",
        "type": "Interface",
        "label": "SavedObjectsImportUnsupportedTypeError",
        "description": [
          "\nRepresents a failure to import due to having an unsupported saved object type."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SavedObjectsImportUnsupportedTypeError.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/server/saved_objects/import/types.ts",
              "lineNumber": 63
            },
            "signature": [
              "\"unsupported_type\""
            ]
          }
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 62
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsMigrationVersion",
        "type": "Interface",
        "label": "SavedObjectsMigrationVersion",
        "description": [
          "\nInformation about the migrations that have been applied to this SavedObject.\nWhen Kibana starts up, KibanaMigrator detects outdated documents and\nmigrates them based on this value. For each migration that has been applied,\nthe plugin's name is used as a key and the latest migration version as the\nvalue.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.SavedObjectsMigrationVersion.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 66
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 65
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.StringValidationRegex",
        "type": "Interface",
        "label": "StringValidationRegex",
        "description": [
          "\nStringValidation with regex object"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.StringValidationRegex.regex",
            "type": "Object",
            "label": "regex",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 115
            },
            "signature": [
              "RegExp"
            ]
          },
          {
            "tags": [],
            "id": "def-public.StringValidationRegex.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 116
            }
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 114
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.StringValidationRegexString",
        "type": "Interface",
        "label": "StringValidationRegexString",
        "description": [
          "\nStringValidation as regex string"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.StringValidationRegexString.regexString",
            "type": "string",
            "label": "regexString",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 124
            }
          },
          {
            "tags": [],
            "id": "def-public.StringValidationRegexString.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 125
            }
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 123
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ToastOptions",
        "type": "Interface",
        "label": "ToastOptions",
        "description": [
          "\nOptions available for {@link IToasts} APIs."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ToastOptions.toastLifeTimeMs",
            "type": "number",
            "label": "toastLifeTimeMs",
            "description": [
              "\nHow long should the toast remain on screen."
            ],
            "source": {
              "path": "src/core/public/notifications/toasts/toasts_api.tsx",
              "lineNumber": 51
            },
            "signature": [
              "number | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 47
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UiSettingsParams",
        "type": "Interface",
        "label": "UiSettingsParams",
        "signature": [
          "UiSettingsParams",
          "<T>"
        ],
        "description": [
          "\nUiSettings parameters defined by the plugins."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.name",
            "type": "string",
            "label": "name",
            "description": [
              "title in the UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 45
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.value",
            "type": "Uncategorized",
            "label": "value",
            "description": [
              "default value to fall back to if a user doesn't provide any"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 47
            },
            "signature": [
              "T | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.description",
            "type": "string",
            "label": "description",
            "description": [
              "description provided to a user in UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 49
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.category",
            "type": "Array",
            "label": "category",
            "description": [
              "used to group the configured setting in the UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 51
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.options",
            "type": "Array",
            "label": "options",
            "description": [
              "array of permitted values for this setting"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 53
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.optionLabels",
            "type": "Object",
            "label": "optionLabels",
            "description": [
              "text labels for 'select' type UI element"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 55
            },
            "signature": [
              "Record<string, string> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.requiresPageReload",
            "type": "CompoundType",
            "label": "requiresPageReload",
            "description": [
              "a flag indicating whether new value applying requires page reloading"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 57
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.readonly",
            "type": "CompoundType",
            "label": "readonly",
            "description": [
              "a flag indicating that value cannot be changed"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 59
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.sensitive",
            "type": "CompoundType",
            "label": "sensitive",
            "description": [
              "\na flag indicating that value might contain user sensitive data.\nused by telemetry to mask the value of the setting when sent."
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 64
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "defines a type of UI element {@link UiSettingsType}"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 66
            },
            "signature": [
              "\"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.deprecation",
            "type": "Object",
            "label": "deprecation",
            "description": [
              "optional deprecation information. Used to generate a deprecation warning."
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 68
            },
            "signature": [
              "DeprecationSettings",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.order",
            "type": "number",
            "label": "order",
            "description": [
              "\nindex of the settings within its category (ascending order, smallest will be displayed first).\nUsed for ordering in the UI.\n"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 75
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.validation",
            "type": "CompoundType",
            "label": "validation",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 81
            },
            "signature": [
              "ImageValidation",
              " | ",
              "StringValidationRegex",
              " | ",
              "StringValidationRegexString",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UiSettingsParams.schema",
            "type": "Object",
            "label": "schema",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 86
            },
            "signature": [
              "Type",
              "<T>"
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.UiSettingsParams.metric",
            "type": "Object",
            "label": "metric",
            "description": [
              "\nMetric to track once this property changes"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 92
            },
            "signature": [
              "{ type: ",
              "UiCounterMetricType",
              "; name: string; } | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 43
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UiSettingsState",
        "type": "Interface",
        "label": "UiSettingsState",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-public.UiSettingsState.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/public/ui_settings/types.ts",
              "lineNumber": 14
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/public/ui_settings/types.ts",
          "lineNumber": 13
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UserProvidedValues",
        "type": "Interface",
        "label": "UserProvidedValues",
        "signature": [
          "UserProvidedValues",
          "<T>"
        ],
        "description": [
          "\nDescribes the values explicitly set by user."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.UserProvidedValues.userValue",
            "type": "Uncategorized",
            "label": "userValue",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 143
            },
            "signature": [
              "T | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UserProvidedValues.isOverridden",
            "type": "CompoundType",
            "label": "isOverridden",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 144
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 142
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "id": "def-public.FatalErrorsStart",
        "type": "Type",
        "label": "FatalErrorsStart",
        "tags": [
          "public"
        ],
        "description": [
          "\nFatalErrors stop the Kibana Public Core and displays a fatal error screen\nwith details about the Kibana build and the error.\n"
        ],
        "source": {
          "path": "src/core/public/fatal_errors/fatal_errors_service.tsx",
          "lineNumber": 52
        },
        "signature": [
          "FatalErrorsSetup"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.IToasts",
        "type": "Type",
        "label": "IToasts",
        "tags": [
          "public"
        ],
        "description": [
          "\nMethods for adding and removing global toast messages. See {@link ToastsApi}."
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 85
        },
        "signature": [
          "{ get$: () => Rx.Observable<Toast[]>; add: (toastOrTitle: ToastInput) => Toast; remove: (toastOrId: string | Toast) => void; addSuccess: (toastOrTitle: ToastInput, options?: ToastOptions | undefined) => Toast; addWarning: (toastOrTitle: ToastInput, options?: ToastOptions | undefined) => Toast; addDanger: (toastOrTitle: ToastInput, options?: ToastOptions | undefined) => Toast; addError: (error: Error, options: ErrorToastOptions) => Toast; addInfo: (toastOrTitle: ToastInput, options?: ToastOptions | undefined) => Toast; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.MountPoint",
        "type": "Type",
        "label": "MountPoint",
        "tags": [
          "public"
        ],
        "description": [
          "\nA function that should mount DOM content inside the provided container element\nand return a handler to unmount it.\n"
        ],
        "source": {
          "path": "src/core/public/types.ts",
          "lineNumber": 27
        },
        "signature": [
          "(element: T) => ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.UnmountCallback",
            "text": "UnmountCallback"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.PluginInitializer",
        "type": "Type",
        "label": "PluginInitializer",
        "tags": [
          "public"
        ],
        "description": [
          "\nThe `plugin` export at the root of a plugin's `public` directory should conform\nto this interface.\n"
        ],
        "source": {
          "path": "src/core/public/plugins/plugin.ts",
          "lineNumber": 56
        },
        "signature": [
          "(core: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.PluginInitializerContext",
            "text": "PluginInitializerContext"
          },
          "<object>) => ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart> | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.AsyncPlugin",
            "text": "AsyncPlugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.PluginOpaqueId",
        "type": "Type",
        "label": "PluginOpaqueId",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 84
        },
        "signature": [
          "symbol"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.PublicUiSettingsParams",
        "type": "Type",
        "label": "PublicUiSettingsParams",
        "tags": [
          "public"
        ],
        "description": [
          "\nA sub-set of {@link UiSettingsParams} exposed to the client-side."
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 102
        },
        "signature": [
          "{ type?: \"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\" | undefined; options?: string[] | undefined; description?: string | undefined; name?: string | undefined; order?: number | undefined; value?: unknown; category?: string[] | undefined; metric?: { type: UiCounterMetricType; name: string; } | undefined; validation?: ImageValidation | StringValidationRegex | StringValidationRegexString | undefined; optionLabels?: Record<string, string> | undefined; requiresPageReload?: boolean | undefined; readonly?: boolean | undefined; sensitive?: boolean | undefined; deprecation?: DeprecationSettings | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ResolveDeprecationResponse",
        "type": "Type",
        "label": "ResolveDeprecationResponse",
        "tags": [],
        "description": [],
        "source": {
          "path": "src/core/public/deprecations/deprecations_client.ts",
          "lineNumber": 18
        },
        "signature": [
          "{ status: \"ok\"; } | { status: \"fail\"; reason: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectAttribute",
        "type": "Type",
        "label": "SavedObjectAttribute",
        "tags": [
          "public"
        ],
        "description": [
          "\nType definition for a Saved Object attribute value\n"
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 27
        },
        "signature": [
          "undefined | null | string | number | false | true | ",
          "SavedObjectAttributes",
          " | ",
          "SavedObjectAttributeSingle",
          "[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectAttributeSingle",
        "type": "Type",
        "label": "SavedObjectAttributeSingle",
        "tags": [
          "public"
        ],
        "description": [
          "\nDon't use this type, it's simply a helper type for {@link SavedObjectAttribute}\n"
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 14
        },
        "signature": [
          "undefined | null | string | number | false | true | ",
          "SavedObjectAttributes"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsImportWarning",
        "type": "Type",
        "label": "SavedObjectsImportWarning",
        "tags": [
          "public"
        ],
        "description": [
          "\nComposite type of all the possible types of import warnings.\n\nSee {@link SavedObjectsImportSimpleWarning} and {@link SavedObjectsImportActionRequiredWarning}\nfor more details.\n"
        ],
        "source": {
          "path": "src/core/server/saved_objects/import/types.ts",
          "lineNumber": 218
        },
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreSavedObjectsPluginApi",
            "section": "def-server.SavedObjectsImportSimpleWarning",
            "text": "SavedObjectsImportSimpleWarning"
          },
          " | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreSavedObjectsPluginApi",
            "section": "def-server.SavedObjectsImportActionRequiredWarning",
            "text": "SavedObjectsImportActionRequiredWarning"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SavedObjectsNamespaceType",
        "type": "Type",
        "label": "SavedObjectsNamespaceType",
        "tags": [
          "public"
        ],
        "description": [
          "\nThe namespace type dictates how a saved object can be interacted in relation to namespaces. Each type is mutually exclusive:\n * single (default): This type of saved object is namespace-isolated, e.g., it exists in only one namespace.\n * multiple: This type of saved object is shareable, e.g., it can exist in one or more namespaces.\n * multiple-isolated: This type of saved object is namespace-isolated, e.g., it exists in only one namespace, but object IDs must be\n   unique across all namespaces. This is intended to be an intermediate step when objects with a \"single\" namespace type are being\n   converted to a \"multiple\" namespace type. In other words, objects with a \"multiple-isolated\" namespace type will be *share-capable*,\n   but will not actually be shareable until the namespace type is changed to \"multiple\".\n * agnostic: This type of saved object is global.\n"
        ],
        "source": {
          "path": "src/core/server/saved_objects/types.ts",
          "lineNumber": 227
        },
        "signature": [
          "\"multiple\" | \"single\" | \"multiple-isolated\" | \"agnostic\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.StartServicesAccessor",
        "type": "Type",
        "label": "StartServicesAccessor",
        "tags": [
          "public"
        ],
        "description": [
          "\nAllows plugins to get access to APIs available in start inside async\nhandlers, such as {@link App.mount}. Promise will not resolve until Core\nand plugin dependencies have completed `start`.\n"
        ],
        "source": {
          "path": "src/core/public/index.ts",
          "lineNumber": 239
        },
        "signature": [
          "() => Promise<[",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ", TPluginsStart, TStart]>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.StringValidation",
        "type": "Type",
        "label": "StringValidation",
        "tags": [
          "public"
        ],
        "description": [
          "\nAllows regex objects or a regex string"
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 108
        },
        "signature": [
          "StringValidationRegex",
          " | ",
          "StringValidationRegexString"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.Toast",
        "type": "Type",
        "label": "Toast",
        "tags": [],
        "description": [],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 33
        },
        "signature": [
          "Pick<EuiToast, \"children\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"placeholder\" | \"iconType\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"data-test-subj\" | \"toastLifeTimeMs\" | \"onClose\"> & { title?: string | MountPoint<HTMLElement> | undefined; text?: string | MountPoint<HTMLElement> | undefined; } & { id: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ToastInput",
        "type": "Type",
        "label": "ToastInput",
        "tags": [
          "public"
        ],
        "description": [
          "\nInputs for {@link IToasts} APIs."
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 41
        },
        "signature": [
          "string | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastInputFields",
            "text": "ToastInputFields"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ToastInputFields",
        "type": "Type",
        "label": "ToastInputFields",
        "tags": [
          "public"
        ],
        "description": [
          "\nAllowed fields for {@link ToastInput}.\n"
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_api.tsx",
          "lineNumber": 28
        },
        "signature": [
          "Pick<EuiToast, \"children\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"placeholder\" | \"iconType\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"data-test-subj\" | \"toastLifeTimeMs\" | \"onClose\"> & { title?: string | MountPoint<HTMLElement> | undefined; text?: string | MountPoint<HTMLElement> | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ToastsSetup",
        "type": "Type",
        "label": "ToastsSetup",
        "tags": [
          "public"
        ],
        "description": [
          "\n{@link IToasts}"
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_service.tsx",
          "lineNumber": 32
        },
        "signature": [
          "{ get$: () => ",
          "Observable",
          "<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          },
          "[]>; add: (toastOrTitle: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastInput",
            "text": "ToastInput"
          },
          ") => ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          },
          "; remove: (toastOrId: string | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ToastsStart",
        "type": "Type",
        "label": "ToastsStart",
        "tags": [
          "public"
        ],
        "description": [
          "\n{@link IToasts}"
        ],
        "source": {
          "path": "src/core/public/notifications/toasts/toasts_service.tsx",
          "lineNumber": 38
        },
        "signature": [
          "{ get$: () => ",
          "Observable",
          "<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          },
          "[]>; add: (toastOrTitle: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ToastInput",
            "text": "ToastInput"
          },
          ") => ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          },
          "; remove: (toastOrId: string | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Toast",
            "text": "Toast"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.UiSettingsType",
        "type": "Type",
        "label": "UiSettingsType",
        "tags": [
          "public"
        ],
        "description": [
          "\nUI element type to represent the settings."
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 16
        },
        "signature": [
          "\"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.UnmountCallback",
        "type": "Type",
        "label": "UnmountCallback",
        "tags": [
          "public"
        ],
        "description": [
          "\nA function that will unmount the element previously mounted by\nthe associated {@link MountPoint}\n"
        ],
        "source": {
          "path": "src/core/public/types.ts",
          "lineNumber": 35
        },
        "signature": [
          "() => void"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [
          "public"
        ],
        "id": "def-public.URL_MAX_LENGTH",
        "type": "CompoundType",
        "label": "URL_MAX_LENGTH",
        "description": [
          "\nThe max URL length allowed by the current browser. Should be used to display warnings to users when query parameters\ncause URL to exceed this limit."
        ],
        "source": {
          "path": "src/core/public/core_app/errors/url_overflow.tsx",
          "lineNumber": 27
        },
        "signature": [
          "2000 | 25000"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [
      {
        "id": "def-server.CspConfig",
        "type": "Class",
        "tags": [
          "public"
        ],
        "label": "CspConfig",
        "description": [
          "\nCSP configuration for use in Kibana."
        ],
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.CspConfig",
            "text": "CspConfig"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ICspConfig",
            "text": "ICspConfig"
          }
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.CspConfig.DEFAULT",
            "type": "Object",
            "label": "DEFAULT",
            "description": [],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 47
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CspConfig",
                "text": "CspConfig"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CspConfig.rules",
            "type": "Array",
            "label": "rules",
            "description": [],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 49
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CspConfig.strict",
            "type": "boolean",
            "label": "strict",
            "description": [],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 50
            }
          },
          {
            "tags": [],
            "id": "def-server.CspConfig.warnLegacyBrowsers",
            "type": "boolean",
            "label": "warnLegacyBrowsers",
            "description": [],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 51
            }
          },
          {
            "tags": [],
            "id": "def-server.CspConfig.header",
            "type": "string",
            "label": "header",
            "description": [],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 52
            }
          }
        ],
        "source": {
          "path": "src/core/server/csp/csp_config.ts",
          "lineNumber": 46
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchConfig",
        "type": "Class",
        "tags": [
          "public"
        ],
        "label": "ElasticsearchConfig",
        "description": [
          "\nWrapper of config schema."
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.healthCheckDelay",
            "type": "Object",
            "label": "healthCheckDelay",
            "description": [
              "\nThe interval between health check requests Kibana sends to the Elasticsearch."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 192
            },
            "signature": [
              "moment.Duration"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.ignoreVersionMismatch",
            "type": "boolean",
            "label": "ignoreVersionMismatch",
            "description": [
              "\nWhether to allow kibana to connect to a non-compatible elasticsearch node."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 197
            }
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.apiVersion",
            "type": "string",
            "label": "apiVersion",
            "description": [
              "\nVersion of the Elasticsearch (6.7, 7.1 or `master`) client will be connecting to."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 202
            }
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.hosts",
            "type": "Array",
            "label": "hosts",
            "description": [
              "\nHosts that the client will connect to. If sniffing is enabled, this list will\nbe used as seeds to discover the rest of your cluster."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 208
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.requestHeadersWhitelist",
            "type": "Array",
            "label": "requestHeadersWhitelist",
            "description": [
              "\nList of Kibana client-side headers to send to Elasticsearch when request\nscoped cluster client is used. If this is an empty array then *no* client-side\nwill be sent."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 215
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.pingTimeout",
            "type": "Object",
            "label": "pingTimeout",
            "description": [
              "\nTimeout after which PING HTTP request will be aborted and retried."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 220
            },
            "signature": [
              "moment.Duration"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.requestTimeout",
            "type": "Object",
            "label": "requestTimeout",
            "description": [
              "\nTimeout after which HTTP request will be aborted and retried."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 225
            },
            "signature": [
              "moment.Duration"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.shardTimeout",
            "type": "Object",
            "label": "shardTimeout",
            "description": [
              "\nTimeout for Elasticsearch to wait for responses from shards. Set to 0 to disable."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 230
            },
            "signature": [
              "moment.Duration"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.sniffOnStart",
            "type": "boolean",
            "label": "sniffOnStart",
            "description": [
              "\nSpecifies whether the client should attempt to detect the rest of the cluster\nwhen it is first instantiated."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 236
            }
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.sniffInterval",
            "type": "CompoundType",
            "label": "sniffInterval",
            "description": [
              "\nInterval to perform a sniff operation and make sure the list of nodes is complete.\nIf `false` then sniffing is disabled."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 242
            },
            "signature": [
              "false | moment.Duration"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.sniffOnConnectionFault",
            "type": "boolean",
            "label": "sniffOnConnectionFault",
            "description": [
              "\nSpecifies whether the client should immediately sniff for a more current list\nof nodes when a connection dies."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 248
            }
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.username",
            "type": "string",
            "label": "username",
            "description": [
              "\nIf Elasticsearch is protected with basic authentication, this setting provides\nthe username that the Kibana server uses to perform its administrative functions."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 254
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.password",
            "type": "string",
            "label": "password",
            "description": [
              "\nIf Elasticsearch is protected with basic authentication, this setting provides\nthe password that the Kibana server uses to perform its administrative functions."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 260
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.ssl",
            "type": "CompoundType",
            "label": "ssl",
            "description": [
              "\nSet of settings configure SSL connection between Kibana and Elasticsearch that\nare required when `xpack.ssl.verification_mode` in Elasticsearch is set to\neither `certificate` or `full`."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 267
            },
            "signature": [
              "Pick<Readonly<{ key?: string | undefined; certificate?: string | undefined; certificateAuthorities?: string | string[] | undefined; keyPassphrase?: string | undefined; } & { verificationMode: \"none\" | \"certificate\" | \"full\"; keystore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; truststore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; alwaysPresentCertificate: boolean; }>, \"key\" | \"certificate\" | \"verificationMode\" | \"keyPassphrase\" | \"alwaysPresentCertificate\"> & { certificateAuthorities?: string[] | undefined; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchConfig.customHeaders",
            "type": "Object",
            "label": "customHeaders",
            "description": [
              "\nHeader names and values to send to Elasticsearch with every request. These\nheaders cannot be overwritten by client-side headers and aren't affected by\n`requestHeadersWhitelist` configuration."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 277
            },
            "signature": [
              "Record<string, string>"
            ]
          },
          {
            "id": "def-server.ElasticsearchConfig.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.ElasticsearchConfig.Unnamed.$1",
                "type": "Object",
                "label": "rawConfig",
                "isRequired": true,
                "signature": [
                  "Readonly<{ password?: string | undefined; username?: string | undefined; } & { ssl: Readonly<{ key?: string | undefined; certificate?: string | undefined; certificateAuthorities?: string | string[] | undefined; keyPassphrase?: string | undefined; } & { verificationMode: \"none\" | \"certificate\" | \"full\"; keystore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; truststore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; alwaysPresentCertificate: boolean; }>; shardTimeout: moment.Duration; requestTimeout: moment.Duration; pingTimeout: moment.Duration; sniffOnStart: boolean; sniffInterval: false | moment.Duration; sniffOnConnectionFault: boolean; hosts: string | string[]; requestHeadersWhitelist: string | string[]; customHeaders: Record<string, string>; logQueries: boolean; apiVersion: string; healthCheck: Readonly<{} & { delay: moment.Duration; }>; ignoreVersionMismatch: boolean; }>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
                  "lineNumber": 279
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
              "lineNumber": 279
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/elasticsearch_config.ts",
          "lineNumber": 188
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyClusterClient",
        "type": "Class",
        "tags": [
          "deprecated",
          "public"
        ],
        "label": "LegacyClusterClient",
        "description": [
          "\n{@inheritDoc IClusterClient}"
        ],
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.LegacyClusterClient",
            "text": "LegacyClusterClient"
          },
          " implements Pick<",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.LegacyClusterClient",
            "text": "LegacyClusterClient"
          },
          ", \"callAsInternalUser\" | \"asScoped\">"
        ],
        "children": [
          {
            "id": "def-server.LegacyClusterClient.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.LegacyClusterClient.Unnamed.$1",
                "type": "CompoundType",
                "label": "config",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyElasticsearchClientConfig",
                    "text": "LegacyElasticsearchClientConfig"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 122
                }
              },
              {
                "id": "def-server.LegacyClusterClient.Unnamed.$2",
                "type": "Object",
                "label": "log",
                "isRequired": true,
                "signature": [
                  "Logger"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 123
                }
              },
              {
                "id": "def-server.LegacyClusterClient.Unnamed.$3",
                "type": "string",
                "label": "type",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 124
                }
              },
              {
                "id": "def-server.LegacyClusterClient.Unnamed.$4",
                "type": "Function",
                "label": "getAuthHeaders",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.GetAuthHeaders",
                    "text": "GetAuthHeaders"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 125
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
              "lineNumber": 121
            }
          },
          {
            "id": "def-server.LegacyClusterClient.callAsInternalUser",
            "type": "Function",
            "children": [
              {
                "id": "def-server.LegacyClusterClient.callAsInternalUser.$1",
                "type": "string",
                "label": "endpoint",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 141
                }
              },
              {
                "id": "def-server.LegacyClusterClient.callAsInternalUser.$2",
                "type": "Object",
                "label": "clientParams",
                "isRequired": true,
                "signature": [
                  "Record<string, any>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 142
                }
              },
              {
                "id": "def-server.LegacyClusterClient.callAsInternalUser.$3",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyCallAPIOptions",
                    "text": "LegacyCallAPIOptions"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 143
                }
              }
            ],
            "signature": [
              "(endpoint: string, clientParams?: Record<string, any>, options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyCallAPIOptions",
                "text": "LegacyCallAPIOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "description": [
              "\nCalls specified endpoint with provided clientParams on behalf of the\nKibana internal user.\nSee {@link LegacyAPICaller}."
            ],
            "label": "callAsInternalUser",
            "source": {
              "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
              "lineNumber": 140
            },
            "tags": [
              "deprecated"
            ],
            "returnComment": []
          },
          {
            "id": "def-server.LegacyClusterClient.close",
            "type": "Function",
            "label": "close",
            "signature": [
              "() => void"
            ],
            "description": [
              "\nCloses the cluster client. After that client cannot be used and one should\ncreate a new client instance to be able to interact with Elasticsearch API."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
              "lineNumber": 158
            }
          },
          {
            "id": "def-server.LegacyClusterClient.asScoped",
            "type": "Function",
            "label": "asScoped",
            "signature": [
              "(request?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any> | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.LegacyRequest",
                "text": "LegacyRequest"
              },
              " | ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.FakeRequest",
                "text": "FakeRequest"
              },
              " | undefined) => Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyScopedClusterClient",
                "text": "LegacyScopedClusterClient"
              },
              ", \"callAsCurrentUser\" | \"callAsInternalUser\">"
            ],
            "description": [
              "\nCreates an instance of {@link ILegacyScopedClusterClient} based on the configuration the\ncurrent cluster client that exposes additional `callAsCurrentUser` method\nscoped to the provided req. Consumers shouldn't worry about closing\nscoped client instances, these will be automatically closed as soon as the\noriginal cluster client isn't needed anymore and closed.\n"
            ],
            "children": [
              {
                "id": "def-server.LegacyClusterClient.asScoped.$1",
                "type": "CompoundType",
                "label": "request",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any> | ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.LegacyRequest",
                    "text": "LegacyRequest"
                  },
                  " | ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.FakeRequest",
                    "text": "FakeRequest"
                  },
                  " | undefined"
                ],
                "description": [
                  "- Request the `IScopedClusterClient` instance will be scoped to.\nSupports request optionality, Legacy.Request & FakeRequest for BWC with LegacyPlatform"
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
                  "lineNumber": 181
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
              "lineNumber": 181
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
          "lineNumber": 104
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyElasticsearchErrorHelpers",
        "type": "Class",
        "tags": [
          "public"
        ],
        "label": "LegacyElasticsearchErrorHelpers",
        "description": [
          "\nHelpers for working with errors returned from the Elasticsearch service.Since the internal data of\nerrors are subject to change, consumers of the Elasticsearch service should always use these helpers\nto classify errors instead of checking error internals such as `body.error.header[WWW-Authenticate]`"
        ],
        "children": [
          {
            "id": "def-server.LegacyElasticsearchErrorHelpers.isNotAuthorizedError",
            "type": "Function",
            "label": "isNotAuthorizedError",
            "signature": [
              "typeof ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyElasticsearchErrorHelpers",
                "text": "LegacyElasticsearchErrorHelpers"
              },
              ".isNotAuthorizedError"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.LegacyElasticsearchErrorHelpers.isNotAuthorizedError.$1",
                "type": "Any",
                "label": "error",
                "isRequired": true,
                "signature": [
                  "any"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/errors.ts",
                  "lineNumber": 70
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/errors.ts",
              "lineNumber": 70
            }
          },
          {
            "id": "def-server.LegacyElasticsearchErrorHelpers.decorateNotAuthorizedError",
            "type": "Function",
            "label": "decorateNotAuthorizedError",
            "signature": [
              "typeof ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyElasticsearchErrorHelpers",
                "text": "LegacyElasticsearchErrorHelpers"
              },
              ".decorateNotAuthorizedError"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.LegacyElasticsearchErrorHelpers.decorateNotAuthorizedError.$1",
                "type": "Object",
                "label": "error",
                "isRequired": true,
                "signature": [
                  "Error"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/errors.ts",
                  "lineNumber": 74
                }
              },
              {
                "id": "def-server.LegacyElasticsearchErrorHelpers.decorateNotAuthorizedError.$2",
                "type": "string",
                "label": "reason",
                "isRequired": false,
                "signature": [
                  "string | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/errors.ts",
                  "lineNumber": 74
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/errors.ts",
              "lineNumber": 74
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/errors.ts",
          "lineNumber": 69
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyScopedClusterClient",
        "type": "Class",
        "tags": [
          "deprecated",
          "public"
        ],
        "label": "LegacyScopedClusterClient",
        "description": [
          "\n{@inheritDoc IScopedClusterClient}"
        ],
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.LegacyScopedClusterClient",
            "text": "LegacyScopedClusterClient"
          },
          " implements Pick<",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.LegacyScopedClusterClient",
            "text": "LegacyScopedClusterClient"
          },
          ", \"callAsCurrentUser\" | \"callAsInternalUser\">"
        ],
        "children": [
          {
            "id": "def-server.LegacyScopedClusterClient.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.LegacyScopedClusterClient.Unnamed.$1",
                "type": "Function",
                "label": "internalAPICaller",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyAPICaller",
                    "text": "LegacyAPICaller"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 36
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.Unnamed.$2",
                "type": "Function",
                "label": "scopedAPICaller",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyAPICaller",
                    "text": "LegacyAPICaller"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 37
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.Unnamed.$3",
                "type": "CompoundType",
                "label": "headers",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.Headers",
                    "text": "Headers"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 38
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
              "lineNumber": 35
            }
          },
          {
            "id": "def-server.LegacyScopedClusterClient.callAsInternalUser",
            "type": "Function",
            "label": "callAsInternalUser",
            "signature": [
              "(endpoint: string, clientParams?: Record<string, any>, options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyCallAPIOptions",
                "text": "LegacyCallAPIOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "description": [
              "\nCalls specified `endpoint` with provided `clientParams` on behalf of the\nKibana internal user.\nSee {@link LegacyAPICaller}."
            ],
            "children": [
              {
                "id": "def-server.LegacyScopedClusterClient.callAsInternalUser.$1",
                "type": "string",
                "label": "endpoint",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- String descriptor of the endpoint e.g. `cluster.getSettings` or `ping`."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 55
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.callAsInternalUser.$2",
                "type": "Object",
                "label": "clientParams",
                "isRequired": true,
                "signature": [
                  "Record<string, any>"
                ],
                "description": [
                  "- A dictionary of parameters that will be passed directly to the Elasticsearch JS client."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 56
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.callAsInternalUser.$3",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyCallAPIOptions",
                    "text": "LegacyCallAPIOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- Options that affect the way we call the API and process the result."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 57
                }
              }
            ],
            "tags": [
              "deprecated"
            ],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
              "lineNumber": 54
            }
          },
          {
            "id": "def-server.LegacyScopedClusterClient.callAsCurrentUser",
            "type": "Function",
            "label": "callAsCurrentUser",
            "signature": [
              "(endpoint: string, clientParams?: Record<string, any>, options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyCallAPIOptions",
                "text": "LegacyCallAPIOptions"
              },
              " | undefined) => Promise<any>"
            ],
            "description": [
              "\nCalls specified `endpoint` with provided `clientParams` on behalf of the\nuser initiated request to the Kibana server (via HTTP request headers).\nSee {@link LegacyAPICaller}."
            ],
            "children": [
              {
                "id": "def-server.LegacyScopedClusterClient.callAsCurrentUser.$1",
                "type": "string",
                "label": "endpoint",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- String descriptor of the endpoint e.g. `cluster.getSettings` or `ping`."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 73
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.callAsCurrentUser.$2",
                "type": "Object",
                "label": "clientParams",
                "isRequired": true,
                "signature": [
                  "Record<string, any>"
                ],
                "description": [
                  "- A dictionary of parameters that will be passed directly to the Elasticsearch JS client."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 74
                }
              },
              {
                "id": "def-server.LegacyScopedClusterClient.callAsCurrentUser.$3",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LegacyCallAPIOptions",
                    "text": "LegacyCallAPIOptions"
                  },
                  " | undefined"
                ],
                "description": [
                  "- Options that affect the way we call the API and process the result."
                ],
                "source": {
                  "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
                  "lineNumber": 75
                }
              }
            ],
            "tags": [
              "deprecated"
            ],
            "returnComment": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
              "lineNumber": 72
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
          "lineNumber": 34
        },
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "id": "def-server.AppCategory",
        "type": "Interface",
        "label": "AppCategory",
        "description": [
          "\n\nA category definition for nav links to know where to sort them in the left hand nav"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.AppCategory.id",
            "type": "string",
            "label": "id",
            "description": [
              "\nUnique identifier for the categories"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-server.AppCategory.label",
            "type": "string",
            "label": "label",
            "description": [
              "\nLabel used for category name.\nAlso used as aria-label if one isn't set."
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 25
            }
          },
          {
            "tags": [],
            "id": "def-server.AppCategory.ariaLabel",
            "type": "string",
            "label": "ariaLabel",
            "description": [
              "\nIf the visual label isn't appropriate for screen readers,\ncan override it here"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 31
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.AppCategory.order",
            "type": "number",
            "label": "order",
            "description": [
              "\nThe order that categories will be sorted in\nPrefer large steps between categories to allow for further editing\n(Default categories are in steps of 1000)"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 38
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.AppCategory.euiIconType",
            "type": "string",
            "label": "euiIconType",
            "description": [
              "\nDefine an icon to be used for the category\nIf the category is only 1 item, and no icon is defined, will default to the product icon\nDefaults to initials if no icon is defined"
            ],
            "source": {
              "path": "src/core/types/app_category.ts",
              "lineNumber": 45
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/app_category.ts",
          "lineNumber": 15
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.AssistanceAPIResponse",
        "type": "Interface",
        "label": "AssistanceAPIResponse",
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.AssistanceAPIResponse.indices",
            "type": "Object",
            "label": "indices",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 338
            },
            "signature": [
              "{ [indexName: string]: { action_required: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.MIGRATION_ASSISTANCE_INDEX_ACTION",
                "text": "MIGRATION_ASSISTANCE_INDEX_ACTION"
              },
              "; }; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 337
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.AssistantAPIClientParams",
        "type": "Interface",
        "label": "AssistantAPIClientParams",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.AssistantAPIClientParams",
            "text": "AssistantAPIClientParams"
          },
          " extends ",
          "GenericParams"
        ],
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.AssistantAPIClientParams.path",
            "type": "string",
            "label": "path",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 318
            },
            "signature": [
              "\"/_migration/assistance\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.AssistantAPIClientParams.method",
            "type": "string",
            "label": "method",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 319
            },
            "signature": [
              "\"GET\""
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 317
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.AsyncPlugin",
        "type": "Interface",
        "label": "AsyncPlugin",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.AsyncPlugin",
            "text": "AsyncPlugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "description": [
          "\nA plugin with asynchronous lifecycle methods.\n"
        ],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "id": "def-server.AsyncPlugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<object, unknown>, plugins: TPluginsSetup) => TSetup | Promise<TSetup>"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.AsyncPlugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<object, unknown>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 274
                }
              },
              {
                "id": "def-server.AsyncPlugin.setup.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsSetup"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 274
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 274
            }
          },
          {
            "id": "def-server.AsyncPlugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: TPluginsStart) => TStart | Promise<TStart>"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.AsyncPlugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 276
                }
              },
              {
                "id": "def-server.AsyncPlugin.start.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsStart"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 276
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 276
            }
          },
          {
            "id": "def-server.AsyncPlugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "(() => void) | undefined"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 278
            }
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 268
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.Capabilities",
        "type": "Interface",
        "label": "Capabilities",
        "description": [
          "\nThe read-only set of capabilities available for the current UI session.\nCapabilities are simple key-value pairs of (string, boolean), where the string denotes the capability ID,\nand the boolean is a flag indicating if the capability is enabled or disabled.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.Capabilities.navLinks",
            "type": "Object",
            "label": "navLinks",
            "description": [
              "Navigation link capabilities."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 18
            },
            "signature": [
              "Record<string, boolean>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.Capabilities.management",
            "type": "Object",
            "label": "management",
            "description": [
              "Management section capabilities."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 21
            },
            "signature": [
              "{ [sectionId: string]: Record<string, boolean>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.Capabilities.catalogue",
            "type": "Object",
            "label": "catalogue",
            "description": [
              "Catalogue capabilities. Catalogue entries drive the visibility of the Kibana homepage options."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 26
            },
            "signature": [
              "Record<string, boolean>"
            ]
          },
          {
            "id": "def-server.Capabilities.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [
              "Custom capabilities, registered by plugins."
            ],
            "source": {
              "path": "src/core/types/capabilities.ts",
              "lineNumber": 29
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/capabilities.ts",
          "lineNumber": 16
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CapabilitiesSetup",
        "type": "Interface",
        "label": "CapabilitiesSetup",
        "description": [
          "\nAPIs to manage the {@link Capabilities} that will be used by the application.\n\nPlugins relying on capabilities to toggle some of their features should register them during the setup phase\nusing the `registerProvider` method.\n\nPlugins having the responsibility to restrict capabilities depending on a given context should register\ntheir capabilities switcher using the `registerSwitcher` method.\n\nRefers to the methods documentation for complete description and examples.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.CapabilitiesSetup.registerProvider",
            "type": "Function",
            "label": "registerProvider",
            "signature": [
              "(provider: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CapabilitiesProvider",
                "text": "CapabilitiesProvider"
              },
              ") => void"
            ],
            "description": [
              "\nRegister a {@link CapabilitiesProvider} to be used to provide {@link Capabilities}\nwhen resolving them.\n"
            ],
            "children": [
              {
                "id": "def-server.CapabilitiesSetup.registerProvider.$1",
                "type": "Function",
                "label": "provider",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CapabilitiesProvider",
                    "text": "CapabilitiesProvider"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/capabilities/capabilities_service.ts",
                  "lineNumber": 54
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/capabilities/capabilities_service.ts",
              "lineNumber": 54
            }
          },
          {
            "id": "def-server.CapabilitiesSetup.registerSwitcher",
            "type": "Function",
            "label": "registerSwitcher",
            "signature": [
              "(switcher: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CapabilitiesSwitcher",
                "text": "CapabilitiesSwitcher"
              },
              ") => void"
            ],
            "description": [
              "\nRegister a {@link CapabilitiesSwitcher} to be used to change the default state\nof the {@link Capabilities} entries when resolving them.\n\nA capabilities switcher can only change the state of existing capabilities.\nCapabilities added or removed when invoking the switcher will be ignored.\n"
            ],
            "children": [
              {
                "id": "def-server.CapabilitiesSetup.registerSwitcher.$1",
                "type": "Function",
                "label": "switcher",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CapabilitiesSwitcher",
                    "text": "CapabilitiesSwitcher"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/capabilities/capabilities_service.ts",
                  "lineNumber": 93
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/capabilities/capabilities_service.ts",
              "lineNumber": 93
            }
          }
        ],
        "source": {
          "path": "src/core/server/capabilities/capabilities_service.ts",
          "lineNumber": 30
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CapabilitiesStart",
        "type": "Interface",
        "label": "CapabilitiesStart",
        "description": [
          "\nAPIs to access the application {@link Capabilities}.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.CapabilitiesStart.resolveCapabilities",
            "type": "Function",
            "label": "resolveCapabilities",
            "signature": [
              "(request: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ResolveCapabilitiesOptions",
                "text": "ResolveCapabilitiesOptions"
              },
              " | undefined) => Promise<",
              "Capabilities",
              ">"
            ],
            "description": [
              "\nResolve the {@link Capabilities} to be used for given request"
            ],
            "children": [
              {
                "id": "def-server.CapabilitiesStart.resolveCapabilities.$1",
                "type": "Object",
                "label": "request",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/capabilities/capabilities_service.ts",
                  "lineNumber": 118
                }
              },
              {
                "id": "def-server.CapabilitiesStart.resolveCapabilities.$2",
                "type": "Object",
                "label": "options",
                "isRequired": false,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.ResolveCapabilitiesOptions",
                    "text": "ResolveCapabilitiesOptions"
                  },
                  " | undefined"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/capabilities/capabilities_service.ts",
                  "lineNumber": 119
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/capabilities/capabilities_service.ts",
              "lineNumber": 117
            }
          }
        ],
        "source": {
          "path": "src/core/server/capabilities/capabilities_service.ts",
          "lineNumber": 113
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ConfigDeprecationFactory",
        "type": "Interface",
        "label": "ConfigDeprecationFactory",
        "signature": [
          "ConfigDeprecationFactory"
        ],
        "description": [
          "\nProvides helpers to generates the most commonly used {@link ConfigDeprecation}\nwhen invoking a {@link ConfigDeprecationProvider}.\n\nSee methods documentation for more detailed examples.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.ConfigDeprecationFactory.rename",
            "type": "Function",
            "label": "rename",
            "signature": [
              "(oldKey: string, newKey: string, details?: Partial<",
              "DeprecatedConfigDetails",
              "> | undefined) => ",
              "ConfigDeprecation"
            ],
            "description": [
              "\nRename a configuration property from inside a plugin's configuration path.\nWill log a deprecation warning if the oldKey was found and deprecation applied.\n"
            ],
            "children": [
              {
                "id": "def-server.ConfigDeprecationFactory.rename.$1",
                "type": "string",
                "label": "oldKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 80
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.rename.$2",
                "type": "string",
                "label": "newKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 80
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.rename.$3",
                "type": "Object",
                "label": "details",
                "isRequired": false,
                "signature": [
                  "Partial<",
                  "DeprecatedConfigDetails",
                  "> | undefined"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 80
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
              "lineNumber": 80
            }
          },
          {
            "id": "def-server.ConfigDeprecationFactory.renameFromRoot",
            "type": "Function",
            "label": "renameFromRoot",
            "signature": [
              "(oldKey: string, newKey: string, details?: Partial<",
              "DeprecatedConfigDetails",
              "> | undefined) => ",
              "ConfigDeprecation"
            ],
            "description": [
              "\nRename a configuration property from the root configuration.\nWill log a deprecation warning if the oldKey was found and deprecation applied.\n\nThis should be only used when renaming properties from different configuration's path.\nTo rename properties from inside a plugin's configuration, use 'rename' instead.\n"
            ],
            "children": [
              {
                "id": "def-server.ConfigDeprecationFactory.renameFromRoot.$1",
                "type": "string",
                "label": "oldKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 96
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.renameFromRoot.$2",
                "type": "string",
                "label": "newKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 96
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.renameFromRoot.$3",
                "type": "Object",
                "label": "details",
                "isRequired": false,
                "signature": [
                  "Partial<",
                  "DeprecatedConfigDetails",
                  "> | undefined"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 96
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
              "lineNumber": 96
            }
          },
          {
            "id": "def-server.ConfigDeprecationFactory.unused",
            "type": "Function",
            "label": "unused",
            "signature": [
              "(unusedKey: string, details?: Partial<",
              "DeprecatedConfigDetails",
              "> | undefined) => ",
              "ConfigDeprecation"
            ],
            "description": [
              "\nRemove a configuration property from inside a plugin's configuration path.\nWill log a deprecation warning if the unused key was found and deprecation applied.\n"
            ],
            "children": [
              {
                "id": "def-server.ConfigDeprecationFactory.unused.$1",
                "type": "string",
                "label": "unusedKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 109
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.unused.$2",
                "type": "Object",
                "label": "details",
                "isRequired": false,
                "signature": [
                  "Partial<",
                  "DeprecatedConfigDetails",
                  "> | undefined"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 109
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
              "lineNumber": 109
            }
          },
          {
            "id": "def-server.ConfigDeprecationFactory.unusedFromRoot",
            "type": "Function",
            "label": "unusedFromRoot",
            "signature": [
              "(unusedKey: string, details?: Partial<",
              "DeprecatedConfigDetails",
              "> | undefined) => ",
              "ConfigDeprecation"
            ],
            "description": [
              "\nRemove a configuration property from the root configuration.\nWill log a deprecation warning if the unused key was found and deprecation applied.\n\nThis should be only used when removing properties from outside of a plugin's configuration.\nTo remove properties from inside a plugin's configuration, use 'unused' instead.\n"
            ],
            "children": [
              {
                "id": "def-server.ConfigDeprecationFactory.unusedFromRoot.$1",
                "type": "string",
                "label": "unusedKey",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 125
                }
              },
              {
                "id": "def-server.ConfigDeprecationFactory.unusedFromRoot.$2",
                "type": "Object",
                "label": "details",
                "isRequired": false,
                "signature": [
                  "Partial<",
                  "DeprecatedConfigDetails",
                  "> | undefined"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
                  "lineNumber": 125
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
              "lineNumber": 125
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
          "lineNumber": 67
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ContextSetup",
        "type": "Interface",
        "label": "ContextSetup",
        "description": [
          "\n{@inheritdoc IContextContainer}\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.ContextSetup.createContextContainer",
            "type": "Function",
            "label": "createContextContainer",
            "signature": [
              "() => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IContextContainer",
                "text": "IContextContainer"
              }
            ],
            "description": [
              "\nCreates a new {@link IContextContainer} for a service owner."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/context/context_service.ts",
              "lineNumber": 96
            }
          }
        ],
        "source": {
          "path": "src/core/server/context/context_service.ts",
          "lineNumber": 92
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CoreSetup",
        "type": "Interface",
        "label": "CoreSetup",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.CoreSetup",
            "text": "CoreSetup"
          },
          "<TPluginsStart, TStart>"
        ],
        "description": [
          "\nContext passed to the plugins `setup` method.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.CoreSetup.capabilities",
            "type": "Object",
            "label": "capabilities",
            "description": [
              "{@link CapabilitiesSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 466
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CapabilitiesSetup",
                "text": "CapabilitiesSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.context",
            "type": "Object",
            "label": "context",
            "description": [
              "{@link ContextSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 468
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ContextSetup",
                "text": "ContextSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.elasticsearch",
            "type": "Object",
            "label": "elasticsearch",
            "description": [
              "{@link ElasticsearchServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 470
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchServiceSetup",
                "text": "ElasticsearchServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.http",
            "type": "CompoundType",
            "label": "http",
            "description": [
              "{@link HttpServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 472
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpServiceSetup",
                "text": "HttpServiceSetup"
              },
              " & { resources: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              "; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.i18n",
            "type": "Object",
            "label": "i18n",
            "description": [
              "{@link I18nServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 477
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.I18nServiceSetup",
                "text": "I18nServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.logging",
            "type": "Object",
            "label": "logging",
            "description": [
              "{@link LoggingServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 479
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LoggingServiceSetup",
                "text": "LoggingServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.metrics",
            "type": "Object",
            "label": "metrics",
            "description": [
              "{@link MetricsServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 481
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.MetricsServiceSetup",
                "text": "MetricsServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.savedObjects",
            "type": "Object",
            "label": "savedObjects",
            "description": [
              "{@link SavedObjectsServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 483
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsServiceSetup",
                "text": "SavedObjectsServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.status",
            "type": "Object",
            "label": "status",
            "description": [
              "{@link StatusServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 485
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.StatusServiceSetup",
                "text": "StatusServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.uiSettings",
            "type": "Object",
            "label": "uiSettings",
            "description": [
              "{@link UiSettingsServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 487
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.UiSettingsServiceSetup",
                "text": "UiSettingsServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.deprecations",
            "type": "Object",
            "label": "deprecations",
            "description": [
              "{@link DeprecationsServiceSetup}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 489
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.DeprecationsServiceSetup",
                "text": "DeprecationsServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreSetup.getStartServices",
            "type": "Function",
            "label": "getStartServices",
            "description": [
              "{@link StartServicesAccessor}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 491
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.StartServicesAccessor",
                "text": "StartServicesAccessor"
              },
              "<TPluginsStart, TStart>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/index.ts",
          "lineNumber": 464
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CoreStart",
        "type": "Interface",
        "label": "CoreStart",
        "description": [
          "\nContext passed to the plugins `start` method.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.CoreStart.capabilities",
            "type": "Object",
            "label": "capabilities",
            "description": [
              "{@link CapabilitiesStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 514
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CapabilitiesStart",
                "text": "CapabilitiesStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStart.elasticsearch",
            "type": "Object",
            "label": "elasticsearch",
            "description": [
              "{@link ElasticsearchServiceStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 516
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchServiceStart",
                "text": "ElasticsearchServiceStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStart.http",
            "type": "Object",
            "label": "http",
            "description": [
              "{@link HttpServiceStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 518
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpServiceStart",
                "text": "HttpServiceStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStart.metrics",
            "type": "Object",
            "label": "metrics",
            "description": [
              "{@link MetricsServiceStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 520
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.MetricsServiceSetup",
                "text": "MetricsServiceSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStart.savedObjects",
            "type": "Object",
            "label": "savedObjects",
            "description": [
              "{@link SavedObjectsServiceStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 522
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsServiceStart",
                "text": "SavedObjectsServiceStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStart.uiSettings",
            "type": "Object",
            "label": "uiSettings",
            "description": [
              "{@link UiSettingsServiceStart}"
            ],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 524
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.UiSettingsServiceStart",
                "text": "UiSettingsServiceStart"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/index.ts",
          "lineNumber": 512
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CoreStatus",
        "type": "Interface",
        "label": "CoreStatus",
        "description": [
          "\nStatus of core services.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.CoreStatus.elasticsearch",
            "type": "Object",
            "label": "elasticsearch",
            "description": [],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 115
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CoreStatus.savedObjects",
            "type": "Object",
            "label": "savedObjects",
            "description": [],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 116
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/status/types.ts",
          "lineNumber": 114
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.CountResponse",
        "type": "Interface",
        "label": "CountResponse",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.CountResponse._shards",
            "type": "Object",
            "label": "_shards",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 72
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ShardsInfo",
                "text": "ShardsInfo"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.CountResponse.count",
            "type": "number",
            "label": "count",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 73
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 71
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeleteDocumentResponse",
        "type": "Interface",
        "label": "DeleteDocumentResponse",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse._shards",
            "type": "Object",
            "label": "_shards",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 125
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ShardsResponse",
                "text": "ShardsResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse.found",
            "type": "boolean",
            "label": "found",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 126
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse._index",
            "type": "string",
            "label": "_index",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 127
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse._type",
            "type": "string",
            "label": "_type",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 128
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse._id",
            "type": "string",
            "label": "_id",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 129
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse._version",
            "type": "number",
            "label": "_version",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 130
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse.result",
            "type": "string",
            "label": "result",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 131
            }
          },
          {
            "tags": [],
            "id": "def-server.DeleteDocumentResponse.error",
            "type": "Object",
            "label": "error",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 132
            },
            "signature": [
              "{ type: string; } | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 124
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationAPIClientParams",
        "type": "Interface",
        "label": "DeprecationAPIClientParams",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.DeprecationAPIClientParams",
            "text": "DeprecationAPIClientParams"
          },
          " extends ",
          "GenericParams"
        ],
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationAPIClientParams.path",
            "type": "string",
            "label": "path",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 350
            },
            "signature": [
              "\"/_migration/deprecations\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationAPIClientParams.method",
            "type": "string",
            "label": "method",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 351
            },
            "signature": [
              "\"GET\""
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 349
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationAPIResponse",
        "type": "Interface",
        "label": "DeprecationAPIResponse",
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationAPIResponse.cluster_settings",
            "type": "Array",
            "label": "cluster_settings",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 378
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.DeprecationInfo",
                "text": "DeprecationInfo"
              },
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationAPIResponse.ml_settings",
            "type": "Array",
            "label": "ml_settings",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 379
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.DeprecationInfo",
                "text": "DeprecationInfo"
              },
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationAPIResponse.node_settings",
            "type": "Array",
            "label": "node_settings",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 380
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.DeprecationInfo",
                "text": "DeprecationInfo"
              },
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationAPIResponse.index_settings",
            "type": "Object",
            "label": "index_settings",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 381
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IndexSettingsDeprecationInfo",
                "text": "IndexSettingsDeprecationInfo"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 377
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationInfo",
        "type": "Interface",
        "label": "DeprecationInfo",
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationInfo.level",
            "type": "CompoundType",
            "label": "level",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 359
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.MIGRATION_DEPRECATION_LEVEL",
                "text": "MIGRATION_DEPRECATION_LEVEL"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationInfo.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 360
            }
          },
          {
            "tags": [],
            "id": "def-server.DeprecationInfo.url",
            "type": "string",
            "label": "url",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 361
            }
          },
          {
            "tags": [],
            "id": "def-server.DeprecationInfo.details",
            "type": "string",
            "label": "details",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 362
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 358
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationsDetails",
        "type": "Interface",
        "label": "DeprecationsDetails",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationsDetails.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 20
            }
          },
          {
            "tags": [],
            "id": "def-server.DeprecationsDetails.level",
            "type": "CompoundType",
            "label": "level",
            "description": [
              "\nlevels:\n- warning: will not break deployment upon upgrade\n- critical: needs to be addressed before upgrade.\n- fetch_error: Deprecations service failed to grab the deprecation details for the domain."
            ],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 27
            },
            "signature": [
              "\"warning\" | \"critical\" | \"fetch_error\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationsDetails.documentationUrl",
            "type": "string",
            "label": "documentationUrl",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 29
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DeprecationsDetails.correctiveActions",
            "type": "Object",
            "label": "correctiveActions",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 31
            },
            "signature": [
              "{ api?: { path: string; method: \"POST\" | \"PUT\"; body?: { [key: string]: any; } | undefined; } | undefined; manualSteps?: string[] | undefined; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/deprecations/types.ts",
          "lineNumber": 18
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationSettings",
        "type": "Interface",
        "label": "DeprecationSettings",
        "description": [
          "\nUiSettings deprecation field options."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationSettings.message",
            "type": "string",
            "label": "message",
            "description": [
              "Deprecation message"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 34
            }
          },
          {
            "tags": [],
            "id": "def-server.DeprecationSettings.docLinksKey",
            "type": "string",
            "label": "docLinksKey",
            "description": [
              "Key to documentation links"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 36
            }
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 32
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DeprecationsServiceSetup",
        "type": "Interface",
        "label": "DeprecationsServiceSetup",
        "description": [
          "\nThe deprecations service provides a way for the Kibana platform to communicate deprecated\nfeatures and configs with its users. These deprecations are only communicated\nif the deployment is using these features. Allowing for a user tailored experience\nfor upgrading the stack version.\n\nThe Deprecation service is consumed by the upgrade assistant to assist with the upgrade\nexperience.\n\nIf a deprecated feature can be resolved without manual user intervention.\nUsing correctiveActions.api allows the Upgrade Assistant to use this api to correct the\ndeprecation upon a user trigger.\n"
        ],
        "tags": [
          "gmail",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DeprecationsServiceSetup.registerDeprecations",
            "type": "Function",
            "label": "registerDeprecations",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/deprecations_service.ts",
              "lineNumber": 104
            },
            "signature": [
              "(deprecationContext: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RegisterDeprecationsConfig",
                "text": "RegisterDeprecationsConfig"
              },
              ") => void"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/deprecations/deprecations_service.ts",
          "lineNumber": 103
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.DiscoveredPlugin",
        "type": "Interface",
        "label": "DiscoveredPlugin",
        "description": [
          "\nSmall container object used to expose information about discovered plugins that may\nor may not have been started."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.DiscoveredPlugin.id",
            "type": "string",
            "label": "id",
            "description": [
              "\nIdentifier of the plugin."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 189
            }
          },
          {
            "tags": [],
            "id": "def-server.DiscoveredPlugin.configPath",
            "type": "CompoundType",
            "label": "configPath",
            "description": [
              "\nRoot configuration path used by the plugin, defaults to \"id\" in snake_case format."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 194
            },
            "signature": [
              "string | string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DiscoveredPlugin.requiredPlugins",
            "type": "Object",
            "label": "requiredPlugins",
            "description": [
              "\nAn optional list of the other plugins that **must be** installed and enabled\nfor this plugin to function properly."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 200
            },
            "signature": [
              "readonly string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DiscoveredPlugin.optionalPlugins",
            "type": "Object",
            "label": "optionalPlugins",
            "description": [
              "\nAn optional list of the other plugins that if installed and enabled **may be**\nleveraged by this plugin for some additional functionality but otherwise are\nnot required for this plugin to work properly."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 207
            },
            "signature": [
              "readonly string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.DiscoveredPlugin.requiredBundles",
            "type": "Object",
            "label": "requiredBundles",
            "description": [
              "\nList of plugin ids that this plugin's UI code imports modules from that are\nnot in `requiredPlugins`.\n"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 219
            },
            "signature": [
              "readonly string[]"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 185
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchServiceSetup",
        "type": "Interface",
        "label": "ElasticsearchServiceSetup",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.ElasticsearchServiceSetup.legacy",
            "type": "Object",
            "label": "legacy",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 30
            },
            "signature": [
              "{ readonly config$: ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchConfig",
                "text": "ElasticsearchConfig"
              },
              ">; readonly createClient: (type: string, clientConfig?: Partial<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyElasticsearchClientConfig",
                "text": "LegacyElasticsearchClientConfig"
              },
              "> | undefined) => Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyClusterClient",
                "text": "LegacyClusterClient"
              },
              ", \"close\" | \"callAsInternalUser\" | \"asScoped\">; readonly client: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyClusterClient",
                "text": "LegacyClusterClient"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/types.ts",
          "lineNumber": 25
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchServiceStart",
        "type": "Interface",
        "label": "ElasticsearchServiceStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ElasticsearchServiceStart.client",
            "type": "Object",
            "label": "client",
            "description": [
              "\nA pre-configured {@link IClusterClient | Elasticsearch client}\n"
            ],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 96
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IClusterClient",
                "text": "IClusterClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchServiceStart.createClient",
            "type": "Function",
            "label": "createClient",
            "description": [
              "\nCreate application specific Elasticsearch cluster API client with customized config. See {@link IClusterClient}.\n"
            ],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 114
            },
            "signature": [
              "(type: string, clientConfig?: Partial<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClientConfig",
                "text": "ElasticsearchClientConfig"
              },
              "> | undefined) => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ICustomClusterClient",
                "text": "ICustomClusterClient"
              }
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.ElasticsearchServiceStart.legacy",
            "type": "Object",
            "label": "legacy",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 124
            },
            "signature": [
              "{ readonly config$: ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchConfig",
                "text": "ElasticsearchConfig"
              },
              ">; readonly createClient: (type: string, clientConfig?: Partial<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyElasticsearchClientConfig",
                "text": "LegacyElasticsearchClientConfig"
              },
              "> | undefined) => Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyClusterClient",
                "text": "LegacyClusterClient"
              },
              ", \"close\" | \"callAsInternalUser\" | \"asScoped\">; readonly client: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LegacyClusterClient",
                "text": "LegacyClusterClient"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/types.ts",
          "lineNumber": 87
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchStatusMeta",
        "type": "Interface",
        "label": "ElasticsearchStatusMeta",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ElasticsearchStatusMeta.warningNodes",
            "type": "Array",
            "label": "warningNodes",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 172
            },
            "signature": [
              "NodeInfo[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ElasticsearchStatusMeta.incompatibleNodes",
            "type": "Array",
            "label": "incompatibleNodes",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 173
            },
            "signature": [
              "NodeInfo[]"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/types.ts",
          "lineNumber": 171
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.EnvironmentMode",
        "type": "Interface",
        "label": "EnvironmentMode",
        "signature": [
          "EnvironmentMode"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.EnvironmentMode.name",
            "type": "CompoundType",
            "label": "name",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 15
            },
            "signature": [
              "\"production\" | \"development\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.EnvironmentMode.dev",
            "type": "boolean",
            "label": "dev",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 16
            }
          },
          {
            "tags": [],
            "id": "def-server.EnvironmentMode.prod",
            "type": "boolean",
            "label": "prod",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 17
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/types.d.ts",
          "lineNumber": 14
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.FakeRequest",
        "type": "Interface",
        "label": "FakeRequest",
        "description": [
          "\nFake request object created manually by Kibana plugins."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.FakeRequest.headers",
            "type": "CompoundType",
            "label": "headers",
            "description": [
              "Headers used for authentication against Elasticsearch"
            ],
            "source": {
              "path": "src/core/server/elasticsearch/types.ts",
              "lineNumber": 182
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.Headers",
                "text": "Headers"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/types.ts",
          "lineNumber": 180
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.GetDeprecationsContext",
        "type": "Interface",
        "label": "GetDeprecationsContext",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.GetDeprecationsContext.esClient",
            "type": "Object",
            "label": "esClient",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 61
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IScopedClusterClient",
                "text": "IScopedClusterClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.GetDeprecationsContext.savedObjectsClient",
            "type": "Object",
            "label": "savedObjectsClient",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 62
            },
            "signature": [
              "Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"addToNamespaces\" | \"deleteFromNamespaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/deprecations/types.ts",
          "lineNumber": 60
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.GetResponse",
        "type": "Interface",
        "label": "GetResponse",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.GetResponse",
            "text": "GetResponse"
          },
          "<T>"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.GetResponse._index",
            "type": "string",
            "label": "_index",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 110
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._type",
            "type": "string",
            "label": "_type",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 111
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._id",
            "type": "string",
            "label": "_id",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 112
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._version",
            "type": "number",
            "label": "_version",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 113
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._routing",
            "type": "string",
            "label": "_routing",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 114
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.GetResponse.found",
            "type": "boolean",
            "label": "found",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 115
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._source",
            "type": "Uncategorized",
            "label": "_source",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 116
            },
            "signature": [
              "T"
            ]
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._seq_no",
            "type": "number",
            "label": "_seq_no",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 117
            }
          },
          {
            "tags": [],
            "id": "def-server.GetResponse._primary_term",
            "type": "number",
            "label": "_primary_term",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 118
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 109
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.HttpResources",
        "type": "Interface",
        "label": "HttpResources",
        "description": [
          "\nHttpResources service is responsible for serving static & dynamic assets for Kibana application via HTTP.\nProvides API allowing plug-ins to respond with:\n- a pre-configured HTML page bootstrapping Kibana client app\n- custom HTML page\n- custom JS script file."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.HttpResources.register",
            "type": "Function",
            "label": "register",
            "description": [
              "To register a route handler executing passed function to form response."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 101
            },
            "signature": [
              "<P, Q, B, Context extends ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              " = ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ">(route: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"get\">, handler: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"get\", { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
              "Stream"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/http_resources/types.ts",
          "lineNumber": 99
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.HttpResourcesRenderOptions",
        "type": "Interface",
        "label": "HttpResourcesRenderOptions",
        "description": [
          "\nAllows to configure HTTP response parameters"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.HttpResourcesRenderOptions.headers",
            "type": "CompoundType",
            "label": "headers",
            "description": [
              "\nHTTP Headers with additional information about response."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 30
            },
            "signature": [
              "Record<\"accept\" | \"accept-language\" | \"accept-patch\" | \"accept-ranges\" | \"access-control-allow-credentials\" | \"access-control-allow-headers\" | \"access-control-allow-methods\" | \"access-control-allow-origin\" | \"access-control-expose-headers\" | \"access-control-max-age\" | \"access-control-request-headers\" | \"access-control-request-method\" | \"age\" | \"allow\" | \"alt-svc\" | \"authorization\" | \"cache-control\" | \"connection\" | \"content-disposition\" | \"content-encoding\" | \"content-language\" | \"content-length\" | \"content-location\" | \"content-range\" | \"content-type\" | \"cookie\" | \"date\" | \"expect\" | \"expires\" | \"forwarded\" | \"from\" | \"host\" | \"if-match\" | \"if-modified-since\" | \"if-none-match\" | \"if-unmodified-since\" | \"last-modified\" | \"location\" | \"origin\" | \"pragma\" | \"proxy-authenticate\" | \"proxy-authorization\" | \"public-key-pins\" | \"range\" | \"referer\" | \"retry-after\" | \"sec-websocket-accept\" | \"sec-websocket-extensions\" | \"sec-websocket-key\" | \"sec-websocket-protocol\" | \"sec-websocket-version\" | \"set-cookie\" | \"strict-transport-security\" | \"tk\" | \"trailer\" | \"transfer-encoding\" | \"upgrade\" | \"user-agent\" | \"vary\" | \"via\" | \"warning\" | \"www-authenticate\", string | string[]> | Record<string, string | string[]> | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/http_resources/types.ts",
          "lineNumber": 24
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.HttpResourcesServiceToolkit",
        "type": "Interface",
        "label": "HttpResourcesServiceToolkit",
        "description": [
          "\nExtended set of {@link KibanaResponseFactory} helpers used to respond with HTML or JS resource."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.HttpResourcesServiceToolkit.renderCoreApp",
            "type": "Function",
            "label": "renderCoreApp",
            "description": [
              "To respond with HTML page bootstrapping Kibana application."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 45
            },
            "signature": [
              "(options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.HttpResourcesServiceToolkit.renderAnonymousCoreApp",
            "type": "Function",
            "label": "renderAnonymousCoreApp",
            "description": [
              "To respond with HTML page bootstrapping Kibana application without retrieving user-specific information."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 47
            },
            "signature": [
              "(options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.HttpResourcesRenderOptions",
                "text": "HttpResourcesRenderOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.HttpResourcesServiceToolkit.renderHtml",
            "type": "Function",
            "label": "renderHtml",
            "description": [
              "To respond with a custom HTML page."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 49
            },
            "signature": [
              "(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.HttpResourcesServiceToolkit.renderJs",
            "type": "Function",
            "label": "renderJs",
            "description": [
              "To respond with a custom JS script file."
            ],
            "source": {
              "path": "src/core/server/http_resources/types.ts",
              "lineNumber": 51
            },
            "signature": [
              "(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              ") => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/http_resources/types.ts",
          "lineNumber": 43
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.I18nServiceSetup",
        "type": "Interface",
        "label": "I18nServiceSetup",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.I18nServiceSetup.getLocale",
            "type": "Function",
            "label": "getLocale",
            "signature": [
              "() => string"
            ],
            "description": [
              "\nReturn the locale currently in use."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/i18n/i18n_service.ts",
              "lineNumber": 31
            }
          },
          {
            "id": "def-server.I18nServiceSetup.getTranslationFiles",
            "type": "Function",
            "label": "getTranslationFiles",
            "signature": [
              "() => string[]"
            ],
            "description": [
              "\nReturn the absolute paths to translation files currently in use."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/i18n/i18n_service.ts",
              "lineNumber": 36
            }
          }
        ],
        "source": {
          "path": "src/core/server/i18n/i18n_service.ts",
          "lineNumber": 27
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IClusterClient",
        "type": "Interface",
        "label": "IClusterClient",
        "description": [
          "\nRepresents an Elasticsearch cluster API client created by the platform.\nIt allows to call API on behalf of the internal Kibana user and\nthe actual user that is derived from the request headers (via `asScoped(...)`).\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IClusterClient.asInternalUser",
            "type": "CompoundType",
            "label": "asInternalUser",
            "description": [
              "\nA {@link ElasticsearchClient | client} to be used to query the ES cluster on behalf of the Kibana internal user"
            ],
            "source": {
              "path": "src/core/server/elasticsearch/client/cluster_client.ts",
              "lineNumber": 33
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.IClusterClient.asScoped",
            "type": "Function",
            "label": "asScoped",
            "description": [
              "\nCreates a {@link IScopedClusterClient | scoped cluster client} bound to given {@link ScopeableRequest | request}"
            ],
            "source": {
              "path": "src/core/server/elasticsearch/client/cluster_client.ts",
              "lineNumber": 37
            },
            "signature": [
              "(request: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ScopeableRequest",
                "text": "ScopeableRequest"
              },
              ") => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IScopedClusterClient",
                "text": "IScopedClusterClient"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/cluster_client.ts",
          "lineNumber": 29
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IContextContainer",
        "type": "Interface",
        "label": "IContextContainer",
        "description": [
          "\nAn object that handles registration of context providers and configuring handlers with context.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.IContextContainer.registerContext",
            "type": "Function",
            "label": "registerContext",
            "signature": [
              "<Context extends ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", ContextName extends keyof Context>(pluginOpaqueId: symbol, contextName: ContextName, provider: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IContextProvider",
                "text": "IContextProvider"
              },
              "<Context, ContextName>) => this"
            ],
            "description": [
              "\nRegister a new context provider.\n"
            ],
            "children": [
              {
                "id": "def-server.IContextContainer.registerContext.$1",
                "type": "Uncategorized",
                "label": "pluginOpaqueId",
                "isRequired": true,
                "signature": [
                  "symbol"
                ],
                "description": [
                  "- The plugin opaque ID for the plugin that registers this context."
                ],
                "source": {
                  "path": "src/core/server/context/container/context.ts",
                  "lineNumber": 151
                }
              },
              {
                "id": "def-server.IContextContainer.registerContext.$2",
                "type": "Uncategorized",
                "label": "contextName",
                "isRequired": true,
                "signature": [
                  "ContextName"
                ],
                "description": [
                  "- The key of the `TContext` object this provider supplies the value for."
                ],
                "source": {
                  "path": "src/core/server/context/container/context.ts",
                  "lineNumber": 152
                }
              },
              {
                "id": "def-server.IContextContainer.registerContext.$3",
                "type": "Function",
                "label": "provider",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.IContextProvider",
                    "text": "IContextProvider"
                  },
                  "<Context, ContextName>"
                ],
                "description": [
                  "- A {@link IContextProvider} to be called each time a new context is created."
                ],
                "source": {
                  "path": "src/core/server/context/container/context.ts",
                  "lineNumber": 153
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "The {@link IContextContainer} for method chaining."
            ],
            "source": {
              "path": "src/core/server/context/container/context.ts",
              "lineNumber": 150
            }
          },
          {
            "id": "def-server.IContextContainer.createHandler",
            "type": "Function",
            "label": "createHandler",
            "signature": [
              "(pluginOpaqueId: symbol, handler: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RequestHandler",
                "text": "RequestHandler"
              },
              "<unknown, unknown, unknown, ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              ", any, { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
              "Stream",
              " | undefined>(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              "KibanaResponse"
            ],
            "description": [
              "\nCreate a new handler function pre-wired to context for the plugin.\n"
            ],
            "children": [
              {
                "id": "def-server.IContextContainer.createHandler.$1",
                "type": "Uncategorized",
                "label": "pluginOpaqueId",
                "isRequired": true,
                "signature": [
                  "symbol"
                ],
                "description": [
                  "- The plugin opaque ID for the plugin that registers this handler."
                ],
                "source": {
                  "path": "src/core/server/context/container/context.ts",
                  "lineNumber": 165
                }
              },
              {
                "id": "def-server.IContextContainer.createHandler.$2",
                "type": "Function",
                "label": "handler",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.RequestHandler",
                    "text": "RequestHandler"
                  },
                  "<unknown, unknown, unknown, ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.RequestHandlerContext",
                    "text": "RequestHandlerContext"
                  },
                  ", any, { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
                  "Stream",
                  " | undefined>(options: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.CustomHttpResponseOptions",
                    "text": "CustomHttpResponseOptions"
                  },
                  "<T>) => ",
                  "KibanaResponse"
                ],
                "description": [
                  "- Handler function to pass context object to."
                ],
                "source": {
                  "path": "src/core/server/context/container/context.ts",
                  "lineNumber": 166
                }
              }
            ],
            "tags": [],
            "returnComment": [
              "A function that takes `RequestHandler` parameters, calls `handler` with a new context, and returns a Promise of\nthe `handler` return value."
            ],
            "source": {
              "path": "src/core/server/context/container/context.ts",
              "lineNumber": 164
            }
          }
        ],
        "source": {
          "path": "src/core/server/context/container/context.ts",
          "lineNumber": 135
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ICspConfig",
        "type": "Interface",
        "label": "ICspConfig",
        "description": [
          "\nCSP configuration for use in Kibana."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ICspConfig.rules",
            "type": "Array",
            "label": "rules",
            "description": [
              "\nThe CSP rules used for Kibana."
            ],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 21
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ICspConfig.strict",
            "type": "boolean",
            "label": "strict",
            "description": [
              "\nSpecify whether browsers that do not support CSP should be\nable to use Kibana. Use `true` to block and `false` to allow."
            ],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 27
            }
          },
          {
            "tags": [],
            "id": "def-server.ICspConfig.warnLegacyBrowsers",
            "type": "boolean",
            "label": "warnLegacyBrowsers",
            "description": [
              "\nSpecify whether users with legacy browsers should be warned\nabout their lack of Kibana security compliance."
            ],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 33
            }
          },
          {
            "tags": [],
            "id": "def-server.ICspConfig.header",
            "type": "string",
            "label": "header",
            "description": [
              "\nThe CSP rules in a formatted directives string for use\nin a `Content-Security-Policy` header."
            ],
            "source": {
              "path": "src/core/server/csp/csp_config.ts",
              "lineNumber": 39
            }
          }
        ],
        "source": {
          "path": "src/core/server/csp/csp_config.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ICustomClusterClient",
        "type": "Interface",
        "label": "ICustomClusterClient",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ICustomClusterClient",
            "text": "ICustomClusterClient"
          },
          " extends ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.IClusterClient",
            "text": "IClusterClient"
          }
        ],
        "description": [
          "\nSee {@link IClusterClient}\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ICustomClusterClient.close",
            "type": "Function",
            "label": "close",
            "description": [
              "\nCloses the cluster client. After that client cannot be used and one should\ncreate a new client instance to be able to interact with Elasticsearch API."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/client/cluster_client.ts",
              "lineNumber": 50
            },
            "signature": [
              "() => Promise<void>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/cluster_client.ts",
          "lineNumber": 45
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IExternalUrlConfig",
        "type": "Interface",
        "label": "IExternalUrlConfig",
        "description": [
          "\nExternal Url configuration for use in Kibana."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IExternalUrlConfig.policy",
            "type": "Array",
            "label": "policy",
            "description": [
              "\nA set of policies describing which external urls are allowed."
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 22
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IExternalUrlPolicy",
                "text": "IExternalUrlPolicy"
              },
              "[]"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/external_url/external_url_config.ts",
          "lineNumber": 18
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IExternalUrlPolicy",
        "type": "Interface",
        "label": "IExternalUrlPolicy",
        "description": [
          "\nA policy describing whether access to an external destination is allowed."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IExternalUrlPolicy.allow",
            "type": "boolean",
            "label": "allow",
            "description": [
              "\nIndicates if this policy allows or denies access to the described destination."
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 33
            }
          },
          {
            "tags": [],
            "id": "def-server.IExternalUrlPolicy.host",
            "type": "string",
            "label": "host",
            "description": [
              "\nOptional host describing the external destination.\nMay be combined with `protocol`.\n"
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 46
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IExternalUrlPolicy.protocol",
            "type": "string",
            "label": "protocol",
            "description": [
              "\nOptional protocol describing the external destination.\nMay be combined with `host`.\n"
            ],
            "source": {
              "path": "src/core/server/external_url/external_url_config.ts",
              "lineNumber": 59
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/external_url/external_url_config.ts",
          "lineNumber": 29
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ImageValidation",
        "type": "Interface",
        "label": "ImageValidation",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ImageValidation.maxSize",
            "type": "Object",
            "label": "maxSize",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 132
            },
            "signature": [
              "{ length: number; description: string; }"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 131
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IndexSettingsDeprecationInfo",
        "type": "Interface",
        "label": "IndexSettingsDeprecationInfo",
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "id": "def-server.IndexSettingsDeprecationInfo.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 370
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 369
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IRenderOptions",
        "type": "Interface",
        "label": "IRenderOptions",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IRenderOptions.includeUserSettings",
            "type": "CompoundType",
            "label": "includeUserSettings",
            "description": [
              "\nSet whether to output user settings in the page metadata.\n`true` by default."
            ],
            "source": {
              "path": "src/core/server/rendering/types.ts",
              "lineNumber": 73
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/rendering/types.ts",
          "lineNumber": 68
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IScopedClusterClient",
        "type": "Interface",
        "label": "IScopedClusterClient",
        "description": [
          "\nServes the same purpose as the normal {@link IClusterClient | cluster client} but exposes\nan additional `asCurrentUser` method that doesn't use credentials of the Kibana internal\nuser (as `asInternalUser` does) to request Elasticsearch API, but rather passes HTTP headers\nextracted from the current user request to the API instead.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IScopedClusterClient.asInternalUser",
            "type": "CompoundType",
            "label": "asInternalUser",
            "description": [
              "\nA {@link ElasticsearchClient | client} to be used to query the elasticsearch cluster\non behalf of the internal Kibana user."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/client/scoped_cluster_client.ts",
              "lineNumber": 24
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.IScopedClusterClient.asCurrentUser",
            "type": "CompoundType",
            "label": "asCurrentUser",
            "description": [
              "\nA {@link ElasticsearchClient | client} to be used to query the elasticsearch cluster\non behalf of the user that initiated the request to the Kibana server."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/client/scoped_cluster_client.ts",
              "lineNumber": 29
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/scoped_cluster_client.ts",
          "lineNumber": 19
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.IUiSettingsClient",
        "type": "Interface",
        "label": "IUiSettingsClient",
        "description": [
          "\nServer-side client that provides access to the advanced settings stored in elasticsearch.\nThe settings provide control over the behavior of the Kibana application.\nFor example, a user can specify how to display numeric or date fields.\nUsers can adjust the settings via Management UI.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.getRegistered",
            "type": "Function",
            "label": "getRegistered",
            "description": [
              "\nReturns registered uiSettings values {@link UiSettingsParams}"
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 35
            },
            "signature": [
              "() => Readonly<Record<string, Pick<",
              "UiSettingsParams",
              "<unknown>, \"type\" | \"options\" | \"description\" | \"name\" | \"order\" | \"value\" | \"category\" | \"metric\" | \"validation\" | \"optionLabels\" | \"requiresPageReload\" | \"readonly\" | \"sensitive\" | \"deprecation\">>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.get",
            "type": "Function",
            "label": "get",
            "description": [
              "\nRetrieves uiSettings values set by the user with fallbacks to default values if not specified."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 39
            },
            "signature": [
              "<T = any>(key: string) => Promise<T>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.getAll",
            "type": "Function",
            "label": "getAll",
            "description": [
              "\nRetrieves a set of all uiSettings values set by the user with fallbacks to default values if not specified."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 43
            },
            "signature": [
              "<T = any>() => Promise<Record<string, T>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.getUserProvided",
            "type": "Function",
            "label": "getUserProvided",
            "description": [
              "\nRetrieves a set of all uiSettings values set by the user."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 47
            },
            "signature": [
              "<T = any>() => Promise<Record<string, ",
              "UserProvidedValues",
              "<T>>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.setMany",
            "type": "Function",
            "label": "setMany",
            "description": [
              "\nWrites multiple uiSettings values and marks them as set by the user."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 51
            },
            "signature": [
              "(changes: Record<string, any>) => Promise<void>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.set",
            "type": "Function",
            "label": "set",
            "description": [
              "\nWrites uiSettings value and marks it as set by the user."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 55
            },
            "signature": [
              "(key: string, value: any) => Promise<void>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.remove",
            "type": "Function",
            "label": "remove",
            "description": [
              "\nRemoves uiSettings value by key."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 59
            },
            "signature": [
              "(key: string) => Promise<void>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.removeMany",
            "type": "Function",
            "label": "removeMany",
            "description": [
              "\nRemoves multiple uiSettings values by keys."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 63
            },
            "signature": [
              "(keys: string[]) => Promise<void>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.isOverridden",
            "type": "Function",
            "label": "isOverridden",
            "description": [
              "\nShows whether the uiSettings value set by the user."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 67
            },
            "signature": [
              "(key: string) => boolean"
            ]
          },
          {
            "tags": [],
            "id": "def-server.IUiSettingsClient.isSensitive",
            "type": "Function",
            "label": "isSensitive",
            "description": [
              "\nShows whether the uiSetting is a sensitive value. Used by telemetry to not send sensitive values."
            ],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 71
            },
            "signature": [
              "(key: string) => boolean"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/ui_settings/types.ts",
          "lineNumber": 31
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyAPICaller",
        "type": "Interface",
        "label": "LegacyAPICaller",
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 164
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 165
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 166
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 167
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 168
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 169
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 170
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 171
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 172
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 173
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 174
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 176
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 177
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 178
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 179
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 181
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 182
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 184
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 185
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 186
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 187
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 188
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 189
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 190
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 191
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 192
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 193
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 195
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 196
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 197
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 198
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 199
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 200
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 201
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 202
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 205
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 206
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 207
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 208
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 209
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 210
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 211
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 212
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 213
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 214
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 215
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 216
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 217
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 218
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 219
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 220
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 221
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 222
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 223
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 226
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 227
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 228
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 229
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 230
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 231
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 232
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 233
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 236
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 237
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 238
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 239
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 240
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 241
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 242
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 243
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 244
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 245
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 246
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 247
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 248
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 249
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 250
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 251
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 252
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 253
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 254
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 255
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 256
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 257
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 258
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 259
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 260
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 261
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 262
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 263
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 264
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 265
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 266
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 267
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 268
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 269
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 270
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 271
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 274
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 275
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 276
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 277
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 280
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 281
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 282
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 285
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 286
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 287
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 288
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 289
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 290
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 291
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 292
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 293
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 296
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 297
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 298
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 301
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 304
            },
            "signature": [
              "any"
            ]
          },
          {
            "id": "def-server.LegacyAPICaller.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 309
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 162
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyCallAPIOptions",
        "type": "Interface",
        "label": "LegacyCallAPIOptions",
        "description": [
          "\nThe set of options that defines how API call should be made and result be\nprocessed.\n"
        ],
        "tags": [
          "public",
          "deprecated"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LegacyCallAPIOptions.wrap401Errors",
            "type": "CompoundType",
            "label": "wrap401Errors",
            "description": [
              "\nIndicates whether `401 Unauthorized` errors returned from the Elasticsearch API\nshould be wrapped into `Boom` error instances with properly set `WWW-Authenticate`\nheader that could have been returned by the API itself. If API didn't specify that\nthen `Basic realm=\"Authorization Required\"` is used as `WWW-Authenticate`."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 151
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.LegacyCallAPIOptions.signal",
            "type": "Object",
            "label": "signal",
            "description": [
              "\nA signal object that allows you to abort the request via an AbortController object."
            ],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/api_types.ts",
              "lineNumber": 155
            },
            "signature": [
              "AbortSignal | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 144
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyElasticsearchError",
        "type": "Interface",
        "label": "LegacyElasticsearchError",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.LegacyElasticsearchError",
            "text": "LegacyElasticsearchError"
          },
          " extends ",
          "Boom",
          "<any>"
        ],
        "description": [],
        "tags": [
          "deprecated",
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LegacyElasticsearchError.code",
            "type": "string",
            "label": "[code]",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/legacy/errors.ts",
              "lineNumber": 23
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/errors.ts",
          "lineNumber": 22
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.Logger",
        "type": "Interface",
        "label": "Logger",
        "signature": [
          "Logger"
        ],
        "description": [
          "\nLogger exposes all the necessary methods to log any type of information and\nthis is the interface used by the logging consumers including plugins.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.Logger.trace",
            "type": "Function",
            "label": "trace",
            "signature": [
              "(message: string, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLog messages at the most detailed log level\n"
            ],
            "children": [
              {
                "id": "def-server.Logger.trace.$1",
                "type": "string",
                "label": "message",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- The log message"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 23
                }
              },
              {
                "id": "def-server.Logger.trace.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 23
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 23
            }
          },
          {
            "id": "def-server.Logger.debug",
            "type": "Function",
            "label": "debug",
            "signature": [
              "(message: string, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLog messages useful for debugging and interactive investigation"
            ],
            "children": [
              {
                "id": "def-server.Logger.debug.$1",
                "type": "string",
                "label": "message",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- The log message"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 29
                }
              },
              {
                "id": "def-server.Logger.debug.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 29
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 29
            }
          },
          {
            "id": "def-server.Logger.info",
            "type": "Function",
            "label": "info",
            "signature": [
              "(message: string, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLogs messages related to general application flow"
            ],
            "children": [
              {
                "id": "def-server.Logger.info.$1",
                "type": "string",
                "label": "message",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- The log message"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 35
                }
              },
              {
                "id": "def-server.Logger.info.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 35
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 35
            }
          },
          {
            "id": "def-server.Logger.warn",
            "type": "Function",
            "label": "warn",
            "signature": [
              "(errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLogs abnormal or unexpected errors or messages"
            ],
            "children": [
              {
                "id": "def-server.Logger.warn.$1",
                "type": "CompoundType",
                "label": "errorOrMessage",
                "isRequired": true,
                "signature": [
                  "string | Error"
                ],
                "description": [
                  "- An Error object or message string to log"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 41
                }
              },
              {
                "id": "def-server.Logger.warn.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 41
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 41
            }
          },
          {
            "id": "def-server.Logger.error",
            "type": "Function",
            "label": "error",
            "signature": [
              "(errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLogs abnormal or unexpected errors or messages that caused a failure in the application flow\n"
            ],
            "children": [
              {
                "id": "def-server.Logger.error.$1",
                "type": "CompoundType",
                "label": "errorOrMessage",
                "isRequired": true,
                "signature": [
                  "string | Error"
                ],
                "description": [
                  "- An Error object or message string to log"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 48
                }
              },
              {
                "id": "def-server.Logger.error.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 48
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 48
            }
          },
          {
            "id": "def-server.Logger.fatal",
            "type": "Function",
            "label": "fatal",
            "signature": [
              "(errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined) => void"
            ],
            "description": [
              "\nLogs abnormal or unexpected errors or messages that caused an unrecoverable failure\n"
            ],
            "children": [
              {
                "id": "def-server.Logger.fatal.$1",
                "type": "CompoundType",
                "label": "errorOrMessage",
                "isRequired": true,
                "signature": [
                  "string | Error"
                ],
                "description": [
                  "- An Error object or message string to log"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 55
                }
              },
              {
                "id": "def-server.Logger.fatal.$2",
                "type": "Object",
                "label": "meta",
                "isRequired": false,
                "signature": [
                  "LogMeta",
                  " | undefined"
                ],
                "description": [
                  "-"
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 55
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 55
            }
          },
          {
            "id": "def-server.Logger.get",
            "type": "Function",
            "label": "get",
            "signature": [
              "(...childContextPaths: string[]) => ",
              "Logger"
            ],
            "description": [
              "\nReturns a new {@link Logger} instance extending the current logger context.\n"
            ],
            "children": [
              {
                "id": "def-server.Logger.get.$1",
                "type": "Array",
                "label": "childContextPaths",
                "isRequired": true,
                "signature": [
                  "string[]"
                ],
                "description": [],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger.d.ts",
                  "lineNumber": 67
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 67
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/logging/target/logger.d.ts",
          "lineNumber": 16
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LoggerContextConfigInput",
        "type": "Interface",
        "label": "LoggerContextConfigInput",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LoggerContextConfigInput.appenders",
            "type": "CompoundType",
            "label": "appenders",
            "description": [],
            "source": {
              "path": "src/core/server/logging/logging_config.ts",
              "lineNumber": 113
            },
            "signature": [
              "Record<string, ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.AppenderConfigType",
                "text": "AppenderConfigType"
              },
              "> | Map<string, ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.AppenderConfigType",
                "text": "AppenderConfigType"
              },
              "> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.LoggerContextConfigInput.loggers",
            "type": "Array",
            "label": "loggers",
            "description": [],
            "source": {
              "path": "src/core/server/logging/logging_config.ts",
              "lineNumber": 114
            },
            "signature": [
              "Readonly<{} & { name: string; level: ",
              "LogLevelId",
              "; appenders: string[]; }>[] | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/logging/logging_config.ts",
          "lineNumber": 111
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LoggerFactory",
        "type": "Interface",
        "label": "LoggerFactory",
        "signature": [
          "LoggerFactory"
        ],
        "description": [
          "\nThe single purpose of `LoggerFactory` interface is to define a way to\nretrieve a context-based logger instance.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.LoggerFactory.get",
            "type": "Function",
            "label": "get",
            "signature": [
              "(...contextParts: string[]) => ",
              "Logger"
            ],
            "description": [
              "\nReturns a `Logger` instance for the specified context.\n"
            ],
            "children": [
              {
                "id": "def-server.LoggerFactory.get.$1",
                "type": "Array",
                "label": "contextParts",
                "isRequired": true,
                "signature": [
                  "string[]"
                ],
                "description": [
                  "- Parts of the context to return logger for. For example\nget('plugins', 'pid') will return a logger for the `plugins.pid` context."
                ],
                "source": {
                  "path": "node_modules/@kbn/logging/target/logger_factory.d.ts",
                  "lineNumber": 15
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger_factory.d.ts",
              "lineNumber": 15
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/logging/target/logger_factory.d.ts",
          "lineNumber": 8
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LoggingServiceSetup",
        "type": "Interface",
        "label": "LoggingServiceSetup",
        "description": [
          "\nProvides APIs to plugins for customizing the plugin's logger."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.LoggingServiceSetup.configure",
            "type": "Function",
            "label": "configure",
            "signature": [
              "(config$: ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.LoggerContextConfigInput",
                "text": "LoggerContextConfigInput"
              },
              ">) => void"
            ],
            "description": [
              "\nCustomizes the logging config for the plugin's context.\n"
            ],
            "children": [
              {
                "id": "def-server.LoggingServiceSetup.configure.$1",
                "type": "Object",
                "label": "config$",
                "isRequired": true,
                "signature": [
                  "Observable",
                  "<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.LoggerContextConfigInput",
                    "text": "LoggerContextConfigInput"
                  },
                  ">"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/logging/logging_service.ts",
                  "lineNumber": 41
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/logging/logging_service.ts",
              "lineNumber": 41
            }
          }
        ],
        "source": {
          "path": "src/core/server/logging/logging_service.ts",
          "lineNumber": 20
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LogMeta",
        "type": "Interface",
        "label": "LogMeta",
        "signature": [
          "LogMeta"
        ],
        "description": [
          "\nContextual metadata\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.LogMeta.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "node_modules/@kbn/logging/target/logger.d.ts",
              "lineNumber": 8
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "node_modules/@kbn/logging/target/logger.d.ts",
          "lineNumber": 7
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.MetricsServiceSetup",
        "type": "Interface",
        "label": "MetricsServiceSetup",
        "description": [
          "\nAPIs to retrieves metrics gathered and exposed by the core platform.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.MetricsServiceSetup.collectionInterval",
            "type": "number",
            "label": "collectionInterval",
            "description": [
              "Interval metrics are collected in milliseconds"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-server.MetricsServiceSetup.getOpsMetrics$",
            "type": "Function",
            "label": "getOpsMetrics$",
            "description": [
              "\nRetrieve an observable emitting the {@link OpsMetrics} gathered.\nThe observable will emit an initial value during core's `start` phase, and a new value every fixed interval of time,\nbased on the `opts.interval` configuration property.\n"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 33
            },
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.OpsMetrics",
                "text": "OpsMetrics"
              },
              ">"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/metrics/types.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.NodesVersionCompatibility",
        "type": "Interface",
        "label": "NodesVersionCompatibility",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.NodesVersionCompatibility.isCompatible",
            "type": "boolean",
            "label": "isCompatible",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
              "lineNumber": 47
            }
          },
          {
            "tags": [],
            "id": "def-server.NodesVersionCompatibility.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
              "lineNumber": 48
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.NodesVersionCompatibility.incompatibleNodes",
            "type": "Array",
            "label": "incompatibleNodes",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
              "lineNumber": 49
            },
            "signature": [
              "NodeInfo[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.NodesVersionCompatibility.warningNodes",
            "type": "Array",
            "label": "warningNodes",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
              "lineNumber": 50
            },
            "signature": [
              "NodeInfo[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.NodesVersionCompatibility.kibanaVersion",
            "type": "string",
            "label": "kibanaVersion",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
              "lineNumber": 51
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/version_check/ensure_es_version.ts",
          "lineNumber": 46
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.OpsMetrics",
        "type": "Interface",
        "label": "OpsMetrics",
        "description": [
          "\nRegroups metrics gathered by all the collectors.\nThis contains metrics about the os/runtime, the kibana process and the http server.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.OpsMetrics.collected_at",
            "type": "Object",
            "label": "collected_at",
            "description": [
              "Time metrics were recorded at."
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 53
            },
            "signature": [
              "Date"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsMetrics.process",
            "type": "Object",
            "label": "process",
            "description": [
              "Process related metrics"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 55
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.OpsProcessMetrics",
                "text": "OpsProcessMetrics"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsMetrics.os",
            "type": "Object",
            "label": "os",
            "description": [
              "OS related metrics"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 57
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.OpsOsMetrics",
                "text": "OpsOsMetrics"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsMetrics.response_times",
            "type": "Object",
            "label": "response_times",
            "description": [
              "server response time stats"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 59
            },
            "signature": [
              "{ avg_in_millis: number; max_in_millis: number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsMetrics.requests",
            "type": "Object",
            "label": "requests",
            "description": [
              "server requests stats"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 61
            },
            "signature": [
              "{ disconnects: number; total: number; statusCodes: Record<number, number>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsMetrics.concurrent_connections",
            "type": "number",
            "label": "concurrent_connections",
            "description": [
              "number of current concurrent connections to the server"
            ],
            "source": {
              "path": "src/core/server/metrics/types.ts",
              "lineNumber": 63
            }
          }
        ],
        "source": {
          "path": "src/core/server/metrics/types.ts",
          "lineNumber": 51
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.OpsOsMetrics",
        "type": "Interface",
        "label": "OpsOsMetrics",
        "description": [
          "\nOS related metrics"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.platform",
            "type": "CompoundType",
            "label": "platform",
            "description": [
              "The os platform"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 50
            },
            "signature": [
              "NodeJS.Platform"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.platformRelease",
            "type": "string",
            "label": "platformRelease",
            "description": [
              "The os platform release, prefixed by the platform name"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 52
            }
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.distro",
            "type": "string",
            "label": "distro",
            "description": [
              "The os distrib. Only present for linux platforms"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 54
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.distroRelease",
            "type": "string",
            "label": "distroRelease",
            "description": [
              "The os distrib release, prefixed by the os distrib. Only present for linux platforms"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 56
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.load",
            "type": "Object",
            "label": "load",
            "description": [
              "cpu load metrics"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 58
            },
            "signature": [
              "{ '1m': number; '5m': number; '15m': number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.memory",
            "type": "Object",
            "label": "memory",
            "description": [
              "system memory usage metrics"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 67
            },
            "signature": [
              "{ total_in_bytes: number; free_in_bytes: number; used_in_bytes: number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.uptime_in_millis",
            "type": "number",
            "label": "uptime_in_millis",
            "description": [
              "the OS uptime"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 76
            }
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.cpuacct",
            "type": "Object",
            "label": "cpuacct",
            "description": [
              "cpu accounting metrics, undefined when not running in a cgroup"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 79
            },
            "signature": [
              "{ control_group: string; usage_nanos: number; } | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsOsMetrics.cpu",
            "type": "Object",
            "label": "cpu",
            "description": [
              "cpu cgroup metrics, undefined when not running in a cgroup"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 87
            },
            "signature": [
              "{ control_group: string; cfs_period_micros: number; cfs_quota_micros: number; stat: { number_of_elapsed_periods: number; number_of_times_throttled: number; time_throttled_nanos: number; }; } | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/metrics/collectors/types.ts",
          "lineNumber": 48
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.OpsProcessMetrics",
        "type": "Interface",
        "label": "OpsProcessMetrics",
        "description": [
          "\nProcess related metrics"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.OpsProcessMetrics.memory",
            "type": "Object",
            "label": "memory",
            "description": [
              "process memory usage"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 23
            },
            "signature": [
              "{ heap: { total_in_bytes: number; used_in_bytes: number; size_limit: number; }; resident_set_size_in_bytes: number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsProcessMetrics.event_loop_delay",
            "type": "number",
            "label": "event_loop_delay",
            "description": [
              "node event loop delay"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 37
            }
          },
          {
            "tags": [],
            "id": "def-server.OpsProcessMetrics.pid",
            "type": "number",
            "label": "pid",
            "description": [
              "pid of the kibana process"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 39
            }
          },
          {
            "tags": [],
            "id": "def-server.OpsProcessMetrics.uptime_in_millis",
            "type": "number",
            "label": "uptime_in_millis",
            "description": [
              "uptime of the kibana process"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 41
            }
          }
        ],
        "source": {
          "path": "src/core/server/metrics/collectors/types.ts",
          "lineNumber": 21
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.OpsServerMetrics",
        "type": "Interface",
        "label": "OpsServerMetrics",
        "description": [
          "\nserver related metrics"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.OpsServerMetrics.response_times",
            "type": "Object",
            "label": "response_times",
            "description": [
              "server response time stats"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 112
            },
            "signature": [
              "{ avg_in_millis: number; max_in_millis: number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsServerMetrics.requests",
            "type": "Object",
            "label": "requests",
            "description": [
              "server requests stats"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 119
            },
            "signature": [
              "{ disconnects: number; total: number; statusCodes: Record<number, number>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.OpsServerMetrics.concurrent_connections",
            "type": "number",
            "label": "concurrent_connections",
            "description": [
              "number of current concurrent connections to the server"
            ],
            "source": {
              "path": "src/core/server/metrics/collectors/types.ts",
              "lineNumber": 128
            }
          }
        ],
        "source": {
          "path": "src/core/server/metrics/collectors/types.ts",
          "lineNumber": 110
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PackageInfo",
        "type": "Interface",
        "label": "PackageInfo",
        "signature": [
          "PackageInfo"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PackageInfo.version",
            "type": "string",
            "label": "version",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 5
            }
          },
          {
            "tags": [],
            "id": "def-server.PackageInfo.branch",
            "type": "string",
            "label": "branch",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 6
            }
          },
          {
            "tags": [],
            "id": "def-server.PackageInfo.buildNum",
            "type": "number",
            "label": "buildNum",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 7
            }
          },
          {
            "tags": [],
            "id": "def-server.PackageInfo.buildSha",
            "type": "string",
            "label": "buildSha",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 8
            }
          },
          {
            "tags": [],
            "id": "def-server.PackageInfo.dist",
            "type": "boolean",
            "label": "dist",
            "description": [],
            "source": {
              "path": "node_modules/@kbn/config/target/types.d.ts",
              "lineNumber": 9
            }
          }
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/types.d.ts",
          "lineNumber": 4
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.Plugin",
        "type": "Interface",
        "label": "Plugin",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "description": [
          "\nThe interface that should be returned by a `PluginInitializer`.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.Plugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<object, unknown>, plugins: TPluginsSetup) => TSetup"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.Plugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<object, unknown>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 255
                }
              },
              {
                "id": "def-server.Plugin.setup.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsSetup"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 255
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 255
            }
          },
          {
            "id": "def-server.Plugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: TPluginsStart) => TStart"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.Plugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 257
                }
              },
              {
                "id": "def-server.Plugin.start.$2",
                "type": "Uncategorized",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "TPluginsStart"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/plugins/types.ts",
                  "lineNumber": 257
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 257
            }
          },
          {
            "id": "def-server.Plugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "(() => void) | undefined"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 259
            }
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 249
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginConfigDescriptor",
        "type": "Interface",
        "label": "PluginConfigDescriptor",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.PluginConfigDescriptor",
            "text": "PluginConfigDescriptor"
          },
          "<T>"
        ],
        "description": [
          "\nDescribes a plugin configuration properties.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PluginConfigDescriptor.deprecations",
            "type": "Function",
            "label": "deprecations",
            "description": [
              "\nProvider for the {@link ConfigDeprecation} to apply to the plugin configuration."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 62
            },
            "signature": [
              "ConfigDeprecationProvider",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginConfigDescriptor.exposeToBrowser",
            "type": "Object",
            "label": "exposeToBrowser",
            "description": [
              "\nList of configuration properties that will be available on the client-side plugin."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 66
            },
            "signature": [
              "{ [P in keyof T]?: boolean | undefined; } | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginConfigDescriptor.schema",
            "type": "Object",
            "label": "schema",
            "description": [
              "\nSchema to use to validate the plugin configuration.\n\n{@link PluginConfigSchema}"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 72
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.PluginConfigSchema",
                "text": "PluginConfigSchema"
              },
              "<T>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 58
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginInitializerContext",
        "type": "Interface",
        "label": "PluginInitializerContext",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.PluginInitializerContext",
            "text": "PluginInitializerContext"
          },
          "<ConfigSchema>"
        ],
        "description": [
          "\nContext that's available to plugins during initialization stage.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PluginInitializerContext.opaqueId",
            "type": "Uncategorized",
            "label": "opaqueId",
            "description": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 305
            },
            "signature": [
              "symbol"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginInitializerContext.env",
            "type": "Object",
            "label": "env",
            "description": [],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 306
            },
            "signature": [
              "{ mode: ",
              "EnvironmentMode",
              "; packageInfo: Readonly<",
              "PackageInfo",
              ">; instanceUuid: string; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginInitializerContext.logger",
            "type": "Object",
            "label": "logger",
            "description": [
              "\n{@link LoggerFactory | logger factory} instance already bound to the plugin's logging context\n"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 329
            },
            "signature": [
              "LoggerFactory"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginInitializerContext.config",
            "type": "Object",
            "label": "config",
            "description": [
              "\nAccessors for the plugin's configuration"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 333
            },
            "signature": [
              "{ legacy: { globalConfig$: ",
              "Observable",
              "<Readonly<{ kibana: Readonly<{ readonly index: string; readonly autocompleteTerminateAfter: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly autocompleteTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; }>; elasticsearch: Readonly<{ readonly shardTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly requestTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly pingTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; }>; path: Readonly<{ readonly data: string; }>; savedObjects: Readonly<{ readonly maxImportPayloadBytes: Readonly<{ isGreaterThan: (other: ",
              "ByteSizeValue",
              ") => boolean; isLessThan: (other: ",
              "ByteSizeValue",
              ") => boolean; isEqualTo: (other: ",
              "ByteSizeValue",
              ") => boolean; getValueInBytes: () => number; toString: (returnUnit?: \"b\" | \"kb\" | \"mb\" | \"gb\" | undefined) => string; }>; }>; }>>; get: () => Readonly<{ kibana: Readonly<{ readonly index: string; readonly autocompleteTerminateAfter: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly autocompleteTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; }>; elasticsearch: Readonly<{ readonly shardTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly requestTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; readonly pingTimeout: Readonly<{ clone: () => moment.Duration; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: moment.argThresholdOpts | undefined): string; (argThresholds?: moment.argThresholdOpts | undefined): string; }; abs: () => moment.Duration; as: (units: moment.unitOfTime.Base) => number; get: (units: moment.unitOfTime.Base) => number; milliseconds: () => number; asMilliseconds: () => number; seconds: () => number; asSeconds: () => number; minutes: () => number; asMinutes: () => number; hours: () => number; asHours: () => number; days: () => number; asDays: () => number; weeks: () => number; asWeeks: () => number; months: () => number; asMonths: () => number; years: () => number; asYears: () => number; add: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; subtract: (inp?: moment.DurationInputArg1, unit?: \"year\" | \"years\" | \"y\" | \"month\" | \"months\" | \"M\" | \"week\" | \"weeks\" | \"w\" | \"day\" | \"days\" | \"d\" | \"hour\" | \"hours\" | \"h\" | \"minute\" | \"minutes\" | \"m\" | \"second\" | \"seconds\" | \"s\" | \"millisecond\" | \"milliseconds\" | \"ms\" | \"quarter\" | \"quarters\" | \"Q\" | undefined) => moment.Duration; locale: { (): string; (locale: moment.LocaleSpecifier): moment.Duration; }; localeData: () => moment.Locale; toISOString: () => string; toJSON: () => string; isValid: () => boolean; lang: { (locale: moment.LocaleSpecifier): moment.Moment; (): moment.Locale; }; toIsoString: () => string; }>; }>; path: Readonly<{ readonly data: string; }>; savedObjects: Readonly<{ readonly maxImportPayloadBytes: Readonly<{ isGreaterThan: (other: ",
              "ByteSizeValue"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 304
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginManifest",
        "type": "Interface",
        "label": "PluginManifest",
        "description": [
          "\nDescribes the set of required and optional properties plugin can define in its\nmandatory JSON manifest file.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PluginManifest.id",
            "type": "string",
            "label": "id",
            "description": [
              "\nIdentifier of the plugin. Must be a string in camelCase. Part of a plugin public contract.\nOther plugins leverage it to access plugin API, navigate to the plugin, etc."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 107
            }
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.version",
            "type": "string",
            "label": "version",
            "description": [
              "\nVersion of the plugin."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 112
            }
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.kibanaVersion",
            "type": "string",
            "label": "kibanaVersion",
            "description": [
              "\nThe version of Kibana the plugin is compatible with, defaults to \"version\"."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 117
            }
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.configPath",
            "type": "CompoundType",
            "label": "configPath",
            "description": [
              "\nRoot {@link ConfigPath | configuration path} used by the plugin, defaults\nto \"id\" in snake_case format.\n"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "string | string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.requiredPlugins",
            "type": "Object",
            "label": "requiredPlugins",
            "description": [
              "\nAn optional list of the other plugins that **must be** installed and enabled\nfor this plugin to function properly."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 133
            },
            "signature": [
              "readonly string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.requiredBundles",
            "type": "Object",
            "label": "requiredBundles",
            "description": [
              "\nList of plugin ids that this plugin's UI code imports modules from that are\nnot in `requiredPlugins`.\n"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 145
            },
            "signature": [
              "readonly string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.optionalPlugins",
            "type": "Object",
            "label": "optionalPlugins",
            "description": [
              "\nAn optional list of the other plugins that if installed and enabled **may be**\nleveraged by this plugin for some additional functionality but otherwise are\nnot required for this plugin to work properly."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 152
            },
            "signature": [
              "readonly string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.ui",
            "type": "boolean",
            "label": "ui",
            "description": [
              "\nSpecifies whether plugin includes some client/browser specific functionality\nthat should be included into client bundle via `public/ui_plugin.js` file."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 158
            }
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.server",
            "type": "boolean",
            "label": "server",
            "description": [
              "\nSpecifies whether plugin includes some server-side specific functionality."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 163
            }
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.PluginManifest.extraPublicDirs",
            "type": "Array",
            "label": "extraPublicDirs",
            "description": [
              "\nSpecifies directory names that can be imported by other ui-plugins built\nusing the same instance of the @kbn/optimizer. A temporary measure we plan\nto replace with better mechanisms for sharing static code between plugins"
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 171
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PluginManifest.serviceFolders",
            "type": "Object",
            "label": "serviceFolders",
            "description": [
              "\nOnly used for the automatically generated API documentation. Specifying service\nfolders will cause your plugin API reference to be broken up into sub sections."
            ],
            "source": {
              "path": "src/core/server/plugins/types.ts",
              "lineNumber": 177
            },
            "signature": [
              "readonly string[] | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 102
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.RegisterDeprecationsConfig",
        "type": "Interface",
        "label": "RegisterDeprecationsConfig",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.RegisterDeprecationsConfig.getDeprecations",
            "type": "Function",
            "label": "getDeprecations",
            "description": [],
            "source": {
              "path": "src/core/server/deprecations/types.ts",
              "lineNumber": 57
            },
            "signature": [
              "(context: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.GetDeprecationsContext",
                "text": "GetDeprecationsContext"
              },
              ") => MaybePromise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.DeprecationsDetails",
                "text": "DeprecationsDetails"
              },
              "[]>"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/deprecations/types.ts",
          "lineNumber": 56
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.RequestHandlerContext",
        "type": "Interface",
        "label": "RequestHandlerContext",
        "description": [
          "\nPlugin specific context passed to a route handler.\n\nProvides the following clients and services:\n   - {@link SavedObjectsClient | savedObjects.client} - Saved Objects client\n     which uses the credentials of the incoming request\n   - {@link ISavedObjectTypeRegistry | savedObjects.typeRegistry} - Type registry containing\n     all the registered types.\n   - {@link IScopedClusterClient | elasticsearch.client} - Elasticsearch\n     data client which uses the credentials of the incoming request\n   - {@link LegacyScopedClusterClient | elasticsearch.legacy.client} - The legacy Elasticsearch\n     data client which uses the credentials of the incoming request\n   - {@link IUiSettingsClient | uiSettings.client} - uiSettings client\n     which uses the credentials of the incoming request\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.RequestHandlerContext.core",
            "type": "Object",
            "label": "core",
            "description": [],
            "source": {
              "path": "src/core/server/index.ts",
              "lineNumber": 432
            },
            "signature": [
              "{ savedObjects: { client: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"addToNamespaces\" | \"deleteFromNamespaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">; typeRegistry: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectTypeRegistry",
                "text": "SavedObjectTypeRegistry"
              },
              ", \"getType\" | \"getVisibleTypes\" | \"getAllTypes\" | \"getImportableAndExportableTypes\" | \"isNamespaceAgnostic\" | \"isSingleNamespace\" | \"isMultiNamespace\" | \"isShareable\" | \"isHidden\" | \"getIndex\" | \"isImportableAndExportable\">; getClient: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClientProviderOptions",
                "text": "SavedObjectsClientProviderOptions"
              },
              " | undefined) => Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"addToNamespaces\" | \"deleteFromNamespaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">; getExporter: (client: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              }
            ]
          }
        ],
        "source": {
          "path": "src/core/server/index.ts",
          "lineNumber": 431
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ResolveCapabilitiesOptions",
        "type": "Interface",
        "label": "ResolveCapabilitiesOptions",
        "description": [
          "\nDefines a set of additional options for the `resolveCapabilities` method of {@link CapabilitiesStart}.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ResolveCapabilitiesOptions.useDefaultCapabilities",
            "type": "boolean",
            "label": "useDefaultCapabilities",
            "description": [
              "\nIndicates if capability switchers are supposed to return a default set of capabilities."
            ],
            "source": {
              "path": "src/core/server/capabilities/capabilities_service.ts",
              "lineNumber": 105
            }
          }
        ],
        "source": {
          "path": "src/core/server/capabilities/capabilities_service.ts",
          "lineNumber": 101
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObject",
        "type": "Interface",
        "label": "SavedObject",
        "signature": [
          "SavedObject",
          "<T>"
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.SavedObject.id",
            "type": "string",
            "label": "id",
            "description": [
              "The ID of this Saved Object, guaranteed to be unique for all objects of the same `type`"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 71
            }
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.type",
            "type": "string",
            "label": "type",
            "description": [
              " The type of Saved Object. Each plugin can define it's own custom Saved Object types."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 73
            }
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.version",
            "type": "string",
            "label": "version",
            "description": [
              "An opaque version number which changes on each successful write operation. Can be used for implementing optimistic concurrency control."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 75
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.updated_at",
            "type": "string",
            "label": "updated_at",
            "description": [
              "Timestamp of the last time this document had been updated."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 77
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.error",
            "type": "Object",
            "label": "error",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 78
            },
            "signature": [
              "SavedObjectError",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.attributes",
            "type": "Uncategorized",
            "label": "attributes",
            "description": [
              "{@inheritdoc SavedObjectAttributes}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 80
            },
            "signature": [
              "T"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.references",
            "type": "Array",
            "label": "references",
            "description": [
              "{@inheritdoc SavedObjectReference}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 82
            },
            "signature": [
              "SavedObjectReference",
              "[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.migrationVersion",
            "type": "Object",
            "label": "migrationVersion",
            "description": [
              "{@inheritdoc SavedObjectsMigrationVersion}"
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 84
            },
            "signature": [
              "SavedObjectsMigrationVersion",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.coreMigrationVersion",
            "type": "string",
            "label": "coreMigrationVersion",
            "description": [
              "A semver value that is used when upgrading objects between Kibana versions."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 86
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.namespaces",
            "type": "Array",
            "label": "namespaces",
            "description": [
              "Namespace(s) that this saved object exists in. This attribute is only used for multi-namespace saved object types."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 88
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SavedObject.originId",
            "type": "string",
            "label": "originId",
            "description": [
              "\nThe ID of the saved object this originated from. This is set if this object's `id` was regenerated; that can happen during migration\nfrom a legacy single-namespace type, or during import. It is only set during migration or create operations. This is used during import\nto ensure that ID regeneration is deterministic, so saved objects will be overwritten if they are imported multiple times into a given\nspace."
            ],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 95
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 69
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObjectAttributes",
        "type": "Interface",
        "label": "SavedObjectAttributes",
        "description": [
          "\nThe data for a Saved Object is stored as an object in the `attributes`\nproperty.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.SavedObjectAttributes.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 36
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 35
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObjectReference",
        "type": "Interface",
        "label": "SavedObjectReference",
        "description": [
          "\nA reference to another saved object.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.SavedObjectReference.name",
            "type": "string",
            "label": "name",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 45
            }
          },
          {
            "tags": [],
            "id": "def-server.SavedObjectReference.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 46
            }
          },
          {
            "tags": [],
            "id": "def-server.SavedObjectReference.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 47
            }
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 44
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObjectsMigrationVersion",
        "type": "Interface",
        "label": "SavedObjectsMigrationVersion",
        "description": [
          "\nInformation about the migrations that have been applied to this SavedObject.\nWhen Kibana starts up, KibanaMigrator detects outdated documents and\nmigrates them based on this value. For each migration that has been applied,\nthe plugin's name is used as a key and the latest migration version as the\nvalue.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.SavedObjectsMigrationVersion.Unnamed",
            "type": "Any",
            "label": "Unnamed",
            "tags": [],
            "description": [],
            "source": {
              "path": "src/core/types/saved_objects.ts",
              "lineNumber": 66
            },
            "signature": [
              "any"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 65
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.SearchResponse",
        "type": "Interface",
        "label": "SearchResponse",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.SearchResponse",
            "text": "SearchResponse"
          },
          "<T>"
        ],
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.SearchResponse.took",
            "type": "number",
            "label": "took",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 80
            }
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse.timed_out",
            "type": "boolean",
            "label": "timed_out",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 81
            }
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse._scroll_id",
            "type": "string",
            "label": "_scroll_id",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 82
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse._shards",
            "type": "Object",
            "label": "_shards",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 83
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ShardsResponse",
                "text": "ShardsResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse.hits",
            "type": "Object",
            "label": "hits",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 84
            },
            "signature": [
              "{ total: number; max_score: number; hits: { _index: string; _type: string; _id: string; _score: number; _source: T; _version?: number | undefined; _explanation?: ",
              "Explanation",
              " | undefined; fields?: any; highlight?: any; inner_hits?: any; matched_queries?: string[] | undefined; sort?: unknown[] | undefined; }[]; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse.aggregations",
            "type": "Any",
            "label": "aggregations",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 102
            },
            "signature": [
              "any"
            ]
          },
          {
            "tags": [],
            "id": "def-server.SearchResponse.pit_id",
            "type": "string",
            "label": "pit_id",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 103
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 79
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ServiceStatus",
        "type": "Interface",
        "label": "ServiceStatus",
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ServiceStatus",
            "text": "ServiceStatus"
          },
          "<Meta>"
        ],
        "description": [
          "\nThe current status of a service at a point in time.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ServiceStatus.level",
            "type": "CompoundType",
            "label": "level",
            "description": [
              "\nThe current availability level of the service."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 24
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatusLevel",
                "text": "ServiceStatusLevel"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.ServiceStatus.summary",
            "type": "string",
            "label": "summary",
            "description": [
              "\nA high-level summary of the service status."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 28
            }
          },
          {
            "tags": [],
            "id": "def-server.ServiceStatus.detail",
            "type": "string",
            "label": "detail",
            "description": [
              "\nA more detailed description of the service status."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 32
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ServiceStatus.documentationUrl",
            "type": "string",
            "label": "documentationUrl",
            "description": [
              "\nA URL to open in a new tab about how to resolve or troubleshoot the problem."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 36
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ServiceStatus.meta",
            "type": "Uncategorized",
            "label": "meta",
            "description": [
              "\nAny JSON-serializable data to be included in the HTTP API response. Useful for providing more fine-grained,\nmachine-readable information about the service status. May include status information for underlying features."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 41
            },
            "signature": [
              "Meta | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/status/types.ts",
          "lineNumber": 20
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ShardsInfo",
        "type": "Interface",
        "label": "ShardsInfo",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ShardsInfo.total",
            "type": "number",
            "label": "total",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 62
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsInfo.successful",
            "type": "number",
            "label": "successful",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 63
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsInfo.skipped",
            "type": "number",
            "label": "skipped",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 64
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsInfo.failed",
            "type": "number",
            "label": "failed",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 65
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 61
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ShardsResponse",
        "type": "Interface",
        "label": "ShardsResponse",
        "description": [
          "\nAll response typings are maintained until elasticsearch-js provides them out of the box\nhttps://github.com/elastic/elasticsearch-js/pull/970\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ShardsResponse.total",
            "type": "number",
            "label": "total",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 43
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsResponse.successful",
            "type": "number",
            "label": "successful",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 44
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsResponse.failed",
            "type": "number",
            "label": "failed",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 45
            }
          },
          {
            "tags": [],
            "id": "def-server.ShardsResponse.skipped",
            "type": "number",
            "label": "skipped",
            "description": [],
            "source": {
              "path": "src/core/server/elasticsearch/client/types.ts",
              "lineNumber": 46
            }
          }
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 42
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.StatusServiceSetup",
        "type": "Interface",
        "label": "StatusServiceSetup",
        "description": [
          "\nAPI for accessing status of Core and this plugin's dependencies as well as for customizing this plugin's status.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.StatusServiceSetup.core$",
            "type": "Object",
            "label": "core$",
            "description": [
              "\nCurrent status for all Core services."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 181
            },
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStatus",
                "text": "CoreStatus"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-server.StatusServiceSetup.overall$",
            "type": "Object",
            "label": "overall$",
            "description": [
              "\nOverall system status for all of Kibana.\n"
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 192
            },
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>>"
            ]
          },
          {
            "id": "def-server.StatusServiceSetup.set",
            "type": "Function",
            "label": "set",
            "signature": [
              "(status$: ",
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>>) => void"
            ],
            "description": [
              "\nAllows a plugin to specify a custom status dependent on its own criteria.\nCompletely overrides the default inherited status.\n"
            ],
            "children": [
              {
                "id": "def-server.StatusServiceSetup.set.$1",
                "type": "Object",
                "label": "status$",
                "isRequired": true,
                "signature": [
                  "Observable",
                  "<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.ServiceStatus",
                    "text": "ServiceStatus"
                  },
                  "<unknown>>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/status/types.ts",
                  "lineNumber": 202
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 202
            }
          },
          {
            "tags": [],
            "id": "def-server.StatusServiceSetup.dependencies$",
            "type": "Object",
            "label": "dependencies$",
            "description": [
              "\nCurrent status for all plugins this plugin depends on.\nEach key of the `Record` is a plugin id."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 208
            },
            "signature": [
              "Observable",
              "<Record<string, ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.StatusServiceSetup.derivedStatus$",
            "type": "Object",
            "label": "derivedStatus$",
            "description": [
              "\nThe status of this plugin as derived from its dependencies.\n"
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 220
            },
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ServiceStatus",
                "text": "ServiceStatus"
              },
              "<unknown>>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.StatusServiceSetup.isStatusPageAnonymous",
            "type": "Function",
            "label": "isStatusPageAnonymous",
            "description": [
              "\nWhether or not the status HTTP APIs are available to unauthenticated users when an authentication provider is\npresent."
            ],
            "source": {
              "path": "src/core/server/status/types.ts",
              "lineNumber": 226
            },
            "signature": [
              "() => boolean"
            ]
          }
        ],
        "source": {
          "path": "src/core/server/status/types.ts",
          "lineNumber": 177
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.StringValidationRegex",
        "type": "Interface",
        "label": "StringValidationRegex",
        "description": [
          "\nStringValidation with regex object"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.StringValidationRegex.regex",
            "type": "Object",
            "label": "regex",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 115
            },
            "signature": [
              "RegExp"
            ]
          },
          {
            "tags": [],
            "id": "def-server.StringValidationRegex.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 116
            }
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 114
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.StringValidationRegexString",
        "type": "Interface",
        "label": "StringValidationRegexString",
        "description": [
          "\nStringValidation as regex string"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.StringValidationRegexString.regexString",
            "type": "string",
            "label": "regexString",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 124
            }
          },
          {
            "tags": [],
            "id": "def-server.StringValidationRegexString.message",
            "type": "string",
            "label": "message",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 125
            }
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 123
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.UiSettingsParams",
        "type": "Interface",
        "label": "UiSettingsParams",
        "signature": [
          "UiSettingsParams",
          "<T>"
        ],
        "description": [
          "\nUiSettings parameters defined by the plugins."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.name",
            "type": "string",
            "label": "name",
            "description": [
              "title in the UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 45
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.value",
            "type": "Uncategorized",
            "label": "value",
            "description": [
              "default value to fall back to if a user doesn't provide any"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 47
            },
            "signature": [
              "T | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.description",
            "type": "string",
            "label": "description",
            "description": [
              "description provided to a user in UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 49
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.category",
            "type": "Array",
            "label": "category",
            "description": [
              "used to group the configured setting in the UI"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 51
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.options",
            "type": "Array",
            "label": "options",
            "description": [
              "array of permitted values for this setting"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 53
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.optionLabels",
            "type": "Object",
            "label": "optionLabels",
            "description": [
              "text labels for 'select' type UI element"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 55
            },
            "signature": [
              "Record<string, string> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.requiresPageReload",
            "type": "CompoundType",
            "label": "requiresPageReload",
            "description": [
              "a flag indicating whether new value applying requires page reloading"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 57
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.readonly",
            "type": "CompoundType",
            "label": "readonly",
            "description": [
              "a flag indicating that value cannot be changed"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 59
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.sensitive",
            "type": "CompoundType",
            "label": "sensitive",
            "description": [
              "\na flag indicating that value might contain user sensitive data.\nused by telemetry to mask the value of the setting when sent."
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 64
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "defines a type of UI element {@link UiSettingsType}"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 66
            },
            "signature": [
              "\"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.deprecation",
            "type": "Object",
            "label": "deprecation",
            "description": [
              "optional deprecation information. Used to generate a deprecation warning."
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 68
            },
            "signature": [
              "DeprecationSettings",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.order",
            "type": "number",
            "label": "order",
            "description": [
              "\nindex of the settings within its category (ascending order, smallest will be displayed first).\nUsed for ordering in the UI.\n"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 75
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.validation",
            "type": "CompoundType",
            "label": "validation",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 81
            },
            "signature": [
              "ImageValidation",
              " | ",
              "StringValidationRegex",
              " | ",
              "StringValidationRegexString",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UiSettingsParams.schema",
            "type": "Object",
            "label": "schema",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 86
            },
            "signature": [
              "Type",
              "<T>"
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.UiSettingsParams.metric",
            "type": "Object",
            "label": "metric",
            "description": [
              "\nMetric to track once this property changes"
            ],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 92
            },
            "signature": [
              "{ type: ",
              "UiCounterMetricType",
              "; name: string; } | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 43
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.UiSettingsServiceSetup",
        "type": "Interface",
        "label": "UiSettingsServiceSetup",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.UiSettingsServiceSetup.register",
            "type": "Function",
            "label": "register",
            "signature": [
              "(settings: Record<string, ",
              "UiSettingsParams",
              "<unknown>>) => void"
            ],
            "description": [
              "\nSets settings with default values for the uiSettings."
            ],
            "children": [
              {
                "id": "def-server.UiSettingsServiceSetup.register.$1",
                "type": "Object",
                "label": "settings",
                "isRequired": true,
                "signature": [
                  "Record<string, ",
                  "UiSettingsParams",
                  "<unknown>>"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/ui_settings/types.ts",
                  "lineNumber": 102
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 102
            }
          }
        ],
        "source": {
          "path": "src/core/server/ui_settings/types.ts",
          "lineNumber": 84
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.UiSettingsServiceStart",
        "type": "Interface",
        "label": "UiSettingsServiceStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.UiSettingsServiceStart.asScopedToClient",
            "type": "Function",
            "label": "asScopedToClient",
            "signature": [
              "(savedObjectsClient: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"addToNamespaces\" | \"deleteFromNamespaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">) => ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.IUiSettingsClient",
                "text": "IUiSettingsClient"
              }
            ],
            "description": [
              "\nCreates a {@link IUiSettingsClient} with provided *scoped* saved objects client.\n\nThis should only be used in the specific case where the client needs to be accessed\nfrom outside of the scope of a {@link RequestHandler}.\n"
            ],
            "children": [
              {
                "id": "def-server.UiSettingsServiceStart.asScopedToClient.$1",
                "type": "Object",
                "label": "savedObjectsClient",
                "isRequired": true,
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsClient",
                    "text": "SavedObjectsClient"
                  },
                  ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"addToNamespaces\" | \"deleteFromNamespaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">"
                ],
                "description": [],
                "source": {
                  "path": "src/core/server/ui_settings/types.ts",
                  "lineNumber": 121
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/core/server/ui_settings/types.ts",
              "lineNumber": 121
            }
          }
        ],
        "source": {
          "path": "src/core/server/ui_settings/types.ts",
          "lineNumber": 106
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.UserProvidedValues",
        "type": "Interface",
        "label": "UserProvidedValues",
        "signature": [
          "UserProvidedValues",
          "<T>"
        ],
        "description": [
          "\nDescribes the values explicitly set by user."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.UserProvidedValues.userValue",
            "type": "Uncategorized",
            "label": "userValue",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 143
            },
            "signature": [
              "T | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UserProvidedValues.isOverridden",
            "type": "CompoundType",
            "label": "isOverridden",
            "description": [],
            "source": {
              "path": "src/core/types/ui_settings.ts",
              "lineNumber": 144
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 142
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "id": "def-server.AddConfigDeprecation",
        "type": "Type",
        "label": "AddConfigDeprecation",
        "tags": [
          "public"
        ],
        "description": [
          "\nConfig deprecation hook used when invoking a {@link ConfigDeprecation}\n"
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
          "lineNumber": 6
        },
        "signature": [
          "(details: ",
          "DeprecatedConfigDetails",
          ") => void"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.AppenderConfigType",
        "type": "Type",
        "label": "AppenderConfigType",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/logging/appenders/appenders.ts",
          "lineNumber": 41
        },
        "signature": [
          "ConsoleAppenderConfig",
          " | ",
          "FileAppenderConfig",
          " | ",
          "LegacyAppenderConfig",
          " | ",
          "RewriteAppenderConfig",
          " | ",
          "RollingFileAppenderConfig"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.CapabilitiesProvider",
        "type": "Type",
        "label": "CapabilitiesProvider",
        "tags": [
          "public"
        ],
        "description": [
          "\nSee {@link CapabilitiesSetup}"
        ],
        "source": {
          "path": "src/core/server/capabilities/types.ts",
          "lineNumber": 18
        },
        "signature": [
          "() => Partial<",
          "Capabilities",
          ">"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.CapabilitiesSwitcher",
        "type": "Type",
        "label": "CapabilitiesSwitcher",
        "tags": [
          "public"
        ],
        "description": [
          "\nSee {@link CapabilitiesSetup}"
        ],
        "source": {
          "path": "src/core/server/capabilities/types.ts",
          "lineNumber": 24
        },
        "signature": [
          "(request: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, uiCapabilities: ",
          "Capabilities",
          ", useDefaultCapabilities: boolean) => Partial<",
          "Capabilities",
          "> | Promise<Partial<",
          "Capabilities",
          ">>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ConfigDeprecation",
        "type": "Type",
        "label": "ConfigDeprecation",
        "tags": [
          "public"
        ],
        "description": [
          "\nConfiguration deprecation returned from {@link ConfigDeprecationProvider} that handles a single deprecation from the configuration.\n"
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
          "lineNumber": 33
        },
        "signature": [
          "(config: Record<string, any>, fromPath: string, addDeprecation: ",
          "AddConfigDeprecation",
          ") => Record<string, any>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ConfigDeprecationProvider",
        "type": "Type",
        "label": "ConfigDeprecationProvider",
        "tags": [
          "public"
        ],
        "description": [
          "\nA provider that should returns a list of {@link ConfigDeprecation}.\n\nSee {@link ConfigDeprecationFactory} for more usage examples.\n"
        ],
        "source": {
          "path": "node_modules/@kbn/config/target/deprecation/types.d.ts",
          "lineNumber": 50
        },
        "signature": [
          "(factory: ",
          "ConfigDeprecationFactory",
          ") => ",
          "ConfigDeprecation",
          "[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ConfigPath",
        "type": "Type",
        "label": "ConfigPath",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "node_modules/@kbn/config/target/config.d.ts",
          "lineNumber": 2
        },
        "signature": [
          "string | string[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchClient",
        "type": "Type",
        "label": "ElasticsearchClient",
        "tags": [
          "public"
        ],
        "description": [
          "\nClient used to query the elasticsearch cluster.\n"
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/types.ts",
          "lineNumber": 22
        },
        "signature": [
          "Pick<KibanaClient, \"get\" | \"delete\" | \"create\" | \"update\" | \"closePointInTime\" | \"helpers\" | \"count\" | \"index\" | \"search\" | \"security\" | \"transform\" | \"eql\" | \"emit\" | \"on\" | \"once\" | \"off\" | \"asyncSearch\" | \"autoscaling\" | \"bulk\" | \"cat\" | \"ccr\" | \"clearScroll\" | \"cluster\" | \"danglingIndices\" | \"dataFrameTransformDeprecated\" | \"deleteByQuery\" | \"deleteByQueryRethrottle\" | \"deleteScript\" | \"enrich\" | \"exists\" | \"existsSource\" | \"explain\" | \"features\" | \"fieldCaps\" | \"getScript\" | \"getScriptContext\" | \"getScriptLanguages\" | \"getSource\" | \"graph\" | \"ilm\" | \"indices\" | \"info\" | \"ingest\" | \"license\" | \"logstash\" | \"mget\" | \"migration\" | \"ml\" | \"monitoring\" | \"msearch\" | \"msearchTemplate\" | \"mtermvectors\" | \"nodes\" | \"openPointInTime\" | \"ping\" | \"putScript\" | \"rankEval\" | \"reindex\" | \"reindexRethrottle\" | \"renderSearchTemplate\" | \"rollup\" | \"scriptsPainlessExecute\" | \"scroll\" | \"searchShards\" | \"searchTemplate\" | \"searchableSnapshots\" | \"slm\" | \"snapshot\" | \"sql\" | \"ssl\" | \"tasks\" | \"termvectors\" | \"textStructure\" | \"updateByQuery\" | \"updateByQueryRethrottle\" | \"watcher\" | \"xpack\"> & { transport: { request(params: TransportRequestParams, options?: TransportRequestOptions | undefined): TransportRequestPromise<ApiResponse>; }; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ElasticsearchClientConfig",
        "type": "Type",
        "label": "ElasticsearchClientConfig",
        "tags": [
          "public"
        ],
        "description": [
          "\nConfiguration options to be used to create a {@link IClusterClient | cluster client} using the\n{@link ElasticsearchServiceStart.createClient | createClient API}\n"
        ],
        "source": {
          "path": "src/core/server/elasticsearch/client/client_config.ts",
          "lineNumber": 22
        },
        "signature": [
          "Pick<ElasticsearchConfig, \"password\" | \"sniffOnStart\" | \"sniffInterval\" | \"sniffOnConnectionFault\" | \"hosts\" | \"username\" | \"requestHeadersWhitelist\" | \"customHeaders\"> & { pingTimeout?: ElasticsearchConfig['pingTimeout'] | ClientOptions['pingTimeout']; requestTimeout?: ElasticsearchConfig['requestTimeout'] | ClientOptions['requestTimeout']; ssl?: Partial<Pick<Readonly<{ key?: string | undefined; certificate?: string | undefined; certificateAuthorities?: string | string[] | undefined; keyPassphrase?: string | undefined; } & { verificationMode: \"none\" | \"certificate\" | \"full\"; keystore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; truststore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; alwaysPresentCertificate: boolean; }>, \"key\" | \"certificate\" | \"verificationMode\" | \"keyPassphrase\" | \"alwaysPresentCertificate\"> & { certificateAuthorities?: string[] | undefined; }> | undefined; keepAlive?: boolean | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.HandlerContextType",
        "type": "Type",
        "label": "HandlerContextType",
        "tags": [
          "public"
        ],
        "description": [
          "\nExtracts the type of the first argument of a {@link HandlerFunction} to represent the type of the context.\n"
        ],
        "source": {
          "path": "src/core/server/context/container/context.ts",
          "lineNumber": 49
        },
        "signature": [
          "T extends HandlerFunction<infer U> ? U : never"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.HandlerFunction",
        "type": "Type",
        "label": "HandlerFunction",
        "tags": [
          "public"
        ],
        "description": [
          "\nA function that accepts a context object and an optional number of additional arguments. Used for the generic types\nin {@link IContextContainer}\n"
        ],
        "source": {
          "path": "src/core/server/context/container/context.ts",
          "lineNumber": 42
        },
        "signature": [
          "(context: T, args: any[]) => any"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.HandlerParameters",
        "type": "Type",
        "label": "HandlerParameters",
        "tags": [
          "public"
        ],
        "description": [
          "\nExtracts the types of the additional arguments of a {@link HandlerFunction}, excluding the\n{@link HandlerContextType}.\n"
        ],
        "source": {
          "path": "src/core/server/context/container/context.ts",
          "lineNumber": 59
        },
        "signature": [
          "T extends (context: any, ...args: infer U) => any ? U : never"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.HttpResourcesRequestHandler",
        "type": "Type",
        "label": "HttpResourcesRequestHandler",
        "tags": [
          "libk",
          "public"
        ],
        "description": [
          "\nExtended version of {@link RequestHandler} having access to {@link HttpResourcesServiceToolkit}\nto respond with HTML or JS resources."
        ],
        "source": {
          "path": "src/core/server/http_resources/types.ts",
          "lineNumber": 76
        },
        "signature": [
          "(context: Context, request: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<P, Q, B, \"get\">, response: { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
          "Stream",
          " | undefined>(options: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>) => ",
          "KibanaResponse",
          "<T>; badRequest: (options?: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.ErrorHttpResponseOptions",
            "text": "ErrorHttpResponseOptions"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.HttpResourcesResponseOptions",
        "type": "Type",
        "label": "HttpResourcesResponseOptions",
        "tags": [
          "public"
        ],
        "description": [
          "\nHTTP Resources response parameters"
        ],
        "source": {
          "path": "src/core/server/http_resources/types.ts",
          "lineNumber": 37
        },
        "signature": [
          "HttpResponseOptions"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.IContextProvider",
        "type": "Type",
        "label": "IContextProvider",
        "tags": [
          "public"
        ],
        "description": [
          "\nA function that returns a context value for a specific key of given context type.\n"
        ],
        "source": {
          "path": "src/core/server/context/container/context.ts",
          "lineNumber": 27
        },
        "signature": [
          "(context: Pick<Context, Exclude<keyof Context, ContextName>>, rest: [request: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
          "Stream",
          " | undefined>(options: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>) => ",
          "KibanaResponse",
          "<T>; badRequest: (options?: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.ErrorHttpResponseOptions",
            "text": "ErrorHttpResponseOptions"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ILegacyClusterClient",
        "type": "Type",
        "label": "ILegacyClusterClient",
        "tags": [
          "deprecated",
          "public"
        ],
        "description": [
          "\nRepresents an Elasticsearch cluster API client created by the platform.\nIt allows to call API on behalf of the internal Kibana user and\nthe actual user that is derived from the request headers (via `asScoped(...)`).\n\nSee {@link LegacyClusterClient}.\n"
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
          "lineNumber": 83
        },
        "signature": [
          "{ callAsInternalUser: LegacyAPICaller; asScoped: (request?: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any> | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.LegacyRequest",
            "text": "LegacyRequest"
          },
          " | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.FakeRequest",
            "text": "FakeRequest"
          },
          " | undefined) => Pick<LegacyScopedClusterClient, \"callAsCurrentUser\" | \"callAsInternalUser\">; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ILegacyCustomClusterClient",
        "type": "Type",
        "label": "ILegacyCustomClusterClient",
        "tags": [
          "deprecated",
          "public"
        ],
        "description": [
          "\nRepresents an Elasticsearch cluster API client created by a plugin.\nIt allows to call API on behalf of the internal Kibana user and\nthe actual user that is derived from the request headers (via `asScoped(...)`).\n\nSee {@link LegacyClusterClient}."
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/cluster_client.ts",
          "lineNumber": 94
        },
        "signature": [
          "{ close: () => void; callAsInternalUser: LegacyAPICaller; asScoped: (request?: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any> | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.LegacyRequest",
            "text": "LegacyRequest"
          },
          " | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.FakeRequest",
            "text": "FakeRequest"
          },
          " | undefined) => Pick<LegacyScopedClusterClient, \"callAsCurrentUser\" | \"callAsInternalUser\">; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ILegacyScopedClusterClient",
        "type": "Type",
        "label": "ILegacyScopedClusterClient",
        "tags": [
          "deprecated",
          "public"
        ],
        "description": [
          "\nServes the same purpose as \"normal\" `ClusterClient` but exposes additional\n`callAsCurrentUser` method that doesn't use credentials of the Kibana internal\nuser (as `callAsInternalUser` does) to request Elasticsearch API, but rather\npasses HTTP headers extracted from the current user request to the API.\n\nSee {@link LegacyScopedClusterClient}.\n"
        ],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/scoped_cluster_client.ts",
          "lineNumber": 24
        },
        "signature": [
          "{ callAsCurrentUser: (endpoint: string, clientParams?: Record<string, any>, options?: LegacyCallAPIOptions | undefined) => Promise<any>; callAsInternalUser: (endpoint: string, clientParams?: Record<string, any>, options?: LegacyCallAPIOptions | undefined) => Promise<any>; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.LegacyElasticsearchClientConfig",
        "type": "Type",
        "label": "LegacyElasticsearchClientConfig",
        "tags": [
          "privateRemarks",
          "deprecated",
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/elasticsearch_client_config.ts",
          "lineNumber": 27
        },
        "signature": [
          "Pick<ConfigOptions, \"plugins\" | \"log\" | \"keepAlive\"> & Pick<ElasticsearchConfig, \"password\" | \"sniffOnStart\" | \"sniffOnConnectionFault\" | \"hosts\" | \"username\" | \"requestHeadersWhitelist\" | \"customHeaders\" | \"apiVersion\"> & { pingTimeout?: ElasticsearchConfig['pingTimeout'] | ConfigOptions['pingTimeout']; requestTimeout?: ElasticsearchConfig['requestTimeout'] | ConfigOptions['requestTimeout']; sniffInterval?: ElasticsearchConfig['sniffInterval'] | ConfigOptions['sniffInterval']; ssl?: Partial<Pick<Readonly<{ key?: string | undefined; certificate?: string | undefined; certificateAuthorities?: string | string[] | undefined; keyPassphrase?: string | undefined; } & { verificationMode: \"none\" | \"certificate\" | \"full\"; keystore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; truststore: Readonly<{ path?: string | undefined; password?: string | undefined; } & {}>; alwaysPresentCertificate: boolean; }>, \"key\" | \"certificate\" | \"verificationMode\" | \"keyPassphrase\" | \"alwaysPresentCertificate\"> & { certificateAuthorities?: string[] | undefined; }> | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.LoggerConfigType",
        "type": "Type",
        "label": "LoggerConfigType",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/logging/logging_config.ts",
          "lineNumber": 60
        },
        "signature": [
          "{ readonly name: string; readonly level: ",
          "LogLevelId",
          "; readonly appenders: string[]; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.MetricsServiceStart",
        "type": "Type",
        "label": "MetricsServiceStart",
        "tags": [
          "public"
        ],
        "description": [
          "\n{@inheritdoc MetricsServiceSetup}\n"
        ],
        "source": {
          "path": "src/core/server/metrics/types.ts",
          "lineNumber": 40
        },
        "signature": [
          "MetricsServiceSetup"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.MIGRATION_ASSISTANCE_INDEX_ACTION",
        "type": "Type",
        "label": "MIGRATION_ASSISTANCE_INDEX_ACTION",
        "tags": [
          "deprecated",
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 326
        },
        "signature": [
          "\"upgrade\" | \"reindex\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.MIGRATION_DEPRECATION_LEVEL",
        "type": "Type",
        "label": "MIGRATION_DEPRECATION_LEVEL",
        "tags": [
          "deprecated",
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/elasticsearch/legacy/api_types.ts",
          "lineNumber": 331
        },
        "signature": [
          "\"warning\" | \"none\" | \"info\" | \"critical\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginConfigSchema",
        "type": "Type",
        "label": "PluginConfigSchema",
        "tags": [
          "public"
        ],
        "description": [
          "\nDedicated type for plugin configuration schema.\n"
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 26
        },
        "signature": [
          "Type<T>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginInitializer",
        "type": "Type",
        "label": "PluginInitializer",
        "tags": [
          "public"
        ],
        "description": [
          "\nThe `plugin` export at the root of a plugin's `server` directory should conform\nto this interface.\n"
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 411
        },
        "signature": [
          "(core: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.PluginInitializerContext",
            "text": "PluginInitializerContext"
          },
          "<unknown>) => ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart> | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.AsyncPlugin",
            "text": "AsyncPlugin"
          },
          "<TSetup, TStart, TPluginsSetup, TPluginsStart>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginName",
        "type": "Type",
        "label": "PluginName",
        "tags": [
          "public"
        ],
        "description": [
          "\nDedicated type for plugin name/id that is supposed to make Map/Set/Arrays\nthat use it as a key or value more obvious.\n"
        ],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 81
        },
        "signature": [
          "string"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PluginOpaqueId",
        "type": "Type",
        "label": "PluginOpaqueId",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 84
        },
        "signature": [
          "symbol"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PublicUiSettingsParams",
        "type": "Type",
        "label": "PublicUiSettingsParams",
        "tags": [
          "public"
        ],
        "description": [
          "\nA sub-set of {@link UiSettingsParams} exposed to the client-side."
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 102
        },
        "signature": [
          "{ type?: \"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\" | undefined; options?: string[] | undefined; description?: string | undefined; name?: string | undefined; order?: number | undefined; value?: unknown; category?: string[] | undefined; metric?: { type: UiCounterMetricType; name: string; } | undefined; validation?: ImageValidation | StringValidationRegex | StringValidationRegexString | undefined; optionLabels?: Record<string, string> | undefined; requiresPageReload?: boolean | undefined; readonly?: boolean | undefined; sensitive?: boolean | undefined; deprecation?: DeprecationSettings | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObjectAttribute",
        "type": "Type",
        "label": "SavedObjectAttribute",
        "tags": [
          "public"
        ],
        "description": [
          "\nType definition for a Saved Object attribute value\n"
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 27
        },
        "signature": [
          "undefined | null | string | number | false | true | ",
          "SavedObjectAttributes",
          " | ",
          "SavedObjectAttributeSingle",
          "[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.SavedObjectAttributeSingle",
        "type": "Type",
        "label": "SavedObjectAttributeSingle",
        "tags": [
          "public"
        ],
        "description": [
          "\nDon't use this type, it's simply a helper type for {@link SavedObjectAttribute}\n"
        ],
        "source": {
          "path": "src/core/types/saved_objects.ts",
          "lineNumber": 14
        },
        "signature": [
          "undefined | null | string | number | false | true | ",
          "SavedObjectAttributes"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ScopeableRequest",
        "type": "Type",
        "label": "ScopeableRequest",
        "tags": [
          "public"
        ],
        "description": [
          "\n A user credentials container.\nIt accommodates the necessary auth credentials to impersonate the current user.\n"
        ],
        "source": {
          "path": "src/core/server/elasticsearch/types.ts",
          "lineNumber": 192
        },
        "signature": [
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any> | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.LegacyRequest",
            "text": "LegacyRequest"
          },
          " | ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.FakeRequest",
            "text": "FakeRequest"
          }
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ServiceStatusLevel",
        "type": "Type",
        "label": "ServiceStatusLevel",
        "tags": [
          "public"
        ],
        "description": [
          "\nA convenience type that represents the union of each value in {@link ServiceStatusLevels}."
        ],
        "source": {
          "path": "src/core/server/status/types.ts",
          "lineNumber": 103
        },
        "signature": [
          "Readonly<{ toString: () => \"available\"; valueOf: () => 0; toJSON: () => \"available\"; }> | Readonly<{ toString: () => \"degraded\"; valueOf: () => 1; toJSON: () => \"degraded\"; }> | Readonly<{ toString: () => \"unavailable\"; valueOf: () => 2; toJSON: () => \"unavailable\"; }> | Readonly<{ toString: () => \"critical\"; valueOf: () => 3; toJSON: () => \"critical\"; }>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.SharedGlobalConfig",
        "type": "Type",
        "label": "SharedGlobalConfig",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "src/core/server/plugins/types.ts",
          "lineNumber": 292
        },
        "signature": [
          "{ readonly kibana: Readonly<{ readonly index: string; readonly autocompleteTerminateAfter: Readonly<{ clone: () => ",
          "Duration",
          "; humanize: { (argWithSuffix?: boolean | undefined, argThresholds?: ",
          "argThresholdOpts",
          " | undefined): string; (argThresholds?: ",
          "argThresholdOpts",
          " | undefined): string; }; abs: () => ",
          "Duration",
          "; as: (units: ",
          "unitOfTime"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.StartServicesAccessor",
        "type": "Type",
        "label": "StartServicesAccessor",
        "tags": [
          "public"
        ],
        "description": [
          "\nAllows plugins to get access to APIs available in start inside async handlers.\nPromise will not resolve until Core and plugin dependencies have completed `start`.\nThis should only be used inside handlers registered during `setup` that will only be executed\nafter `start` lifecycle.\n"
        ],
        "source": {
          "path": "src/core/server/index.ts",
          "lineNumber": 502
        },
        "signature": [
          "() => Promise<[",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.CoreStart",
            "text": "CoreStart"
          },
          ", TPluginsStart, TStart]>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.StringValidation",
        "type": "Type",
        "label": "StringValidation",
        "tags": [
          "public"
        ],
        "description": [
          "\nAllows regex objects or a regex string"
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 108
        },
        "signature": [
          "StringValidationRegex",
          " | ",
          "StringValidationRegexString"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.UiSettingsType",
        "type": "Type",
        "label": "UiSettingsType",
        "tags": [
          "public"
        ],
        "description": [
          "\nUI element type to represent the settings."
        ],
        "source": {
          "path": "src/core/types/ui_settings.ts",
          "lineNumber": 16
        },
        "signature": [
          "\"string\" | \"number\" | \"boolean\" | \"undefined\" | \"color\" | \"json\" | \"image\" | \"select\" | \"array\" | \"markdown\""
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "tags": [
          "public"
        ],
        "id": "def-server.ServiceStatusLevels",
        "type": "Object",
        "label": "ServiceStatusLevels",
        "description": [
          "\nThe current \"level\" of availability of a service.\n"
        ],
        "source": {
          "path": "src/core/server/status/types.ts",
          "lineNumber": 56
        },
        "signature": [
          "Readonly<{ available: Readonly<{ toString: () => \"available\"; valueOf: () => 0; toJSON: () => \"available\"; }>; degraded: Readonly<{ toString: () => \"degraded\"; valueOf: () => 1; toJSON: () => \"degraded\"; }>; unavailable: Readonly<{ toString: () => \"unavailable\"; valueOf: () => 2; toJSON: () => \"unavailable\"; }>; critical: Readonly<{ toString: () => \"critical\"; valueOf: () => 3; toJSON: () => \"critical\"; }>; }>"
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}