{
  "id": "@kbn/core-saved-objects-migration-server-internal",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.KibanaMigrator",
        "type": "Class",
        "tags": [],
        "label": "KibanaMigrator",
        "description": [
          "\nManages the shape of mappings and documents in the Kibana index."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-saved-objects-migration-server-internal",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsMigrationServerInternalPluginApi",
            "section": "def-server.KibanaMigrator",
            "text": "KibanaMigrator"
          },
          " implements ",
          "IKibanaMigrator"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.kibanaVersion",
            "type": "string",
            "tags": [],
            "label": "kibanaVersion",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nCreates an instance of KibanaMigrator."
            ],
            "signature": [
              "any"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
                "id": "def-server.KibanaMigrator.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    client,\n    typeRegistry,\n    kibanaIndex,\n    soMigrationsConfig,\n    kibanaVersion,\n    logger,\n    docLinks,\n    waitForMigrationCompletion,\n  }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-migration-server-internal",
                    "scope": "server",
                    "docId": "kibKbnCoreSavedObjectsMigrationServerInternalPluginApi",
                    "section": "def-server.KibanaMigratorOptions",
                    "text": "KibanaMigratorOptions"
                  }
                ],
                "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.runMigrations",
            "type": "Function",
            "tags": [],
            "label": "runMigrations",
            "description": [],
            "signature": [
              "({ rerun }?: { rerun?: boolean | undefined; }) => Promise<",
              "MigrationResult",
              "[]>"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
                "id": "def-server.KibanaMigrator.runMigrations.$1",
                "type": "Object",
                "tags": [],
                "label": "{ rerun = false }",
                "description": [],
                "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
                    "id": "def-server.KibanaMigrator.runMigrations.$1.rerun",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "rerun",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.prepareMigrations",
            "type": "Function",
            "tags": [],
            "label": "prepareMigrations",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.getStatus$",
            "type": "Function",
            "tags": [],
            "label": "getStatus$",
            "description": [],
            "signature": [
              "() => ",
              "Observable",
              "<",
              "KibanaMigratorStatus",
              ">"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.getActiveMappings",
            "type": "Function",
            "tags": [],
            "label": "getActiveMappings",
            "description": [],
            "signature": [
              "() => ",
              "IndexMapping"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigrator.migrateDocument",
            "type": "Function",
            "tags": [],
            "label": "migrateDocument",
            "description": [],
            "signature": [
              "(doc: ",
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectUnsanitizedDoc",
                "text": "SavedObjectUnsanitizedDoc"
              },
              "<unknown>) => ",
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectUnsanitizedDoc",
                "text": "SavedObjectUnsanitizedDoc"
              },
              "<unknown>"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
                "id": "def-server.KibanaMigrator.migrateDocument.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "doc",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-server",
                    "scope": "server",
                    "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                    "section": "def-server.SavedObjectUnsanitizedDoc",
                    "text": "SavedObjectUnsanitizedDoc"
                  },
                  "<unknown>"
                ],
                "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.addExcludedTypesToBoolQuery",
        "type": "Function",
        "tags": [],
        "label": "addExcludedTypesToBoolQuery",
        "description": [
          "\nAdd new must_not clauses to the given query\nin order to filter out the specified types"
        ],
        "signature": [
          "(types: string[], boolQuery: ",
          "QueryDslBoolQuery",
          " | undefined) => ",
          "QueryDslQueryContainer"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/model/helpers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.addExcludedTypesToBoolQuery.$1",
            "type": "Array",
            "tags": [],
            "label": "types",
            "description": [
              "the types to be filtered out"
            ],
            "signature": [
              "string[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/model/helpers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.addExcludedTypesToBoolQuery.$2",
            "type": "Object",
            "tags": [],
            "label": "boolQuery",
            "description": [
              "the bool query to be enriched"
            ],
            "signature": [
              "QueryDslBoolQuery",
              " | undefined"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/model/helpers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "a new query container with the enriched query"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.buildActiveMappings",
        "type": "Function",
        "tags": [],
        "label": "buildActiveMappings",
        "description": [
          "\nCreates an index mapping with the core properties required by saved object\nindices, as well as the specified additional properties.\n"
        ],
        "signature": [
          "(typeDefinitions: ",
          {
            "pluginId": "@kbn/core-saved-objects-server",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsServerPluginApi",
            "section": "def-server.SavedObjectsMappingProperties",
            "text": "SavedObjectsMappingProperties"
          },
          " | ",
          "SavedObjectsTypeMappingDefinitions",
          ") => ",
          "IndexMapping"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/build_active_mappings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.buildActiveMappings.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "typeDefinitions",
            "description": [
              "- the type definitions to build mapping from."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectsMappingProperties",
                "text": "SavedObjectsMappingProperties"
              },
              " | ",
              "SavedObjectsTypeMappingDefinitions"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/build_active_mappings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.bulkOverwriteTransformedDocuments",
        "type": "Function",
        "tags": [],
        "label": "bulkOverwriteTransformedDocuments",
        "description": [
          "\nWrite the up-to-date transformed documents to the index, overwriting any\ndocuments that are still on their outdated version."
        ],
        "signature": [
          "({ client, index, transformedDocs, refresh, }: ",
          "BulkOverwriteTransformedDocumentsParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "TargetIndexHadWriteBlock",
          " | ",
          "IndexNotFound",
          " | ",
          "RequestEntityTooLargeException",
          ", \"bulk_index_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/bulk_overwrite_transformed_documents.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.bulkOverwriteTransformedDocuments.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    index,\n    transformedDocs,\n    refresh = false,\n  }",
            "description": [],
            "signature": [
              "BulkOverwriteTransformedDocumentsParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/bulk_overwrite_transformed_documents.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.calculateExcludeFilters",
        "type": "Function",
        "tags": [],
        "label": "calculateExcludeFilters",
        "description": [],
        "signature": [
          "({ client, excludeFromUpgradeFilterHooks, hookTimeoutMs, }: ",
          "CalculateExcludeFiltersParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "CalculatedExcludeFilter",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/calculate_exclude_filters.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.calculateExcludeFilters.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    excludeFromUpgradeFilterHooks,\n    hookTimeoutMs = 30_000, // default to 30s, exposed for testing\n  }",
            "description": [],
            "signature": [
              "CalculateExcludeFiltersParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/calculate_exclude_filters.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.checkForUnknownDocs",
        "type": "Function",
        "tags": [],
        "label": "checkForUnknownDocs",
        "description": [],
        "signature": [
          "({ client, indexName, excludeOnUpgradeQuery, knownTypes, }: ",
          "CheckForUnknownDocsParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", {} | ",
          "UnknownDocsFound",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/check_for_unknown_docs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.checkForUnknownDocs.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    indexName,\n    excludeOnUpgradeQuery,\n    knownTypes,\n  }",
            "description": [],
            "signature": [
              "CheckForUnknownDocsParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/check_for_unknown_docs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.cloneIndex",
        "type": "Function",
        "tags": [],
        "label": "cloneIndex",
        "description": [
          "\nMakes a clone of the source index into the target.\n"
        ],
        "signature": [
          "({ client, source, target, timeout, }: ",
          "CloneIndexParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotFound",
          " | ",
          "IndexNotGreenTimeout",
          " | ",
          "ClusterShardLimitExceeded",
          ", ",
          "AcknowledgeResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/clone_index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.cloneIndex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  client,\n  source,\n  target,\n  timeout = DEFAULT_TIMEOUT,\n}",
            "description": [],
            "signature": [
              "CloneIndexParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/clone_index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.closePit",
        "type": "Function",
        "tags": [],
        "label": "closePit",
        "description": [],
        "signature": [
          "({ client, pitId }: ",
          "ClosePitParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", {}>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/close_pit.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.closePit.$1",
            "type": "Object",
            "tags": [],
            "label": "{ client, pitId }",
            "description": [],
            "signature": [
              "ClosePitParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/close_pit.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.createIndex",
        "type": "Function",
        "tags": [],
        "label": "createIndex",
        "description": [
          "\nCreates an index with the given mappings\n"
        ],
        "signature": [
          "({ client, indexName, mappings, aliases, timeout, }: ",
          "CreateIndexParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotGreenTimeout",
          " | ",
          "ClusterShardLimitExceeded",
          ", \"create_index_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/create_index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.createIndex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  client,\n  indexName,\n  mappings,\n  aliases = [],\n  timeout = DEFAULT_TIMEOUT,\n}",
            "description": [],
            "signature": [
              "CreateIndexParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/create_index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.fetchIndices",
        "type": "Function",
        "tags": [],
        "label": "fetchIndices",
        "description": [
          "\nFetches information about the given indices including aliases, mappings and\nsettings."
        ],
        "signature": [
          "({ client, indices, }: ",
          "FetchIndicesParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "FetchIndexResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/fetch_indices.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.fetchIndices.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    indices,\n  }",
            "description": [],
            "signature": [
              "FetchIndicesParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/fetch_indices.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.initAction",
        "type": "Function",
        "tags": [],
        "label": "initAction",
        "description": [],
        "signature": [
          "({ client, indices, }: ",
          "InitActionParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IncompatibleClusterRoutingAllocation",
          ", ",
          "FetchIndexResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/initialize_action.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.initAction.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  client,\n  indices,\n}",
            "description": [],
            "signature": [
              "InitActionParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/initialize_action.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.isClusterShardLimitExceeded",
        "type": "Function",
        "tags": [],
        "label": "isClusterShardLimitExceeded",
        "description": [],
        "signature": [
          "(errorCause?: ",
          "ErrorCause",
          " | undefined) => boolean"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.isClusterShardLimitExceeded.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "errorCause",
            "description": [],
            "signature": [
              "ErrorCause",
              " | undefined"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.isIncompatibleMappingException",
        "type": "Function",
        "tags": [],
        "label": "isIncompatibleMappingException",
        "description": [],
        "signature": [
          "(errorCause?: ",
          "ErrorCause",
          " | undefined) => boolean"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.isIncompatibleMappingException.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "errorCause",
            "description": [],
            "signature": [
              "ErrorCause",
              " | undefined"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.isIndexNotFoundException",
        "type": "Function",
        "tags": [],
        "label": "isIndexNotFoundException",
        "description": [],
        "signature": [
          "(errorCause?: ",
          "ErrorCause",
          " | undefined) => boolean"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.isIndexNotFoundException.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "errorCause",
            "description": [],
            "signature": [
              "ErrorCause",
              " | undefined"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.isWriteBlockException",
        "type": "Function",
        "tags": [],
        "label": "isWriteBlockException",
        "description": [],
        "signature": [
          "(errorCause?: ",
          "ErrorCause",
          " | undefined) => boolean"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.isWriteBlockException.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "errorCause",
            "description": [],
            "signature": [
              "ErrorCause",
              " | undefined"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/es_errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.mergeTypes",
        "type": "Function",
        "tags": [],
        "label": "mergeTypes",
        "description": [
          "\nMerges savedObjectMappings properties into a single object, verifying that\nno mappings are redefined."
        ],
        "signature": [
          "(types: ",
          {
            "pluginId": "@kbn/core-saved-objects-server",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsServerPluginApi",
            "section": "def-server.SavedObjectsType",
            "text": "SavedObjectsType"
          },
          "<any>[]) => ",
          "SavedObjectsTypeMappingDefinitions"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.mergeTypes.$1",
            "type": "Array",
            "tags": [],
            "label": "types",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectsType",
                "text": "SavedObjectsType"
              },
              "<any>[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.openPit",
        "type": "Function",
        "tags": [],
        "label": "openPit",
        "description": [],
        "signature": [
          "({ client, index, }: ",
          "OpenPitParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "OpenPitResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/open_pit.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.openPit.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    index,\n  }",
            "description": [],
            "signature": [
              "OpenPitParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/open_pit.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.pickupUpdatedMappings",
        "type": "Function",
        "tags": [],
        "label": "pickupUpdatedMappings",
        "description": [
          "\nPickup updated mappings by performing an update by query operation on all\ndocuments in the index. Returns a task ID which can be\ntracked for progress.\n"
        ],
        "signature": [
          "(client: ",
          {
            "pluginId": "@kbn/core-elasticsearch-server",
            "scope": "server",
            "docId": "kibKbnCoreElasticsearchServerPluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", index: string) => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          {
            "pluginId": "@kbn/core-saved-objects-migration-server-internal",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsMigrationServerInternalPluginApi",
            "section": "def-server.UpdateByQueryResponse",
            "text": "UpdateByQueryResponse"
          },
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/pickup_updated_mappings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.pickupUpdatedMappings.$1",
            "type": "Object",
            "tags": [],
            "label": "client",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-elasticsearch-server",
                "scope": "server",
                "docId": "kibKbnCoreElasticsearchServerPluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/pickup_updated_mappings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.pickupUpdatedMappings.$2",
            "type": "string",
            "tags": [],
            "label": "index",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/pickup_updated_mappings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.readWithPit",
        "type": "Function",
        "tags": [],
        "label": "readWithPit",
        "description": [],
        "signature": [
          "({ client, pitId, query, batchSize, searchAfter, seqNoPrimaryTerm, }: ",
          "ReadWithPitParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "ReadWithPit",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/read_with_pit.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.readWithPit.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    pitId,\n    query,\n    batchSize,\n    searchAfter,\n    seqNoPrimaryTerm,\n  }",
            "description": [],
            "signature": [
              "ReadWithPitParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/read_with_pit.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.refreshIndex",
        "type": "Function",
        "tags": [],
        "label": "refreshIndex",
        "description": [
          "\nWait for Elasticsearch to reindex all the changes."
        ],
        "signature": [
          "({ client, targetIndex, }: ",
          "RefreshIndexParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", { refreshed: boolean; }>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/refresh_index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.refreshIndex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    targetIndex,\n  }",
            "description": [],
            "signature": [
              "RefreshIndexParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/refresh_index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.reindex",
        "type": "Function",
        "tags": [],
        "label": "reindex",
        "description": [
          "\nReindex documents from the `sourceIndex` into the `targetIndex`. Returns a\ntask ID which can be tracked for progress.\n"
        ],
        "signature": [
          "({ client, sourceIndex, targetIndex, reindexScript, requireAlias, excludeOnUpgradeQuery, }: ",
          "ReindexParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "ReindexResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/reindex.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.reindex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    sourceIndex,\n    targetIndex,\n    reindexScript,\n    requireAlias,\n    excludeOnUpgradeQuery,\n  }",
            "description": [],
            "signature": [
              "ReindexParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/reindex.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.removeWriteBlock",
        "type": "Function",
        "tags": [],
        "label": "removeWriteBlock",
        "description": [
          "\nRemoves a write block from an index"
        ],
        "signature": [
          "({ client, index, timeout, }: ",
          "RemoveWriteBlockParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", \"remove_write_block_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/remove_write_block.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.removeWriteBlock.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    index,\n    timeout = DEFAULT_TIMEOUT,\n  }",
            "description": [],
            "signature": [
              "RemoveWriteBlockParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/remove_write_block.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.searchForOutdatedDocuments",
        "type": "Function",
        "tags": [],
        "label": "searchForOutdatedDocuments",
        "description": [
          "\nSearch for outdated saved object documents with the provided query. Will\nreturn one batch of documents. Searching should be repeated until no more\noutdated documents can be found.\n\nUsed for testing only"
        ],
        "signature": [
          "(client: ",
          {
            "pluginId": "@kbn/core-elasticsearch-server",
            "scope": "server",
            "docId": "kibKbnCoreElasticsearchServerPluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", options: ",
          "SearchForOutdatedDocumentsOptions",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "SearchResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/search_for_outdated_documents.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.searchForOutdatedDocuments.$1",
            "type": "Object",
            "tags": [],
            "label": "client",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-elasticsearch-server",
                "scope": "server",
                "docId": "kibKbnCoreElasticsearchServerPluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/search_for_outdated_documents.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.searchForOutdatedDocuments.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "SearchForOutdatedDocumentsOptions"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/search_for_outdated_documents.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.setWriteBlock",
        "type": "Function",
        "tags": [],
        "label": "setWriteBlock",
        "description": [
          "\nSets a write block in place for the given index. If the response includes\n`acknowledged: true` all in-progress writes have drained and no further\nwrites to this index will be possible.\n\nThe first time the write block is added to an index the response will\ninclude `shards_acknowledged: true` but once the block is in place,\nsubsequent calls return `shards_acknowledged: false`"
        ],
        "signature": [
          "({ client, index, timeout, }: ",
          "SetWriteBlockParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotFound",
          ", \"set_write_block_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/set_write_block.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.setWriteBlock.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    index,\n    timeout = DEFAULT_TIMEOUT,\n  }",
            "description": [],
            "signature": [
              "SetWriteBlockParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/set_write_block.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.transformDocs",
        "type": "Function",
        "tags": [],
        "label": "transformDocs",
        "description": [],
        "signature": [
          "({ transformRawDocs, outdatedDocuments, }: ",
          "TransformDocsParams",
          ") => ",
          "TaskEither",
          "<",
          {
            "pluginId": "@kbn/core-saved-objects-migration-server-internal",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsMigrationServerInternalPluginApi",
            "section": "def-server.DocumentsTransformFailed",
            "text": "DocumentsTransformFailed"
          },
          ", ",
          {
            "pluginId": "@kbn/core-saved-objects-migration-server-internal",
            "scope": "server",
            "docId": "kibKbnCoreSavedObjectsMigrationServerInternalPluginApi",
            "section": "def-server.DocumentsTransformSuccess",
            "text": "DocumentsTransformSuccess"
          },
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/transform_docs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.transformDocs.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  transformRawDocs,\n  outdatedDocuments,\n}",
            "description": [],
            "signature": [
              "TransformDocsParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/transform_docs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.updateAliases",
        "type": "Function",
        "tags": [],
        "label": "updateAliases",
        "description": [
          "\nCalls the Update index alias API `_alias` with the provided alias actions."
        ],
        "signature": [
          "({ client, aliasActions, timeout, }: ",
          "UpdateAliasesParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotFound",
          " | ",
          "AliasNotFound",
          " | ",
          "RemoveIndexNotAConcreteIndex",
          ", \"update_aliases_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/update_aliases.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.updateAliases.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    aliasActions,\n    timeout = DEFAULT_TIMEOUT,\n  }",
            "description": [],
            "signature": [
              "UpdateAliasesParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/update_aliases.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.updateAndPickupMappings",
        "type": "Function",
        "tags": [],
        "label": "updateAndPickupMappings",
        "description": [
          "\nUpdates an index's mappings and runs an pickupUpdatedMappings task so that the mapping\nchanges are \"picked up\". Returns a taskId to track progress."
        ],
        "signature": [
          "({ client, index, mappings, }: ",
          "UpdateAndPickupMappingsParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          ", ",
          "UpdateAndPickupMappingsResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/update_and_pickup_mappings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.updateAndPickupMappings.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  client,\n  index,\n  mappings,\n}",
            "description": [],
            "signature": [
              "UpdateAndPickupMappingsParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/update_and_pickup_mappings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForIndexStatus",
        "type": "Function",
        "tags": [],
        "label": "waitForIndexStatus",
        "description": [],
        "signature": [
          "({\n  client,\n  index,\n  timeout,\n  status,\n}: ",
          "WaitForIndexStatusParams",
          " & { status: \"yellow\"; }) => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotYellowTimeout",
          ", {}>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForIndexStatus.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  client,\n  index,\n  timeout,\n  status,\n}",
            "description": [],
            "signature": [
              "WaitForIndexStatusParams",
              " & { status: \"yellow\"; }"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForIndexStatus",
        "type": "Function",
        "tags": [],
        "label": "waitForIndexStatus",
        "description": [],
        "signature": [
          "({\n  client,\n  index,\n  timeout,\n  status,\n}: ",
          "WaitForIndexStatusParams",
          " & { status: \"green\"; }) => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotGreenTimeout",
          ", {}>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForIndexStatus.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  client,\n  index,\n  timeout,\n  status,\n}",
            "description": [],
            "signature": [
              "WaitForIndexStatusParams",
              " & { status: \"green\"; }"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForIndexStatus",
        "type": "Function",
        "tags": [],
        "label": "waitForIndexStatus",
        "description": [
          "\nWait until an index status become either 'yellow' or 'green'.\n\nA yellow index status means the index's primary shard was allocated but ES\nwasn't able to allocate the replica. Thus a yellow index can be searched\nand read from but indexing documents with `wait_for_active_shards='all'`\nwill fail.\n\nA green index status means the index's primary and replica shards has been\nallocated so we can search, read and index documents with\n`wait_for_active_shards='all'`."
        ],
        "signature": [
          "({\n  client,\n  index,\n  timeout = DEFAULT_TIMEOUT,\n  status,\n}: ",
          "WaitForIndexStatusParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "IndexNotGreenTimeout",
          " | ",
          "IndexNotYellowTimeout",
          ", {}>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForIndexStatus.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  client,\n  index,\n  timeout = DEFAULT_TIMEOUT,\n  status,\n}",
            "description": [],
            "signature": [
              "WaitForIndexStatusParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_index_status.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForPickupUpdatedMappingsTask",
        "type": "Function",
        "tags": [],
        "label": "waitForPickupUpdatedMappingsTask",
        "description": [],
        "signature": [
          "(a_0: ",
          "WaitForTaskParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "WaitForTaskCompletionTimeout",
          ", \"pickup_updated_mappings_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_pickup_updated_mappings_task.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForPickupUpdatedMappingsTask.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "a",
            "description": [],
            "signature": [
              "A"
            ],
            "path": "node_modules/fp-ts/lib/function.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForReindexTask",
        "type": "Function",
        "tags": [],
        "label": "waitForReindexTask",
        "description": [],
        "signature": [
          "(a_0: ",
          "WaitForTaskParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "TargetIndexHadWriteBlock",
          " | ",
          "IndexNotFound",
          " | ",
          "WaitForTaskCompletionTimeout",
          " | ",
          "IncompatibleMappingException",
          ", \"reindex_succeeded\">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_reindex_task.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForReindexTask.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "a",
            "description": [],
            "signature": [
              "A"
            ],
            "path": "node_modules/fp-ts/lib/function.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.waitForTask",
        "type": "Function",
        "tags": [],
        "label": "waitForTask",
        "description": [
          "\nBlocks for up to 60s or until a task completes.\n\nTODO: delete completed tasks"
        ],
        "signature": [
          "({ client, taskId, timeout, }: ",
          "WaitForTaskParams",
          ") => ",
          "TaskEither",
          "<",
          "RetryableEsClientError",
          " | ",
          "WaitForTaskCompletionTimeout",
          ", ",
          "WaitForTaskResponse",
          ">"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_task.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.waitForTask.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n    client,\n    taskId,\n    timeout,\n  }",
            "description": [],
            "signature": [
              "WaitForTaskParams"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/wait_for_task.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.DocumentsTransformFailed",
        "type": "Interface",
        "tags": [],
        "label": "DocumentsTransformFailed",
        "description": [],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.DocumentsTransformFailed.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.DocumentsTransformFailed.corruptDocumentIds",
            "type": "Array",
            "tags": [],
            "label": "corruptDocumentIds",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.DocumentsTransformFailed.transformErrors",
            "type": "Array",
            "tags": [],
            "label": "transformErrors",
            "description": [],
            "signature": [
              "TransformErrorObjects",
              "[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.DocumentsTransformFailed.processedDocs",
            "type": "Array",
            "tags": [],
            "label": "processedDocs",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectsRawDoc",
                "text": "SavedObjectsRawDoc"
              },
              "[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.DocumentsTransformSuccess",
        "type": "Interface",
        "tags": [],
        "label": "DocumentsTransformSuccess",
        "description": [],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.DocumentsTransformSuccess.processedDocs",
            "type": "Array",
            "tags": [],
            "label": "processedDocs",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.SavedObjectsRawDoc",
                "text": "SavedObjectsRawDoc"
              },
              "[]"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/migrate_raw_docs.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.KibanaMigratorOptions",
        "type": "Interface",
        "tags": [],
        "label": "KibanaMigratorOptions",
        "description": [],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.client",
            "type": "Object",
            "tags": [],
            "label": "client",
            "description": [],
            "signature": [
              "{ name: string | symbol; get: { <TDocument = unknown>(this: That, params: ",
              "GetRequest",
              " | ",
              "GetRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "GetResponse",
              "<TDocument>>; <TDocument = unknown>(this: That, params: ",
              "GetRequest",
              " | ",
              "GetRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "GetResponse",
              "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
              "GetRequest",
              " | ",
              "GetRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "GetResponse",
              "<TDocument>>; }; delete: { (this: That, params: ",
              "DeleteRequest",
              " | ",
              "DeleteRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; (this: That, params: ",
              "DeleteRequest",
              " | ",
              "DeleteRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "WriteResponseBase",
              ", unknown>>; (this: That, params: ",
              "DeleteRequest",
              " | ",
              "DeleteRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; }; cluster: ",
              "default",
              "; eql: ",
              "default",
              "; search: { <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params?: ",
              "SearchRequest",
              " | ",
              "SearchRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "SearchResponse",
              "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params?: ",
              "SearchRequest",
              " | ",
              "SearchRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "SearchResponse",
              "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params?: ",
              "SearchRequest",
              " | ",
              "SearchRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "SearchResponse",
              "<TDocument, TAggregations>>; }; create: { <TDocument = unknown>(this: That, params: ",
              "CreateRequest",
              "<TDocument> | ",
              "CreateRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; <TDocument = unknown>(this: That, params: ",
              "CreateRequest",
              "<TDocument> | ",
              "CreateRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "WriteResponseBase",
              ", unknown>>; <TDocument = unknown>(this: That, params: ",
              "CreateRequest",
              "<TDocument> | ",
              "CreateRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; }; monitoring: ",
              "default",
              "; security: ",
              "default",
              "; index: { <TDocument = unknown>(this: That, params: ",
              "IndexRequest",
              "<TDocument> | ",
              "IndexRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; <TDocument = unknown>(this: That, params: ",
              "IndexRequest",
              "<TDocument> | ",
              "IndexRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "WriteResponseBase",
              ", unknown>>; <TDocument = unknown>(this: That, params: ",
              "IndexRequest",
              "<TDocument> | ",
              "IndexRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "WriteResponseBase",
              ">; }; update: { <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
              "UpdateRequest",
              "<TDocument, TPartialDocument> | ",
              "UpdateRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "UpdateResponse",
              "<TDocumentR>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
              "UpdateRequest",
              "<TDocument, TPartialDocument> | ",
              "UpdateRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "UpdateResponse",
              "<TDocumentR>, unknown>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
              "UpdateRequest",
              "<TDocument, TPartialDocument> | ",
              "UpdateRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "UpdateResponse",
              "<TDocumentR>>; }; asyncSearch: ",
              "default",
              "; [kAsyncSearch]: symbol | null; [kAutoscaling]: symbol | null; [kCat]: symbol | null; [kCcr]: symbol | null; [kCluster]: symbol | null; [kDanglingIndices]: symbol | null; [kEnrich]: symbol | null; [kEql]: symbol | null; [kFeatures]: symbol | null; [kFleet]: symbol | null; [kGraph]: symbol | null; [kIlm]: symbol | null; [kIndices]: symbol | null; [kIngest]: symbol | null; [kLicense]: symbol | null; [kLogstash]: symbol | null; [kMigration]: symbol | null; [kMl]: symbol | null; [kMonitoring]: symbol | null; [kNodes]: symbol | null; [kRollup]: symbol | null; [kSearchableSnapshots]: symbol | null; [kSecurity]: symbol | null; [kShutdown]: symbol | null; [kSlm]: symbol | null; [kSnapshot]: symbol | null; [kSql]: symbol | null; [kSsl]: symbol | null; [kTasks]: symbol | null; [kTextStructure]: symbol | null; [kTransform]: symbol | null; [kWatcher]: symbol | null; [kXpack]: symbol | null; transport: ",
              "default",
              "; helpers: ",
              "default",
              "; child: (opts: ",
              "ClientOptions",
              ") => ",
              "default",
              "; autoscaling: ",
              "default",
              "; bulk: { <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
              "BulkRequest",
              "<TDocument, TPartialDocument> | ",
              "BulkRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "BulkResponse",
              ">; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
              "BulkRequest",
              "<TDocument, TPartialDocument> | ",
              "BulkRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "BulkResponse",
              ", unknown>>; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
              "BulkRequest",
              "<TDocument, TPartialDocument> | ",
              "BulkRequest",
              "<TDocument, TPartialDocument>, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "BulkResponse",
              ">; }; cat: ",
              "default",
              "; ccr: ",
              "default",
              "; clearScroll: { (this: That, params?: ",
              "ClearScrollRequest",
              " | ",
              "ClearScrollRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ClearScrollResponse",
              ">; (this: That, params?: ",
              "ClearScrollRequest",
              " | ",
              "ClearScrollRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ClearScrollResponse",
              ", unknown>>; (this: That, params?: ",
              "ClearScrollRequest",
              " | ",
              "ClearScrollRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ClearScrollResponse",
              ">; }; closePointInTime: { (this: That, params: ",
              "ClosePointInTimeRequest",
              " | ",
              "ClosePointInTimeRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ClosePointInTimeResponse",
              ">; (this: That, params: ",
              "ClosePointInTimeRequest",
              " | ",
              "ClosePointInTimeRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ClosePointInTimeResponse",
              ", unknown>>; (this: That, params: ",
              "ClosePointInTimeRequest",
              " | ",
              "ClosePointInTimeRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ClosePointInTimeResponse",
              ">; }; count: { (this: That, params?: ",
              "CountRequest",
              " | ",
              "CountRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "CountResponse",
              ">; (this: That, params?: ",
              "CountRequest",
              " | ",
              "CountRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "CountResponse",
              ", unknown>>; (this: That, params?: ",
              "CountRequest",
              " | ",
              "CountRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "CountResponse",
              ">; }; danglingIndices: ",
              "default",
              "; deleteByQuery: { (this: That, params: ",
              "DeleteByQueryRequest",
              " | ",
              "DeleteByQueryRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "DeleteByQueryResponse",
              ">; (this: That, params: ",
              "DeleteByQueryRequest",
              " | ",
              "DeleteByQueryRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "DeleteByQueryResponse",
              ", unknown>>; (this: That, params: ",
              "DeleteByQueryRequest",
              " | ",
              "DeleteByQueryRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "DeleteByQueryResponse",
              ">; }; deleteByQueryRethrottle: { (this: That, params: ",
              "DeleteByQueryRethrottleRequest",
              " | ",
              "DeleteByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "TasksTaskListResponseBase",
              ">; (this: That, params: ",
              "DeleteByQueryRethrottleRequest",
              " | ",
              "DeleteByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "TasksTaskListResponseBase",
              ", unknown>>; (this: That, params: ",
              "DeleteByQueryRethrottleRequest",
              " | ",
              "DeleteByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "TasksTaskListResponseBase",
              ">; }; deleteScript: { (this: That, params: ",
              "DeleteScriptRequest",
              " | ",
              "DeleteScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "AcknowledgedResponseBase",
              ">; (this: That, params: ",
              "DeleteScriptRequest",
              " | ",
              "DeleteScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "AcknowledgedResponseBase",
              ", unknown>>; (this: That, params: ",
              "DeleteScriptRequest",
              " | ",
              "DeleteScriptRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "AcknowledgedResponseBase",
              ">; }; enrich: ",
              "default",
              "; exists: { (this: That, params: ",
              "ExistsRequest",
              " | ",
              "ExistsRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<boolean>; (this: That, params: ",
              "ExistsRequest",
              " | ",
              "ExistsRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<boolean, unknown>>; (this: That, params: ",
              "ExistsRequest",
              " | ",
              "ExistsRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<boolean>; }; existsSource: { (this: That, params: ",
              "ExistsSourceRequest",
              " | ",
              "ExistsSourceRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<boolean>; (this: That, params: ",
              "ExistsSourceRequest",
              " | ",
              "ExistsSourceRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<boolean, unknown>>; (this: That, params: ",
              "ExistsSourceRequest",
              " | ",
              "ExistsSourceRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<boolean>; }; explain: { <TDocument = unknown>(this: That, params: ",
              "ExplainRequest",
              " | ",
              "ExplainRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ExplainResponse",
              "<TDocument>>; <TDocument = unknown>(this: That, params: ",
              "ExplainRequest",
              " | ",
              "ExplainRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ExplainResponse",
              "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
              "ExplainRequest",
              " | ",
              "ExplainRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ExplainResponse",
              "<TDocument>>; }; features: ",
              "default",
              "; fieldCaps: { (this: That, params: ",
              "FieldCapsRequest",
              " | ",
              "FieldCapsRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "FieldCapsResponse",
              ">; (this: That, params: ",
              "FieldCapsRequest",
              " | ",
              "FieldCapsRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "FieldCapsResponse",
              ", unknown>>; (this: That, params: ",
              "FieldCapsRequest",
              " | ",
              "FieldCapsRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "FieldCapsResponse",
              ">; }; fleet: ",
              "default",
              "; getScript: { (this: That, params: ",
              "GetScriptRequest",
              " | ",
              "GetScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "GetScriptResponse",
              ">; (this: That, params: ",
              "GetScriptRequest",
              " | ",
              "GetScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "GetScriptResponse",
              ", unknown>>; (this: That, params: ",
              "GetScriptRequest",
              " | ",
              "GetScriptRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "GetScriptResponse",
              ">; }; getScriptContext: { (this: That, params?: ",
              "GetScriptContextRequest",
              " | ",
              "GetScriptContextRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "GetScriptContextResponse",
              ">; (this: That, params?: ",
              "GetScriptContextRequest",
              " | ",
              "GetScriptContextRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "GetScriptContextResponse",
              ", unknown>>; (this: That, params?: ",
              "GetScriptContextRequest",
              " | ",
              "GetScriptContextRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "GetScriptContextResponse",
              ">; }; getScriptLanguages: { (this: That, params?: ",
              "GetScriptLanguagesRequest",
              " | ",
              "GetScriptLanguagesRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "GetScriptLanguagesResponse",
              ">; (this: That, params?: ",
              "GetScriptLanguagesRequest",
              " | ",
              "GetScriptLanguagesRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "GetScriptLanguagesResponse",
              ", unknown>>; (this: That, params?: ",
              "GetScriptLanguagesRequest",
              " | ",
              "GetScriptLanguagesRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "GetScriptLanguagesResponse",
              ">; }; getSource: { <TDocument = unknown>(this: That, params: ",
              "GetSourceRequest",
              " | ",
              "GetSourceRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<TDocument>; <TDocument = unknown>(this: That, params: ",
              "GetSourceRequest",
              " | ",
              "GetSourceRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<TDocument, unknown>>; <TDocument = unknown>(this: That, params: ",
              "GetSourceRequest",
              " | ",
              "GetSourceRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<TDocument>; }; graph: ",
              "default",
              "; ilm: ",
              "default",
              "; indices: ",
              "default",
              "; info: { (this: That, params?: ",
              "InfoRequest",
              " | ",
              "InfoRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "InfoResponse",
              ">; (this: That, params?: ",
              "InfoRequest",
              " | ",
              "InfoRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "InfoResponse",
              ", unknown>>; (this: That, params?: ",
              "InfoRequest",
              " | ",
              "InfoRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "InfoResponse",
              ">; }; ingest: ",
              "default",
              "; knnSearch: { <TDocument = unknown>(this: That, params: ",
              "KnnSearchRequest",
              " | ",
              "KnnSearchRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "KnnSearchResponse",
              "<TDocument>>; <TDocument = unknown>(this: That, params: ",
              "KnnSearchRequest",
              " | ",
              "KnnSearchRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "KnnSearchResponse",
              "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
              "KnnSearchRequest",
              " | ",
              "KnnSearchRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "KnnSearchResponse",
              "<TDocument>>; }; license: ",
              "default",
              "; logstash: ",
              "default",
              "; mget: { <TDocument = unknown>(this: That, params?: ",
              "MgetRequest",
              " | ",
              "MgetRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "MgetResponse",
              "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
              "MgetRequest",
              " | ",
              "MgetRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "MgetResponse",
              "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
              "MgetRequest",
              " | ",
              "MgetRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "MgetResponse",
              "<TDocument>>; }; migration: ",
              "default",
              "; ml: ",
              "default",
              "; msearch: { <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchRequest",
              " | ",
              "MsearchRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "MsearchResponse",
              "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchRequest",
              " | ",
              "MsearchRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "MsearchResponse",
              "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchRequest",
              " | ",
              "MsearchRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "MsearchResponse",
              "<TDocument, TAggregations>>; }; msearchTemplate: { <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchTemplateRequest",
              " | ",
              "MsearchTemplateRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "MsearchTemplateResponse",
              "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchTemplateRequest",
              " | ",
              "MsearchTemplateRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "MsearchTemplateResponse",
              "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "MsearchTemplateRequest",
              " | ",
              "MsearchTemplateRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "MsearchTemplateResponse",
              "<TDocument, TAggregations>>; }; mtermvectors: { (this: That, params?: ",
              "MtermvectorsRequest",
              " | ",
              "MtermvectorsRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "MtermvectorsResponse",
              ">; (this: That, params?: ",
              "MtermvectorsRequest",
              " | ",
              "MtermvectorsRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "MtermvectorsResponse",
              ", unknown>>; (this: That, params?: ",
              "MtermvectorsRequest",
              " | ",
              "MtermvectorsRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "MtermvectorsResponse",
              ">; }; nodes: ",
              "default",
              "; openPointInTime: { (this: That, params: ",
              "OpenPointInTimeRequest",
              " | ",
              "OpenPointInTimeRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "OpenPointInTimeResponse",
              ">; (this: That, params: ",
              "OpenPointInTimeRequest",
              " | ",
              "OpenPointInTimeRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "OpenPointInTimeResponse",
              ", unknown>>; (this: That, params: ",
              "OpenPointInTimeRequest",
              " | ",
              "OpenPointInTimeRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "OpenPointInTimeResponse",
              ">; }; ping: { (this: That, params?: ",
              "PingRequest",
              " | ",
              "PingRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<boolean>; (this: That, params?: ",
              "PingRequest",
              " | ",
              "PingRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<boolean, unknown>>; (this: That, params?: ",
              "PingRequest",
              " | ",
              "PingRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<boolean>; }; putScript: { (this: That, params: ",
              "PutScriptRequest",
              " | ",
              "PutScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "AcknowledgedResponseBase",
              ">; (this: That, params: ",
              "PutScriptRequest",
              " | ",
              "PutScriptRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "AcknowledgedResponseBase",
              ", unknown>>; (this: That, params: ",
              "PutScriptRequest",
              " | ",
              "PutScriptRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "AcknowledgedResponseBase",
              ">; }; rankEval: { (this: That, params: ",
              "RankEvalRequest",
              " | ",
              "RankEvalRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "RankEvalResponse",
              ">; (this: That, params: ",
              "RankEvalRequest",
              " | ",
              "RankEvalRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "RankEvalResponse",
              ", unknown>>; (this: That, params: ",
              "RankEvalRequest",
              " | ",
              "RankEvalRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "RankEvalResponse",
              ">; }; reindex: { (this: That, params: ",
              "ReindexRequest",
              " | ",
              "ReindexRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ReindexResponse",
              ">; (this: That, params: ",
              "ReindexRequest",
              " | ",
              "ReindexRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ReindexResponse",
              ", unknown>>; (this: That, params: ",
              "ReindexRequest",
              " | ",
              "ReindexRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ReindexResponse",
              ">; }; reindexRethrottle: { (this: That, params: ",
              "ReindexRethrottleRequest",
              " | ",
              "ReindexRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ReindexRethrottleResponse",
              ">; (this: That, params: ",
              "ReindexRethrottleRequest",
              " | ",
              "ReindexRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ReindexRethrottleResponse",
              ", unknown>>; (this: That, params: ",
              "ReindexRethrottleRequest",
              " | ",
              "ReindexRethrottleRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ReindexRethrottleResponse",
              ">; }; renderSearchTemplate: { (this: That, params?: ",
              "RenderSearchTemplateRequest",
              " | ",
              "RenderSearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "RenderSearchTemplateResponse",
              ">; (this: That, params?: ",
              "RenderSearchTemplateRequest",
              " | ",
              "RenderSearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "RenderSearchTemplateResponse",
              ", unknown>>; (this: That, params?: ",
              "RenderSearchTemplateRequest",
              " | ",
              "RenderSearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "RenderSearchTemplateResponse",
              ">; }; rollup: ",
              "default",
              "; scriptsPainlessExecute: { <TResult = unknown>(this: That, params?: ",
              "ScriptsPainlessExecuteRequest",
              " | ",
              "ScriptsPainlessExecuteRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ScriptsPainlessExecuteResponse",
              "<TResult>>; <TResult = unknown>(this: That, params?: ",
              "ScriptsPainlessExecuteRequest",
              " | ",
              "ScriptsPainlessExecuteRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ScriptsPainlessExecuteResponse",
              "<TResult>, unknown>>; <TResult = unknown>(this: That, params?: ",
              "ScriptsPainlessExecuteRequest",
              " | ",
              "ScriptsPainlessExecuteRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ScriptsPainlessExecuteResponse",
              "<TResult>>; }; scroll: { <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "ScrollRequest",
              " | ",
              "ScrollRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "ScrollResponse",
              "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "ScrollRequest",
              " | ",
              "ScrollRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "ScrollResponse",
              "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
              "AggregationsAggregate",
              ">>(this: That, params: ",
              "ScrollRequest",
              " | ",
              "ScrollRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "ScrollResponse",
              "<TDocument, TAggregations>>; }; searchMvt: { (this: That, params: ",
              "SearchMvtRequest",
              " | ",
              "SearchMvtRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<ArrayBuffer>; (this: That, params: ",
              "SearchMvtRequest",
              " | ",
              "SearchMvtRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<ArrayBuffer, unknown>>; (this: That, params: ",
              "SearchMvtRequest",
              " | ",
              "SearchMvtRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<ArrayBuffer>; }; searchShards: { (this: That, params?: ",
              "SearchShardsRequest",
              " | ",
              "SearchShardsRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "SearchShardsResponse",
              ">; (this: That, params?: ",
              "SearchShardsRequest",
              " | ",
              "SearchShardsRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "SearchShardsResponse",
              ", unknown>>; (this: That, params?: ",
              "SearchShardsRequest",
              " | ",
              "SearchShardsRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "SearchShardsResponse",
              ">; }; searchTemplate: { <TDocument = unknown>(this: That, params?: ",
              "SearchTemplateRequest",
              " | ",
              "SearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "SearchTemplateResponse",
              "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
              "SearchTemplateRequest",
              " | ",
              "SearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "SearchTemplateResponse",
              "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
              "SearchTemplateRequest",
              " | ",
              "SearchTemplateRequest",
              " | undefined, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "SearchTemplateResponse",
              "<TDocument>>; }; searchableSnapshots: ",
              "default",
              "; shutdown: ",
              "default",
              "; slm: ",
              "default",
              "; snapshot: ",
              "default",
              "; sql: ",
              "default",
              "; ssl: ",
              "default",
              "; tasks: ",
              "default",
              "; termsEnum: { (this: That, params: ",
              "TermsEnumRequest",
              " | ",
              "TermsEnumRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "TermsEnumResponse",
              ">; (this: That, params: ",
              "TermsEnumRequest",
              " | ",
              "TermsEnumRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "TermsEnumResponse",
              ", unknown>>; (this: That, params: ",
              "TermsEnumRequest",
              " | ",
              "TermsEnumRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "TermsEnumResponse",
              ">; }; termvectors: { <TDocument = unknown>(this: That, params: ",
              "TermvectorsRequest",
              "<TDocument> | ",
              "TermvectorsRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "TermvectorsResponse",
              ">; <TDocument = unknown>(this: That, params: ",
              "TermvectorsRequest",
              "<TDocument> | ",
              "TermvectorsRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "TermvectorsResponse",
              ", unknown>>; <TDocument = unknown>(this: That, params: ",
              "TermvectorsRequest",
              "<TDocument> | ",
              "TermvectorsRequest",
              "<TDocument>, options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "TermvectorsResponse",
              ">; }; textStructure: ",
              "default",
              "; transform: ",
              "default",
              "; updateByQuery: { (this: That, params: ",
              "UpdateByQueryRequest",
              " | ",
              "UpdateByQueryRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "UpdateByQueryResponse",
              ">; (this: That, params: ",
              "UpdateByQueryRequest",
              " | ",
              "UpdateByQueryRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "UpdateByQueryResponse",
              ", unknown>>; (this: That, params: ",
              "UpdateByQueryRequest",
              " | ",
              "UpdateByQueryRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "UpdateByQueryResponse",
              ">; }; updateByQueryRethrottle: { (this: That, params: ",
              "UpdateByQueryRethrottleRequest",
              " | ",
              "UpdateByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithOutMeta",
              " | undefined): Promise<",
              "UpdateByQueryRethrottleResponse",
              ">; (this: That, params: ",
              "UpdateByQueryRethrottleRequest",
              " | ",
              "UpdateByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptionsWithMeta",
              " | undefined): Promise<",
              "TransportResult",
              "<",
              "UpdateByQueryRethrottleResponse",
              ", unknown>>; (this: That, params: ",
              "UpdateByQueryRethrottleRequest",
              " | ",
              "UpdateByQueryRethrottleRequest",
              ", options?: ",
              "TransportRequestOptions",
              " | undefined): Promise<",
              "UpdateByQueryRethrottleResponse",
              ">; }; watcher: ",
              "default",
              "; xpack: ",
              "default",
              "; }"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.typeRegistry",
            "type": "Object",
            "tags": [],
            "label": "typeRegistry",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "server",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-server.ISavedObjectTypeRegistry",
                "text": "ISavedObjectTypeRegistry"
              }
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.soMigrationsConfig",
            "type": "Object",
            "tags": [],
            "label": "soMigrationsConfig",
            "description": [],
            "signature": [
              "{ readonly discardUnknownObjects?: string | undefined; readonly discardCorruptObjects?: string | undefined; readonly pollInterval: number; readonly skip: boolean; readonly batchSize: number; readonly maxBatchSizeBytes: ",
              {
                "pluginId": "@kbn/config-schema",
                "scope": "server",
                "docId": "kibKbnConfigSchemaPluginApi",
                "section": "def-server.ByteSizeValue",
                "text": "ByteSizeValue"
              },
              "; readonly scrollDuration: string; readonly retryAttempts: number; }"
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.kibanaIndex",
            "type": "string",
            "tags": [],
            "label": "kibanaIndex",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.kibanaVersion",
            "type": "string",
            "tags": [],
            "label": "kibanaVersion",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.logger",
            "type": "Object",
            "tags": [],
            "label": "logger",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/logging",
                "scope": "server",
                "docId": "kibKbnLoggingPluginApi",
                "section": "def-server.Logger",
                "text": "Logger"
              }
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.docLinks",
            "type": "Object",
            "tags": [],
            "label": "docLinks",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-doc-links-server",
                "scope": "server",
                "docId": "kibKbnCoreDocLinksServerPluginApi",
                "section": "def-server.DocLinksServiceSetup",
                "text": "DocLinksServiceSetup"
              }
            ],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.KibanaMigratorOptions.waitForMigrationCompletion",
            "type": "boolean",
            "tags": [],
            "label": "waitForMigrationCompletion",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/kibana_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.UpdateByQueryResponse",
        "type": "Interface",
        "tags": [],
        "label": "UpdateByQueryResponse",
        "description": [],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/pickup_updated_mappings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.UpdateByQueryResponse.taskId",
            "type": "string",
            "tags": [],
            "label": "taskId",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/actions/pickup_updated_mappings.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.REMOVED_TYPES",
        "type": "Array",
        "tags": [],
        "label": "REMOVED_TYPES",
        "description": [
          "\nTypes that are no longer registered and need to be removed"
        ],
        "signature": [
          "string[]"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/core/unused_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
        "id": "def-server.MIGRATION_CLIENT_OPTIONS",
        "type": "Object",
        "tags": [],
        "label": "MIGRATION_CLIENT_OPTIONS",
        "description": [
          "\nTo avoid the Elasticsearch-js client aborting our requests before we\nreceive a response from Elasticsearch we choose a requestTimeout that's\nlonger than the DEFAULT_TIMEOUT.\n\nThis timeout is only really valuable for preventing migrations from being\nstuck waiting forever for a response when the underlying socket is broken.\n\nWe also set maxRetries to 0 so that the state action machine can handle all\nretries. This way we get exponential back-off and logging for failed\nactions."
        ],
        "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/run_resilient_migrator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.MIGRATION_CLIENT_OPTIONS.maxRetries",
            "type": "number",
            "tags": [],
            "label": "maxRetries",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/run_resilient_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-saved-objects-migration-server-internal",
            "id": "def-server.MIGRATION_CLIENT_OPTIONS.requestTimeout",
            "type": "number",
            "tags": [],
            "label": "requestTimeout",
            "description": [],
            "path": "packages/core/saved-objects/core-saved-objects-migration-server-internal/src/run_resilient_migrator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}