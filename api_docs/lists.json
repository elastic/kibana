{
  "id": "lists",
  "client": {
    "classes": [
      {
        "id": "def-public.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.PluginSetup",
            "text": "PluginSetup"
          },
          ", ",
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.PluginStart",
            "text": "PluginStart"
          },
          ", ",
          "SetupPlugins"
        ],
        "children": [
          {
            "id": "def-public.Plugin.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.Unnamed.$1",
                "type": "Object",
                "label": "initializerContext",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<object>"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 19
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 19
            }
          },
          {
            "id": "def-public.Plugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "StartPlugins",
              ", ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              },
              ">, plugins: ",
              "SetupPlugins",
              ") => ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginSetup",
                "text": "PluginSetup"
              }
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "StartPlugins",
                  ", ",
                  {
                    "pluginId": "lists",
                    "scope": "public",
                    "docId": "kibListsPluginApi",
                    "section": "def-public.PluginStart",
                    "text": "PluginStart"
                  },
                  ">"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 22
                }
              },
              {
                "id": "def-public.Plugin.setup.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "SetupPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 22
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 22
            }
          },
          {
            "id": "def-public.Plugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              }
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 27
                }
              },
              {
                "id": "def-public.Plugin.start.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "StartPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 27
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 27
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/plugin.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "id": "def-public.addEndpointExceptionListWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.addEndpointExceptionListWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "AddEndpointExceptionListProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/api.ts",
              "lineNumber": 532
            }
          }
        ],
        "signature": [
          "({ http, signal, }: ",
          "AddEndpointExceptionListProps",
          ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | {}>"
        ],
        "description": [],
        "label": "addEndpointExceptionListWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/api.ts",
          "lineNumber": 532
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.addExceptionListItemWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.addExceptionListItemWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  listItem,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "AddExceptionListItemProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/api.ts",
              "lineNumber": 109
            }
          }
        ],
        "signature": [
          "({ http, listItem, signal, }: ",
          "AddExceptionListItemProps",
          ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
        ],
        "description": [],
        "label": "addExceptionListItemWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/api.ts",
          "lineNumber": 109
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.addExceptionListWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.addExceptionListWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  list,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "AddExceptionListProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/api.ts",
              "lineNumber": 66
            }
          }
        ],
        "signature": [
          "({ http, list, signal, }: ",
          "AddExceptionListProps",
          ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }>"
        ],
        "description": [],
        "label": "addExceptionListWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/api.ts",
          "lineNumber": 66
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.exportListWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.exportListWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  listId,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "ExportListParams"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/lists/api.ts",
              "lineNumber": 174
            }
          }
        ],
        "signature": [
          "({ http, listId, signal, }: ",
          "ExportListParams",
          ") => Promise<Blob>"
        ],
        "description": [],
        "label": "exportListWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/api.ts",
          "lineNumber": 174
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.fetchExceptionListByIdWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.fetchExceptionListByIdWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  id,\n  namespaceType,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "ApiCallByIdProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/api.ts",
              "lineNumber": 299
            }
          }
        ],
        "signature": [
          "({ http, id, namespaceType, signal, }: ",
          "ApiCallByIdProps",
          ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }>"
        ],
        "description": [],
        "label": "fetchExceptionListByIdWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/api.ts",
          "lineNumber": 299
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.updateExceptionListItemWithValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-public.updateExceptionListItemWithValidation.$1",
            "type": "Object",
            "label": "{\n  http,\n  listItem,\n  signal,\n}",
            "isRequired": true,
            "signature": [
              "UpdateExceptionListItemProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/api.ts",
              "lineNumber": 195
            }
          }
        ],
        "signature": [
          "({ http, listItem, signal, }: ",
          "UpdateExceptionListItemProps",
          ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
        ],
        "description": [],
        "label": "updateExceptionListItemWithValidation",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/api.ts",
          "lineNumber": 195
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useApi",
        "type": "Function",
        "children": [
          {
            "id": "def-public.useApi.$1",
            "type": "Object",
            "label": "http",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-public.HttpSetup",
                "text": "HttpSetup"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/hooks/use_api.ts",
              "lineNumber": 41
            }
          }
        ],
        "signature": [
          "(http: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-public.HttpSetup",
            "text": "HttpSetup"
          },
          ") => ",
          "ExceptionsApi"
        ],
        "description": [],
        "label": "useApi",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/hooks/use_api.ts",
          "lineNumber": 41
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useAsync",
        "type": "Function",
        "children": [
          {
            "id": "def-public.useAsync.$1",
            "type": "Function",
            "label": "fn",
            "isRequired": true,
            "signature": [
              "(...args: Args) => Promise<Result>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/common/hooks/use_async.ts",
              "lineNumber": 26
            }
          }
        ],
        "signature": [
          "<Args extends unknown[], Result>(fn: (...args: Args) => Promise<Result>) => ",
          "Async",
          "<Args, Result>"
        ],
        "description": [
          "\n"
        ],
        "label": "useAsync",
        "source": {
          "path": "x-pack/plugins/lists/public/common/hooks/use_async.ts",
          "lineNumber": 25
        },
        "tags": [],
        "returnComment": [
          "An {@link AsyncTask} containing the underlying task's state along with a start callback"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useCreateListIndex",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "ApiParams",
          ">], { acknowledged: boolean; }>"
        ],
        "description": [],
        "label": "useCreateListIndex",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_create_list_index.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useCursor",
        "type": "Function",
        "children": [
          {
            "id": "def-public.useCursor.$1",
            "type": "Object",
            "label": "{ pageIndex, pageSize }",
            "isRequired": true,
            "signature": [
              "UseCursorProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/common/hooks/use_cursor.ts",
              "lineNumber": 20
            }
          }
        ],
        "signature": [
          "({ pageIndex, pageSize }: ",
          "UseCursorProps",
          ") => [string | undefined, SetCursor]"
        ],
        "description": [],
        "label": "useCursor",
        "source": {
          "path": "x-pack/plugins/lists/public/common/hooks/use_cursor.ts",
          "lineNumber": 20
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useDeleteList",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "DeleteListParams",
          ">], { _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
        ],
        "description": [],
        "label": "useDeleteList",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_delete_list.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useExceptionListItems",
        "type": "Function",
        "children": [
          {
            "id": "def-public.useExceptionListItems.$1",
            "type": "Object",
            "label": "{\n  http,\n  lists,\n  pagination = {\n    page: 1,\n    perPage: 20,\n    total: 0,\n  },\n  filterOptions,\n  showDetectionsListsOnly,\n  showEndpointListsOnly,\n  matchFilters,\n  onError,\n  onSuccess,\n}",
            "isRequired": true,
            "signature": [
              "UseExceptionListProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/hooks/use_exception_list_items.ts",
              "lineNumber": 39
            }
          }
        ],
        "signature": [
          "({ http, lists, pagination, filterOptions, showDetectionsListsOnly, showEndpointListsOnly, matchFilters, onError, onSuccess, }: ",
          "UseExceptionListProps",
          ") => ",
          "ReturnExceptionListAndItems"
        ],
        "description": [
          "\nHook for using to get an ExceptionList and it's ExceptionListItems\n"
        ],
        "label": "useExceptionListItems",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/hooks/use_exception_list_items.ts",
          "lineNumber": 39
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useExceptionLists",
        "type": "Function",
        "children": [
          {
            "id": "def-public.useExceptionLists.$1",
            "type": "Object",
            "label": "{\n  errorMessage,\n  http,\n  pagination = {\n    page: 1,\n    perPage: 20,\n    total: 0,\n  },\n  filterOptions = {},\n  namespaceTypes,\n  notifications,\n  showTrustedApps = false,\n}",
            "isRequired": true,
            "signature": [
              "UseExceptionListsProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/hooks/use_exception_lists.ts",
              "lineNumber": 30
            }
          }
        ],
        "signature": [
          "({ errorMessage, http, pagination, filterOptions, namespaceTypes, notifications, showTrustedApps, }: ",
          "UseExceptionListsProps",
          ") => ",
          "ReturnExceptionLists"
        ],
        "description": [
          "\nHook for fetching ExceptionLists\n"
        ],
        "label": "useExceptionLists",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/hooks/use_exception_lists.ts",
          "lineNumber": 30
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useExportList",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "ExportListParams",
          ">], Blob>"
        ],
        "description": [],
        "label": "useExportList",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_export_list.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useFindLists",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "FindListsParams",
          ">], { cursor: string; data: { _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }[]; page: number; per_page: number; total: number; }>"
        ],
        "description": [],
        "label": "useFindLists",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_find_lists.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useImportList",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "ImportListParams",
          ">], { _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
        ],
        "description": [],
        "label": "useImportList",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_import_list.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useIsMounted",
        "type": "Function",
        "children": [],
        "signature": [
          "() => GetIsMounted"
        ],
        "description": [
          "\n"
        ],
        "label": "useIsMounted",
        "source": {
          "path": "x-pack/plugins/lists/public/common/hooks/use_is_mounted.ts",
          "lineNumber": 16
        },
        "tags": [],
        "returnComment": [
          "A {@link GetIsMounted} getter function returning whether the component is currently mounted"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.usePersistExceptionItem",
        "type": "Function",
        "children": [
          {
            "id": "def-public.usePersistExceptionItem.$1",
            "type": "Object",
            "label": "{\n  http,\n  onError,\n}",
            "isRequired": true,
            "signature": [
              "PersistHookProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/hooks/persist_exception_item.ts",
              "lineNumber": 35
            }
          }
        ],
        "signature": [
          "({ http, onError, }: ",
          "PersistHookProps",
          ") => ",
          "ReturnPersistExceptionItem"
        ],
        "description": [
          "\nHook for creating or updating ExceptionListItem\n"
        ],
        "label": "usePersistExceptionItem",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/hooks/persist_exception_item.ts",
          "lineNumber": 35
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.usePersistExceptionList",
        "type": "Function",
        "children": [
          {
            "id": "def-public.usePersistExceptionList.$1",
            "type": "Object",
            "label": "{\n  http,\n  onError,\n}",
            "isRequired": true,
            "signature": [
              "PersistHookProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/hooks/persist_exception_list.ts",
              "lineNumber": 31
            }
          }
        ],
        "signature": [
          "({ http, onError, }: ",
          "PersistHookProps",
          ") => ",
          "ReturnPersistExceptionList"
        ],
        "description": [
          "\nHook for creating or updating ExceptionList\n"
        ],
        "label": "usePersistExceptionList",
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/hooks/persist_exception_list.ts",
          "lineNumber": 31
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useReadListIndex",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "ApiParams",
          ">], { list_index: boolean; list_item_index: boolean; }>"
        ],
        "description": [],
        "label": "useReadListIndex",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_read_list_index.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.useReadListPrivileges",
        "type": "Function",
        "children": [],
        "signature": [
          "() => ",
          "Async",
          "<[args: ",
          "OptionalSignalArgs",
          "<",
          "ApiParams",
          ">], unknown>"
        ],
        "description": [],
        "label": "useReadListPrivileges",
        "source": {
          "path": "x-pack/plugins/lists/public/lists/hooks/use_read_list_privileges.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-public.withOptionalSignal",
        "type": "Function",
        "children": [
          {
            "id": "def-public.withOptionalSignal.$1",
            "type": "Function",
            "label": "fn",
            "isRequired": true,
            "signature": [
              "(args: Args) => Result"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/common/with_optional_signal.ts",
              "lineNumber": 20
            }
          }
        ],
        "signature": [
          "<Args extends SignalArgs, Result>(fn: (args: Args) => Result) => (args: ",
          "OptionalSignalArgs",
          "<Args>) => Result"
        ],
        "description": [
          "\n"
        ],
        "label": "withOptionalSignal",
        "source": {
          "path": "x-pack/plugins/lists/public/common/with_optional_signal.ts",
          "lineNumber": 20
        },
        "tags": [],
        "returnComment": [
          "An async function where the AbortSignal argument is optional"
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-public.ExceptionList",
        "type": "Interface",
        "label": "ExceptionList",
        "signature": [
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.ExceptionList",
            "text": "ExceptionList"
          },
          " extends { _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }"
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ExceptionList.totalItems",
            "type": "number",
            "label": "totalItems",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 42
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 41
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ExceptionListFilter",
        "type": "Interface",
        "label": "ExceptionListFilter",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ExceptionListFilter.name",
            "type": "CompoundType",
            "label": "name",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 126
            },
            "signature": [
              "string | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListFilter.list_id",
            "type": "CompoundType",
            "label": "list_id",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "string | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListFilter.created_by",
            "type": "CompoundType",
            "label": "created_by",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 128
            },
            "signature": [
              "string | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListFilter.type",
            "type": "CompoundType",
            "label": "type",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 129
            },
            "signature": [
              "string | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListFilter.tags",
            "type": "CompoundType",
            "label": "tags",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 130
            },
            "signature": [
              "string | null | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 125
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ExceptionListIdentifiers",
        "type": "Interface",
        "label": "ExceptionListIdentifiers",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ExceptionListIdentifiers.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 63
            }
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListIdentifiers.listId",
            "type": "string",
            "label": "listId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 64
            }
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListIdentifiers.namespaceType",
            "type": "CompoundType",
            "label": "namespaceType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 65
            },
            "signature": [
              "\"single\" | \"agnostic\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.ExceptionListIdentifiers.type",
            "type": "CompoundType",
            "label": "type",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 66
            },
            "signature": [
              "\"endpoint\" | \"detection\" | \"endpoint_events\""
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 62
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Pagination",
        "type": "Interface",
        "label": "Pagination",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.Pagination.page",
            "type": "number",
            "label": "page",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 29
            }
          },
          {
            "tags": [],
            "id": "def-public.Pagination.perPage",
            "type": "number",
            "label": "perPage",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 30
            }
          },
          {
            "tags": [],
            "id": "def-public.Pagination.total",
            "type": "number",
            "label": "total",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 31
            },
            "signature": [
              "number | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 28
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UseExceptionListItemsSuccess",
        "type": "Interface",
        "label": "UseExceptionListItemsSuccess",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UseExceptionListItemsSuccess.exceptions",
            "type": "Array",
            "label": "exceptions",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 46
            },
            "signature": [
              "{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UseExceptionListItemsSuccess.pagination",
            "type": "Object",
            "label": "pagination",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 47
            },
            "signature": [
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.Pagination",
                "text": "Pagination"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 45
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UseExceptionListsSuccess",
        "type": "Interface",
        "label": "UseExceptionListsSuccess",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UseExceptionListsSuccess.exceptions",
            "type": "Array",
            "label": "exceptions",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 121
            },
            "signature": [
              "{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UseExceptionListsSuccess.pagination",
            "type": "Object",
            "label": "pagination",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/public/exceptions/types.ts",
              "lineNumber": 122
            },
            "signature": [
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.Pagination",
                "text": "Pagination"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/exceptions/types.ts",
          "lineNumber": 120
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "id": "def-public.ExceptionBuilder",
        "type": "Object",
        "label": "ExceptionBuilder",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/public/shared_exports.ts",
          "lineNumber": 41
        },
        "signature": [
          "typeof ",
          "x-pack/plugins/lists/public/exceptions/components/builder/index"
        ],
        "initialIsOpen": false
      }
    ],
    "setup": {
      "id": "def-public.PluginSetup",
      "type": "Interface",
      "label": "PluginSetup",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "x-pack/plugins/lists/public/types.ts",
        "lineNumber": 9
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.PluginStart",
      "type": "Interface",
      "label": "PluginStart",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "x-pack/plugins/lists/public/types.ts",
        "lineNumber": 11
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "id": "def-server.ExceptionListClient",
        "type": "Class",
        "tags": [],
        "label": "ExceptionListClient",
        "description": [],
        "children": [
          {
            "id": "def-server.ExceptionListClient.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.ExceptionListClient.Unnamed.$1",
                "type": "Object",
                "label": "{ user, savedObjectsClient }",
                "isRequired": true,
                "signature": [
                  "ConstructorOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 61
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 61
            }
          },
          {
            "id": "def-server.ExceptionListClient.getExceptionList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.getExceptionList.$1",
                "type": "Object",
                "label": "{\n    listId,\n    id,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "GetExceptionListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 66
                }
              }
            ],
            "signature": [
              "({ listId, id, namespaceType, }: ",
              "GetExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "getExceptionList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 66
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.getExceptionListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.getExceptionListItem.$1",
                "type": "Object",
                "label": "{\n    itemId,\n    id,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "GetExceptionListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 75
                }
              }
            ],
            "signature": [
              "({ itemId, id, namespaceType, }: ",
              "GetExceptionListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [],
            "label": "getExceptionListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 75
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.createEndpointList",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [
              "\nThis creates an agnostic space endpoint list if it does not exist. This tries to be\nas fast as possible by ignoring conflict errors and not returning the contents of the\nlist if it already exists."
            ],
            "label": "createEndpointList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 90
            },
            "tags": [],
            "returnComment": [
              "ExceptionListSchema if it created the endpoint list, otherwise null if it already exists"
            ]
          },
          {
            "id": "def-server.ExceptionListClient.createTrustedAppsList",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [
              "\nCreate the Trusted Apps Agnostic list if it does not yet exist (`null` is returned if it does exist)"
            ],
            "label": "createTrustedAppsList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 102
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.createEndpointListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.createEndpointListItem.$1",
                "type": "Object",
                "label": "{\n    comments,\n    description,\n    entries,\n    itemId,\n    meta,\n    name,\n    osTypes,\n    tags,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  "CreateEndpointListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 116
                }
              }
            ],
            "signature": [
              "({ comments, description, entries, itemId, meta, name, osTypes, tags, type, }: ",
              "CreateEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
            ],
            "description": [
              "\nThis is the same as \"createListItem\" except it applies specifically to the agnostic endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the agnostic endpoint\nbeing there and existing before the item is inserted into the agnostic endpoint list."
            ],
            "label": "createEndpointListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 116
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.updateEndpointListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.updateEndpointListItem.$1",
                "type": "Object",
                "label": "{\n    _version,\n    comments,\n    description,\n    entries,\n    id,\n    itemId,\n    meta,\n    name,\n    osTypes,\n    tags,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  "UpdateEndpointListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 152
                }
              }
            ],
            "signature": [
              "({ _version, comments, description, entries, id, itemId, meta, name, osTypes, tags, type, }: ",
              "UpdateEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [
              "\nThis is the same as \"updateExceptionListItem\" except it applies specifically to the endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the endpoint\nbeing there if it did not exist before. If the list did not exist before, then creating it here will still cause a\nreturn of null but at least the list exists again."
            ],
            "label": "updateEndpointListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 152
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.getEndpointListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.getEndpointListItem.$1",
                "type": "Object",
                "label": "{\n    itemId,\n    id,\n  }",
                "isRequired": true,
                "signature": [
                  "GetEndpointListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 188
                }
              }
            ],
            "signature": [
              "({ itemId, id, }: ",
              "GetEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [
              "\nThis is the same as \"getExceptionListItem\" except it applies specifically to the endpoint list."
            ],
            "label": "getEndpointListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 188
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.createExceptionList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.createExceptionList.$1",
                "type": "Object",
                "label": "{\n    description,\n    immutable,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    tags,\n    type,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "CreateExceptionListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 196
                }
              }
            ],
            "signature": [
              "({ description, immutable, listId, meta, name, namespaceType, tags, type, version, }: ",
              "CreateExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "description": [],
            "label": "createExceptionList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 196
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.updateExceptionList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.updateExceptionList.$1",
                "type": "Object",
                "label": "{\n    _version,\n    id,\n    description,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "UpdateExceptionListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 223
                }
              }
            ],
            "signature": [
              "({ _version, id, description, listId, meta, name, namespaceType, osTypes, tags, type, version, }: ",
              "UpdateExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "updateExceptionList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 223
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.deleteExceptionList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.deleteExceptionList.$1",
                "type": "Object",
                "label": "{\n    id,\n    listId,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "DeleteExceptionListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 254
                }
              }
            ],
            "signature": [
              "({ id, listId, namespaceType, }: ",
              "DeleteExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "deleteExceptionList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 254
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.createExceptionListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.createExceptionListItem.$1",
                "type": "Object",
                "label": "{\n    comments,\n    description,\n    entries,\n    itemId,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "lists",
                    "scope": "server",
                    "docId": "kibListsPluginApi",
                    "section": "def-server.CreateExceptionListItemOptions",
                    "text": "CreateExceptionListItemOptions"
                  }
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 268
                }
              }
            ],
            "signature": [
              "({ comments, description, entries, itemId, listId, meta, name, namespaceType, osTypes, tags, type, }: ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.CreateExceptionListItemOptions",
                "text": "CreateExceptionListItemOptions"
              },
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
            ],
            "description": [],
            "label": "createExceptionListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 268
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.updateExceptionListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.updateExceptionListItem.$1",
                "type": "Object",
                "label": "{\n    _version,\n    comments,\n    description,\n    entries,\n    id,\n    itemId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "lists",
                    "scope": "server",
                    "docId": "kibListsPluginApi",
                    "section": "def-server.UpdateExceptionListItemOptions",
                    "text": "UpdateExceptionListItemOptions"
                  }
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 299
                }
              }
            ],
            "signature": [
              "({ _version, comments, description, entries, id, itemId, meta, name, namespaceType, osTypes, tags, type, }: ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.UpdateExceptionListItemOptions",
                "text": "UpdateExceptionListItemOptions"
              },
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [],
            "label": "updateExceptionListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 299
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.deleteExceptionListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.deleteExceptionListItem.$1",
                "type": "Object",
                "label": "{\n    id,\n    itemId,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "DeleteExceptionListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 332
                }
              }
            ],
            "signature": [
              "({ id, itemId, namespaceType, }: ",
              "DeleteExceptionListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [],
            "label": "deleteExceptionListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 332
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.deleteExceptionListItemById",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.deleteExceptionListItemById.$1",
                "type": "Object",
                "label": "{\n    id,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "DeleteExceptionListItemByIdOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 346
                }
              }
            ],
            "signature": [
              "({ id, namespaceType, }: ",
              "DeleteExceptionListItemByIdOptions",
              ") => Promise<void>"
            ],
            "description": [],
            "label": "deleteExceptionListItemById",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 346
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.deleteEndpointListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.deleteEndpointListItem.$1",
                "type": "Object",
                "label": "{\n    id,\n    itemId,\n  }",
                "isRequired": true,
                "signature": [
                  "DeleteEndpointListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 361
                }
              }
            ],
            "signature": [
              "({ id, itemId, }: ",
              "DeleteEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "description": [
              "\nThis is the same as \"deleteExceptionListItem\" except it applies specifically to the endpoint list."
            ],
            "label": "deleteEndpointListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 361
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.findExceptionListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.findExceptionListItem.$1",
                "type": "Object",
                "label": "{\n    listId,\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "FindExceptionListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 374
                }
              }
            ],
            "signature": [
              "({ listId, filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "description": [],
            "label": "findExceptionListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 374
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.findExceptionListsItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.findExceptionListsItem.$1",
                "type": "Object",
                "label": "{\n    listId,\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "FindExceptionListsItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 396
                }
              }
            ],
            "signature": [
              "({ listId, filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListsItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "description": [],
            "label": "findExceptionListsItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 396
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.findValueListExceptionListItems",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.findValueListExceptionListItems.$1",
                "type": "Object",
                "label": "{\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    valueListId,\n  }",
                "isRequired": true,
                "signature": [
                  "FindValueListExceptionListsItems"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 418
                }
              }
            ],
            "signature": [
              "({ perPage, page, sortField, sortOrder, valueListId, }: ",
              "FindValueListExceptionListsItems",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "description": [],
            "label": "findValueListExceptionListItems",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 418
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.findExceptionList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.findExceptionList.$1",
                "type": "Object",
                "label": "{\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "isRequired": true,
                "signature": [
                  "FindExceptionListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 436
                }
              }
            ],
            "signature": [
              "({ filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListOptions",
              ") => Promise<{ data: { _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }[]; page: number; per_page: number; total: number; }>"
            ],
            "description": [],
            "label": "findExceptionList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 436
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ExceptionListClient.findEndpointListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ExceptionListClient.findEndpointListItem.$1",
                "type": "Object",
                "label": "{\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n  }",
                "isRequired": true,
                "signature": [
                  "FindEndpointListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 464
                }
              }
            ],
            "signature": [
              "({ filter, perPage, page, sortField, sortOrder, }: ",
              "FindEndpointListItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "description": [
              "\nThis is the same as \"findExceptionList\" except it applies specifically to the  endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the  endpoint\nbeing there if it did not exist before. If the list did not exist before, then creating it here should give you\na good guarantee that you will get an empty record set rather than null. I keep the null as the return value in\nthe off chance that you still might somehow not get into a race condition where the  endpoint list does\nnot exist because someone deleted it in-between the initial create and then the find."
            ],
            "label": "findEndpointListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 464
            },
            "tags": [],
            "returnComment": []
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
          "lineNumber": 56
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ListClient",
        "type": "Class",
        "tags": [],
        "label": "ListClient",
        "description": [],
        "children": [
          {
            "id": "def-server.ListClient.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.ListClient.Unnamed.$1",
                "type": "Object",
                "label": "{ spaceId, user, config, esClient }",
                "isRequired": true,
                "signature": [
                  "ConstructorOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 85
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 85
            }
          },
          {
            "id": "def-server.ListClient.getListIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => string"
            ],
            "description": [],
            "label": "getListIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 92
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => string"
            ],
            "description": [],
            "label": "getListItemIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 100
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.getList.$1",
                "type": "Object",
                "label": "{ id }",
                "isRequired": true,
                "signature": [
                  "GetListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 108
                }
              }
            ],
            "signature": [
              "({ id }: ",
              "GetListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "getList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 108
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.createList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.createList.$1",
                "type": "Object",
                "label": "{\n    id,\n    deserializer,\n    immutable,\n    serializer,\n    name,\n    description,\n    type,\n    meta,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "CreateListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 114
                }
              }
            ],
            "signature": [
              "({ id, deserializer, immutable, serializer, name, description, type, meta, version, }: ",
              "CreateListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "description": [],
            "label": "createList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 114
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.createListIfItDoesNotExist",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.createListIfItDoesNotExist.$1",
                "type": "Object",
                "label": "{\n    id,\n    deserializer,\n    serializer,\n    name,\n    description,\n    immutable,\n    type,\n    meta,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "CreateListIfItDoesNotExistOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 143
                }
              }
            ],
            "signature": [
              "({ id, deserializer, serializer, name, description, immutable, type, meta, version, }: ",
              "CreateListIfItDoesNotExistOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "description": [],
            "label": "createListIfItDoesNotExist",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 143
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListIndexExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListIndexExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 172
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemIndexExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListItemIndexExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 178
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.createListBootStrapIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "createListBootStrapIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 184
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.createListItemBootStrapIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "createListItemBootStrapIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 190
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListPolicyExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListPolicyExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 196
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemPolicyExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListItemPolicyExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 202
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListTemplateExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListTemplateExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 208
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemTemplateExists",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "getListItemTemplateExists",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 214
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Record<string, unknown>"
            ],
            "description": [],
            "label": "getListTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 220
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Record<string, unknown>"
            ],
            "description": [],
            "label": "getListItemTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 225
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.setListTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "setListTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 230
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.setListItemTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "setListItemTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 237
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.setListPolicy",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "setListPolicy",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 244
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.setListItemPolicy",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "setListItemPolicy",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 250
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "deleteListIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 256
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListItemIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "description": [],
            "label": "deleteListItemIndex",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 262
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListPolicy",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "deleteListPolicy",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 268
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListItemPolicy",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "deleteListItemPolicy",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 274
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "deleteListTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 280
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListItemTemplate",
            "type": "Function",
            "children": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "description": [],
            "label": "deleteListItemTemplate",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 286
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.deleteListItem.$1",
                "type": "Object",
                "label": "{ id }",
                "isRequired": true,
                "signature": [
                  "DeleteListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 292
                }
              }
            ],
            "signature": [
              "({ id }: ",
              "DeleteListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "description": [],
            "label": "deleteListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 292
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteListItemByValue",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.deleteListItemByValue.$1",
                "type": "Object",
                "label": "{\n    listId,\n    value,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  "DeleteListItemByValueOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 298
                }
              }
            ],
            "signature": [
              "({ listId, value, type, }: ",
              "DeleteListItemByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "description": [],
            "label": "deleteListItemByValue",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 298
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.deleteList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.deleteList.$1",
                "type": "Object",
                "label": "{ id }",
                "isRequired": true,
                "signature": [
                  "DeleteListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 314
                }
              }
            ],
            "signature": [
              "({ id }: ",
              "DeleteListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "deleteList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 314
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.exportListItemsToStream",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.exportListItemsToStream.$1",
                "type": "Object",
                "label": "{\n    stringToAppend,\n    listId,\n    stream,\n  }",
                "isRequired": true,
                "signature": [
                  "ExportListItemsToStreamOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 326
                }
              }
            ],
            "signature": [
              "({ stringToAppend, listId, stream, }: ",
              "ExportListItemsToStreamOptions",
              ") => void"
            ],
            "description": [],
            "label": "exportListItemsToStream",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 326
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.importListItemsToStream",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.importListItemsToStream.$1",
                "type": "Object",
                "label": "{\n    deserializer,\n    serializer,\n    type,\n    listId,\n    stream,\n    meta,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "ImportListItemsToStreamOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 342
                }
              }
            ],
            "signature": [
              "({ deserializer, serializer, type, listId, stream, meta, version, }: ",
              "ImportListItemsToStreamOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "importListItemsToStream",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 342
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemByValue",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.getListItemByValue.$1",
                "type": "Object",
                "label": "{\n    listId,\n    value,\n    type,\n  }",
                "isRequired": true,
                "signature": [
                  "GetListItemByValueOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 370
                }
              }
            ],
            "signature": [
              "({ listId, value, type, }: ",
              "GetListItemByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "description": [],
            "label": "getListItemByValue",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 370
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.createListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.createListItem.$1",
                "type": "Object",
                "label": "{\n    id,\n    deserializer,\n    serializer,\n    listId,\n    value,\n    type,\n    meta,\n  }",
                "isRequired": true,
                "signature": [
                  "CreateListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 386
                }
              }
            ],
            "signature": [
              "({ id, deserializer, serializer, listId, value, type, meta, }: ",
              "CreateListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "description": [],
            "label": "createListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 386
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.updateListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.updateListItem.$1",
                "type": "Object",
                "label": "{\n    _version,\n    id,\n    value,\n    meta,\n  }",
                "isRequired": true,
                "signature": [
                  "UpdateListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 411
                }
              }
            ],
            "signature": [
              "({ _version, id, value, meta, }: ",
              "UpdateListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "description": [],
            "label": "updateListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 411
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.updateList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.updateList.$1",
                "type": "Object",
                "label": "{\n    _version,\n    id,\n    name,\n    description,\n    meta,\n    version,\n  }",
                "isRequired": true,
                "signature": [
                  "UpdateListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 430
                }
              }
            ],
            "signature": [
              "({ _version, id, name, description, meta, version, }: ",
              "UpdateListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "description": [],
            "label": "updateList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 430
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.getListItem.$1",
                "type": "Object",
                "label": "{ id }",
                "isRequired": true,
                "signature": [
                  "GetListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 453
                }
              }
            ],
            "signature": [
              "({ id }: ",
              "GetListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "description": [],
            "label": "getListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 453
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.getListItemByValues",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.getListItemByValues.$1",
                "type": "Object",
                "label": "{\n    type,\n    listId,\n    value,\n  }",
                "isRequired": true,
                "signature": [
                  "GetListItemsByValueOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 463
                }
              }
            ],
            "signature": [
              "({ type, listId, value, }: ",
              "GetListItemsByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "description": [],
            "label": "getListItemByValues",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 463
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.searchListItemByValues",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.searchListItemByValues.$1",
                "type": "Object",
                "label": "{\n    type,\n    listId,\n    value,\n  }",
                "isRequired": true,
                "signature": [
                  "SearchListItemByValuesOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 479
                }
              }
            ],
            "signature": [
              "({ type, listId, value, }: ",
              "SearchListItemByValuesOptions",
              ") => Promise<{ items: { _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]; value: unknown; }[]>"
            ],
            "description": [],
            "label": "searchListItemByValues",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 479
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.findList",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.findList.$1",
                "type": "Object",
                "label": "{\n    filter,\n    currentIndexPosition,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    searchAfter,\n  }",
                "isRequired": true,
                "signature": [
                  "FindListOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 495
                }
              }
            ],
            "signature": [
              "({ filter, currentIndexPosition, perPage, page, sortField, sortOrder, searchAfter, }: ",
              "FindListOptions",
              ") => Promise<{ cursor: string; data: { _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }[]; page: number; per_page: number; total: number; }>"
            ],
            "description": [],
            "label": "findList",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 495
            },
            "tags": [],
            "returnComment": []
          },
          {
            "id": "def-server.ListClient.findListItem",
            "type": "Function",
            "children": [
              {
                "id": "def-server.ListClient.findListItem.$1",
                "type": "Object",
                "label": "{\n    listId,\n    filter,\n    currentIndexPosition,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    searchAfter,\n  }",
                "isRequired": true,
                "signature": [
                  "FindListItemOptions"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 519
                }
              }
            ],
            "signature": [
              "({ listId, filter, currentIndexPosition, perPage, page, sortField, sortOrder, searchAfter, }: ",
              "FindListItemOptions",
              ") => Promise<{ cursor: string; data: { _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "description": [],
            "label": "findListItem",
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 519
            },
            "tags": [],
            "returnComment": []
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
          "lineNumber": 79
        },
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "id": "def-server.CreateExceptionListItemOptions",
        "type": "Interface",
        "label": "CreateExceptionListItemOptions",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.comments",
            "type": "Array",
            "label": "comments",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 118
            },
            "signature": [
              "{ comment: string; }[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.entries",
            "type": "Array",
            "label": "entries",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 119
            },
            "signature": [
              "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.itemId",
            "type": "string",
            "label": "itemId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 120
            }
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.listId",
            "type": "string",
            "label": "listId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 121
            }
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.namespaceType",
            "type": "CompoundType",
            "label": "namespaceType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 122
            },
            "signature": [
              "\"single\" | \"agnostic\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.name",
            "type": "string",
            "label": "name",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 123
            }
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.osTypes",
            "type": "Array",
            "label": "osTypes",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 124
            },
            "signature": [
              "(\"windows\" | \"linux\" | \"macos\")[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.description",
            "type": "string",
            "label": "description",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 125
            }
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.meta",
            "type": "Uncategorized",
            "label": "meta",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 126
            },
            "signature": [
              "object | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.tags",
            "type": "Array",
            "label": "tags",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 127
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.CreateExceptionListItemOptions.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 128
            },
            "signature": [
              "\"simple\""
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
          "lineNumber": 117
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ListPluginSetup",
        "type": "Interface",
        "label": "ListPluginSetup",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.ListPluginSetup.getExceptionListClient",
            "type": "Function",
            "label": "getExceptionListClient",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 41
            },
            "signature": [
              "GetExceptionListClientType"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ListPluginSetup.getListClient",
            "type": "Function",
            "label": "getListClient",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 42
            },
            "signature": [
              "GetListClientType"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/types.ts",
          "lineNumber": 40
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ListsApiRequestHandlerContext",
        "type": "Interface",
        "label": "ListsApiRequestHandlerContext",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ListsApiRequestHandlerContext.getListClient",
            "type": "Function",
            "label": "getListClient",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 49
            },
            "signature": [
              "() => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ListClient",
                "text": "ListClient"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.ListsApiRequestHandlerContext.getExceptionListClient",
            "type": "Function",
            "label": "getExceptionListClient",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 50
            },
            "signature": [
              "() => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ExceptionListClient",
                "text": "ExceptionListClient"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/types.ts",
          "lineNumber": 48
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.UpdateExceptionListItemOptions",
        "type": "Interface",
        "label": "UpdateExceptionListItemOptions",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions._version",
            "type": "string",
            "label": "_version",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 144
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.comments",
            "type": "Array",
            "label": "comments",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 145
            },
            "signature": [
              "({ comment: string; } & { id?: string | undefined; })[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.entries",
            "type": "Array",
            "label": "entries",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 146
            },
            "signature": [
              "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 147
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.itemId",
            "type": "string",
            "label": "itemId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 148
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.namespaceType",
            "type": "CompoundType",
            "label": "namespaceType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 149
            },
            "signature": [
              "\"single\" | \"agnostic\""
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.name",
            "type": "string",
            "label": "name",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 150
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.osTypes",
            "type": "Array",
            "label": "osTypes",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 151
            },
            "signature": [
              "(\"windows\" | \"linux\" | \"macos\")[]"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.description",
            "type": "string",
            "label": "description",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 152
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.meta",
            "type": "Uncategorized",
            "label": "meta",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 153
            },
            "signature": [
              "object | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.tags",
            "type": "Array",
            "label": "tags",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 154
            },
            "signature": [
              "string[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.UpdateExceptionListItemOptions.type",
            "type": "string",
            "label": "type",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 155
            },
            "signature": [
              "\"simple\" | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
          "lineNumber": 143
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "id": "def-common.buildExceptionFilter",
        "type": "Function",
        "children": [
          {
            "id": "def-common.buildExceptionFilter.$1.listsexcludeExceptionschunkSize",
            "type": "Object",
            "label": "{\n  lists,\n  excludeExceptions,\n  chunkSize,\n}",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-common.buildExceptionFilter.$1.listsexcludeExceptionschunkSize.lists",
                "type": "Array",
                "label": "lists",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/common/exceptions/build_exceptions_filter.ts",
                  "lineNumber": 74
                },
                "signature": [
                  "(({ description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; list_id: string; name: string; type: \"simple\"; } & { comments?: { comment: string; }[] | undefined; item_id?: string | undefined; meta?: object | undefined; namespace_type?: \"single\" | \"agnostic\" | undefined; os_types?: (\"windows\" | \"linux\" | \"macos\")[] | undefined; tags?: string[] | undefined; }) | { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; })[]"
                ]
              },
              {
                "tags": [],
                "id": "def-common.buildExceptionFilter.$1.listsexcludeExceptionschunkSize.excludeExceptions",
                "type": "boolean",
                "label": "excludeExceptions",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/common/exceptions/build_exceptions_filter.ts",
                  "lineNumber": 75
                }
              },
              {
                "tags": [],
                "id": "def-common.buildExceptionFilter.$1.listsexcludeExceptionschunkSize.chunkSize",
                "type": "number",
                "label": "chunkSize",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/common/exceptions/build_exceptions_filter.ts",
                  "lineNumber": 76
                }
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/common/exceptions/build_exceptions_filter.ts",
              "lineNumber": 73
            }
          }
        ],
        "signature": [
          "({ lists, excludeExceptions, chunkSize, }: { lists: (({ description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; list_id: string; name: string; type: \"simple\"; } & { comments?: { comment: string; }[] | undefined; item_id?: string | undefined; meta?: object | undefined; namespace_type?: \"single\" | \"agnostic\" | undefined; os_types?: (\"windows\" | \"linux\" | \"macos\")[] | undefined; tags?: string[] | undefined; }) | { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; })[]; excludeExceptions: boolean; chunkSize: number; }) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataPluginApi",
            "section": "def-common.Filter",
            "text": "Filter"
          },
          " | undefined"
        ],
        "description": [],
        "label": "buildExceptionFilter",
        "source": {
          "path": "x-pack/plugins/lists/common/exceptions/build_exceptions_filter.ts",
          "lineNumber": 69
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [
      {
        "id": "def-common.ExceptionListTypeEnum",
        "type": "Enum",
        "label": "ExceptionListTypeEnum",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 223
        },
        "initialIsOpen": false
      },
      {
        "id": "def-common.OperatorEnum",
        "type": "Enum",
        "label": "OperatorEnum",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 281
        },
        "initialIsOpen": false
      },
      {
        "id": "def-common.OperatorTypeEnum",
        "type": "Enum",
        "label": "OperatorTypeEnum",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 286
        },
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "id": "def-common.Comment",
        "type": "Type",
        "label": "Comment",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/comment.ts",
          "lineNumber": 32
        },
        "signature": [
          "{ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.CommentsArray",
        "type": "Type",
        "label": "CommentsArray",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/comment.ts",
          "lineNumber": 31
        },
        "signature": [
          "({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.CreateComment",
        "type": "Type",
        "label": "CreateComment",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/create_comment.ts",
          "lineNumber": 18
        },
        "signature": [
          "{ comment: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.CreateCommentsArray",
        "type": "Type",
        "label": "CreateCommentsArray",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/create_comment.ts",
          "lineNumber": 20
        },
        "signature": [
          "{ comment: string; }[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.CreateExceptionListItemSchema",
        "type": "Type",
        "label": "CreateExceptionListItemSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/request/create_exception_list_item_schema.ts",
          "lineNumber": 55
        },
        "signature": [
          "{ description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; list_id: string; name: string; type: \"simple\"; } & { comments?: { comment: string; }[] | undefined; item_id?: string | undefined; meta?: object | undefined; namespace_type?: \"single\" | \"agnostic\" | undefined; os_types?: (\"windows\" | \"linux\" | \"macos\")[] | undefined; tags?: string[] | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.CreateExceptionListSchema",
        "type": "Type",
        "label": "CreateExceptionListSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/request/create_exception_list_schema.ts",
          "lineNumber": 50
        },
        "signature": [
          "{ description: string; name: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; } & { list_id?: string | undefined; meta?: object | undefined; namespace_type?: \"single\" | \"agnostic\" | undefined; os_types?: (\"windows\" | \"linux\" | \"macos\")[] | undefined; tags?: string[] | undefined; version?: number | undefined; }"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.ENDPOINT_LIST_ID",
        "type": "string",
        "label": "ENDPOINT_LIST_ID",
        "description": [
          "\nThis ID is used for _both_ the Saved Object ID and for the list_id\nfor the single global space agnostic endpoint list"
        ],
        "source": {
          "path": "x-pack/plugins/lists/common/constants.ts",
          "lineNumber": 45
        },
        "signature": [
          "\"endpoint_list\""
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.ENDPOINT_TRUSTED_APPS_LIST_ID",
        "type": "string",
        "label": "ENDPOINT_TRUSTED_APPS_LIST_ID",
        "description": [
          "ID of trusted apps agnostic list"
        ],
        "source": {
          "path": "x-pack/plugins/lists/common/constants.ts",
          "lineNumber": 56
        },
        "signature": [
          "\"endpoint_trusted_apps\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntriesArray",
        "type": "Type",
        "label": "EntriesArray",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entries.ts",
          "lineNumber": 22
        },
        "signature": [
          "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.Entry",
        "type": "Type",
        "label": "Entry",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entries.ts",
          "lineNumber": 17
        },
        "signature": [
          "{ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntryExists",
        "type": "Type",
        "label": "EntryExists",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_exists.ts",
          "lineNumber": 20
        },
        "signature": [
          "{ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntryList",
        "type": "Type",
        "label": "EntryList",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_list.ts",
          "lineNumber": 21
        },
        "signature": [
          "{ field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntryMatch",
        "type": "Type",
        "label": "EntryMatch",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_match.ts",
          "lineNumber": 21
        },
        "signature": [
          "{ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntryMatchAny",
        "type": "Type",
        "label": "EntryMatchAny",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_match_any.ts",
          "lineNumber": 23
        },
        "signature": [
          "{ field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.EntryNested",
        "type": "Type",
        "label": "EntryNested",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_nested.ts",
          "lineNumber": 21
        },
        "signature": [
          "{ entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.ExceptionListItemSchema",
        "type": "Type",
        "label": "ExceptionListItemSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/response/exception_list_item_schema.ts",
          "lineNumber": 53
        },
        "signature": [
          "{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.ExceptionListSchema",
        "type": "Type",
        "label": "ExceptionListSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/response/exception_list_schema.ts",
          "lineNumber": 52
        },
        "signature": [
          "{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.ExceptionListType",
        "type": "Type",
        "label": "ExceptionListType",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 221
        },
        "signature": [
          "\"endpoint\" | \"detection\" | \"endpoint_events\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.ListSchema",
        "type": "Type",
        "label": "ListSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/response/list_schema.ts",
          "lineNumber": 48
        },
        "signature": [
          "{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.NamespaceType",
        "type": "Type",
        "label": "NamespaceType",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/default_namespace.ts",
          "lineNumber": 12
        },
        "signature": [
          "\"single\" | \"agnostic\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.NestedEntriesArray",
        "type": "Type",
        "label": "NestedEntriesArray",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/non_empty_nested_entries_array.ts",
          "lineNumber": 17
        },
        "signature": [
          "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.Operator",
        "type": "Type",
        "label": "Operator",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 280
        },
        "signature": [
          "\"excluded\" | \"included\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.OsTypeArray",
        "type": "Type",
        "label": "OsTypeArray",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 330
        },
        "signature": [
          "(\"windows\" | \"linux\" | \"macos\")[]"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.Type",
        "type": "Type",
        "label": "Type",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 123
        },
        "signature": [
          "\"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.UpdateExceptionListItemSchema",
        "type": "Type",
        "label": "UpdateExceptionListItemSchema",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/request/update_exception_list_item_schema.ts",
          "lineNumber": 55
        },
        "signature": [
          "{ description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"text\" | \"keyword\" | \"ip\" | \"long\" | \"double\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"short\" | \"binary\" | \"date_range\" | \"ip_range\" | \"shape\" | \"integer\" | \"byte\" | \"float\" | \"half_float\" | \"integer_range\" | \"float_range\" | \"long_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[]; field: string; type: \"nested\"; })[]; name: string; type: \"simple\"; } & { _version?: string | undefined; comments?: ({ comment: string; } & { id?: string | undefined; })[] | undefined; id?: string | undefined; item_id?: string | undefined; meta?: object | undefined; namespace_type?: \"single\" | \"agnostic\" | undefined; os_types?: (\"windows\" | \"linux\" | \"macos\")[] | undefined; tags?: string[] | undefined; }"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "tags": [],
        "id": "def-common.comment",
        "type": "Object",
        "label": "comment",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/comment.ts",
          "lineNumber": 13
        },
        "signature": [
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ comment: ",
          "Type",
          "<string, string, unknown>; created_at: ",
          "StringC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.createExceptionListItemSchema",
        "type": "Object",
        "label": "createExceptionListItemSchema",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/request/create_exception_list_item_schema.ts",
          "lineNumber": 33
        },
        "signature": [
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ description: ",
          "StringC",
          "; entries: ",
          "Type"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entriesExists",
        "type": "Object",
        "label": "entriesExists",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_exists.ts",
          "lineNumber": 13
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; operator: ",
          "KeyofC",
          "<{ excluded: null; included: null; }>; type: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entriesList",
        "type": "Object",
        "label": "entriesList",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_list.ts",
          "lineNumber": 13
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; list: ",
          "ExactC",
          "<",
          "TypeC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entriesMatch",
        "type": "Object",
        "label": "entriesMatch",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_match.ts",
          "lineNumber": 13
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; operator: ",
          "KeyofC",
          "<{ excluded: null; included: null; }>; type: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entriesMatchAny",
        "type": "Object",
        "label": "entriesMatchAny",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_match_any.ts",
          "lineNumber": 15
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; operator: ",
          "KeyofC",
          "<{ excluded: null; included: null; }>; type: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entriesNested",
        "type": "Object",
        "label": "entriesNested",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entry_nested.ts",
          "lineNumber": 14
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ entries: ",
          "Type",
          "<({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[], ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; })[], unknown>; field: ",
          "Type",
          "<string, string, unknown>; type: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.entry",
        "type": "Object",
        "label": "entry",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/entries.ts",
          "lineNumber": 16
        },
        "signature": [
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; operator: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.exceptionListItemSchema",
        "type": "Object",
        "label": "exceptionListItemSchema",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/response/exception_list_item_schema.ts",
          "lineNumber": 30
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ _version: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.exceptionListType",
        "type": "Object",
        "label": "exceptionListType",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 215
        },
        "signature": [
          "KeyofC",
          "<{ detection: null; endpoint: null; endpoint_events: null; }>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.listSchema",
        "type": "Object",
        "label": "listSchema",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/response/list_schema.ts",
          "lineNumber": 28
        },
        "signature": [
          "ExactC",
          "<",
          "TypeC",
          "<{ _version: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.namespaceType",
        "type": "Object",
        "label": "namespaceType",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/default_namespace.ts",
          "lineNumber": 11
        },
        "signature": [
          "KeyofC",
          "<{ agnostic: null; single: null; }>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.nestedEntryItem",
        "type": "Object",
        "label": "nestedEntryItem",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/types/non_empty_nested_entries_array.ts",
          "lineNumber": 15
        },
        "signature": [
          "UnionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ field: ",
          "Type",
          "<string, string, unknown>; operator: ",
          "KeyofC"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.osType",
        "type": "Object",
        "label": "osType",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 322
        },
        "signature": [
          "KeyofC",
          "<{ linux: null; macos: null; windows: null; }>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.osTypeArray",
        "type": "Object",
        "label": "osTypeArray",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/common/schemas/common/schemas.ts",
          "lineNumber": 329
        },
        "signature": [
          "Type",
          "<(\"windows\" | \"linux\" | \"macos\")[], (\"windows\" | \"linux\" | \"macos\")[] | undefined, unknown>"
        ],
        "initialIsOpen": false
      }
    ]
  }
}