{
  "id": "lists",
  "client": {
    "classes": [
      {
        "parentPluginId": "lists",
        "id": "def-public.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.PluginSetup",
            "text": "PluginSetup"
          },
          ", ",
          {
            "pluginId": "lists",
            "scope": "public",
            "docId": "kibListsPluginApi",
            "section": "def-public.PluginStart",
            "text": "PluginStart"
          },
          ", ",
          "SetupPlugins",
          ", ",
          "StartPlugins",
          ">"
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/plugin.ts",
          "lineNumber": 17
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-public.Plugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 19
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-public.Plugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<object>"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 19
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-public.Plugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "StartPlugins",
              ", ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              },
              ">, plugins: ",
              "SetupPlugins",
              ") => ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginSetup",
                "text": "PluginSetup"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 22
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-public.Plugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "StartPlugins",
                  ", ",
                  {
                    "pluginId": "lists",
                    "scope": "public",
                    "docId": "kibListsPluginApi",
                    "section": "def-public.PluginStart",
                    "text": "PluginStart"
                  },
                  ">"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 22
                },
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "lists",
                "id": "def-public.Plugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "SetupPlugins"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 22
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-public.Plugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => ",
              {
                "pluginId": "lists",
                "scope": "public",
                "docId": "kibListsPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/public/plugin.ts",
              "lineNumber": 27
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-public.Plugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 27
                },
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "lists",
                "id": "def-public.Plugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "StartPlugins"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/public/plugin.ts",
                  "lineNumber": 27
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "parentPluginId": "lists",
        "id": "def-public.ExceptionBuilder",
        "type": "Object",
        "tags": [],
        "label": "ExceptionBuilder",
        "description": [],
        "signature": [
          "typeof ",
          "x-pack/plugins/lists/public/exceptions/components/builder/index"
        ],
        "source": {
          "path": "x-pack/plugins/lists/public/shared_exports.ts",
          "lineNumber": 10
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "lists",
      "id": "def-public.PluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "PluginSetup",
      "description": [],
      "source": {
        "path": "x-pack/plugins/lists/public/types.ts",
        "lineNumber": 9
      },
      "deprecated": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "lists",
      "id": "def-public.PluginStart",
      "type": "Interface",
      "tags": [],
      "label": "PluginStart",
      "description": [],
      "source": {
        "path": "x-pack/plugins/lists/public/types.ts",
        "lineNumber": 11
      },
      "deprecated": false,
      "children": [],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "lists",
        "id": "def-server.ExceptionListClient",
        "type": "Class",
        "tags": [],
        "label": "ExceptionListClient",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
          "lineNumber": 59
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 64
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{ user, savedObjectsClient }",
                "description": [],
                "signature": [
                  "ConstructorOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 64
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.getExceptionList",
            "type": "Function",
            "tags": [],
            "label": "getExceptionList",
            "description": [],
            "signature": [
              "({ listId, id, namespaceType, }: ",
              "GetExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 69
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.getExceptionList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    id,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "GetExceptionListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 69
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.getExceptionListSummary",
            "type": "Function",
            "tags": [],
            "label": "getExceptionListSummary",
            "description": [],
            "signature": [
              "({ listId, id, namespaceType, }: ",
              "GetExceptionListSummaryOptions",
              ") => Promise<{ windows: number; linux: number; macos: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 78
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.getExceptionListSummary.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    id,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "GetExceptionListSummaryOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 78
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.getExceptionListItem",
            "type": "Function",
            "tags": [],
            "label": "getExceptionListItem",
            "description": [],
            "signature": [
              "({ itemId, id, namespaceType, }: ",
              "GetExceptionListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 87
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.getExceptionListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    itemId,\n    id,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "GetExceptionListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 87
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createEndpointList",
            "type": "Function",
            "tags": [],
            "label": "createEndpointList",
            "description": [
              "\nThis creates an agnostic space endpoint list if it does not exist. This tries to be\nas fast as possible by ignoring conflict errors and not returning the contents of the\nlist if it already exists."
            ],
            "signature": [
              "() => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 102
            },
            "deprecated": false,
            "children": [],
            "returnComment": [
              "ExceptionListSchema if it created the endpoint list, otherwise null if it already exists"
            ]
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createTrustedAppsList",
            "type": "Function",
            "tags": [],
            "label": "createTrustedAppsList",
            "description": [
              "\nCreate the Trusted Apps Agnostic list if it does not yet exist (`null` is returned if it does exist)"
            ],
            "signature": [
              "() => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 114
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createEndpointEventFiltersList",
            "type": "Function",
            "tags": [],
            "label": "createEndpointEventFiltersList",
            "description": [
              "\nCreate the Endpoint Event Filters Agnostic list if it does not yet exist (`null` is returned if it does exist)"
            ],
            "signature": [
              "() => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 126
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createEndpointListItem",
            "type": "Function",
            "tags": [],
            "label": "createEndpointListItem",
            "description": [
              "\nThis is the same as \"createListItem\" except it applies specifically to the agnostic endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the agnostic endpoint\nbeing there and existing before the item is inserted into the agnostic endpoint list."
            ],
            "signature": [
              "({ comments, description, entries, itemId, meta, name, osTypes, tags, type, }: ",
              "CreateEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 140
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.createEndpointListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    comments,\n    description,\n    entries,\n    itemId,\n    meta,\n    name,\n    osTypes,\n    tags,\n    type,\n  }",
                "description": [],
                "signature": [
                  "CreateEndpointListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 140
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.updateEndpointListItem",
            "type": "Function",
            "tags": [],
            "label": "updateEndpointListItem",
            "description": [
              "\nThis is the same as \"updateExceptionListItem\" except it applies specifically to the endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the endpoint\nbeing there if it did not exist before. If the list did not exist before, then creating it here will still cause a\nreturn of null but at least the list exists again."
            ],
            "signature": [
              "({ _version, comments, description, entries, id, itemId, meta, name, osTypes, tags, type, }: ",
              "UpdateEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 176
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.updateEndpointListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    _version,\n    comments,\n    description,\n    entries,\n    id,\n    itemId,\n    meta,\n    name,\n    osTypes,\n    tags,\n    type,\n  }",
                "description": [],
                "signature": [
                  "UpdateEndpointListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 176
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.getEndpointListItem",
            "type": "Function",
            "tags": [],
            "label": "getEndpointListItem",
            "description": [
              "\nThis is the same as \"getExceptionListItem\" except it applies specifically to the endpoint list."
            ],
            "signature": [
              "({ itemId, id, }: ",
              "GetEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 212
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.getEndpointListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    itemId,\n    id,\n  }",
                "description": [],
                "signature": [
                  "GetEndpointListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 212
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createExceptionList",
            "type": "Function",
            "tags": [],
            "label": "createExceptionList",
            "description": [],
            "signature": [
              "({ description, immutable, listId, meta, name, namespaceType, tags, type, version, }: ",
              "CreateExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 220
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.createExceptionList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    description,\n    immutable,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    tags,\n    type,\n    version,\n  }",
                "description": [],
                "signature": [
                  "CreateExceptionListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 220
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.updateExceptionList",
            "type": "Function",
            "tags": [],
            "label": "updateExceptionList",
            "description": [],
            "signature": [
              "({ _version, id, description, listId, meta, name, namespaceType, osTypes, tags, type, version, }: ",
              "UpdateExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 247
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.updateExceptionList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    _version,\n    id,\n    description,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n    version,\n  }",
                "description": [],
                "signature": [
                  "UpdateExceptionListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 247
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.deleteExceptionList",
            "type": "Function",
            "tags": [],
            "label": "deleteExceptionList",
            "description": [],
            "signature": [
              "({ id, listId, namespaceType, }: ",
              "DeleteExceptionListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 278
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.deleteExceptionList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    listId,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "DeleteExceptionListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 278
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.createExceptionListItem",
            "type": "Function",
            "tags": [],
            "label": "createExceptionListItem",
            "description": [],
            "signature": [
              "({ comments, description, entries, itemId, listId, meta, name, namespaceType, osTypes, tags, type, }: ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.CreateExceptionListItemOptions",
                "text": "CreateExceptionListItemOptions"
              },
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 292
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.createExceptionListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    comments,\n    description,\n    entries,\n    itemId,\n    listId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n  }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "lists",
                    "scope": "server",
                    "docId": "kibListsPluginApi",
                    "section": "def-server.CreateExceptionListItemOptions",
                    "text": "CreateExceptionListItemOptions"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 292
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.updateExceptionListItem",
            "type": "Function",
            "tags": [],
            "label": "updateExceptionListItem",
            "description": [],
            "signature": [
              "({ _version, comments, description, entries, id, itemId, meta, name, namespaceType, osTypes, tags, type, }: ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.UpdateExceptionListItemOptions",
                "text": "UpdateExceptionListItemOptions"
              },
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 323
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.updateExceptionListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    _version,\n    comments,\n    description,\n    entries,\n    id,\n    itemId,\n    meta,\n    name,\n    namespaceType,\n    osTypes,\n    tags,\n    type,\n  }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "lists",
                    "scope": "server",
                    "docId": "kibListsPluginApi",
                    "section": "def-server.UpdateExceptionListItemOptions",
                    "text": "UpdateExceptionListItemOptions"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 323
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.deleteExceptionListItem",
            "type": "Function",
            "tags": [],
            "label": "deleteExceptionListItem",
            "description": [],
            "signature": [
              "({ id, itemId, namespaceType, }: ",
              "DeleteExceptionListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 356
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.deleteExceptionListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    itemId,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "DeleteExceptionListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 356
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.deleteExceptionListItemById",
            "type": "Function",
            "tags": [],
            "label": "deleteExceptionListItemById",
            "description": [],
            "signature": [
              "({ id, namespaceType, }: ",
              "DeleteExceptionListItemByIdOptions",
              ") => Promise<void>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 370
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.deleteExceptionListItemById.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "DeleteExceptionListItemByIdOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 370
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.deleteEndpointListItem",
            "type": "Function",
            "tags": [],
            "label": "deleteEndpointListItem",
            "description": [
              "\nThis is the same as \"deleteExceptionListItem\" except it applies specifically to the endpoint list."
            ],
            "signature": [
              "({ id, itemId, }: ",
              "DeleteEndpointListItemOptions",
              ") => Promise<{ _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 385
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.deleteEndpointListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    itemId,\n  }",
                "description": [],
                "signature": [
                  "DeleteEndpointListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 385
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.findExceptionListItem",
            "type": "Function",
            "tags": [],
            "label": "findExceptionListItem",
            "description": [],
            "signature": [
              "({ listId, filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 398
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.findExceptionListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "FindExceptionListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 398
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.findExceptionListsItem",
            "type": "Function",
            "tags": [],
            "label": "findExceptionListsItem",
            "description": [],
            "signature": [
              "({ listId, filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListsItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 420
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.findExceptionListsItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "FindExceptionListsItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 420
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.findValueListExceptionListItems",
            "type": "Function",
            "tags": [],
            "label": "findValueListExceptionListItems",
            "description": [],
            "signature": [
              "({ perPage, page, sortField, sortOrder, valueListId, }: ",
              "FindValueListExceptionListsItems",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 442
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.findValueListExceptionListItems.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    valueListId,\n  }",
                "description": [],
                "signature": [
                  "FindValueListExceptionListsItems"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 442
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.findExceptionList",
            "type": "Function",
            "tags": [],
            "label": "findExceptionList",
            "description": [],
            "signature": [
              "({ filter, perPage, page, sortField, sortOrder, namespaceType, }: ",
              "FindExceptionListOptions",
              ") => Promise<{ data: { _version: string | undefined; created_at: string; created_by: string; description: string; id: string; immutable: boolean; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"endpoint\" | \"detection\" | \"endpoint_events\"; updated_at: string; updated_by: string; version: number; }[]; page: number; per_page: number; total: number; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 460
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.findExceptionList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    namespaceType,\n  }",
                "description": [],
                "signature": [
                  "FindExceptionListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 460
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ExceptionListClient.findEndpointListItem",
            "type": "Function",
            "tags": [],
            "label": "findEndpointListItem",
            "description": [
              "\nThis is the same as \"findExceptionList\" except it applies specifically to the  endpoint list and will\nauto-call the \"createEndpointList\" for you so that you have the best chance of the  endpoint\nbeing there if it did not exist before. If the list did not exist before, then creating it here should give you\na good guarantee that you will get an empty record set rather than null. I keep the null as the return value in\nthe off chance that you still might somehow not get into a race condition where the  endpoint list does\nnot exist because someone deleted it in-between the initial create and then the find."
            ],
            "signature": [
              "({ filter, perPage, page, sortField, sortOrder, }: ",
              "FindEndpointListItemOptions",
              ") => Promise<{ data: { _version: string | undefined; comments: ({ comment: string; created_at: string; created_by: string; id: string; } & { updated_at?: string | undefined; updated_by?: string | undefined; })[]; created_at: string; created_by: string; description: string; entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]; id: string; item_id: string; list_id: string; meta: object | undefined; name: string; namespace_type: \"single\" | \"agnostic\"; os_types: (\"windows\" | \"linux\" | \"macos\")[]; tags: string[]; tie_breaker_id: string; type: \"simple\"; updated_at: string; updated_by: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
              "lineNumber": 488
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ExceptionListClient.findEndpointListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    filter,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n  }",
                "description": [],
                "signature": [
                  "FindEndpointListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.ts",
                  "lineNumber": 488
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "lists",
        "id": "def-server.ListClient",
        "type": "Class",
        "tags": [],
        "label": "ListClient",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
          "lineNumber": 79
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 85
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "{ spaceId, user, config, esClient }",
                "description": [],
                "signature": [
                  "ConstructorOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 85
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListIndex",
            "type": "Function",
            "tags": [],
            "label": "getListIndex",
            "description": [],
            "signature": [
              "() => string"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 92
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemIndex",
            "type": "Function",
            "tags": [],
            "label": "getListItemIndex",
            "description": [],
            "signature": [
              "() => string"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 100
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getList",
            "type": "Function",
            "tags": [],
            "label": "getList",
            "description": [],
            "signature": [
              "({ id }: ",
              "GetListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 108
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.getList.$1",
                "type": "Object",
                "tags": [],
                "label": "{ id }",
                "description": [],
                "signature": [
                  "GetListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 108
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.createList",
            "type": "Function",
            "tags": [],
            "label": "createList",
            "description": [],
            "signature": [
              "({ id, deserializer, immutable, serializer, name, description, type, meta, version, }: ",
              "CreateListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 114
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.createList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    deserializer,\n    immutable,\n    serializer,\n    name,\n    description,\n    type,\n    meta,\n    version,\n  }",
                "description": [],
                "signature": [
                  "CreateListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 114
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.createListIfItDoesNotExist",
            "type": "Function",
            "tags": [],
            "label": "createListIfItDoesNotExist",
            "description": [],
            "signature": [
              "({ id, deserializer, serializer, name, description, immutable, type, meta, version, }: ",
              "CreateListIfItDoesNotExistOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 143
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.createListIfItDoesNotExist.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    deserializer,\n    serializer,\n    name,\n    description,\n    immutable,\n    type,\n    meta,\n    version,\n  }",
                "description": [],
                "signature": [
                  "CreateListIfItDoesNotExistOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 143
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListIndexExists",
            "type": "Function",
            "tags": [],
            "label": "getListIndexExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 172
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemIndexExists",
            "type": "Function",
            "tags": [],
            "label": "getListItemIndexExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 178
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.createListBootStrapIndex",
            "type": "Function",
            "tags": [],
            "label": "createListBootStrapIndex",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 184
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.createListItemBootStrapIndex",
            "type": "Function",
            "tags": [],
            "label": "createListItemBootStrapIndex",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 190
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListPolicyExists",
            "type": "Function",
            "tags": [],
            "label": "getListPolicyExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 196
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemPolicyExists",
            "type": "Function",
            "tags": [],
            "label": "getListItemPolicyExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 202
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListTemplateExists",
            "type": "Function",
            "tags": [],
            "label": "getListTemplateExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 208
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemTemplateExists",
            "type": "Function",
            "tags": [],
            "label": "getListItemTemplateExists",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 214
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListTemplate",
            "type": "Function",
            "tags": [],
            "label": "getListTemplate",
            "description": [],
            "signature": [
              "() => Record<string, unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 220
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemTemplate",
            "type": "Function",
            "tags": [],
            "label": "getListItemTemplate",
            "description": [],
            "signature": [
              "() => Record<string, unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 225
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.setListTemplate",
            "type": "Function",
            "tags": [],
            "label": "setListTemplate",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 230
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.setListItemTemplate",
            "type": "Function",
            "tags": [],
            "label": "setListItemTemplate",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 237
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.setListPolicy",
            "type": "Function",
            "tags": [],
            "label": "setListPolicy",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 244
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.setListItemPolicy",
            "type": "Function",
            "tags": [],
            "label": "setListItemPolicy",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 250
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListIndex",
            "type": "Function",
            "tags": [],
            "label": "deleteListIndex",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 256
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListItemIndex",
            "type": "Function",
            "tags": [],
            "label": "deleteListItemIndex",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 262
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListPolicy",
            "type": "Function",
            "tags": [],
            "label": "deleteListPolicy",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 268
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListItemPolicy",
            "type": "Function",
            "tags": [],
            "label": "deleteListItemPolicy",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 274
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListTemplate",
            "type": "Function",
            "tags": [],
            "label": "deleteListTemplate",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 280
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListItemTemplate",
            "type": "Function",
            "tags": [],
            "label": "deleteListItemTemplate",
            "description": [],
            "signature": [
              "() => Promise<unknown>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 286
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListItem",
            "type": "Function",
            "tags": [],
            "label": "deleteListItem",
            "description": [],
            "signature": [
              "({ id }: ",
              "DeleteListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 292
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.deleteListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{ id }",
                "description": [],
                "signature": [
                  "DeleteListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 292
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteListItemByValue",
            "type": "Function",
            "tags": [],
            "label": "deleteListItemByValue",
            "description": [],
            "signature": [
              "({ listId, value, type, }: ",
              "DeleteListItemByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 298
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.deleteListItemByValue.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    value,\n    type,\n  }",
                "description": [],
                "signature": [
                  "DeleteListItemByValueOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 298
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.deleteList",
            "type": "Function",
            "tags": [],
            "label": "deleteList",
            "description": [],
            "signature": [
              "({ id }: ",
              "DeleteListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 314
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.deleteList.$1",
                "type": "Object",
                "tags": [],
                "label": "{ id }",
                "description": [],
                "signature": [
                  "DeleteListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 314
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.exportListItemsToStream",
            "type": "Function",
            "tags": [],
            "label": "exportListItemsToStream",
            "description": [],
            "signature": [
              "({ stringToAppend, listId, stream, }: ",
              "ExportListItemsToStreamOptions",
              ") => void"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 326
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.exportListItemsToStream.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    stringToAppend,\n    listId,\n    stream,\n  }",
                "description": [],
                "signature": [
                  "ExportListItemsToStreamOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 326
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.importListItemsToStream",
            "type": "Function",
            "tags": [],
            "label": "importListItemsToStream",
            "description": [],
            "signature": [
              "({ deserializer, serializer, type, listId, stream, meta, version, }: ",
              "ImportListItemsToStreamOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 342
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.importListItemsToStream.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    deserializer,\n    serializer,\n    type,\n    listId,\n    stream,\n    meta,\n    version,\n  }",
                "description": [],
                "signature": [
                  "ImportListItemsToStreamOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 342
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemByValue",
            "type": "Function",
            "tags": [],
            "label": "getListItemByValue",
            "description": [],
            "signature": [
              "({ listId, value, type, }: ",
              "GetListItemByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 370
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.getListItemByValue.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    value,\n    type,\n  }",
                "description": [],
                "signature": [
                  "GetListItemByValueOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 370
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.createListItem",
            "type": "Function",
            "tags": [],
            "label": "createListItem",
            "description": [],
            "signature": [
              "({ id, deserializer, serializer, listId, value, type, meta, }: ",
              "CreateListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 386
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.createListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    id,\n    deserializer,\n    serializer,\n    listId,\n    value,\n    type,\n    meta,\n  }",
                "description": [],
                "signature": [
                  "CreateListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 386
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.updateListItem",
            "type": "Function",
            "tags": [],
            "label": "updateListItem",
            "description": [],
            "signature": [
              "({ _version, id, value, meta, }: ",
              "UpdateListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 411
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.updateListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    _version,\n    id,\n    value,\n    meta,\n  }",
                "description": [],
                "signature": [
                  "UpdateListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 411
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.updateList",
            "type": "Function",
            "tags": [],
            "label": "updateList",
            "description": [],
            "signature": [
              "({ _version, id, name, description, meta, version, }: ",
              "UpdateListOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 430
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.updateList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    _version,\n    id,\n    name,\n    description,\n    meta,\n    version,\n  }",
                "description": [],
                "signature": [
                  "UpdateListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 430
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItem",
            "type": "Function",
            "tags": [],
            "label": "getListItem",
            "description": [],
            "signature": [
              "({ id }: ",
              "GetListItemOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 453
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.getListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{ id }",
                "description": [],
                "signature": [
                  "GetListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 453
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.getListItemByValues",
            "type": "Function",
            "tags": [],
            "label": "getListItemByValues",
            "description": [],
            "signature": [
              "({ type, listId, value, }: ",
              "GetListItemsByValueOptions",
              ") => Promise<{ _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 463
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.getListItemByValues.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    type,\n    listId,\n    value,\n  }",
                "description": [],
                "signature": [
                  "GetListItemsByValueOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 463
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.searchListItemByValues",
            "type": "Function",
            "tags": [],
            "label": "searchListItemByValues",
            "description": [],
            "signature": [
              "({ type, listId, value, }: ",
              "SearchListItemByValuesOptions",
              ") => Promise<{ items: { _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]; value: unknown; }[]>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 479
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.searchListItemByValues.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    type,\n    listId,\n    value,\n  }",
                "description": [],
                "signature": [
                  "SearchListItemByValuesOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 479
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.findList",
            "type": "Function",
            "tags": [],
            "label": "findList",
            "description": [],
            "signature": [
              "({ filter, currentIndexPosition, perPage, page, sortField, sortOrder, searchAfter, }: ",
              "FindListOptions",
              ") => Promise<{ cursor: string; data: { _version: string | undefined; created_at: string; created_by: string; description: string; deserializer: string | undefined; id: string; immutable: boolean; meta: object | undefined; name: string; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; version: number; }[]; page: number; per_page: number; total: number; }>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 495
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.findList.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    filter,\n    currentIndexPosition,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    searchAfter,\n  }",
                "description": [],
                "signature": [
                  "FindListOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 495
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListClient.findListItem",
            "type": "Function",
            "tags": [],
            "label": "findListItem",
            "description": [],
            "signature": [
              "({ listId, filter, currentIndexPosition, perPage, page, sortField, sortOrder, searchAfter, }: ",
              "FindListItemOptions",
              ") => Promise<{ cursor: string; data: { _version: string | undefined; created_at: string; created_by: string; deserializer: string | undefined; id: string; list_id: string; meta: object | undefined; serializer: string | undefined; tie_breaker_id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; updated_at: string; updated_by: string; value: string; }[]; page: number; per_page: number; total: number; } | null>"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
              "lineNumber": 519
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.ListClient.findListItem.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    listId,\n    filter,\n    currentIndexPosition,\n    perPage,\n    page,\n    sortField,\n    sortOrder,\n    searchAfter,\n  }",
                "description": [],
                "signature": [
                  "FindListItemOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/services/lists/list_client.ts",
                  "lineNumber": 519
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "lists",
        "id": "def-server.CreateExceptionListItemOptions",
        "type": "Interface",
        "tags": [],
        "label": "CreateExceptionListItemOptions",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
          "lineNumber": 124
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.comments",
            "type": "Array",
            "tags": [],
            "label": "comments",
            "description": [],
            "signature": [
              "{ comment: string; }[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 125
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.entries",
            "type": "Array",
            "tags": [],
            "label": "entries",
            "description": [],
            "signature": [
              "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 126
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.itemId",
            "type": "string",
            "tags": [],
            "label": "itemId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 127
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.listId",
            "type": "string",
            "tags": [],
            "label": "listId",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 128
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.namespaceType",
            "type": "CompoundType",
            "tags": [],
            "label": "namespaceType",
            "description": [],
            "signature": [
              "\"single\" | \"agnostic\""
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 129
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 130
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.osTypes",
            "type": "Array",
            "tags": [],
            "label": "osTypes",
            "description": [],
            "signature": [
              "(\"windows\" | \"linux\" | \"macos\")[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 131
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 132
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.meta",
            "type": "Uncategorized",
            "tags": [],
            "label": "meta",
            "description": [],
            "signature": [
              "object | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 133
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.tags",
            "type": "Array",
            "tags": [],
            "label": "tags",
            "description": [],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 134
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.CreateExceptionListItemOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"simple\""
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 135
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "lists",
        "id": "def-server.ListPluginSetup",
        "type": "Interface",
        "tags": [],
        "label": "ListPluginSetup",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/types.ts",
          "lineNumber": 40
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.ListPluginSetup.getExceptionListClient",
            "type": "Function",
            "tags": [],
            "label": "getExceptionListClient",
            "description": [],
            "signature": [
              "(savedObjectsClient: Pick<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreSavedObjectsPluginApi",
                "section": "def-server.SavedObjectsClient",
                "text": "SavedObjectsClient"
              },
              ", \"get\" | \"delete\" | \"create\" | \"bulkCreate\" | \"checkConflicts\" | \"find\" | \"bulkGet\" | \"resolve\" | \"update\" | \"collectMultiNamespaceReferences\" | \"updateObjectsSpaces\" | \"bulkUpdate\" | \"removeReferencesTo\" | \"openPointInTimeForType\" | \"closePointInTime\" | \"createPointInTimeFinder\" | \"errors\">, user: string) => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ExceptionListClient",
                "text": "ExceptionListClient"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 41
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.savedObjectsClient",
                "type": "Object",
                "tags": [],
                "label": "savedObjectsClient",
                "description": [],
                "signature": [
                  "{ get: <T = unknown>(type: string, id: string, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBaseOptions",
                    "text": "SavedObjectsBaseOptions"
                  },
                  ") => Promise<",
                  "SavedObject",
                  "<T>>; delete: (type: string, id: string, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsDeleteOptions",
                    "text": "SavedObjectsDeleteOptions"
                  },
                  ") => Promise<{}>; create: <T = unknown>(type: string, attributes: T, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  },
                  " | undefined) => Promise<",
                  "SavedObject",
                  "<T>>; bulkCreate: <T = unknown>(objects: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkCreateObject",
                    "text": "SavedObjectsBulkCreateObject"
                  },
                  "<T>[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkResponse",
                    "text": "SavedObjectsBulkResponse"
                  },
                  "<T>>; checkConflicts: (objects?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCheckConflictsObject",
                    "text": "SavedObjectsCheckConflictsObject"
                  },
                  "[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBaseOptions",
                    "text": "SavedObjectsBaseOptions"
                  },
                  ") => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCheckConflictsResponse",
                    "text": "SavedObjectsCheckConflictsResponse"
                  },
                  ">; find: <T = unknown, A = unknown>(options: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsFindOptions",
                    "text": "SavedObjectsFindOptions"
                  },
                  ") => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsFindResponse",
                    "text": "SavedObjectsFindResponse"
                  },
                  "<T, A>>; bulkGet: <T = unknown>(objects?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkGetObject",
                    "text": "SavedObjectsBulkGetObject"
                  },
                  "[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBaseOptions",
                    "text": "SavedObjectsBaseOptions"
                  },
                  ") => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkResponse",
                    "text": "SavedObjectsBulkResponse"
                  },
                  "<T>>; resolve: <T = unknown>(type: string, id: string, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBaseOptions",
                    "text": "SavedObjectsBaseOptions"
                  },
                  ") => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsResolveResponse",
                    "text": "SavedObjectsResolveResponse"
                  },
                  "<T>>; update: <T = unknown>(type: string, id: string, attributes: Partial<T>, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsUpdateOptions",
                    "text": "SavedObjectsUpdateOptions"
                  },
                  "<T>) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsUpdateResponse",
                    "text": "SavedObjectsUpdateResponse"
                  },
                  "<T>>; collectMultiNamespaceReferences: (objects: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCollectMultiNamespaceReferencesObject",
                    "text": "SavedObjectsCollectMultiNamespaceReferencesObject"
                  },
                  "[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCollectMultiNamespaceReferencesOptions",
                    "text": "SavedObjectsCollectMultiNamespaceReferencesOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCollectMultiNamespaceReferencesResponse",
                    "text": "SavedObjectsCollectMultiNamespaceReferencesResponse"
                  },
                  ">; updateObjectsSpaces: (objects: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsUpdateObjectsSpacesObject",
                    "text": "SavedObjectsUpdateObjectsSpacesObject"
                  },
                  "[], spacesToAdd: string[], spacesToRemove: string[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsUpdateObjectsSpacesOptions",
                    "text": "SavedObjectsUpdateObjectsSpacesOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsUpdateObjectsSpacesResponse",
                    "text": "SavedObjectsUpdateObjectsSpacesResponse"
                  },
                  ">; bulkUpdate: <T = unknown>(objects: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkUpdateObject",
                    "text": "SavedObjectsBulkUpdateObject"
                  },
                  "<T>[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkUpdateOptions",
                    "text": "SavedObjectsBulkUpdateOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBulkUpdateResponse",
                    "text": "SavedObjectsBulkUpdateResponse"
                  },
                  "<T>>; removeReferencesTo: (type: string, id: string, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsRemoveReferencesToOptions",
                    "text": "SavedObjectsRemoveReferencesToOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsRemoveReferencesToResponse",
                    "text": "SavedObjectsRemoveReferencesToResponse"
                  },
                  ">; openPointInTimeForType: (type: string | string[], options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsOpenPointInTimeOptions",
                    "text": "SavedObjectsOpenPointInTimeOptions"
                  },
                  ") => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsOpenPointInTimeResponse",
                    "text": "SavedObjectsOpenPointInTimeResponse"
                  },
                  ">; closePointInTime: (id: string, options?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsBaseOptions",
                    "text": "SavedObjectsBaseOptions"
                  },
                  " | undefined) => Promise<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsClosePointInTimeResponse",
                    "text": "SavedObjectsClosePointInTimeResponse"
                  },
                  ">; createPointInTimeFinder: <T = unknown, A = unknown>(findOptions: Pick<",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsFindOptions",
                    "text": "SavedObjectsFindOptions"
                  },
                  ", \"type\" | \"filter\" | \"aggs\" | \"fields\" | \"perPage\" | \"sortField\" | \"sortOrder\" | \"search\" | \"searchFields\" | \"rootSearchFields\" | \"hasReference\" | \"hasReferenceOperator\" | \"defaultSearchOperator\" | \"namespaces\" | \"typeToNamespacesMap\" | \"preference\">, dependencies?: ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsCreatePointInTimeFinderDependencies",
                    "text": "SavedObjectsCreatePointInTimeFinderDependencies"
                  },
                  " | undefined) => ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.ISavedObjectsPointInTimeFinder",
                    "text": "ISavedObjectsPointInTimeFinder"
                  },
                  "<T, A>; errors: typeof ",
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreSavedObjectsPluginApi",
                    "section": "def-server.SavedObjectsErrorHelpers",
                    "text": "SavedObjectsErrorHelpers"
                  },
                  "; }"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/types.ts",
                  "lineNumber": 36
                },
                "deprecated": false
              },
              {
                "parentPluginId": "lists",
                "id": "def-server.user",
                "type": "string",
                "tags": [],
                "label": "user",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/types.ts",
                  "lineNumber": 37
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListPluginSetup.getListClient",
            "type": "Function",
            "tags": [],
            "label": "getListClient",
            "description": [],
            "signature": [
              "(esClient: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              },
              ", spaceId: string, user: string) => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ListClient",
                "text": "ListClient"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 42
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "lists",
                "id": "def-server.esClient",
                "type": "CompoundType",
                "tags": [],
                "label": "esClient",
                "description": [],
                "signature": [
                  "Pick<",
                  "KibanaClient",
                  ", \"get\" | \"delete\" | \"create\" | \"index\" | \"update\" | \"closePointInTime\" | \"helpers\" | \"count\" | \"search\" | \"security\" | \"eql\" | \"on\" | \"off\" | \"transform\" | \"emit\" | \"once\" | \"asyncSearch\" | \"autoscaling\" | \"bulk\" | \"cat\" | \"ccr\" | \"clearScroll\" | \"cluster\" | \"danglingIndices\" | \"dataFrameTransformDeprecated\" | \"deleteByQuery\" | \"deleteByQueryRethrottle\" | \"deleteScript\" | \"enrich\" | \"exists\" | \"existsSource\" | \"explain\" | \"features\" | \"fieldCaps\" | \"fleet\" | \"getScript\" | \"getScriptContext\" | \"getScriptLanguages\" | \"getSource\" | \"graph\" | \"ilm\" | \"indices\" | \"info\" | \"ingest\" | \"license\" | \"logstash\" | \"mget\" | \"migration\" | \"ml\" | \"monitoring\" | \"msearch\" | \"msearchTemplate\" | \"mtermvectors\" | \"nodes\" | \"openPointInTime\" | \"ping\" | \"putScript\" | \"rankEval\" | \"reindex\" | \"reindexRethrottle\" | \"renderSearchTemplate\" | \"rollup\" | \"scriptsPainlessExecute\" | \"scroll\" | \"searchShards\" | \"searchTemplate\" | \"searchableSnapshots\" | \"shutdown\" | \"slm\" | \"snapshot\" | \"sql\" | \"ssl\" | \"tasks\" | \"termsEnum\" | \"termvectors\" | \"textStructure\" | \"updateByQuery\" | \"updateByQueryRethrottle\" | \"watcher\" | \"xpack\"> & { transport: { request(params: ",
                  "TransportRequestParams",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): ",
                  "TransportRequestPromise",
                  "<",
                  "ApiResponse",
                  "<Record<string, any>, unknown>>; }; }"
                ],
                "source": {
                  "path": "x-pack/plugins/lists/server/types.ts",
                  "lineNumber": 30
                },
                "deprecated": false
              },
              {
                "parentPluginId": "lists",
                "id": "def-server.spaceId",
                "type": "string",
                "tags": [],
                "label": "spaceId",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/types.ts",
                  "lineNumber": 31
                },
                "deprecated": false
              },
              {
                "parentPluginId": "lists",
                "id": "def-server.user",
                "type": "string",
                "tags": [],
                "label": "user",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/lists/server/types.ts",
                  "lineNumber": 32
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "lists",
        "id": "def-server.ListsApiRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "ListsApiRequestHandlerContext",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/types.ts",
          "lineNumber": 48
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.ListsApiRequestHandlerContext.getListClient",
            "type": "Function",
            "tags": [],
            "label": "getListClient",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ListClient",
                "text": "ListClient"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 49
            },
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.ListsApiRequestHandlerContext.getExceptionListClient",
            "type": "Function",
            "tags": [],
            "label": "getExceptionListClient",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ExceptionListClient",
                "text": "ExceptionListClient"
              }
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/types.ts",
              "lineNumber": 50
            },
            "deprecated": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "lists",
        "id": "def-server.UpdateExceptionListItemOptions",
        "type": "Interface",
        "tags": [],
        "label": "UpdateExceptionListItemOptions",
        "description": [],
        "source": {
          "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
          "lineNumber": 150
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions._version",
            "type": "string",
            "tags": [],
            "label": "_version",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 151
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.comments",
            "type": "Array",
            "tags": [],
            "label": "comments",
            "description": [],
            "signature": [
              "({ comment: string; } & { id?: string | undefined; })[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 152
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.entries",
            "type": "Array",
            "tags": [],
            "label": "entries",
            "description": [],
            "signature": [
              "({ field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; } | { field: string; list: { id: string; type: \"boolean\" | \"date\" | \"keyword\" | \"text\" | \"long\" | \"double\" | \"ip\" | \"date_nanos\" | \"geo_point\" | \"geo_shape\" | \"binary\" | \"short\" | \"date_range\" | \"ip_range\" | \"shape\" | \"float\" | \"half_float\" | \"integer\" | \"byte\" | \"long_range\" | \"integer_range\" | \"float_range\" | \"double_range\"; }; operator: \"excluded\" | \"included\"; type: \"list\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { entries: ({ field: string; operator: \"excluded\" | \"included\"; type: \"exists\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match\"; value: string; } | { field: string; operator: \"excluded\" | \"included\"; type: \"match_any\"; value: string[]; })[]; field: string; type: \"nested\"; } | { field: string; operator: \"excluded\" | \"included\"; type: \"wildcard\"; value: string; })[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 153
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 154
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.itemId",
            "type": "string",
            "tags": [],
            "label": "itemId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 155
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.namespaceType",
            "type": "CompoundType",
            "tags": [],
            "label": "namespaceType",
            "description": [],
            "signature": [
              "\"single\" | \"agnostic\""
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 156
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 157
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.osTypes",
            "type": "Array",
            "tags": [],
            "label": "osTypes",
            "description": [],
            "signature": [
              "(\"windows\" | \"linux\" | \"macos\")[]"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 158
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 159
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.meta",
            "type": "Uncategorized",
            "tags": [],
            "label": "meta",
            "description": [],
            "signature": [
              "object | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 160
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.tags",
            "type": "Array",
            "tags": [],
            "label": "tags",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 161
            },
            "deprecated": false
          },
          {
            "parentPluginId": "lists",
            "id": "def-server.UpdateExceptionListItemOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"simple\" | undefined"
            ],
            "source": {
              "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client_types.ts",
              "lineNumber": 162
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}