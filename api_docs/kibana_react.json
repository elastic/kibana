{
  "id": "kibanaReact",
  "client": {
    "classes": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListView",
        "type": "Class",
        "tags": [],
        "label": "TableListView",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListView",
            "text": "TableListView"
          },
          " extends React.Component<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewProps",
            "text": "TableListViewProps"
          },
          ", ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.TableListViewState",
            "text": "TableListViewState"
          },
          ", any>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
          "lineNumber": 86
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 90
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaReact",
                    "scope": "public",
                    "docId": "kibKibanaReactPluginApi",
                    "section": "def-public.TableListViewProps",
                    "text": "TableListViewProps"
                  }
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                  "lineNumber": 90
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.UNSAFE_componentWillMount",
            "type": "Function",
            "tags": [],
            "label": "UNSAFE_componentWillMount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 111
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.componentWillUnmount",
            "type": "Function",
            "tags": [],
            "label": "componentWillUnmount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 115
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.componentDidMount",
            "type": "Function",
            "tags": [],
            "label": "componentDidMount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 120
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.debouncedFetch",
            "type": "Function",
            "tags": [],
            "label": "debouncedFetch",
            "description": [],
            "signature": [
              "((filter: string) => Promise<void>) & _.Cancelable"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 124
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.fetchItems",
            "type": "Function",
            "tags": [],
            "label": "fetchItems",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 156
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.deleteSelectedItems",
            "type": "Function",
            "tags": [],
            "label": "deleteSelectedItems",
            "description": [],
            "signature": [
              "() => Promise<void>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 166
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.closeDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "closeDeleteModal",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 196
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.openDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "openDeleteModal",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 200
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.setFilter",
            "type": "Function",
            "tags": [],
            "label": "setFilter",
            "description": [],
            "signature": [
              "({ queryText }: { queryText: string; }) => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 204
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListView.setFilter.$1.queryText",
                "type": "Object",
                "tags": [],
                "label": "{ queryText }",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                  "lineNumber": 204
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "kibanaReact",
                    "id": "def-public.TableListView.setFilter.$1.queryText.queryText",
                    "type": "string",
                    "tags": [],
                    "label": "queryText",
                    "description": [],
                    "source": {
                      "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                      "lineNumber": 204
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.hasNoItems",
            "type": "Function",
            "tags": [],
            "label": "hasNoItems",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 215
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderConfirmDeleteModal",
            "type": "Function",
            "tags": [],
            "label": "renderConfirmDeleteModal",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 223
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderListingLimitWarning",
            "type": "Function",
            "tags": [],
            "label": "renderListingLimitWarning",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 277
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderFetchError",
            "type": "Function",
            "tags": [],
            "label": "renderFetchError",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 319
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderToolsLeft",
            "type": "Function",
            "tags": [],
            "label": "renderToolsLeft",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 350
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderTable",
            "type": "Function",
            "tags": [],
            "label": "renderTable",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 381
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderListingOrEmptyState",
            "type": "Function",
            "tags": [],
            "label": "renderListingOrEmptyState",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 461
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderListing",
            "type": "Function",
            "tags": [],
            "label": "renderListing",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 468
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.renderPageContent",
            "type": "Function",
            "tags": [],
            "label": "renderPageContent",
            "description": [],
            "signature": [
              "() => JSX.Element | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 513
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListView.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 525
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ValidatedDualRange",
        "type": "Class",
        "tags": [],
        "label": "ValidatedDualRange",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ValidatedDualRange",
            "text": "ValidatedDualRange"
          },
          " extends React.Component<Props, {}, any>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
          "lineNumber": 39
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.defaultProps",
            "type": "Object",
            "tags": [],
            "label": "defaultProps",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
              "lineNumber": 40
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.allowEmptyRange",
                "type": "boolean",
                "tags": [],
                "label": "allowEmptyRange",
                "description": [],
                "signature": [
                  "true"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 41
                },
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.fullWidth",
                "type": "boolean",
                "tags": [],
                "label": "fullWidth",
                "description": [],
                "signature": [
                  "false"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 42
                },
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.defaultProps.compressed",
                "type": "boolean",
                "tags": [],
                "label": "compressed",
                "description": [],
                "signature": [
                  "false"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 43
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.getDerivedStateFromProps",
            "type": "Function",
            "tags": [],
            "label": "getDerivedStateFromProps",
            "description": [],
            "signature": [
              "typeof ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ValidatedDualRange",
                "text": "ValidatedDualRange"
              },
              ".getDerivedStateFromProps"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
              "lineNumber": 46
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.getDerivedStateFromProps.$1",
                "type": "Object",
                "tags": [],
                "label": "nextProps",
                "description": [],
                "signature": [
                  "Props"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 46
                },
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange.getDerivedStateFromProps.$2",
                "type": "Object",
                "tags": [],
                "label": "prevState",
                "description": [],
                "signature": [
                  "State"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 46
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.state",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
              "lineNumber": 66
            },
            "deprecated": false,
            "children": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange._onChange",
            "type": "Function",
            "tags": [],
            "label": "_onChange",
            "description": [],
            "signature": [
              "(value: [React.ReactText, React.ReactText]) => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
              "lineNumber": 68
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.ValidatedDualRange._onChange.$1",
                "type": "Object",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "[React.ReactText, React.ReactText]"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
                  "lineNumber": 68
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ValidatedDualRange.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
              "lineNumber": 87
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.CodeEditor",
        "type": "Function",
        "tags": [
          "see"
        ],
        "label": "CodeEditor",
        "description": [
          "\nRenders a Monaco code editor with EUI color theme.\n"
        ],
        "signature": [
          "(props: React.PropsWithChildren<",
          "Props",
          ">) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
          "lineNumber": 34
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.CodeEditor.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              "Props",
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
              "lineNumber": 34
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.CodeEditorField",
        "type": "Function",
        "tags": [],
        "label": "CodeEditorField",
        "description": [
          "\nRenders a Monaco code editor in the same style as other EUI form fields."
        ],
        "signature": [
          "(props: React.PropsWithChildren<",
          "Props",
          ">) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
          "lineNumber": 48
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.CodeEditorField.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              "Props",
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/code_editor/index.tsx",
              "lineNumber": 48
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createKibanaReactContext",
        "type": "Function",
        "tags": [],
        "label": "createKibanaReactContext",
        "description": [],
        "signature": [
          "<Services extends Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">>(services: Services) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContext",
            "text": "KibanaReactContext"
          },
          "<Services>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 45
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createKibanaReactContext.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Services"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/context.tsx",
              "lineNumber": 46
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createNotifications",
        "type": "Function",
        "tags": [],
        "label": "createNotifications",
        "description": [],
        "signature": [
          "(services: Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactNotifications",
            "text": "KibanaReactNotifications"
          }
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/notifications/create_notifications.tsx",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createNotifications.$1",
            "type": "Object",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Partial<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/create_notifications.tsx",
              "lineNumber": 14
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.createReactOverlays",
        "type": "Function",
        "tags": [],
        "label": "createReactOverlays",
        "description": [],
        "signature": [
          "(services: Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">) => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactOverlays",
            "text": "KibanaReactOverlays"
          }
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/overlays/create_react_overlays.tsx",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.createReactOverlays.$1",
            "type": "Object",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Partial<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/overlays/create_react_overlays.tsx",
              "lineNumber": 14
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.FieldButton",
        "type": "Function",
        "tags": [],
        "label": "FieldButton",
        "description": [],
        "signature": [
          "({\n  size = 'm',\n  isActive = false,\n  fieldIcon,\n  fieldName,\n  fieldInfoIcon,\n  fieldAction,\n  className,\n  isDraggable = false,\n  onClick,\n  dataTestSubj,\n  buttonProps,\n  ...rest\n}: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.FieldButtonProps",
            "text": "FieldButtonProps"
          },
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
          "lineNumber": 68
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButton.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  size = 'm',\n  isActive = false,\n  fieldIcon,\n  fieldName,\n  fieldInfoIcon,\n  fieldAction,\n  className,\n  isDraggable = false,\n  onClick,\n  dataTestSubj,\n  buttonProps,\n  ...rest\n}",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.FieldButtonProps",
                "text": "FieldButtonProps"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 68
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.FieldIcon",
        "type": "Function",
        "tags": [],
        "label": "FieldIcon",
        "description": [
          "\nField token icon used across the app"
        ],
        "signature": [
          "({\n  type,\n  label,\n  size = 's',\n  scripted,\n  className,\n  ...rest\n}: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.FieldIconProps",
            "text": "FieldIconProps"
          },
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
          "lineNumber": 59
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldIcon.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  type,\n  label,\n  size = 's',\n  scripted,\n  className,\n  ...rest\n}",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.FieldIconProps",
                "text": "FieldIconProps"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 59
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaContextProvider",
        "type": "Function",
        "tags": [],
        "label": "KibanaContextProvider",
        "description": [],
        "signature": [
          "React.FC<{ services?: {} | undefined; }>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 76
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Markdown",
        "type": "Function",
        "tags": [],
        "label": "Markdown",
        "description": [],
        "signature": [
          "(props: ",
          "MarkdownProps",
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/markdown/index.tsx",
          "lineNumber": 28
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.Markdown.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "MarkdownProps"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/markdown/index.tsx",
              "lineNumber": 28
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.MarkdownSimple",
        "type": "Function",
        "tags": [],
        "label": "MarkdownSimple",
        "description": [],
        "signature": [
          "(props: ",
          "MarkdownSimpleProps",
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/markdown/index.tsx",
          "lineNumber": 21
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.MarkdownSimple.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "MarkdownSimpleProps"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/markdown/index.tsx",
              "lineNumber": 21
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.MountPointPortal",
        "type": "Function",
        "tags": [],
        "label": "MountPointPortal",
        "description": [
          "\nUtility component to portal a part of a react application into the provided `MountPoint`."
        ],
        "signature": [
          "({ children, setMountPoint }: React.PropsWithChildren<MountPointPortalProps>) => React.ReactPortal | null"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/util/mount_point_portal.tsx",
          "lineNumber": 22
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.MountPointPortal.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ children, setMountPoint }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<MountPointPortalProps>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/util/mount_point_portal.tsx",
              "lineNumber": 22
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.OverviewPageFooter",
        "type": "Function",
        "tags": [],
        "label": "OverviewPageFooter",
        "description": [],
        "signature": [
          "({ addBasePath, path, onSetDefaultRoute, onChangeDefaultRoute, }: React.PropsWithChildren<Props>) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/overview_page/overview_page_footer/overview_page_footer.tsx",
          "lineNumber": 28
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.OverviewPageFooter.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  addBasePath,\n  path,\n  onSetDefaultRoute,\n  onChangeDefaultRoute,\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<Props>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/overview_page/overview_page_footer/overview_page_footer.tsx",
              "lineNumber": 28
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.OverviewPageHeader",
        "type": "Function",
        "tags": [],
        "label": "OverviewPageHeader",
        "description": [],
        "signature": [
          "({ hideToolbar, iconType, overlap, showDevToolsLink, showManagementLink, title, addBasePath, }: React.PropsWithChildren<Props>) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/overview_page/overview_page_header/overview_page_header.tsx",
          "lineNumber": 35
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.OverviewPageHeader.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  hideToolbar,\n  iconType,\n  overlap,\n  showDevToolsLink,\n  showManagementLink,\n  title,\n  addBasePath,\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<Props>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/overview_page/overview_page_header/overview_page_header.tsx",
              "lineNumber": 35
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Panel",
        "type": "Function",
        "tags": [],
        "label": "Panel",
        "description": [],
        "signature": [
          "({ children, className, initialWidth = 100, style = {} }: ",
          "Props",
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/split_panel/containers/panel.tsx",
          "lineNumber": 23
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.Panel.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children, className, initialWidth = 100, style = {} }",
            "description": [],
            "signature": [
              "Props"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/split_panel/containers/panel.tsx",
              "lineNumber": 23
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.PanelsContainer",
        "type": "Function",
        "tags": [],
        "label": "PanelsContainer",
        "description": [],
        "signature": [
          "({\n  children,\n  className,\n  onPanelWidthChange,\n  resizerClassName,\n}: ",
          "Props",
          ") => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/split_panel/containers/panel_container.tsx",
          "lineNumber": 32
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.PanelsContainer.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  children,\n  className,\n  onPanelWidthChange,\n  resizerClassName,\n}",
            "description": [],
            "signature": [
              "Props"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/split_panel/containers/panel_container.tsx",
              "lineNumber": 32
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactRouterNavigate",
        "type": "Function",
        "tags": [],
        "label": "reactRouterNavigate",
        "description": [],
        "signature": [
          "(history: ",
          "History",
          "<any> | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreApplicationPluginApi",
            "section": "def-public.ScopedHistory",
            "text": "ScopedHistory"
          },
          "<unknown>, to: string | LocationObject, onClickCallback?: Function | undefined) => { href: string; onClick: (event: any) => void; }"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
          "lineNumber": 26
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              "History",
              "<any> | ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ScopedHistory",
                "text": "ScopedHistory"
              },
              "<unknown>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 27
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "to",
            "description": [],
            "signature": [
              "string | LocationObject"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 28
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterNavigate.$3",
            "type": "Object",
            "tags": [],
            "label": "onClickCallback",
            "description": [],
            "signature": [
              "Function | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 29
            },
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactRouterOnClickHandler",
        "type": "Function",
        "tags": [],
        "label": "reactRouterOnClickHandler",
        "description": [],
        "signature": [
          "(history: ",
          "History",
          "<any> | ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCoreApplicationPluginApi",
            "section": "def-public.ScopedHistory",
            "text": "ScopedHistory"
          },
          "<unknown>, to: string | LocationObject, onClickCallback?: Function | undefined) => (event: any) => void"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
          "lineNumber": 35
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              "History",
              "<any> | ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCoreApplicationPluginApi",
                "section": "def-public.ScopedHistory",
                "text": "ScopedHistory"
              },
              "<unknown>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 36
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "to",
            "description": [],
            "signature": [
              "string | LocationObject"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 37
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactRouterOnClickHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "onClickCallback",
            "description": [],
            "signature": [
              "Function | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/react_router_navigate/react_router_navigate.tsx",
              "lineNumber": 38
            },
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.reactToUiComponent",
        "type": "Function",
        "tags": [],
        "label": "reactToUiComponent",
        "description": [
          "\nTransform a React component into a `UiComponent`.\n"
        ],
        "signature": [
          "<Props extends object>(ReactComp: React.ComponentType<Props>) => ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.UiComponent",
            "text": "UiComponent"
          },
          "<Props>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/adapters/react_to_ui_component.ts",
          "lineNumber": 18
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.reactToUiComponent.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "ReactComp",
            "description": [],
            "signature": [
              "React.ComponentType<Props>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/adapters/react_to_ui_component.ts",
              "lineNumber": 19
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.RedirectAppLinks",
        "type": "Function",
        "tags": [],
        "label": "RedirectAppLinks",
        "description": [
          "\nUtility component that will intercept click events on children anchor (`<a>`) elements to call\n`application.navigateToUrl` with the link's href. This will trigger SPA friendly navigation\nwhen the link points to a valid Kibana app.\n"
        ],
        "signature": [
          "({ application, children, className, ...otherProps }: React.PropsWithChildren<RedirectCrossAppLinksProps>) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/app_links/redirect_app_link.tsx",
          "lineNumber": 38
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.RedirectAppLinks.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  application,\n  children,\n  className,\n  ...otherProps\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<RedirectCrossAppLinksProps>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/app_links/redirect_app_link.tsx",
              "lineNumber": 38
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.toMountPoint",
        "type": "Function",
        "tags": [],
        "label": "toMountPoint",
        "description": [
          "\nMountPoint converter for react nodes.\n"
        ],
        "signature": [
          "(node: React.ReactNode) => ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.MountPoint",
            "text": "MountPoint"
          },
          "<HTMLElement>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
          "lineNumber": 19
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.toMountPoint.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "node",
            "description": [],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/util/to_mount_point.tsx",
              "lineNumber": 19
            },
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToolbarButton",
        "type": "Function",
        "tags": [],
        "label": "ToolbarButton",
        "description": [],
        "signature": [
          "({ children, className, fontWeight, size, hasArrow, groupPosition, dataTestSubj, ...rest }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.ToolbarButtonProps",
            "text": "ToolbarButtonProps"
          },
          ">) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
          "lineNumber": 49
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToolbarButton.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  children,\n  className,\n  fontWeight = 'normal',\n  size = 'm',\n  hasArrow = true,\n  groupPosition = 'none',\n  dataTestSubj = '',\n  ...rest\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToolbarButtonProps",
                "text": "ToolbarButtonProps"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
              "lineNumber": 49
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.uiToReactComponent",
        "type": "Function",
        "tags": [],
        "label": "uiToReactComponent",
        "description": [
          "\nTransforms `UiComponent` into a React component."
        ],
        "signature": [
          "<Props extends object>(Comp: ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.UiComponent",
            "text": "UiComponent"
          },
          "<Props>, as?: string) => React.FC<Props>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
          "lineNumber": 15
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.uiToReactComponent.$1",
            "type": "Function",
            "tags": [],
            "label": "Comp",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaUtils",
                "scope": "common",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-common.UiComponent",
                "text": "UiComponent"
              },
              "<Props>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
              "lineNumber": 16
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.uiToReactComponent.$2",
            "type": "string",
            "tags": [],
            "label": "as",
            "description": [],
            "signature": [
              "string"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/adapters/ui_to_react_component.ts",
              "lineNumber": 17
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditor",
        "type": "Function",
        "tags": [],
        "label": "UrlTemplateEditor",
        "description": [],
        "signature": [
          "({ height, value, variables, onChange, onEditor, Editor, }: React.PropsWithChildren<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.UrlTemplateEditorProps",
            "text": "UrlTemplateEditorProps"
          },
          ">) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
          "lineNumber": 40
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditor.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  height = 105,\n  value,\n  variables,\n  onChange,\n  onEditor,\n  Editor = CodeEditor,\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.UrlTemplateEditorProps",
                "text": "UrlTemplateEditorProps"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 40
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useKibana",
        "type": "Function",
        "tags": [],
        "label": "useKibana",
        "description": [],
        "signature": [
          "<Extra extends object = {}>() => ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          "> & Extra>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 24
        },
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UseKibana",
        "type": "Function",
        "tags": [],
        "label": "UseKibana",
        "description": [],
        "signature": [
          "({ children }: React.PropsWithChildren<{ children: (kibana: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<any>) => React.ReactNode; }>) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 41
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UseKibana.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ children }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<{ children: (kibana: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactContextValue",
                "text": "KibanaReactContextValue"
              },
              "<any>) => React.ReactNode; }>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/context.tsx",
              "lineNumber": 43
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useUiSetting",
        "type": "Function",
        "tags": [],
        "label": "useUiSetting",
        "description": [
          "\nReturns the current UI-settings value.\n\nUsage:\n\n```js\nconst darkMode = useUiSetting('theme:darkMode');\n```"
        ],
        "signature": [
          "<T>(key: string, defaultValue?: T | undefined) => T"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
          "lineNumber": 22
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting.$1",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "signature": [
              "string"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
              "lineNumber": 22
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultValue",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
              "lineNumber": 22
            },
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.useUiSetting$",
        "type": "Function",
        "tags": [],
        "label": "useUiSetting$",
        "description": [
          "\nReturns a 2-tuple, where first entry is the setting value and second is a\nfunction to update the setting value.\n\nSynchronously returns the most current value of the setting and subscribes\nto all subsequent updates, which will re-render your component on new values.\n\nUsage:\n\n```js\nconst [darkMode, setDarkMode] = useUiSetting$('theme:darkMode');\n```"
        ],
        "signature": [
          "<T>(key: string, defaultValue?: T | undefined) => [T, Setter<T>]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
          "lineNumber": 47
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting$.$1",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "signature": [
              "string"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
              "lineNumber": 47
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.useUiSetting$.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultValue",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/ui_settings/use_ui_setting.ts",
              "lineNumber": 47
            },
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.withKibana",
        "type": "Function",
        "tags": [],
        "label": "withKibana",
        "description": [],
        "signature": [
          "<Props extends { kibana: ",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<any>; }>(type: React.ComponentType<Props>) => React.FC<Pick<Props, Exclude<keyof Props, \"kibana\">>>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 31
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.withKibana.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "React.ComponentType<Props>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/context.tsx",
              "lineNumber": 32
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ExitFullScreenButtonProps",
        "type": "Interface",
        "tags": [],
        "label": "ExitFullScreenButtonProps",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ExitFullScreenButtonProps.onExitFullScreenMode",
            "type": "Function",
            "tags": [],
            "label": "onExitFullScreenMode",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
              "lineNumber": 15
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.FieldButtonProps",
        "type": "Interface",
        "tags": [],
        "label": "FieldButtonProps",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.FieldButtonProps",
            "text": "FieldButtonProps"
          },
          " extends React.HTMLAttributes<HTMLDivElement>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.fieldName",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldName",
            "description": [
              "\nLabel for the button"
            ],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 18
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.fieldIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldIcon",
            "description": [
              "\nIcon representing the field type.\nRecommend using FieldIcon"
            ],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 23
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.fieldInfoIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldInfoIcon",
            "description": [
              "\nAn optional node to place inside and at the end of the <button>"
            ],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 27
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.fieldAction",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldAction",
            "description": [
              "\nAn optional node to place outside of and to the right of the <button>"
            ],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 31
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.isActive",
            "type": "CompoundType",
            "tags": [],
            "label": "isActive",
            "description": [
              "\nAdds a forced focus ring to the whole component"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 35
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.isDraggable",
            "type": "CompoundType",
            "tags": [],
            "label": "isDraggable",
            "description": [
              "\nStyles the component differently to indicate it is draggable"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 39
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.size",
            "type": "CompoundType",
            "tags": [],
            "label": "size",
            "description": [
              "\nUse the small size in condensed areas"
            ],
            "signature": [
              "\"m\" | \"s\" | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 43
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.className",
            "type": "string",
            "tags": [],
            "label": "className",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 44
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.onClick",
            "type": "Function",
            "tags": [],
            "label": "onClick",
            "description": [
              "\nThe component will render a `<button>` when provided an `onClick`"
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 48
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.dataTestSubj",
            "type": "string",
            "tags": [],
            "label": "dataTestSubj",
            "description": [
              "\nApplies to the inner `<button>`  or `<div>`"
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 52
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldButtonProps.buttonProps",
            "type": "CompoundType",
            "tags": [],
            "label": "buttonProps",
            "description": [
              "\nPass more button props to the `<button>` element"
            ],
            "signature": [
              "(React.ButtonHTMLAttributes<HTMLButtonElement> & ",
              "CommonProps",
              ") | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
              "lineNumber": 56
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.FieldIconProps",
        "type": "Interface",
        "tags": [],
        "label": "FieldIconProps",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.FieldIconProps",
            "text": "FieldIconProps"
          },
          " extends Pick<",
          "EuiTokenProps",
          ", \"children\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"title\" | \"id\" | \"size\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"data-test-subj\" | \"fill\" | \"shape\">"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
          "lineNumber": 13
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldIconProps.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 14
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldIconProps.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 30
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.FieldIconProps.scripted",
            "type": "CompoundType",
            "tags": [],
            "label": "scripted",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 31
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactContext",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactContext",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContext",
            "text": "KibanaReactContext"
          },
          "<T>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/types.ts",
          "lineNumber": 22
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.value",
            "type": "Object",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactContextValue",
                "text": "KibanaReactContextValue"
              },
              "<T>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 23
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.Provider",
            "type": "Function",
            "tags": [],
            "label": "Provider",
            "description": [],
            "signature": [
              "React.FC<{ services?: T | undefined; }>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 24
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContext.Consumer",
            "type": "Function",
            "tags": [],
            "label": "Consumer",
            "description": [],
            "signature": [
              "React.Consumer<",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactContextValue",
                "text": "KibanaReactContextValue"
              },
              "<T>>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 25
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactContextValue",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactContextValue",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Services>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/types.ts",
          "lineNumber": 16
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.services",
            "type": "Uncategorized",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Services"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 17
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.overlays",
            "type": "Object",
            "tags": [],
            "label": "overlays",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactOverlays",
                "text": "KibanaReactOverlays"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 18
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactContextValue.notifications",
            "type": "Object",
            "tags": [],
            "label": "notifications",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.KibanaReactNotifications",
                "text": "KibanaReactNotifications"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/context/types.ts",
              "lineNumber": 19
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactNotifications",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactNotifications",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/notifications/types.ts",
          "lineNumber": 21
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactNotifications.toasts",
            "type": "Object",
            "tags": [],
            "label": "toasts",
            "description": [],
            "signature": [
              "{ show: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; success: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; warning: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; danger: (input: ",
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.ToastInput",
                "text": "ToastInput"
              },
              ") => void; }"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 22
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaReactOverlays",
        "type": "Interface",
        "tags": [],
        "label": "KibanaReactOverlays",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/overlays/types.ts",
          "lineNumber": 12
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactOverlays.openFlyout",
            "type": "Function",
            "tags": [],
            "label": "openFlyout",
            "description": [],
            "signature": [
              "(node: React.ReactNode, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayFlyoutOpenOptions",
                "text": "OverlayFlyoutOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/overlays/types.ts",
              "lineNumber": 13
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.KibanaReactOverlays.openModal",
            "type": "Function",
            "tags": [],
            "label": "openModal",
            "description": [],
            "signature": [
              "(node: React.ReactNode, options?: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayModalOpenOptions",
                "text": "OverlayModalOpenOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.OverlayRef",
                "text": "OverlayRef"
              }
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/overlays/types.ts",
              "lineNumber": 17
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListViewProps",
        "type": "Interface",
        "tags": [],
        "label": "TableListViewProps",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
          "lineNumber": 38
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.createItem",
            "type": "Function",
            "tags": [],
            "label": "createItem",
            "description": [],
            "signature": [
              "(() => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 39
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.deleteItems",
            "type": "Function",
            "tags": [],
            "label": "deleteItems",
            "description": [],
            "signature": [
              "((items: object[]) => Promise<void>) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 40
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.deleteItems.$1",
                "type": "Array",
                "tags": [],
                "label": "items",
                "description": [],
                "signature": [
                  "object[]"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                  "lineNumber": 40
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.editItem",
            "type": "Function",
            "tags": [],
            "label": "editItem",
            "description": [],
            "signature": [
              "((item: object) => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 41
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.editItem.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "item",
                "description": [],
                "signature": [
                  "object"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                  "lineNumber": 41
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.entityName",
            "type": "string",
            "tags": [],
            "label": "entityName",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 42
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.entityNamePlural",
            "type": "string",
            "tags": [],
            "label": "entityNamePlural",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 43
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.findItems",
            "type": "Function",
            "tags": [],
            "label": "findItems",
            "description": [],
            "signature": [
              "(query: string) => Promise<{ total: number; hits: object[]; }>"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 44
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.TableListViewProps.findItems.$1",
                "type": "string",
                "tags": [],
                "label": "query",
                "description": [],
                "signature": [
                  "string"
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
                  "lineNumber": 44
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.listingLimit",
            "type": "number",
            "tags": [],
            "label": "listingLimit",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 45
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.initialFilter",
            "type": "string",
            "tags": [],
            "label": "initialFilter",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 46
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.initialPageSize",
            "type": "number",
            "tags": [],
            "label": "initialPageSize",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 47
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.noItemsFragment",
            "type": "Object",
            "tags": [],
            "label": "noItemsFragment",
            "description": [],
            "signature": [
              "JSX.Element | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 48
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableColumns",
            "type": "Array",
            "tags": [],
            "label": "tableColumns",
            "description": [],
            "signature": [
              "EuiBasicTableColumn",
              "<any>[]"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 49
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableListTitle",
            "type": "string",
            "tags": [],
            "label": "tableListTitle",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 50
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.toastNotifications",
            "type": "Object",
            "tags": [],
            "label": "toastNotifications",
            "description": [],
            "signature": [
              "Pick<",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.ToastsApi",
                "text": "ToastsApi"
              },
              ", \"get$\" | \"add\" | \"remove\" | \"addSuccess\" | \"addWarning\" | \"addDanger\" | \"addError\" | \"addInfo\">"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 51
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.headingId",
            "type": "string",
            "tags": [],
            "label": "headingId",
            "description": [
              "\nId of the heading element describing the table. This id will be used as `aria-labelledby` of the wrapper element.\nIf the table is not empty, this component renders its own h1 element using the same id."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 56
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.rowHeader",
            "type": "string",
            "tags": [],
            "label": "rowHeader",
            "description": [
              "\nIndicates which column should be used as the identifying cell in each row."
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 60
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.tableCaption",
            "type": "string",
            "tags": [],
            "label": "tableCaption",
            "description": [
              "\nDescribes the content of the table. If not specified, the caption will be \"This table contains {itemCount} rows.\""
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 64
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewProps.searchFilters",
            "type": "Array",
            "tags": [],
            "label": "searchFilters",
            "description": [],
            "signature": [
              "SearchFilterConfig",
              "[] | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 65
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TableListViewState",
        "type": "Interface",
        "tags": [],
        "label": "TableListViewState",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
          "lineNumber": 68
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.items",
            "type": "Array",
            "tags": [],
            "label": "items",
            "description": [],
            "signature": [
              "object[]"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 69
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.hasInitialFetchReturned",
            "type": "boolean",
            "tags": [],
            "label": "hasInitialFetchReturned",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 70
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.isFetchingItems",
            "type": "boolean",
            "tags": [],
            "label": "isFetchingItems",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 71
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.isDeletingItems",
            "type": "boolean",
            "tags": [],
            "label": "isDeletingItems",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 72
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.showDeleteModal",
            "type": "boolean",
            "tags": [],
            "label": "showDeleteModal",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 73
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.showLimitError",
            "type": "boolean",
            "tags": [],
            "label": "showLimitError",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 74
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.fetchError",
            "type": "Object",
            "tags": [],
            "label": "fetchError",
            "description": [],
            "signature": [
              "HttpFetchError",
              " | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 75
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.filter",
            "type": "string",
            "tags": [],
            "label": "filter",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 76
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.selectedIds",
            "type": "Array",
            "tags": [],
            "label": "selectedIds",
            "description": [],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 77
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.TableListViewState.totalItems",
            "type": "number",
            "tags": [],
            "label": "totalItems",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/table_list_view/table_list_view.tsx",
              "lineNumber": 78
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToastInput",
        "type": "Interface",
        "tags": [],
        "label": "ToastInput",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/notifications/types.ts",
          "lineNumber": 12
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.title",
            "type": "CompoundType",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 13
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.body",
            "type": "CompoundType",
            "tags": [],
            "label": "body",
            "description": [],
            "signature": [
              "React.ReactNode"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 14
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.color",
            "type": "CompoundType",
            "tags": [],
            "label": "color",
            "description": [],
            "signature": [
              "\"warning\" | \"success\" | \"primary\" | \"danger\" | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 15
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.iconType",
            "type": "CompoundType",
            "tags": [],
            "label": "iconType",
            "description": [],
            "signature": [
              "string | React.ComponentClass<{}, any> | React.FunctionComponent<{}> | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 16
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.toastLifeTimeMs",
            "type": "number",
            "tags": [],
            "label": "toastLifeTimeMs",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 17
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.ToastInput.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [],
            "signature": [
              "(() => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/notifications/types.ts",
              "lineNumber": 18
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditorProps",
        "type": "Interface",
        "tags": [],
        "label": "UrlTemplateEditorProps",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
          "lineNumber": 31
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.value",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 32
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.height",
            "type": "CompoundType",
            "tags": [],
            "label": "height",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 33
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.variables",
            "type": "Array",
            "tags": [],
            "label": "variables",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaReact",
                "scope": "public",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-public.UrlTemplateEditorVariable",
                "text": "UrlTemplateEditorVariable"
              },
              "[] | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 34
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.onChange",
            "type": "Function",
            "tags": [],
            "label": "onChange",
            "description": [],
            "signature": [
              "(value: string) => void"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 35
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.onEditor",
            "type": "Function",
            "tags": [],
            "label": "onEditor",
            "description": [],
            "signature": [
              "((editor: ",
              "editor",
              ".IStandaloneCodeEditor) => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 36
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorProps.Editor",
            "type": "CompoundType",
            "tags": [],
            "label": "Editor",
            "description": [],
            "signature": [
              "React.FunctionComponent<",
              "Props",
              "> | React.ComponentClass<",
              "Props",
              ", any> | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 37
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.UrlTemplateEditorVariable",
        "type": "Interface",
        "tags": [],
        "label": "UrlTemplateEditorVariable",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
          "lineNumber": 24
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 25
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 26
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.documentation",
            "type": "string",
            "tags": [],
            "label": "documentation",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 27
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.kind",
            "type": "CompoundType",
            "tags": [],
            "label": "kind",
            "description": [],
            "signature": [
              "languages",
              ".CompletionItemKind | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 28
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.UrlTemplateEditorVariable.sortText",
            "type": "string",
            "tags": [],
            "label": "sortText",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/url_template_editor/url_template_editor.tsx",
              "lineNumber": 29
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ButtonSize",
        "type": "Type",
        "tags": [],
        "label": "ButtonSize",
        "description": [],
        "signature": [
          "\"m\" | \"s\""
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
          "lineNumber": 64
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.KibanaServices",
        "type": "Type",
        "tags": [],
        "label": "KibanaServices",
        "description": [],
        "signature": [
          "{ application?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ApplicationStart",
            "text": "ApplicationStart"
          },
          " | undefined; chrome?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.ChromeStart",
            "text": "ChromeStart"
          },
          " | undefined; docLinks?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.DocLinksStart",
            "text": "DocLinksStart"
          },
          " | undefined; http?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.HttpSetup",
            "text": "HttpSetup"
          },
          " | undefined; savedObjects?: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.SavedObjectsStart",
            "text": "SavedObjectsStart"
          }
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/types.ts",
          "lineNumber": 14
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.POSITIONS",
        "type": "Array",
        "tags": [],
        "label": "POSITIONS",
        "description": [],
        "signature": [
          "(\"left\" | \"right\" | \"none\" | \"center\")[]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
          "lineNumber": 22
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.SIZES",
        "type": "Array",
        "tags": [],
        "label": "SIZES",
        "description": [],
        "signature": [
          "(\"m\" | \"s\")[]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/field_button/field_button.tsx",
          "lineNumber": 66
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.TOOLBAR_BUTTON_SIZES",
        "type": "Array",
        "tags": [],
        "label": "TOOLBAR_BUTTON_SIZES",
        "description": [],
        "signature": [
          "(\"m\" | \"s\" | undefined)[]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
          "lineNumber": 27
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ToolbarButtonProps",
        "type": "Type",
        "tags": [],
        "label": "ToolbarButtonProps",
        "description": [],
        "signature": [
          "DisambiguateSet",
          "<",
          "PropsForAnchor",
          "<",
          "EuiButtonProps",
          ", { buttonRef?: ((instance: HTMLAnchorElement | null) => void) | React.RefObject<HTMLAnchorElement> | null | undefined; }>, ",
          "PropsForButton",
          "<",
          "EuiButtonProps"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
          "lineNumber": 29
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.Value",
        "type": "Type",
        "tags": [],
        "label": "Value",
        "description": [],
        "signature": [
          "[React.ReactText, React.ReactText]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/validated_range/validated_dual_range.tsx",
          "lineNumber": 19
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.WEIGHTS",
        "type": "Array",
        "tags": [],
        "label": "WEIGHTS",
        "description": [],
        "signature": [
          "Weights[]"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/toolbar_button/toolbar_button.tsx",
          "lineNumber": 25
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.context",
        "type": "Object",
        "tags": [],
        "label": "context",
        "description": [],
        "signature": [
          "React.Context<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaReactContextValue",
            "text": "KibanaReactContextValue"
          },
          "<Partial<",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          ">>>"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/context/context.tsx",
          "lineNumber": 22
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.ExitFullScreenButton",
        "type": "Object",
        "tags": [],
        "label": "ExitFullScreenButton",
        "description": [],
        "signature": [
          "typeof ExitFullScreenButtonUi"
        ],
        "source": {
          "path": "src/plugins/kibana_react/public/exit_full_screen_button/exit_full_screen_button.tsx",
          "lineNumber": 86
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-public.typeToEuiIconMap",
        "type": "Object",
        "tags": [],
        "label": "typeToEuiIconMap",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
          "lineNumber": 37
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.boolean",
            "type": "Object",
            "tags": [],
            "label": "boolean",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 38
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.boolean.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.conflict",
            "type": "Object",
            "tags": [],
            "label": "conflict",
            "description": [
              "// icon for an index pattern mapping conflict in discover"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 40
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.conflict.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 40
                },
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.conflict.color",
                "type": "string",
                "tags": [],
                "label": "color",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 40
                },
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.conflict.shape",
                "type": "string",
                "tags": [],
                "label": "shape",
                "description": [],
                "signature": [
                  "\"square\""
                ],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 40
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.date",
            "type": "Object",
            "tags": [],
            "label": "date",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 41
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.date.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 41
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.date_range",
            "type": "Object",
            "tags": [],
            "label": "date_range",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 42
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.date_range.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 42
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.geo_point",
            "type": "Object",
            "tags": [],
            "label": "geo_point",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 43
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.geo_point.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 43
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.geo_shape",
            "type": "Object",
            "tags": [],
            "label": "geo_shape",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 44
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.geo_shape.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 44
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.ip",
            "type": "Object",
            "tags": [],
            "label": "ip",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 45
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.ip.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 45
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.ip_range",
            "type": "Object",
            "tags": [],
            "label": "ip_range",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 46
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.ip_range.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 46
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.murmur3",
            "type": "Object",
            "tags": [],
            "label": "murmur3",
            "description": [
              "// is a plugin's data type https://www.elastic.co/guide/en/elasticsearch/plugins/current/mapper-murmur3-usage.html"
            ],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 48
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.murmur3.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 48
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.number",
            "type": "Object",
            "tags": [],
            "label": "number",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 49
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.number.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 49
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.number_range",
            "type": "Object",
            "tags": [],
            "label": "number_range",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 50
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.number_range.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 50
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap._source",
            "type": "Object",
            "tags": [],
            "label": "_source",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 51
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap._source.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 51
                },
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap._source.color",
                "type": "string",
                "tags": [],
                "label": "color",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 51
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.string",
            "type": "Object",
            "tags": [],
            "label": "string",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 52
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.string.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 52
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-public.typeToEuiIconMap.nested",
            "type": "Object",
            "tags": [],
            "label": "nested",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
              "lineNumber": 53
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaReact",
                "id": "def-public.typeToEuiIconMap.nested.iconType",
                "type": "string",
                "tags": [],
                "label": "iconType",
                "description": [],
                "source": {
                  "path": "src/plugins/kibana_react/public/field_icon/field_icon.tsx",
                  "lineNumber": 53
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.createGlobalStyle",
        "type": "Function",
        "tags": [],
        "label": "createGlobalStyle",
        "description": [],
        "signature": [
          "<P>(first: ",
          "CSSObject",
          " | ",
          "InterpolationFunction",
          "<",
          "ThemedStyledProps",
          "<P, ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">> | TemplateStringsArray, ...interpolations: ",
          "Interpolation"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 42
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.css",
        "type": "Function",
        "tags": [],
        "label": "css",
        "description": [],
        "signature": [
          "ThemedCssFunction",
          "<",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 41
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.euiStyled",
        "type": "Function",
        "tags": [],
        "label": "euiStyled",
        "description": [],
        "signature": [
          "ThemedStyledInterface",
          "<",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 40
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.EuiThemeProvider",
        "type": "Function",
        "tags": [],
        "label": "EuiThemeProvider",
        "description": [],
        "signature": [
          "<OuterTheme extends ",
          "DefaultTheme",
          " = ",
          "DefaultTheme",
          ">({ darkMode, ...otherProps }: Pick<",
          "ThemeProviderProps",
          "<OuterTheme, OuterTheme & ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">, \"children\"> & { darkMode?: boolean | undefined; }) => JSX.Element"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 21
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiThemeProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  darkMode = false,\n  ...otherProps\n}",
            "description": [],
            "signature": [
              "Pick<",
              "ThemeProviderProps",
              "<OuterTheme, OuterTheme & ",
              {
                "pluginId": "kibanaReact",
                "scope": "common",
                "docId": "kibKibanaReactPluginApi",
                "section": "def-common.EuiTheme",
                "text": "EuiTheme"
              },
              ">, \"children\"> & { darkMode?: boolean | undefined; }"
            ],
            "source": {
              "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
              "lineNumber": 23
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.keyframes",
        "type": "Function",
        "tags": [],
        "label": "keyframes",
        "description": [],
        "signature": [
          "(strings: TemplateStringsArray | ",
          "CSSKeyframes",
          ", ...interpolations: ",
          "SimpleInterpolation",
          "[]) => ",
          "Keyframes"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 43
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.withTheme",
        "type": "Function",
        "tags": [],
        "label": "withTheme",
        "description": [],
        "signature": [
          "BaseWithThemeFnInterface",
          "<",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          },
          ">"
        ],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 44
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaReact",
        "id": "def-common.EuiTheme",
        "type": "Interface",
        "tags": [],
        "label": "EuiTheme",
        "description": [],
        "source": {
          "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
          "lineNumber": 16
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiTheme.eui",
            "type": "CompoundType",
            "tags": [],
            "label": "eui",
            "description": [],
            "signature": [
              "{ paddingSizes: { xs: string; s: string; m: string; l: string; xl: string; }; avatarSizing: { s: { size: string; 'font-size': string; }; m: { size: string; 'font-size': string; }; l: { size: string; 'font-size': string; }; xl: { size: string; 'font-size': string; }; }; euiBadgeGroupGutterTypes: { gutterExtraSmall: string; gutterSmall: string; }; euiBreadcrumbSpacing: string; euiBreadcrumbTruncateWidth: string; euiButtonEmptyTypes: { primary: string; danger: string; disabled: string; ghost: string; text: string; success: string; warning: string; }; euiButtonIconTypes: { accent: string; danger: string; ghost: string; primary: string; subdued: string; success: string; text: string; warning: string; }; euiCallOutTypes: { primary: string; success: string; warning: string; danger: string; }; euiCardSpacing: string; euiCardBottomNodeHeight: string; euiCardSelectButtonBorders: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardSelectButtonBackgrounds: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiCheckableCardPadding: string; euiCollapsibleNavWidth: string; euiCollapsibleNavGroupLightBackgroundColor: string; euiCollapsibleNavGroupDarkBackgroundColor: string; euiCollapsibleNavGroupDarkHighContrastColor: string; euiColorPickerValueRange0: string; euiColorPickerValueRange1: string; euiColorPickerSaturationRange0: string; euiColorPickerSaturationRange1: string; euiColorPickerIndicatorSize: string; euiColorPickerWidth: string; euiColorPaletteDisplaySizes: { sizeExtraSmall: string; sizeSmall: string; sizeMedium: string; }; euiContextMenuWidth: string; euiControlBarBackground: string; euiControlBarText: string; euiControlBarBorderColor: string; euiControlBarInitialHeight: string; euiControlBarMaxHeight: string; euiControlBarHeights: { s: string; m: string; l: string; }; euiDataGridPrefix: string; euiDataGridStyles: string; euiDataGridColumnResizerWidth: string; euiDataGridPopoverMaxHeight: string; euiDataGridCellPaddingS: string; euiDataGridCellPaddingM: string; euiDataGridCellPaddingL: string; euiDataGridVerticalBorder: string; euiDatePickerCalendarWidth: string; euiSuperDatePickerWidth: string; euiSuperDatePickerButtonWidth: string; euiDragAndDropSpacing: { s: string; m: string; l: string; }; euiExpressionColors: { subdued: string; primary: string; secondary: string; warning: string; danger: string; accent: string; }; euiFacetGutterSizes: { gutterNone: number; gutterSmall: string; gutterMedium: string; gutterLarge: string; }; gutterTypes: { gutterExtraSmall: string; gutterSmall: string; gutterMedium: string; gutterLarge: string; gutterExtraLarge: string; }; fractions: { fourths: { percentage: string; count: number; }; thirds: { percentage: string; count: number; }; halves: { percentage: string; count: number; }; single: { percentage: string; count: number; }; }; flyoutSizes: { small: { min: string; width: string; max: string; }; medium: { min: string; width: string; max: string; }; large: { min: string; width: string; max: string; }; }; euiFlyoutBorder: string; euiFlyoutPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiFilePickerTallHeight: string; euiRangeLevelColors: { primary: string; success: string; warning: string; danger: string; }; textareaResizing: { vertical: string; horizontal: string; both: string; none: string; }; euiHeaderLinksGutterSizes: { gutterXS: string; gutterS: string; gutterM: string; gutterL: string; }; ruleMargins: { marginXSmall: string; marginSmall: string; marginMedium: string; marginLarge: string; marginXLarge: string; marginXXLarge: string; }; euiIconLoadingOpacity: number; euiIconColors: { accent: string; danger: string; ghost: string; primary: string; secondary: string; success: string; subdued: string; text: string; warning: string; }; euiIconSizes: { small: string; medium: string; large: string; xLarge: string; xxLarge: string; }; euiKeyPadMenuSize: string; euiKeyPadMenuItemBetaBadgeSize: string; euiLinkColors: { subdued: string; primary: string; secondary: string; accent: string; warning: string; danger: string; text: string; ghost: string; }; euiListGroupItemHoverBackground: string; euiListGroupItemHoverBackgroundGhost: string; euiListGroupGutterTypes: { gutterSmall: string; gutterMedium: string; }; euiListGroupItemColorTypes: { primary: string; text: string; subdued: string; ghost: string; }; euiListGroupItemSizeTypes: { xSmall: string; small: string; medium: string; large: string; }; euiGradientStartStop: string; euiGradientMiddle: string; browserDefaultFontSize: string; euiMarkdownEditorMinHeight: string; euiPopoverArrowSize: string; euiPopoverTranslateDistance: string; euiProgressSizes: { xs: string; s: string; m: string; l: string; }; euiProgressColors: { primary: string; secondary: string; success: string; warning: string; danger: string; accent: string; subdued: string; vis0: string; vis1: string; vis2: string; vis3: string; vis4: string; vis5: string; vis6: string; vis7: string; vis8: string; vis9: string; customColor: string; }; euiResizableButtonTransitionSpeed: string; euiResizableButtonSize: string; euiSelectableListItemBorder: string; euiSelectableListItemPadding: string; euiSelectableTemplateSitewideTypes: { application: { color: string; 'font-weight': number; }; deployment: { color: string; 'font-weight': number; }; article: { color: string; 'font-weight': number; }; case: { color: string; 'font-weight': number; }; platform: { color: string; 'font-weight': number; }; }; euiSideNavEmphasizedBackgroundColor: string; euiSideNavRootTextcolor: string; euiSideNavBranchTextcolor: string; euiSideNavSelectedTextcolor: string; spacerSizes: { xs: string; s: string; m: string; l: string; xl: string; xxl: string; }; euiStepNumberSize: string; euiStepNumberSmallSize: string; euiStepNumberMargin: string; euiStepStatusColorsToFade: { warning: string; danger: string; disabled: string; incomplete: string; }; euiSuggestItemColors: { tint0: string; tint1: string; tint2: string; tint3: string; tint4: string; tint5: string; tint6: string; tint7: string; tint8: string; tint9: string; tint10: string; }; euiTableCellContentPadding: string; euiTableCellContentPaddingCompressed: string; euiTableCellCheckboxWidth: string; euiTableActionsAreaWidth: string; euiTableHoverColor: string; euiTableSelectedColor: string; euiTableHoverSelectedColor: string; euiTableActionsBorderColor: string; euiTableHoverClickableColor: string; euiTableFocusClickableColor: string; euiTabFontSize: string; euiTabFontSizeS: string; euiTabFontSizeL: string; euiTextColors: { default: string; subdued: string; secondary: string; accent: string; warning: string; danger: string; ghost: string; }; euiTextConstrainedMaxWidth: string; euiToastWidth: string; euiToastTypes: { primary: string; success: string; warning: string; danger: string; }; euiTokenGrayColor: string; euiTokenTypes: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; gray: { graphic: string; behindText: string; }; }; euiTokenTypeKeys: string; euiAnimSlightBounce: string; euiAnimSlightResistance: string; euiAnimSpeedExtraFast: string; euiAnimSpeedFast: string; euiAnimSpeedNormal: string; euiAnimSpeedSlow: string; euiAnimSpeedExtraSlow: string; euiBorderWidthThin: string; euiBorderWidthThick: string; euiBorderColor: string; euiBorderRadius: string; euiBorderRadiusSmall: string; euiBorderThick: string; euiBorderThin: string; euiBorderEditable: string; euiButtonHeight: string; euiButtonHeightSmall: string; euiButtonHeightXSmall: string; euiButtonColorDisabled: string; euiButtonColorDisabledText: string; euiButtonColorGhostDisabled: string; euiButtonTypes: { primary: string; secondary: string; warning: string; danger: string; ghost: string; text: string; }; euiColorGhost: string; euiColorInk: string; euiColorPrimary: string; euiColorSecondary: string; euiColorAccent: string; euiColorSuccess: string; euiColorWarning: string; euiColorDanger: string; euiColorEmptyShade: string; euiColorLightestShade: string; euiColorLightShade: string; euiColorMediumShade: string; euiColorDarkShade: string; euiColorDarkestShade: string; euiColorFullShade: string; euiPageBackgroundColor: string; euiColorHighlight: string; euiTextColor: string; euiTitleColor: string; euiTextSubduedColor: string; euiColorDisabled: string; euiColorPrimaryText: string; euiColorSecondaryText: string; euiColorAccentText: string; euiColorWarningText: string; euiColorDangerText: string; euiColorDisabledText: string; euiColorSuccessText: string; euiLinkColor: string; euiPaletteColorBlind: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; }; euiPaletteColorBlindKeys: string; euiColorVis0: string; euiColorVis1: string; euiColorVis2: string; euiColorVis3: string; euiColorVis4: string; euiColorVis5: string; euiColorVis6: string; euiColorVis7: string; euiColorVis8: string; euiColorVis9: string; euiColorVis0_behindText: string; euiColorVis1_behindText: string; euiColorVis2_behindText: string; euiColorVis3_behindText: string; euiColorVis4_behindText: string; euiColorVis5_behindText: string; euiColorVis6_behindText: string; euiColorVis7_behindText: string; euiColorVis8_behindText: string; euiColorVis9_behindText: string; euiColorChartLines: string; euiColorChartBand: string; euiCodeBlockBackgroundColor: string; euiCodeBlockColor: string; euiCodeBlockSelectedBackgroundColor: string; euiCodeBlockCommentColor: string; euiCodeBlockSelectorTagColor: string; euiCodeBlockStringColor: string; euiCodeBlockTagColor: string; euiCodeBlockNameColor: string; euiCodeBlockNumberColor: string; euiCodeBlockKeywordColor: string; euiCodeBlockFunctionTitleColor: string; euiCodeBlockTypeColor: string; euiCodeBlockAttributeColor: string; euiCodeBlockSymbolColor: string; euiCodeBlockParamsColor: string; euiCodeBlockMetaColor: string; euiCodeBlockTitleColor: string; euiCodeBlockSectionColor: string; euiCodeBlockAdditionColor: string; euiCodeBlockDeletionColor: string; euiCodeBlockSelectorClassColor: string; euiCodeBlockSelectorIdColor: string; euiFormMaxWidth: string; euiFormControlHeight: string; euiFormControlCompressedHeight: string; euiFormControlPadding: string; euiFormControlCompressedPadding: string; euiFormControlBorderRadius: number; euiFormControlCompressedBorderRadius: string; euiRadioSize: string; euiCheckBoxSize: string; euiCheckboxBorderRadius: string; euiSwitchHeight: string; euiSwitchWidth: string; euiSwitchThumbSize: string; euiSwitchIconHeight: string; euiSwitchHeightCompressed: string; euiSwitchWidthCompressed: string; euiSwitchThumbSizeCompressed: string; euiSwitchHeightMini: string; euiSwitchWidthMini: string; euiSwitchThumbSizeMini: string; euiFormBackgroundColor: string; euiFormBackgroundDisabledColor: string; euiFormBackgroundReadOnlyColor: string; euiFormBorderOpaqueColor: string; euiFormBorderColor: string; euiFormBorderDisabledColor: string; euiFormCustomControlDisabledIconColor: string; euiFormCustomControlBorderColor: string; euiFormControlDisabledColor: string; euiFormControlBoxShadow: string; euiFormInputGroupLabelBackground: string; euiFormInputGroupBorder: string; euiSwitchOffColor: string; euiFormControlLayoutGroupInputHeight: string; euiFormControlLayoutGroupInputCompressedHeight: string; euiFormControlLayoutGroupInputCompressedBorderRadius: string; euiRangeTrackColor: string; euiRangeThumbRadius: string; euiRangeThumbHeight: string; euiRangeThumbWidth: string; euiRangeThumbBorderColor: string; euiRangeTrackWidth: string; euiRangeTrackHeight: string; euiRangeTrackBorderWidth: number; euiRangeTrackBorderColor: string; euiRangeTrackRadius: string; euiRangeDisabledOpacity: number; euiRangeHighlightHeight: string; euiHeaderBackgroundColor: string; euiHeaderDarkBackgroundColor: string; euiHeaderBorderColor: string; euiHeaderBreadcrumbColor: string; euiHeaderHeight: string; euiHeaderChildSize: string; euiHeaderHeightCompensation: string; euiPageDefaultMaxWidth: string; euiPageSidebarMinWidth: string; euiPanelPaddingModifiers: { paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiPanelBorderRadiusModifiers: { borderRadiusNone: number; borderRadiusMedium: string; }; euiPanelBackgroundColorModifiers: { transparent: string; plain: string; subdued: string; accent: string; primary: string; success: string; warning: string; danger: string; }; euiBreakpoints: { xs: number; s: string; m: string; l: string; xl: string; }; euiBreakpointKeys: string; euiShadowColor: string; euiShadowColorLarge: string; euiSize: string; euiSizeXS: string; euiSizeS: string; euiSizeM: string; euiSizeL: string; euiSizeXL: string; euiSizeXXL: string; euiButtonMinWidth: string; euiScrollBar: string; euiScrollBarCorner: string; euiFocusRingColor: string; euiFocusRingAnimStartColor: string; euiFocusRingAnimStartSize: string; euiFocusRingAnimStartSizeLarge: string; euiFocusRingSizeLarge: string; euiFocusRingSize: string; euiFocusTransparency: number; euiFocusBackgroundColor: string; euiTooltipBackgroundColor: string; euiTooltipAnimations: { top: string; left: string; bottom: string; right: string; }; euiFontFamily: string; euiCodeFontFamily: string; euiFontFeatureSettings: string; euiTextScale: string; euiFontSize: string; euiFontSizeXS: string; euiFontSizeS: string; euiFontSizeM: string; euiFontSizeL: string; euiFontSizeXL: string; euiFontSizeXXL: string; euiLineHeight: number; euiBodyLineHeight: number; euiFontWeightLight: number; euiFontWeightRegular: number; euiFontWeightMedium: number; euiFontWeightSemiBold: number; euiFontWeightBold: number; euiCodeFontWeightRegular: number; euiCodeFontWeightBold: number; euiTitles: { xxxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xs: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; s: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; m: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; l: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; }; euiZLevel0: number; euiZLevel1: number; euiZLevel2: number; euiZLevel3: number; euiZLevel4: number; euiZLevel5: number; euiZLevel6: number; euiZLevel7: number; euiZLevel8: number; euiZLevel9: number; euiZContent: number; euiZHeader: number; euiZContentMenu: number; euiZFlyout: number; euiZNavigation: number; euiZMask: number; euiZModal: number; euiZToastList: number; } | { paddingSizes: { xs: string; s: string; m: string; l: string; xl: string; }; avatarSizing: { s: { size: string; 'font-size': string; }; m: { size: string; 'font-size': string; }; l: { size: string; 'font-size': string; }; xl: { size: string; 'font-size': string; }; }; euiBadgeGroupGutterTypes: { gutterExtraSmall: string; gutterSmall: string; }; euiBreadcrumbSpacing: string; euiBreadcrumbTruncateWidth: string; euiButtonEmptyTypes: { primary: string; danger: string; disabled: string; ghost: string; text: string; success: string; warning: string; }; euiButtonIconTypes: { accent: string; danger: string; ghost: string; primary: string; subdued: string; success: string; text: string; warning: string; }; euiCallOutTypes: { primary: string; success: string; warning: string; danger: string; }; euiCardSpacing: string; euiCardBottomNodeHeight: string; euiCardSelectButtonBorders: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardSelectButtonBackgrounds: { text: string; primary: string; success: string; danger: string; ghost: string; }; euiCardPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiCheckableCardPadding: string; euiCollapsibleNavWidth: string; euiCollapsibleNavGroupLightBackgroundColor: string; euiCollapsibleNavGroupDarkBackgroundColor: string; euiCollapsibleNavGroupDarkHighContrastColor: string; euiColorPickerValueRange0: string; euiColorPickerValueRange1: string; euiColorPickerSaturationRange0: string; euiColorPickerSaturationRange1: string; euiColorPickerIndicatorSize: string; euiColorPickerWidth: string; euiColorPaletteDisplaySizes: { sizeExtraSmall: string; sizeSmall: string; sizeMedium: string; }; euiContextMenuWidth: string; euiControlBarBackground: string; euiControlBarText: string; euiControlBarBorderColor: string; euiControlBarInitialHeight: string; euiControlBarMaxHeight: string; euiControlBarHeights: { s: string; m: string; l: string; }; euiDataGridPrefix: string; euiDataGridStyles: string; euiDataGridColumnResizerWidth: string; euiDataGridPopoverMaxHeight: string; euiDataGridCellPaddingS: string; euiDataGridCellPaddingM: string; euiDataGridCellPaddingL: string; euiDataGridVerticalBorder: string; euiDatePickerCalendarWidth: string; euiSuperDatePickerWidth: string; euiSuperDatePickerButtonWidth: string; euiDragAndDropSpacing: { s: string; m: string; l: string; }; euiExpressionColors: { subdued: string; primary: string; secondary: string; warning: string; danger: string; accent: string; }; euiFacetGutterSizes: { gutterNone: number; gutterSmall: string; gutterMedium: string; gutterLarge: string; }; gutterTypes: { gutterExtraSmall: string; gutterSmall: string; gutterMedium: string; gutterLarge: string; gutterExtraLarge: string; }; fractions: { fourths: { percentage: string; count: number; }; thirds: { percentage: string; count: number; }; halves: { percentage: string; count: number; }; single: { percentage: string; count: number; }; }; flyoutSizes: { small: { min: string; width: string; max: string; }; medium: { min: string; width: string; max: string; }; large: { min: string; width: string; max: string; }; }; euiFlyoutBorder: string; euiFlyoutPaddingModifiers: { paddingNone: number; paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiFilePickerTallHeight: string; euiRangeLevelColors: { primary: string; success: string; warning: string; danger: string; }; textareaResizing: { vertical: string; horizontal: string; both: string; none: string; }; euiHeaderLinksGutterSizes: { gutterXS: string; gutterS: string; gutterM: string; gutterL: string; }; ruleMargins: { marginXSmall: string; marginSmall: string; marginMedium: string; marginLarge: string; marginXLarge: string; marginXXLarge: string; }; euiIconLoadingOpacity: number; euiIconColors: { accent: string; danger: string; ghost: string; primary: string; secondary: string; success: string; subdued: string; text: string; warning: string; }; euiIconSizes: { small: string; medium: string; large: string; xLarge: string; xxLarge: string; }; euiKeyPadMenuSize: string; euiKeyPadMenuItemBetaBadgeSize: string; euiLinkColors: { subdued: string; primary: string; secondary: string; accent: string; warning: string; danger: string; text: string; ghost: string; }; euiListGroupItemHoverBackground: string; euiListGroupItemHoverBackgroundGhost: string; euiListGroupGutterTypes: { gutterSmall: string; gutterMedium: string; }; euiListGroupItemColorTypes: { primary: string; text: string; subdued: string; ghost: string; }; euiListGroupItemSizeTypes: { xSmall: string; small: string; medium: string; large: string; }; euiGradientStartStop: string; euiGradientMiddle: string; browserDefaultFontSize: string; euiMarkdownEditorMinHeight: string; euiPopoverArrowSize: string; euiPopoverTranslateDistance: string; euiProgressSizes: { xs: string; s: string; m: string; l: string; }; euiProgressColors: { primary: string; secondary: string; success: string; warning: string; danger: string; accent: string; subdued: string; vis0: string; vis1: string; vis2: string; vis3: string; vis4: string; vis5: string; vis6: string; vis7: string; vis8: string; vis9: string; customColor: string; }; euiResizableButtonTransitionSpeed: string; euiResizableButtonSize: string; euiSelectableListItemBorder: string; euiSelectableListItemPadding: string; euiSelectableTemplateSitewideTypes: { application: { color: string; 'font-weight': number; }; deployment: { color: string; 'font-weight': number; }; article: { color: string; 'font-weight': number; }; case: { color: string; 'font-weight': number; }; platform: { color: string; 'font-weight': number; }; }; euiSideNavEmphasizedBackgroundColor: string; euiSideNavRootTextcolor: string; euiSideNavBranchTextcolor: string; euiSideNavSelectedTextcolor: string; spacerSizes: { xs: string; s: string; m: string; l: string; xl: string; xxl: string; }; euiStepNumberSize: string; euiStepNumberSmallSize: string; euiStepNumberMargin: string; euiStepStatusColorsToFade: { warning: string; danger: string; disabled: string; incomplete: string; }; euiSuggestItemColors: { tint0: string; tint1: string; tint2: string; tint3: string; tint4: string; tint5: string; tint6: string; tint7: string; tint8: string; tint9: string; tint10: string; }; euiTableCellContentPadding: string; euiTableCellContentPaddingCompressed: string; euiTableCellCheckboxWidth: string; euiTableActionsAreaWidth: string; euiTableHoverColor: string; euiTableSelectedColor: string; euiTableHoverSelectedColor: string; euiTableActionsBorderColor: string; euiTableHoverClickableColor: string; euiTableFocusClickableColor: string; euiTabFontSize: string; euiTabFontSizeS: string; euiTabFontSizeL: string; euiTextColors: { default: string; subdued: string; secondary: string; accent: string; warning: string; danger: string; ghost: string; }; euiTextConstrainedMaxWidth: string; euiToastWidth: string; euiToastTypes: { primary: string; success: string; warning: string; danger: string; }; euiTokenGrayColor: string; euiTokenTypes: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; gray: { graphic: string; behindText: string; }; }; euiTokenTypeKeys: string; euiAnimSlightBounce: string; euiAnimSlightResistance: string; euiAnimSpeedExtraFast: string; euiAnimSpeedFast: string; euiAnimSpeedNormal: string; euiAnimSpeedSlow: string; euiAnimSpeedExtraSlow: string; euiBorderWidthThin: string; euiBorderWidthThick: string; euiBorderColor: string; euiBorderRadius: string; euiBorderRadiusSmall: string; euiBorderThick: string; euiBorderThin: string; euiBorderEditable: string; euiButtonHeight: string; euiButtonHeightSmall: string; euiButtonHeightXSmall: string; euiButtonColorDisabled: string; euiButtonColorDisabledText: string; euiButtonColorGhostDisabled: string; euiButtonTypes: { primary: string; secondary: string; warning: string; danger: string; ghost: string; text: string; }; euiColorGhost: string; euiColorInk: string; euiColorPrimary: string; euiColorSecondary: string; euiColorAccent: string; euiColorSuccess: string; euiColorWarning: string; euiColorDanger: string; euiColorEmptyShade: string; euiColorLightestShade: string; euiColorLightShade: string; euiColorMediumShade: string; euiColorDarkShade: string; euiColorDarkestShade: string; euiColorFullShade: string; euiPageBackgroundColor: string; euiColorHighlight: string; euiTextColor: string; euiTitleColor: string; euiTextSubduedColor: string; euiColorDisabled: string; euiColorPrimaryText: string; euiColorSecondaryText: string; euiColorAccentText: string; euiColorWarningText: string; euiColorDangerText: string; euiColorDisabledText: string; euiColorSuccessText: string; euiLinkColor: string; euiPaletteColorBlind: { euiColorVis0: { graphic: string; behindText: string; }; euiColorVis1: { graphic: string; behindText: string; }; euiColorVis2: { graphic: string; behindText: string; }; euiColorVis3: { graphic: string; behindText: string; }; euiColorVis4: { graphic: string; behindText: string; }; euiColorVis5: { graphic: string; behindText: string; }; euiColorVis6: { graphic: string; behindText: string; }; euiColorVis7: { graphic: string; behindText: string; }; euiColorVis8: { graphic: string; behindText: string; }; euiColorVis9: { graphic: string; behindText: string; }; }; euiPaletteColorBlindKeys: string; euiColorVis0: string; euiColorVis1: string; euiColorVis2: string; euiColorVis3: string; euiColorVis4: string; euiColorVis5: string; euiColorVis6: string; euiColorVis7: string; euiColorVis8: string; euiColorVis9: string; euiColorVis0_behindText: string; euiColorVis1_behindText: string; euiColorVis2_behindText: string; euiColorVis3_behindText: string; euiColorVis4_behindText: string; euiColorVis5_behindText: string; euiColorVis6_behindText: string; euiColorVis7_behindText: string; euiColorVis8_behindText: string; euiColorVis9_behindText: string; euiColorChartLines: string; euiColorChartBand: string; euiCodeBlockBackgroundColor: string; euiCodeBlockColor: string; euiCodeBlockSelectedBackgroundColor: string; euiCodeBlockCommentColor: string; euiCodeBlockSelectorTagColor: string; euiCodeBlockStringColor: string; euiCodeBlockTagColor: string; euiCodeBlockNameColor: string; euiCodeBlockNumberColor: string; euiCodeBlockKeywordColor: string; euiCodeBlockFunctionTitleColor: string; euiCodeBlockTypeColor: string; euiCodeBlockAttributeColor: string; euiCodeBlockSymbolColor: string; euiCodeBlockParamsColor: string; euiCodeBlockMetaColor: string; euiCodeBlockTitleColor: string; euiCodeBlockSectionColor: string; euiCodeBlockAdditionColor: string; euiCodeBlockDeletionColor: string; euiCodeBlockSelectorClassColor: string; euiCodeBlockSelectorIdColor: string; euiFormMaxWidth: string; euiFormControlHeight: string; euiFormControlCompressedHeight: string; euiFormControlPadding: string; euiFormControlCompressedPadding: string; euiFormControlBorderRadius: number; euiFormControlCompressedBorderRadius: string; euiRadioSize: string; euiCheckBoxSize: string; euiCheckboxBorderRadius: string; euiSwitchHeight: string; euiSwitchWidth: string; euiSwitchThumbSize: string; euiSwitchIconHeight: string; euiSwitchHeightCompressed: string; euiSwitchWidthCompressed: string; euiSwitchThumbSizeCompressed: string; euiSwitchHeightMini: string; euiSwitchWidthMini: string; euiSwitchThumbSizeMini: string; euiFormBackgroundColor: string; euiFormBackgroundDisabledColor: string; euiFormBackgroundReadOnlyColor: string; euiFormBorderOpaqueColor: string; euiFormBorderColor: string; euiFormBorderDisabledColor: string; euiFormCustomControlDisabledIconColor: string; euiFormCustomControlBorderColor: string; euiFormControlDisabledColor: string; euiFormControlBoxShadow: string; euiFormInputGroupLabelBackground: string; euiFormInputGroupBorder: string; euiSwitchOffColor: string; euiFormControlLayoutGroupInputHeight: string; euiFormControlLayoutGroupInputCompressedHeight: string; euiFormControlLayoutGroupInputCompressedBorderRadius: string; euiRangeTrackColor: string; euiRangeThumbRadius: string; euiRangeThumbHeight: string; euiRangeThumbWidth: string; euiRangeThumbBorderColor: string; euiRangeTrackWidth: string; euiRangeTrackHeight: string; euiRangeTrackBorderWidth: number; euiRangeTrackBorderColor: string; euiRangeTrackRadius: string; euiRangeDisabledOpacity: number; euiRangeHighlightHeight: string; euiHeaderBackgroundColor: string; euiHeaderDarkBackgroundColor: string; euiHeaderBorderColor: string; euiHeaderBreadcrumbColor: string; euiHeaderHeight: string; euiHeaderChildSize: string; euiHeaderHeightCompensation: string; euiPageDefaultMaxWidth: string; euiPageSidebarMinWidth: string; euiPanelPaddingModifiers: { paddingSmall: string; paddingMedium: string; paddingLarge: string; }; euiPanelBorderRadiusModifiers: { borderRadiusNone: number; borderRadiusMedium: string; }; euiPanelBackgroundColorModifiers: { transparent: string; plain: string; subdued: string; accent: string; primary: string; success: string; warning: string; danger: string; }; euiBreakpoints: { xs: number; s: string; m: string; l: string; xl: string; }; euiBreakpointKeys: string; euiShadowColor: string; euiShadowColorLarge: string; euiSize: string; euiSizeXS: string; euiSizeS: string; euiSizeM: string; euiSizeL: string; euiSizeXL: string; euiSizeXXL: string; euiButtonMinWidth: string; euiScrollBar: string; euiScrollBarCorner: string; euiFocusRingColor: string; euiFocusRingAnimStartColor: string; euiFocusRingAnimStartSize: string; euiFocusRingAnimStartSizeLarge: string; euiFocusRingSizeLarge: string; euiFocusRingSize: string; euiFocusTransparency: number; euiFocusBackgroundColor: string; euiTooltipBackgroundColor: string; euiTooltipAnimations: { top: string; left: string; bottom: string; right: string; }; euiFontFamily: string; euiCodeFontFamily: string; euiFontFeatureSettings: string; euiTextScale: string; euiFontSize: string; euiFontSizeXS: string; euiFontSizeS: string; euiFontSizeM: string; euiFontSizeL: string; euiFontSizeXL: string; euiFontSizeXXL: string; euiLineHeight: number; euiBodyLineHeight: number; euiFontWeightLight: number; euiFontWeightRegular: number; euiFontWeightMedium: number; euiFontWeightSemiBold: number; euiFontWeightBold: number; euiCodeFontWeightRegular: number; euiCodeFontWeightBold: number; euiTitles: { xxxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xxs: { 'font-size': string; 'line-height': string; 'font-weight': number; }; xs: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; s: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; m: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; l: { 'font-size': string; 'line-height': string; 'font-weight': number; 'letter-spacing': string; }; }; euiZLevel0: number; euiZLevel1: number; euiZLevel2: number; euiZLevel3: number; euiZLevel4: number; euiZLevel5: number; euiZLevel6: number; euiZLevel7: number; euiZLevel8: number; euiZLevel9: number; euiZContent: number; euiZHeader: number; euiZContentMenu: number; euiZFlyout: number; euiZNavigation: number; euiZMask: number; euiZModal: number; euiZToastList: number; }"
            ],
            "source": {
              "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
              "lineNumber": 17
            },
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaReact",
            "id": "def-common.EuiTheme.darkMode",
            "type": "boolean",
            "tags": [],
            "label": "darkMode",
            "description": [],
            "source": {
              "path": "src/plugins/kibana_react/common/eui_styled_components.tsx",
              "lineNumber": 18
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  }
}