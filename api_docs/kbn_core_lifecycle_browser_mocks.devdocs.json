{
  "id": "@kbn/core-lifecycle-browser-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "parentPluginId": "@kbn/core-lifecycle-browser-mocks",
        "id": "def-public.coreLifecycleMock",
        "type": "Object",
        "tags": [],
        "label": "coreLifecycleMock",
        "description": [],
        "path": "packages/core/lifecycle/core-lifecycle-browser-mocks/src/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-lifecycle-browser-mocks",
            "id": "def-public.coreLifecycleMock.createCoreSetup",
            "type": "Function",
            "tags": [],
            "label": "createCoreSetup",
            "description": [],
            "signature": [
              "({ basePath, pluginStartDeps, pluginStartContract, }?: { basePath?: string | undefined; pluginStartDeps?: object | undefined; pluginStartContract?: any; }) => { analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-browser",
                "scope": "public",
                "docId": "kibKbnCoreAnalyticsBrowserPluginApi",
                "section": "def-public.AnalyticsServiceSetup",
                "text": "AnalyticsServiceSetup"
              },
              ">; application: jest.Mocked<",
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "public",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-public.ApplicationSetup",
                "text": "ApplicationSetup"
              },
              ">; customBranding: { customBranding$: ",
              "Observable",
              "<",
              {
                "pluginId": "@kbn/core-custom-branding-common",
                "scope": "common",
                "docId": "kibKbnCoreCustomBrandingCommonPluginApi",
                "section": "def-common.CustomBranding",
                "text": "CustomBranding"
              },
              ">; hasCustomBranding$: ",
              "Observable",
              "<boolean>; }; docLinks: jest.Mock<any, any, any>; executionContext: jest.Mocked<",
              {
                "pluginId": "@kbn/core-execution-context-browser",
                "scope": "public",
                "docId": "kibKbnCoreExecutionContextBrowserPluginApi",
                "section": "def-public.ExecutionContextSetup",
                "text": "ExecutionContextSetup"
              },
              ">; fatalErrors: jest.Mocked<",
              {
                "pluginId": "@kbn/core-fatal-errors-browser",
                "scope": "public",
                "docId": "kibKbnCoreFatalErrorsBrowserPluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              },
              ">; featureFlags: jest.Mocked<",
              {
                "pluginId": "@kbn/core-feature-flags-browser",
                "scope": "public",
                "docId": "kibKbnCoreFeatureFlagsBrowserPluginApi",
                "section": "def-public.FeatureFlagsSetup",
                "text": "FeatureFlagsSetup"
              },
              ">; getStartServices: jest.Mock<Promise<[{ analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-browser",
                "scope": "public",
                "docId": "kibKbnCoreAnalyticsBrowserPluginApi",
                "section": "def-public.AnalyticsServiceStart",
                "text": "AnalyticsServiceStart"
              },
              ">; application: jest.Mocked<",
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "public",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-public.ApplicationStart",
                "text": "ApplicationStart"
              },
              ">; chrome: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              "InternalChromeStart",
              ">; customBranding: { customBranding$: ",
              "Observable",
              "<",
              {
                "pluginId": "@kbn/core-custom-branding-common",
                "scope": "common",
                "docId": "kibKbnCoreCustomBrandingCommonPluginApi",
                "section": "def-common.CustomBranding",
                "text": "CustomBranding"
              },
              ">; hasCustomBranding$: ",
              "Observable",
              "<boolean>; }; docLinks: ",
              {
                "pluginId": "@kbn/core-doc-links-browser",
                "scope": "public",
                "docId": "kibKbnCoreDocLinksBrowserPluginApi",
                "section": "def-public.DocLinksStart",
                "text": "DocLinksStart"
              },
              "; executionContext: jest.Mocked<",
              {
                "pluginId": "@kbn/core-execution-context-browser",
                "scope": "public",
                "docId": "kibKbnCoreExecutionContextBrowserPluginApi",
                "section": "def-public.ExecutionContextSetup",
                "text": "ExecutionContextSetup"
              },
              ">; featureFlags: jest.Mocked<",
              {
                "pluginId": "@kbn/core-feature-flags-browser",
                "scope": "public",
                "docId": "kibKbnCoreFeatureFlagsBrowserPluginApi",
                "section": "def-public.FeatureFlagsStart",
                "text": "FeatureFlagsStart"
              },
              ">; http: ",
              {
                "pluginId": "@kbn/core-http-browser-mocks",
                "scope": "public",
                "docId": "kibKbnCoreHttpBrowserMocksPluginApi",
                "section": "def-public.HttpSetupMock",
                "text": "HttpSetupMock"
              },
              "; i18n: jest.Mocked<",
              {
                "pluginId": "@kbn/core-i18n-browser",
                "scope": "public",
                "docId": "kibKbnCoreI18nBrowserPluginApi",
                "section": "def-public.I18nStart",
                "text": "I18nStart"
              },
              ">; notifications: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "public",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-public.NotificationsStart",
                "text": "NotificationsStart"
              },
              ">; overlays: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-overlays-browser",
                "scope": "public",
                "docId": "kibKbnCoreOverlaysBrowserPluginApi",
                "section": "def-public.OverlayStart",
                "text": "OverlayStart"
              },
              ">; uiSettings: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; settings: { client: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; globalClient: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; }; savedObjects: jest.Mocked<",
              {
                "pluginId": "@kbn/core-saved-objects-browser",
                "scope": "public",
                "docId": "kibKbnCoreSavedObjectsBrowserPluginApi",
                "section": "def-public.SavedObjectsStart",
                "text": "SavedObjectsStart"
              },
              ">; deprecations: jest.Mocked<",
              {
                "pluginId": "@kbn/core-deprecations-browser",
                "scope": "public",
                "docId": "kibKbnCoreDeprecationsBrowserPluginApi",
                "section": "def-public.DeprecationsServiceStart",
                "text": "DeprecationsServiceStart"
              },
              ">; theme: jest.Mocked<",
              {
                "pluginId": "@kbn/core-theme-browser",
                "scope": "public",
                "docId": "kibKbnCoreThemeBrowserPluginApi",
                "section": "def-public.ThemeServiceSetup",
                "text": "ThemeServiceSetup"
              },
              ">; fatalErrors: jest.Mocked<",
              {
                "pluginId": "@kbn/core-fatal-errors-browser",
                "scope": "public",
                "docId": "kibKbnCoreFatalErrorsBrowserPluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              },
              ">; security: jest.MockedObjectDeep<",
              {
                "pluginId": "@kbn/core-security-browser",
                "scope": "public",
                "docId": "kibKbnCoreSecurityBrowserPluginApi",
                "section": "def-public.SecurityServiceStart",
                "text": "SecurityServiceStart"
              },
              ">; userProfile: jest.Mocked<",
              {
                "pluginId": "@kbn/core-user-profile-browser",
                "scope": "public",
                "docId": "kibKbnCoreUserProfileBrowserPluginApi",
                "section": "def-public.UserProfileService",
                "text": "UserProfileService"
              },
              ">; plugins: { onStart: jest.Mock<any, any, any>; }; }, any, any]>, [], any>; http: ",
              {
                "pluginId": "@kbn/core-http-browser-mocks",
                "scope": "public",
                "docId": "kibKbnCoreHttpBrowserMocksPluginApi",
                "section": "def-public.HttpSetupMock",
                "text": "HttpSetupMock"
              },
              "; notifications: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.MockedKeys",
                "text": "MockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "public",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-public.NotificationsSetup",
                "text": "NotificationsSetup"
              },
              ">; uiSettings: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; settings: { client: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; globalClient: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; }; deprecations: undefined; theme: jest.Mocked<",
              {
                "pluginId": "@kbn/core-theme-browser",
                "scope": "public",
                "docId": "kibKbnCoreThemeBrowserPluginApi",
                "section": "def-public.ThemeServiceSetup",
                "text": "ThemeServiceSetup"
              },
              ">; security: jest.Mocked<",
              {
                "pluginId": "@kbn/core-security-browser",
                "scope": "public",
                "docId": "kibKbnCoreSecurityBrowserPluginApi",
                "section": "def-public.SecurityServiceSetup",
                "text": "SecurityServiceSetup"
              },
              ">; userProfile: jest.Mocked<",
              {
                "pluginId": "@kbn/core-user-profile-browser",
                "scope": "public",
                "docId": "kibKbnCoreUserProfileBrowserPluginApi",
                "section": "def-public.UserProfileServiceSetup",
                "text": "UserProfileServiceSetup"
              },
              ">; plugins: { onSetup: jest.Mock<any, any, any>; onStart: jest.Mock<any, any, any>; }; }"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-browser-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-lifecycle-browser-mocks",
                "id": "def-public.coreLifecycleMock.createCoreSetup.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ basePath?: string | undefined; pluginStartDeps?: object | undefined; pluginStartContract?: any; }"
                ],
                "path": "packages/core/lifecycle/core-lifecycle-browser-mocks/src/core_setup.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-lifecycle-browser-mocks",
            "id": "def-public.coreLifecycleMock.createCoreStart",
            "type": "Function",
            "tags": [],
            "label": "createCoreStart",
            "description": [],
            "signature": [
              "({ basePath }?: { basePath?: string | undefined; }) => { analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-browser",
                "scope": "public",
                "docId": "kibKbnCoreAnalyticsBrowserPluginApi",
                "section": "def-public.AnalyticsServiceStart",
                "text": "AnalyticsServiceStart"
              },
              ">; application: jest.Mocked<",
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "public",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-public.ApplicationStart",
                "text": "ApplicationStart"
              },
              ">; chrome: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              "InternalChromeStart",
              ">; customBranding: { customBranding$: ",
              "Observable",
              "<",
              {
                "pluginId": "@kbn/core-custom-branding-common",
                "scope": "common",
                "docId": "kibKbnCoreCustomBrandingCommonPluginApi",
                "section": "def-common.CustomBranding",
                "text": "CustomBranding"
              },
              ">; hasCustomBranding$: ",
              "Observable",
              "<boolean>; }; docLinks: ",
              {
                "pluginId": "@kbn/core-doc-links-browser",
                "scope": "public",
                "docId": "kibKbnCoreDocLinksBrowserPluginApi",
                "section": "def-public.DocLinksStart",
                "text": "DocLinksStart"
              },
              "; executionContext: jest.Mocked<",
              {
                "pluginId": "@kbn/core-execution-context-browser",
                "scope": "public",
                "docId": "kibKbnCoreExecutionContextBrowserPluginApi",
                "section": "def-public.ExecutionContextSetup",
                "text": "ExecutionContextSetup"
              },
              ">; featureFlags: jest.Mocked<",
              {
                "pluginId": "@kbn/core-feature-flags-browser",
                "scope": "public",
                "docId": "kibKbnCoreFeatureFlagsBrowserPluginApi",
                "section": "def-public.FeatureFlagsStart",
                "text": "FeatureFlagsStart"
              },
              ">; http: ",
              {
                "pluginId": "@kbn/core-http-browser-mocks",
                "scope": "public",
                "docId": "kibKbnCoreHttpBrowserMocksPluginApi",
                "section": "def-public.HttpSetupMock",
                "text": "HttpSetupMock"
              },
              "; i18n: jest.Mocked<",
              {
                "pluginId": "@kbn/core-i18n-browser",
                "scope": "public",
                "docId": "kibKbnCoreI18nBrowserPluginApi",
                "section": "def-public.I18nStart",
                "text": "I18nStart"
              },
              ">; notifications: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "public",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-public.NotificationsStart",
                "text": "NotificationsStart"
              },
              ">; overlays: ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.DeeplyMockedKeys",
                "text": "DeeplyMockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-overlays-browser",
                "scope": "public",
                "docId": "kibKbnCoreOverlaysBrowserPluginApi",
                "section": "def-public.OverlayStart",
                "text": "OverlayStart"
              },
              ">; uiSettings: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; settings: { client: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; globalClient: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "public",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-public.IUiSettingsClient",
                "text": "IUiSettingsClient"
              },
              ">; }; savedObjects: jest.Mocked<",
              {
                "pluginId": "@kbn/core-saved-objects-browser",
                "scope": "public",
                "docId": "kibKbnCoreSavedObjectsBrowserPluginApi",
                "section": "def-public.SavedObjectsStart",
                "text": "SavedObjectsStart"
              },
              ">; deprecations: jest.Mocked<",
              {
                "pluginId": "@kbn/core-deprecations-browser",
                "scope": "public",
                "docId": "kibKbnCoreDeprecationsBrowserPluginApi",
                "section": "def-public.DeprecationsServiceStart",
                "text": "DeprecationsServiceStart"
              },
              ">; theme: jest.Mocked<",
              {
                "pluginId": "@kbn/core-theme-browser",
                "scope": "public",
                "docId": "kibKbnCoreThemeBrowserPluginApi",
                "section": "def-public.ThemeServiceSetup",
                "text": "ThemeServiceSetup"
              },
              ">; fatalErrors: jest.Mocked<",
              {
                "pluginId": "@kbn/core-fatal-errors-browser",
                "scope": "public",
                "docId": "kibKbnCoreFatalErrorsBrowserPluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              },
              ">; security: jest.MockedObjectDeep<",
              {
                "pluginId": "@kbn/core-security-browser",
                "scope": "public",
                "docId": "kibKbnCoreSecurityBrowserPluginApi",
                "section": "def-public.SecurityServiceStart",
                "text": "SecurityServiceStart"
              },
              ">; userProfile: jest.Mocked<",
              {
                "pluginId": "@kbn/core-user-profile-browser",
                "scope": "public",
                "docId": "kibKbnCoreUserProfileBrowserPluginApi",
                "section": "def-public.UserProfileService",
                "text": "UserProfileService"
              },
              ">; plugins: { onStart: jest.Mock<any, any, any>; }; }"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-browser-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-lifecycle-browser-mocks",
                "id": "def-public.coreLifecycleMock.createCoreStart.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ basePath?: string | undefined; }"
                ],
                "path": "packages/core/lifecycle/core-lifecycle-browser-mocks/src/core_start.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}