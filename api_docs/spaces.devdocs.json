{
  "id": "spaces",
  "client": {
    "classes": [
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesManager",
        "type": "Class",
        "tags": [],
        "label": "SpacesManager",
        "description": [],
        "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "http",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpBrowserPluginApi",
                    "section": "def-common.HttpSetup",
                    "text": "HttpSetup"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.onActiveSpaceChange$",
            "type": "Object",
            "tags": [],
            "label": "onActiveSpaceChange$",
            "description": [],
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.getSpaces",
            "type": "Function",
            "tags": [],
            "label": "getSpaces",
            "description": [],
            "signature": [
              "(options?: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesOptions",
                "text": "GetAllSpacesOptions"
              },
              ") => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetSpaceResult",
                "text": "GetSpaceResult"
              },
              "[]>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.getSpaces.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.GetAllSpacesOptions",
                    "text": "GetAllSpacesOptions"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.getSpace",
            "type": "Function",
            "tags": [],
            "label": "getSpace",
            "description": [],
            "signature": [
              "(id: string) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.getSpace.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.getActiveSpace",
            "type": "Function",
            "tags": [],
            "label": "getActiveSpace",
            "description": [],
            "signature": [
              "({ forceRefresh }?: { forceRefresh?: boolean | undefined; }) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.getActiveSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "{ forceRefresh = false }",
                "description": [],
                "signature": [
                  "{ forceRefresh?: boolean | undefined; }"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.createSpace",
            "type": "Function",
            "tags": [],
            "label": "createSpace",
            "description": [],
            "signature": [
              "(space: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ") => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.createSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "space",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.Space",
                    "text": "Space"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.updateSpace",
            "type": "Function",
            "tags": [],
            "label": "updateSpace",
            "description": [],
            "signature": [
              "(space: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ") => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.updateSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "space",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.Space",
                    "text": "Space"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.deleteSpace",
            "type": "Function",
            "tags": [],
            "label": "deleteSpace",
            "description": [],
            "signature": [
              "(space: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ") => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.deleteSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "space",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.Space",
                    "text": "Space"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.disableLegacyUrlAliases",
            "type": "Function",
            "tags": [],
            "label": "disableLegacyUrlAliases",
            "description": [],
            "signature": [
              "(aliases: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.LegacyUrlAliasTarget",
                "text": "LegacyUrlAliasTarget"
              },
              "[]) => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.disableLegacyUrlAliases.$1",
                "type": "Array",
                "tags": [],
                "label": "aliases",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.LegacyUrlAliasTarget",
                    "text": "LegacyUrlAliasTarget"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.copySavedObjects",
            "type": "Function",
            "tags": [],
            "label": "copySavedObjects",
            "description": [],
            "signature": [
              "(objects: SavedObjectTarget[], spaces: string[], includeReferences: boolean, createNewCopies: boolean, overwrite: boolean) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.CopySavedObjectsToSpaceResponse",
                "text": "CopySavedObjectsToSpaceResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.copySavedObjects.$1",
                "type": "Array",
                "tags": [],
                "label": "objects",
                "description": [],
                "signature": [
                  "SavedObjectTarget[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.copySavedObjects.$2",
                "type": "Array",
                "tags": [],
                "label": "spaces",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.copySavedObjects.$3",
                "type": "boolean",
                "tags": [],
                "label": "includeReferences",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.copySavedObjects.$4",
                "type": "boolean",
                "tags": [],
                "label": "createNewCopies",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.copySavedObjects.$5",
                "type": "boolean",
                "tags": [],
                "label": "overwrite",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.resolveCopySavedObjectsErrors",
            "type": "Function",
            "tags": [],
            "label": "resolveCopySavedObjectsErrors",
            "description": [],
            "signature": [
              "(objects: SavedObjectTarget[], retries: unknown, includeReferences: boolean, createNewCopies: boolean) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.CopySavedObjectsToSpaceResponse",
                "text": "CopySavedObjectsToSpaceResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.resolveCopySavedObjectsErrors.$1",
                "type": "Array",
                "tags": [],
                "label": "objects",
                "description": [],
                "signature": [
                  "SavedObjectTarget[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.resolveCopySavedObjectsErrors.$2",
                "type": "Unknown",
                "tags": [],
                "label": "retries",
                "description": [],
                "signature": [
                  "unknown"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.resolveCopySavedObjectsErrors.$3",
                "type": "boolean",
                "tags": [],
                "label": "includeReferences",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.resolveCopySavedObjectsErrors.$4",
                "type": "boolean",
                "tags": [],
                "label": "createNewCopies",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.getShareSavedObjectPermissions",
            "type": "Function",
            "tags": [],
            "label": "getShareSavedObjectPermissions",
            "description": [],
            "signature": [
              "(type: string) => Promise<{ shareToAllSpaces: boolean; }>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.getShareSavedObjectPermissions.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.getShareableReferences",
            "type": "Function",
            "tags": [],
            "label": "getShareableReferences",
            "description": [],
            "signature": [
              "(objects: SavedObjectTarget[]) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-api-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                "section": "def-common.SavedObjectsCollectMultiNamespaceReferencesResponse",
                "text": "SavedObjectsCollectMultiNamespaceReferencesResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.getShareableReferences.$1",
                "type": "Array",
                "tags": [],
                "label": "objects",
                "description": [],
                "signature": [
                  "SavedObjectTarget[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.updateSavedObjectsSpaces",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObjectsSpaces",
            "description": [],
            "signature": [
              "(objects: SavedObjectTarget[], spacesToAdd: string[], spacesToRemove: string[]) => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.updateSavedObjectsSpaces.$1",
                "type": "Array",
                "tags": [],
                "label": "objects",
                "description": [],
                "signature": [
                  "SavedObjectTarget[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.updateSavedObjectsSpaces.$2",
                "type": "Array",
                "tags": [],
                "label": "spacesToAdd",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesManager.updateSavedObjectsSpaces.$3",
                "type": "Array",
                "tags": [],
                "label": "spacesToRemove",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesManager.redirectToSpaceSelector",
            "type": "Function",
            "tags": [],
            "label": "redirectToSpaceSelector",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_manager/spaces_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "spaces",
        "id": "def-public.getSpaceColor",
        "type": "Function",
        "tags": [],
        "label": "getSpaceColor",
        "description": [
          "\nDetermines the color for the provided space.\nIf a color is present on the Space itself, then that is used.\nOtherwise, a color is provided from EUI's Visualization Colors based on the space name.\n"
        ],
        "signature": [
          "(space: Partial<",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          },
          ">) => string"
        ],
        "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.getSpaceColor.$1",
            "type": "Object",
            "tags": [],
            "label": "space",
            "description": [
              "the space."
            ],
            "signature": [
              "Partial<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.getSpaceImageUrl",
        "type": "Function",
        "tags": [],
        "label": "getSpaceImageUrl",
        "description": [
          "\nDetermines the avatar image for the provided space.\n"
        ],
        "signature": [
          "(space: Partial<",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          },
          ">) => string"
        ],
        "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.getSpaceImageUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "space",
            "description": [
              "the space."
            ],
            "signature": [
              "Partial<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.getSpaceInitials",
        "type": "Function",
        "tags": [],
        "label": "getSpaceInitials",
        "description": [
          "\nDetermines the initials for the provided space.\nIf initials are present on the Space itself, then that is used.\nOtherwise, the initials are calculated based off the words in the space name, with a max length of 2 characters.\n"
        ],
        "signature": [
          "(space: Partial<",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          },
          ">) => string"
        ],
        "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.getSpaceInitials.$1",
            "type": "Object",
            "tags": [],
            "label": "space",
            "description": [
              "the space."
            ],
            "signature": [
              "Partial<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/space_attributes.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "spaces",
        "id": "def-public.CopySavedObjectsToSpaceResponse",
        "type": "Interface",
        "tags": [],
        "label": "CopySavedObjectsToSpaceResponse",
        "description": [],
        "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopySavedObjectsToSpaceResponse.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[spaceId: string]: SavedObjectsImportResponse",
            "description": [],
            "signature": [
              "[spaceId: string]:  ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObjectsImportResponse",
                "text": "SavedObjectsImportResponse"
              }
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.CopyToSpaceFlyoutProps",
        "type": "Interface",
        "tags": [],
        "label": "CopyToSpaceFlyoutProps",
        "description": [
          "\nProperties for the CopyToSpaceFlyout."
        ],
        "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceFlyoutProps.savedObjectTarget",
            "type": "Object",
            "tags": [],
            "label": "savedObjectTarget",
            "description": [
              "\nThe object to render the flyout for."
            ],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.CopyToSpaceSavedObjectTarget",
                "text": "CopyToSpaceSavedObjectTarget"
              }
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceFlyoutProps.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [
              "\nOptional callback when the flyout is closed."
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.CopyToSpaceSavedObjectTarget",
        "type": "Interface",
        "tags": [],
        "label": "CopyToSpaceSavedObjectTarget",
        "description": [
          "\nDescribes the target saved object during a copy operation."
        ],
        "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceSavedObjectTarget.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nThe object's type."
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceSavedObjectTarget.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe object's ID."
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceSavedObjectTarget.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nThe namespaces that the object currently exists in."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceSavedObjectTarget.icon",
            "type": "string",
            "tags": [],
            "label": "icon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's subtitle.\n\nDefault is 'apps'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.CopyToSpaceSavedObjectTarget.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nThe string that is rendered in the flyout's subtitle.\n\nDefault is `${type} [id=${id}]`."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/copy_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.EmbeddableLegacyUrlConflictProps",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddableLegacyUrlConflictProps",
        "description": [
          "\nProperties for the EmbeddableLegacyUrlConflict component."
        ],
        "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.EmbeddableLegacyUrlConflictProps.targetType",
            "type": "string",
            "tags": [],
            "label": "targetType",
            "description": [
              "\nThe target type of the legacy URL alias."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.EmbeddableLegacyUrlConflictProps.sourceId",
            "type": "string",
            "tags": [],
            "label": "sourceId",
            "description": [
              "\nThe source ID of the legacy URL alias."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.GetSpaceResult",
        "type": "Interface",
        "tags": [],
        "label": "GetSpaceResult",
        "description": [
          "\nResponse format when querying for spaces."
        ],
        "signature": [
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.GetSpaceResult",
            "text": "GetSpaceResult"
          },
          " extends ",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          }
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.GetSpaceResult.authorizedPurposes",
            "type": "Object",
            "tags": [],
            "label": "authorizedPurposes",
            "description": [
              "\nA set of flags indicating which purposes the user is authorized for."
            ],
            "signature": [
              "Record<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              ", boolean> | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.LegacyUrlConflictProps",
        "type": "Interface",
        "tags": [],
        "label": "LegacyUrlConflictProps",
        "description": [
          "\nProperties for the LegacyUrlConflict component."
        ],
        "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.LegacyUrlConflictProps.objectNoun",
            "type": "string",
            "tags": [],
            "label": "objectNoun",
            "description": [
              "\nThe string that is used to describe the object in the callout, e.g., _There is a legacy URL for this page that points to a different\n**object**_.\n\nDefault value is 'object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.LegacyUrlConflictProps.currentObjectId",
            "type": "string",
            "tags": [],
            "label": "currentObjectId",
            "description": [
              "\nThe ID of the object that is currently shown on the page."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.LegacyUrlConflictProps.otherObjectId",
            "type": "string",
            "tags": [],
            "label": "otherObjectId",
            "description": [
              "\nThe ID of the other object that the legacy URL alias points to."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.LegacyUrlConflictProps.otherObjectPath",
            "type": "string",
            "tags": [],
            "label": "otherObjectPath",
            "description": [
              "\n The path within your application to use for the new URL, optionally including `search` and/or `hash` URL components. Do not include\n `/app/my-app` or the current base path."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.RedirectLegacyUrlParams",
        "type": "Interface",
        "tags": [],
        "label": "RedirectLegacyUrlParams",
        "description": [
          "\nParameters for the redirectLegacyUrl function."
        ],
        "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.RedirectLegacyUrlParams.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "\nThe path to use for the new URL, optionally including `search` and/or `hash` URL components."
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.RedirectLegacyUrlParams.aliasPurpose",
            "type": "CompoundType",
            "tags": [],
            "label": "aliasPurpose",
            "description": [
              "\nThe reason the resolved alias was created.\n\nThis is used to determine whether or not a toast should be shown when a user is redirected from a legacy URL; if the alias was created\nbecause of saved object conversion, then we will display a toast telling the user that the object has a new URL."
            ],
            "signature": [
              "\"savedObjectConversion\" | \"savedObjectImport\" | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.RedirectLegacyUrlParams.objectNoun",
            "type": "string",
            "tags": [],
            "label": "objectNoun",
            "description": [
              "\nThe string that is used to describe the object in the toast, e.g., _The **object** you're looking for has a new location_.\nDefault value is 'object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/legacy_urls/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.ShareToSpaceFlyoutProps",
        "type": "Interface",
        "tags": [],
        "label": "ShareToSpaceFlyoutProps",
        "description": [
          "\nProperties for the ShareToSpaceFlyout."
        ],
        "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.savedObjectTarget",
            "type": "Object",
            "tags": [],
            "label": "savedObjectTarget",
            "description": [
              "\nThe object to render the flyout for."
            ],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.ShareToSpaceSavedObjectTarget",
                "text": "ShareToSpaceSavedObjectTarget"
              }
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutIcon",
            "type": "string",
            "tags": [],
            "label": "flyoutIcon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's title.\n\nDefault is 'share'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutTitle",
            "type": "string",
            "tags": [],
            "label": "flyoutTitle",
            "description": [
              "\nThe string that is rendered in the flyout's title.\n\nDefault is 'Edit spaces for object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateCopyCallout",
            "type": "CompoundType",
            "tags": [],
            "label": "enableCreateCopyCallout",
            "description": [
              "\nWhen enabled, if the object is not yet shared to multiple spaces, a callout will be displayed that suggests the user might want to\ncreate a copy instead.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateNewSpaceLink",
            "type": "CompoundType",
            "tags": [],
            "label": "enableCreateNewSpaceLink",
            "description": [
              "\nWhen enabled, if no other spaces exist _and_ the user has the appropriate privileges, a sentence will be displayed that suggests the\nuser might want to create a space.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.behaviorContext",
            "type": "CompoundType",
            "tags": [],
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the flyout behaves like it is running on a page within the active space, and it will prevent the\nuser from removing the object from the active space.\n\nConversely, when set to 'outside-space', the flyout behaves like it is running on a page outside of any space, so it will allow the\nuser to remove the object from the active space."
            ],
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler",
            "type": "Function",
            "tags": [],
            "label": "changeSpacesHandler",
            "description": [
              "\nOptional handler that is called when the user has saved changes and there are spaces to be added to and/or removed from the object and\nits relatives. If this is not defined, a default handler will be used that calls `/api/spaces/_update_objects_spaces` and displays a\ntoast indicating what occurred."
            ],
            "signature": [
              "((objects: { type: string; id: string; }[], spacesToAdd: string[], spacesToRemove: string[]) => Promise<void>) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler.$1",
                "type": "Array",
                "tags": [],
                "label": "objects",
                "description": [],
                "signature": [
                  "{ type: string; id: string; }[]"
                ],
                "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler.$2",
                "type": "Array",
                "tags": [],
                "label": "spacesToAdd",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler.$3",
                "type": "Array",
                "tags": [],
                "label": "spacesToRemove",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.onUpdate",
            "type": "Function",
            "tags": [],
            "label": "onUpdate",
            "description": [
              "\nOptional callback when the target object and its relatives are updated."
            ],
            "signature": [
              "((updatedObjects: { type: string; id: string; }[]) => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.ShareToSpaceFlyoutProps.onUpdate.$1",
                "type": "Array",
                "tags": [],
                "label": "updatedObjects",
                "description": [],
                "signature": [
                  "{ type: string; id: string; }[]"
                ],
                "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceFlyoutProps.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [
              "\nOptional callback when the flyout is closed."
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.ShareToSpaceSavedObjectTarget",
        "type": "Interface",
        "tags": [],
        "label": "ShareToSpaceSavedObjectTarget",
        "description": [
          "\nDescribes the target saved object during a share operation."
        ],
        "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nThe object's type."
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe object's ID."
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nThe namespaces that the object currently exists in."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.icon",
            "type": "string",
            "tags": [],
            "label": "icon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's subtitle.\n\nDefault is 'empty'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nThe string that is rendered in the flyout's subtitle.\n\nDefault is `${type} [id=${id}]`."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.ShareToSpaceSavedObjectTarget.noun",
            "type": "string",
            "tags": [],
            "label": "noun",
            "description": [
              "\nThe string that is used to describe the object in several places, e.g., _Make **object** available in selected spaces only_.\n\nDefault value is 'object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/share_saved_objects_to_space/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.Space",
        "type": "Interface",
        "tags": [],
        "label": "Space",
        "description": [
          "\nA Space."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe unique identifier for this space.\nThe id becomes part of the \"URL Identifier\" of the space.\n\nExample: an id of `marketing` would result in the URL identifier of `/s/marketing`."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this space."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nOptional description for this space."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [
              "\nOptional color (hex code) for this space.\nIf neither `color` nor `imageUrl` is specified, then a color will be automatically generated."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.initials",
            "type": "string",
            "tags": [],
            "label": "initials",
            "description": [
              "\nOptional display initials for this space's avatar. Supports a maximum of 2 characters.\nIf initials are not provided, then they will be derived from the space name automatically.\n\nInitials are not displayed if an `imageUrl` has been specified."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.imageUrl",
            "type": "string",
            "tags": [],
            "label": "imageUrl",
            "description": [
              "\nOptional base-64 encoded data image url to show as this space's avatar.\nThis setting takes precedence over any configured `color` or `initials`."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space.disabledFeatures",
            "type": "Array",
            "tags": [],
            "label": "disabledFeatures",
            "description": [
              "\nThe set of feature ids that should be hidden within this space."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.Space._reserved",
            "type": "CompoundType",
            "tags": [
              "private"
            ],
            "label": "_reserved",
            "description": [
              "\nIndicates that this space is reserved (system controlled).\nReserved spaces cannot be created or deleted by end-users."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpaceAvatarProps",
        "type": "Interface",
        "tags": [],
        "label": "SpaceAvatarProps",
        "description": [
          "\nProperties for the SpaceAvatar component."
        ],
        "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.space",
            "type": "Object",
            "tags": [],
            "label": "space",
            "description": [
              "The space to represent with an avatar."
            ],
            "signature": [
              "{ id?: string | undefined; name?: string | undefined; description?: string | undefined; color?: string | undefined; initials?: string | undefined; imageUrl?: string | undefined; disabledFeatures?: string[] | undefined; _reserved?: boolean | undefined; }"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.size",
            "type": "CompoundType",
            "tags": [],
            "label": "size",
            "description": [
              "The size of the avatar."
            ],
            "signature": [
              "\"m\" | \"s\" | \"l\" | \"xl\" | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.className",
            "type": "string",
            "tags": [],
            "label": "className",
            "description": [
              "Optional CSS class(es) to apply."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.announceSpaceName",
            "type": "CompoundType",
            "tags": [],
            "label": "announceSpaceName",
            "description": [
              "\nWhen enabled, allows EUI to provide an aria-label for this component, which is announced on screen readers.\n\nDefault value is true."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.isDisabled",
            "type": "CompoundType",
            "tags": [],
            "label": "isDisabled",
            "description": [
              "\nWhether or not to render the avatar in a disabled state.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.onClick",
            "type": "Function",
            "tags": [],
            "label": "onClick",
            "description": [
              "\nCallback to be invoked when the avatar is clicked."
            ],
            "signature": [
              "((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpaceAvatarProps.onClick.$1",
                "type": "Object",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  "React.MouseEvent<HTMLDivElement, MouseEvent>"
                ],
                "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.onKeyPress",
            "type": "Function",
            "tags": [],
            "label": "onKeyPress",
            "description": [
              "\nCallback to be invoked when the avatar is clicked via keyboard."
            ],
            "signature": [
              "((event: React.KeyboardEvent<HTMLDivElement>) => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpaceAvatarProps.onKeyPress.$1",
                "type": "Object",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  "React.KeyboardEvent<HTMLDivElement>"
                ],
                "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceAvatarProps.style",
            "type": "Object",
            "tags": [],
            "label": "style",
            "description": [
              "\nStyle props for the avatar."
            ],
            "signature": [
              "React.CSSProperties | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_avatar/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpaceListProps",
        "type": "Interface",
        "tags": [],
        "label": "SpaceListProps",
        "description": [
          "\nProperties for the SpaceList component."
        ],
        "path": "x-pack/plugins/spaces/public/space_list/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceListProps.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nThe namespaces of a saved object to render into a corresponding list of spaces."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/public/space_list/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceListProps.displayLimit",
            "type": "number",
            "tags": [],
            "label": "displayLimit",
            "description": [
              "\nOptional limit to the number of spaces that can be displayed in the list. If the number of spaces exceeds this limit, they will be\nhidden behind a \"show more\" button. Set to 0 to disable.\n\nDefault value is 5."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_list/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceListProps.behaviorContext",
            "type": "CompoundType",
            "tags": [],
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the space list behaves like it is running on a page within the active space, and it will omit the\nactive space (e.g., it displays a list of all the _other_ spaces that an object is shared to).\n\nConversely, when set to 'outside-space', the space list behaves like it is running on a page outside of any space, so it will not omit\nthe active space."
            ],
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_list/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceListProps.listOnClick",
            "type": "Function",
            "tags": [],
            "label": "listOnClick",
            "description": [
              "\nClick handler for spaces list, specifically excluding expand and contract buttons."
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_list/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpaceListProps.cursorStyle",
            "type": "string",
            "tags": [],
            "label": "cursorStyle",
            "description": [
              "\nStyle for the cursor when mousing over space avatars."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/space_list/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesApiUi",
        "type": "Interface",
        "tags": [],
        "label": "SpacesApiUi",
        "description": [
          "\nUI components and services to add spaces capabilities to an application."
        ],
        "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUi.components",
            "type": "Object",
            "tags": [],
            "label": "components",
            "description": [
              "\nLazy-loadable {@link SpacesApiUiComponent | React components} to support the Spaces feature."
            ],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesApiUiComponent",
                "text": "SpacesApiUiComponent"
              }
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUi.redirectLegacyUrl",
            "type": "Function",
            "tags": [],
            "label": "redirectLegacyUrl",
            "description": [
              "\nRedirect the user from a legacy URL to a new URL. This needs to be used if a call to `SavedObjectsClient.resolve()` results in an\n`\"aliasMatch\"` outcome, which indicates that the user has loaded the page using a legacy URL. Calling this function will trigger a\nclient-side redirect to the new URL, and it will display a toast to the user.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (old ID) and the object ID in the result (new ID). For example...\n\nThe old object ID is `workpad-123` and the new object ID is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`\n\nThe protocol, hostname, port, base path, and app path are automatically included."
            ],
            "signature": [
              "(params: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.RedirectLegacyUrlParams",
                "text": "RedirectLegacyUrlParams"
              },
              ") => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUi.redirectLegacyUrl.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "public",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-public.RedirectLegacyUrlParams",
                    "text": "RedirectLegacyUrlParams"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUi.useSpaces",
            "type": "Function",
            "tags": [],
            "label": "useSpaces",
            "description": [
              "\nHelper function to easily access the Spaces React Context provider."
            ],
            "signature": [
              "<Services extends Partial<",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ">>() => ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesReactContextValue",
                "text": "SpacesReactContextValue"
              },
              "<Services>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesApiUiComponent",
        "type": "Interface",
        "tags": [],
        "label": "SpacesApiUiComponent",
        "description": [
          "\nReact UI components to be used to display the Spaces feature in any application."
        ],
        "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getSpacesContextProvider",
            "type": "Function",
            "tags": [],
            "label": "getSpacesContextProvider",
            "description": [
              "\nProvides a context that is required to render some Spaces components."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesContextProps",
                "text": "SpacesContextProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getSpacesContextProvider.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getShareToSpaceFlyout",
            "type": "Function",
            "tags": [],
            "label": "getShareToSpaceFlyout",
            "description": [
              "\nDisplays a flyout to edit the spaces that an object is shared to.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.ShareToSpaceFlyoutProps",
                "text": "ShareToSpaceFlyoutProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getShareToSpaceFlyout.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getCopyToSpaceFlyout",
            "type": "Function",
            "tags": [],
            "label": "getCopyToSpaceFlyout",
            "description": [
              "\nDisplays a flyout to copy an object to other spaces.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.CopyToSpaceFlyoutProps",
                "text": "CopyToSpaceFlyoutProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getCopyToSpaceFlyout.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getSpaceList",
            "type": "Function",
            "tags": [],
            "label": "getSpaceList",
            "description": [
              "\nDisplays a corresponding list of spaces for a given list of saved object namespaces. It shows up to five spaces (and an indicator for\nany number of spaces that the user is not authorized to see) by default. If more than five named spaces would be displayed, the extras\n(along with the unauthorized spaces indicator, if present) are hidden behind a button. If '*' (aka \"All spaces\") is present, it\nsupersedes all of the above and just displays a single badge without a button.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpaceListProps",
                "text": "SpaceListProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getSpaceList.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getEmbeddableLegacyUrlConflict",
            "type": "Function",
            "tags": [],
            "label": "getEmbeddableLegacyUrlConflict",
            "description": [
              "\nDisplays a callout that needs to be used if an embeddable component call to `SavedObjectsClient.resolve()` results in an `\"conflict\"`\noutcome, which indicates that the user has loaded an embeddable which is associated directly with one object (A), *and* with a legacy\nURL that points to a different object (B)."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.EmbeddableLegacyUrlConflictProps",
                "text": "EmbeddableLegacyUrlConflictProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getEmbeddableLegacyUrlConflict.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getLegacyUrlConflict",
            "type": "Function",
            "tags": [],
            "label": "getLegacyUrlConflict",
            "description": [
              "\nDisplays a callout that needs to be used if a call to `SavedObjectsClient.resolve()` results in an `\"conflict\"` outcome, which\nindicates that the user has loaded the page which is associated directly with one object (A), *and* with a legacy URL that points to a\ndifferent object (B).\n\nIn this case, `SavedObjectsClient.resolve()` has returned object A. This component displays a warning callout to the user explaining\nthat there is a conflict, and it includes a button that will redirect the user to object B when clicked.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (A) and the `alias_target_id` value in the response (B). For example...\n\nA is `workpad-123` and B is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`"
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.LegacyUrlConflictProps",
                "text": "LegacyUrlConflictProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getLegacyUrlConflict.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesApiUiComponent.getSpaceAvatar",
            "type": "Function",
            "tags": [],
            "label": "getSpaceAvatar",
            "description": [
              "\nDisplays an avatar for the given space."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpaceAvatarProps",
                "text": "SpaceAvatarProps"
              },
              ") => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesApiUiComponent.getSpaceAvatar.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesContextProps",
        "type": "Interface",
        "tags": [],
        "label": "SpacesContextProps",
        "description": [
          "\nProperties for the SpacesContext."
        ],
        "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesContextProps.feature",
            "type": "string",
            "tags": [],
            "label": "feature",
            "description": [
              "\nIf a feature is specified, all Spaces components will treat it appropriately if the feature is disabled in a given Space."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesData",
        "type": "Interface",
        "tags": [],
        "label": "SpacesData",
        "description": [
          "\nThe structure for all of the space data that must be loaded for share-to-space components to function."
        ],
        "path": "x-pack/plugins/spaces/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesData.spacesMap",
            "type": "Object",
            "tags": [],
            "label": "spacesMap",
            "description": [
              "A map of each existing space's ID and its associated {@link SpacesDataEntry}."
            ],
            "signature": [
              "Map<string, ",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesDataEntry",
                "text": "SpacesDataEntry"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesData.activeSpaceId",
            "type": "string",
            "tags": [],
            "label": "activeSpaceId",
            "description": [
              "The ID of the active space."
            ],
            "path": "x-pack/plugins/spaces/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesDataEntry",
        "type": "Interface",
        "tags": [],
        "label": "SpacesDataEntry",
        "description": [
          "\nThe data that was fetched for a specific space. Includes optional additional fields that are needed to handle edge cases in the\nshare-to-space components that consume it."
        ],
        "signature": [
          {
            "pluginId": "spaces",
            "scope": "public",
            "docId": "kibSpacesPluginApi",
            "section": "def-public.SpacesDataEntry",
            "text": "SpacesDataEntry"
          },
          " extends Omit<",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.GetSpaceResult",
            "text": "GetSpaceResult"
          },
          ", \"disabledFeatures\" | \"authorizedPurposes\">"
        ],
        "path": "x-pack/plugins/spaces/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesDataEntry.isActiveSpace",
            "type": "boolean",
            "tags": [],
            "label": "isActiveSpace",
            "description": [
              "True if this space is the active space."
            ],
            "signature": [
              "true | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesDataEntry.isFeatureDisabled",
            "type": "boolean",
            "tags": [],
            "label": "isFeatureDisabled",
            "description": [
              "True if the current feature (specified in the `SpacesContext`) is disabled in this space."
            ],
            "signature": [
              "true | undefined"
            ],
            "path": "x-pack/plugins/spaces/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesDataEntry.isAuthorizedForPurpose",
            "type": "Function",
            "tags": [],
            "label": "isAuthorizedForPurpose",
            "description": [
              "Returns true if the user is authorized for the given purpose."
            ],
            "signature": [
              "(purpose: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              ") => boolean"
            ],
            "path": "x-pack/plugins/spaces/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-public.SpacesDataEntry.isAuthorizedForPurpose.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "purpose",
                "description": [],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.GetAllSpacesPurpose",
                    "text": "GetAllSpacesPurpose"
                  }
                ],
                "path": "x-pack/plugins/spaces/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.SpacesReactContextValue",
        "type": "Interface",
        "tags": [],
        "label": "SpacesReactContextValue",
        "description": [],
        "signature": [
          {
            "pluginId": "spaces",
            "scope": "public",
            "docId": "kibSpacesPluginApi",
            "section": "def-public.SpacesReactContextValue",
            "text": "SpacesReactContextValue"
          },
          "<Services>"
        ],
        "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesReactContextValue.spacesManager",
            "type": "Object",
            "tags": [],
            "label": "spacesManager",
            "description": [],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesManager",
                "text": "SpacesManager"
              }
            ],
            "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesReactContextValue.spacesDataPromise",
            "type": "Object",
            "tags": [],
            "label": "spacesDataPromise",
            "description": [],
            "signature": [
              "Promise<",
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesData",
                "text": "SpacesData"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-public.SpacesReactContextValue.services",
            "type": "Uncategorized",
            "tags": [],
            "label": "services",
            "description": [],
            "signature": [
              "Services"
            ],
            "path": "x-pack/plugins/spaces/public/spaces_context/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "spaces",
        "id": "def-public.GetAllSpacesPurpose",
        "type": "Type",
        "tags": [],
        "label": "GetAllSpacesPurpose",
        "description": [
          "\nThe set of purposes to retrieve spaces:\n- `any`: retrieves all spaces the user is authorized to see.\n- `copySavedObjectsIntoSpace`: retrieves all spaces the user is authorized to copy saved objects into.\n- `findSavedObjects`: retrieves all spaces the user is authorized to search within.\n- `shareSavedObjectsIntoSpace`: retrieves all spaces the user is authorized to share saved objects into."
        ],
        "signature": [
          "\"any\" | \"copySavedObjectsIntoSpace\" | \"findSavedObjects\" | \"shareSavedObjectsIntoSpace\""
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-public.LazyComponentFn",
        "type": "Type",
        "tags": [],
        "label": "LazyComponentFn",
        "description": [
          "\nFunction that returns a promise for a lazy-loadable component."
        ],
        "signature": [
          "(props: T) => React.ReactElement<any, string | React.JSXElementConstructor<any>>"
        ],
        "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-public.LazyComponentFn.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/spaces/public/ui_api/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "spaces",
      "id": "def-public.SpacesPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "SpacesPluginSetup",
      "description": [
        "\nSetup contract for the Spaces plugin."
      ],
      "signature": [
        "{}"
      ],
      "path": "x-pack/plugins/spaces/public/plugin.tsx",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "spaces",
      "id": "def-public.SpacesApi",
      "type": "Interface",
      "tags": [],
      "label": "SpacesApi",
      "description": [
        "\nClient-side Spaces API."
      ],
      "path": "x-pack/plugins/spaces/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "spaces",
          "id": "def-public.SpacesApi.getActiveSpace$",
          "type": "Function",
          "tags": [],
          "label": "getActiveSpace$",
          "description": [
            "\nObservable representing the currently active space.\nThe details of the space can change without a full page reload (such as display name, color, etc.)"
          ],
          "signature": [
            "() => ",
            "Observable",
            "<",
            {
              "pluginId": "spaces",
              "scope": "common",
              "docId": "kibSpacesPluginApi",
              "section": "def-common.Space",
              "text": "Space"
            },
            ">"
          ],
          "path": "x-pack/plugins/spaces/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "spaces",
          "id": "def-public.SpacesApi.getActiveSpace",
          "type": "Function",
          "tags": [],
          "label": "getActiveSpace",
          "description": [
            "\nRetrieve the currently active space."
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "spaces",
              "scope": "common",
              "docId": "kibSpacesPluginApi",
              "section": "def-common.Space",
              "text": "Space"
            },
            ">"
          ],
          "path": "x-pack/plugins/spaces/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "spaces",
          "id": "def-public.SpacesApi.ui",
          "type": "Object",
          "tags": [],
          "label": "ui",
          "description": [
            "\nUI components and services to add spaces capabilities to an application."
          ],
          "signature": [
            {
              "pluginId": "spaces",
              "scope": "public",
              "docId": "kibSpacesPluginApi",
              "section": "def-public.SpacesApiUi",
              "text": "SpacesApiUi"
            }
          ],
          "path": "x-pack/plugins/spaces/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "spaces",
        "id": "def-server.addSpaceIdToPath",
        "type": "Function",
        "tags": [],
        "label": "addSpaceIdToPath",
        "description": [
          "\nGiven a server base path, space id, and requested resource, this will construct a space-aware path\nthat includes a URL identifier with the space id.\n"
        ],
        "signature": [
          "(basePath: string, spaceId: string, requestedPath: string) => string"
        ],
        "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.addSpaceIdToPath.$1",
            "type": "string",
            "tags": [],
            "label": "basePath",
            "description": [
              "the server's base path."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.addSpaceIdToPath.$2",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [
              "the space id."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.addSpaceIdToPath.$3",
            "type": "string",
            "tags": [],
            "label": "requestedPath",
            "description": [
              "the requested path (e.g. `/app/dashboard`)."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "the space-aware version of the requested path, inclusive of the server's base path."
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "spaces",
        "id": "def-server.GetAllSpacesOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetAllSpacesOptions",
        "description": [
          "\nControls how spaces are retrieved."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.GetAllSpacesOptions.purpose",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "purpose",
            "description": [
              "\nAn optional purpose describing how the set of spaces will be used.\nThe default purpose (`any`) will retrieve all spaces the user is authorized to see,\nwhereas a more specific purpose will retrieve all spaces the user is authorized to perform a specific action within.\n"
            ],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.GetAllSpacesOptions.includeAuthorizedPurposes",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "includeAuthorizedPurposes",
            "description": [
              "\nSet to true to return a set of flags indicating which purposes the user is authorized for.\n"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.GetSpaceResult",
        "type": "Interface",
        "tags": [],
        "label": "GetSpaceResult",
        "description": [
          "\nResponse format when querying for spaces."
        ],
        "signature": [
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.GetSpaceResult",
            "text": "GetSpaceResult"
          },
          " extends ",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          }
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.GetSpaceResult.authorizedPurposes",
            "type": "Object",
            "tags": [],
            "label": "authorizedPurposes",
            "description": [
              "\nA set of flags indicating which purposes the user is authorized for."
            ],
            "signature": [
              "Record<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              ", boolean> | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.ISpacesClient",
        "type": "Interface",
        "tags": [],
        "label": "ISpacesClient",
        "description": [
          "\nClient interface for interacting with spaces."
        ],
        "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [
              "\nRetrieve all available spaces."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesOptions",
                "text": "GetAllSpacesOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetSpaceResult",
                "text": "GetSpaceResult"
              },
              "[]>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.getAll.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "controls which spaces are retrieved."
                ],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.GetAllSpacesOptions",
                    "text": "GetAllSpacesOptions"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nRetrieve a space by its id."
            ],
            "signature": [
              "(id: string) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "the space id."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreates a space."
            ],
            "signature": [
              "(space: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ") => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.create.$1",
                "type": "Object",
                "tags": [],
                "label": "space",
                "description": [
                  "the space to create."
                ],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.Space",
                    "text": "Space"
                  }
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdates a space."
            ],
            "signature": [
              "(id: string, space: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ") => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.update.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "the id of the space to update."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.update.$2",
                "type": "Object",
                "tags": [],
                "label": "space",
                "description": [
                  "the updated space."
                ],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.Space",
                    "text": "Space"
                  }
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.createSavedObjectFinder",
            "type": "Function",
            "tags": [],
            "label": "createSavedObjectFinder",
            "description": [
              "\nReturns a {@link ISavedObjectsPointInTimeFinder} to help page through\nsaved objects within the specified space."
            ],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "@kbn/core-saved-objects-api-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                "section": "def-common.ISavedObjectsPointInTimeFinder",
                "text": "ISavedObjectsPointInTimeFinder"
              },
              "<unknown, unknown>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.createSavedObjectFinder.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "the id of the space to search."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes a space, and all saved objects belonging to that space."
            ],
            "signature": [
              "(id: string) => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.delete.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "the id of the space to delete."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.ISpacesClient.disableLegacyUrlAliases",
            "type": "Function",
            "tags": [],
            "label": "disableLegacyUrlAliases",
            "description": [
              "\nDisables the specified legacy URL aliases."
            ],
            "signature": [
              "(aliases: ",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.LegacyUrlAliasTarget",
                "text": "LegacyUrlAliasTarget"
              },
              "[]) => Promise<void>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.ISpacesClient.disableLegacyUrlAliases.$1",
                "type": "Array",
                "tags": [],
                "label": "aliases",
                "description": [
                  "the aliases to disable."
                ],
                "signature": [
                  {
                    "pluginId": "spaces",
                    "scope": "common",
                    "docId": "kibSpacesPluginApi",
                    "section": "def-common.LegacyUrlAliasTarget",
                    "text": "LegacyUrlAliasTarget"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.LegacyUrlAliasTarget",
        "type": "Interface",
        "tags": [],
        "label": "LegacyUrlAliasTarget",
        "description": [
          "\nClient interface for interacting with legacy URL aliases."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.LegacyUrlAliasTarget.targetSpace",
            "type": "string",
            "tags": [],
            "label": "targetSpace",
            "description": [
              "\nThe namespace that the object existed in when it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.LegacyUrlAliasTarget.targetType",
            "type": "string",
            "tags": [],
            "label": "targetType",
            "description": [
              "\nThe type of the object when it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.LegacyUrlAliasTarget.sourceId",
            "type": "string",
            "tags": [],
            "label": "sourceId",
            "description": [
              "\nThe original ID of the object, before it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.Space",
        "type": "Interface",
        "tags": [],
        "label": "Space",
        "description": [
          "\nA Space."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe unique identifier for this space.\nThe id becomes part of the \"URL Identifier\" of the space.\n\nExample: an id of `marketing` would result in the URL identifier of `/s/marketing`."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this space."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nOptional description for this space."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [
              "\nOptional color (hex code) for this space.\nIf neither `color` nor `imageUrl` is specified, then a color will be automatically generated."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.initials",
            "type": "string",
            "tags": [],
            "label": "initials",
            "description": [
              "\nOptional display initials for this space's avatar. Supports a maximum of 2 characters.\nIf initials are not provided, then they will be derived from the space name automatically.\n\nInitials are not displayed if an `imageUrl` has been specified."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.imageUrl",
            "type": "string",
            "tags": [],
            "label": "imageUrl",
            "description": [
              "\nOptional base-64 encoded data image url to show as this space's avatar.\nThis setting takes precedence over any configured `color` or `initials`."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space.disabledFeatures",
            "type": "Array",
            "tags": [],
            "label": "disabledFeatures",
            "description": [
              "\nThe set of feature ids that should be hidden within this space."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.Space._reserved",
            "type": "CompoundType",
            "tags": [
              "private"
            ],
            "label": "_reserved",
            "description": [
              "\nIndicates that this space is reserved (system controlled).\nReserved spaces cannot be created or deleted by end-users."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.SpacesServiceSetup",
        "type": "Interface",
        "tags": [],
        "label": "SpacesServiceSetup",
        "description": [
          "\nThe Spaces service setup contract."
        ],
        "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceSetup.getSpaceId",
            "type": "Function",
            "tags": [],
            "label": "getSpaceId",
            "description": [
              "\nRetrieves the space id associated with the provided request."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => string"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceSetup.getSpaceId.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "the request."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceSetup.spaceIdToNamespace",
            "type": "Function",
            "tags": [],
            "label": "spaceIdToNamespace",
            "description": [
              "\nConverts the provided space id into the corresponding Saved Objects `namespace` id."
            ],
            "signature": [
              "(spaceId: string) => string | undefined"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceSetup.spaceIdToNamespace.$1",
                "type": "string",
                "tags": [],
                "label": "spaceId",
                "description": [
                  "the space id to convert."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceSetup.namespaceToSpaceId",
            "type": "Function",
            "tags": [],
            "label": "namespaceToSpaceId",
            "description": [
              "\nConverts the provided namespace into the corresponding space id."
            ],
            "signature": [
              "(namespace: string | undefined) => string"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceSetup.namespaceToSpaceId.$1",
                "type": "string",
                "tags": [],
                "label": "namespace",
                "description": [
                  "the namespace to convert."
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.SpacesServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "SpacesServiceStart",
        "description": [
          "\nThe Spaces service start contract."
        ],
        "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.createSpacesClient",
            "type": "Function",
            "tags": [],
            "label": "createSpacesClient",
            "description": [
              "\nCreates a scoped instance of the SpacesClient."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => ",
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.ISpacesClient",
                "text": "ISpacesClient"
              }
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.createSpacesClient.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "the request."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.getSpaceId",
            "type": "Function",
            "tags": [],
            "label": "getSpaceId",
            "description": [
              "\nRetrieves the space id associated with the provided request."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => string"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.getSpaceId.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "the request."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.isInDefaultSpace",
            "type": "Function",
            "tags": [],
            "label": "isInDefaultSpace",
            "description": [
              "\nIndicates if the provided request is executing within the context of the `default` space."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => boolean"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.isInDefaultSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "the request."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.getActiveSpace",
            "type": "Function",
            "tags": [],
            "label": "getActiveSpace",
            "description": [
              "\nRetrieves the Space associated with the provided request."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => Promise<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.getActiveSpace.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "the request."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.spaceIdToNamespace",
            "type": "Function",
            "tags": [],
            "label": "spaceIdToNamespace",
            "description": [
              "\nConverts the provided space id into the corresponding Saved Objects `namespace` id."
            ],
            "signature": [
              "(spaceId: string) => string | undefined"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.spaceIdToNamespace.$1",
                "type": "string",
                "tags": [],
                "label": "spaceId",
                "description": [
                  "the space id to convert."
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesServiceStart.namespaceToSpaceId",
            "type": "Function",
            "tags": [],
            "label": "namespaceToSpaceId",
            "description": [
              "\nConverts the provided namespace into the corresponding space id."
            ],
            "signature": [
              "(namespace: string | undefined) => string"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "spaces",
                "id": "def-server.SpacesServiceStart.namespaceToSpaceId.$1",
                "type": "string",
                "tags": [],
                "label": "namespace",
                "description": [
                  "the namespace to convert."
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/spaces/server/spaces_service/spaces_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "spaces",
        "id": "def-server.GetAllSpacesPurpose",
        "type": "Type",
        "tags": [],
        "label": "GetAllSpacesPurpose",
        "description": [
          "\nThe set of purposes to retrieve spaces:\n- `any`: retrieves all spaces the user is authorized to see.\n- `copySavedObjectsIntoSpace`: retrieves all spaces the user is authorized to copy saved objects into.\n- `findSavedObjects`: retrieves all spaces the user is authorized to search within.\n- `shareSavedObjectsIntoSpace`: retrieves all spaces the user is authorized to share saved objects into."
        ],
        "signature": [
          "\"any\" | \"copySavedObjectsIntoSpace\" | \"findSavedObjects\" | \"shareSavedObjectsIntoSpace\""
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.SpacesClientRepositoryFactory",
        "type": "Type",
        "tags": [
          "private"
        ],
        "label": "SpacesClientRepositoryFactory",
        "description": [
          "\nFor consumption by the security plugin only."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, savedObjectsStart: ",
          {
            "pluginId": "@kbn/core-saved-objects-server",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsServerPluginApi",
            "section": "def-common.SavedObjectsServiceStart",
            "text": "SavedObjectsServiceStart"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-saved-objects-api-server",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
            "section": "def-common.ISavedObjectsRepository",
            "text": "ISavedObjectsRepository"
          }
        ],
        "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesClientRepositoryFactory.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesClientRepositoryFactory.$2",
            "type": "Object",
            "tags": [],
            "label": "savedObjectsStart",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsServerPluginApi",
                "section": "def-common.SavedObjectsServiceStart",
                "text": "SavedObjectsServiceStart"
              }
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-server.SpacesClientWrapper",
        "type": "Type",
        "tags": [
          "private"
        ],
        "label": "SpacesClientWrapper",
        "description": [
          "\nFor consumption by the security plugin only."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, baseClient: ",
          {
            "pluginId": "spaces",
            "scope": "server",
            "docId": "kibSpacesPluginApi",
            "section": "def-server.ISpacesClient",
            "text": "ISpacesClient"
          },
          ") => ",
          {
            "pluginId": "spaces",
            "scope": "server",
            "docId": "kibSpacesPluginApi",
            "section": "def-server.ISpacesClient",
            "text": "ISpacesClient"
          }
        ],
        "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesClientWrapper.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-server.SpacesClientWrapper.$2",
            "type": "Object",
            "tags": [],
            "label": "baseClient",
            "description": [],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.ISpacesClient",
                "text": "ISpacesClient"
              }
            ],
            "path": "x-pack/plugins/spaces/server/spaces_client/spaces_client_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "spaces",
      "id": "def-server.SpacesPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SpacesPluginSetup",
      "description": [
        "\nSetup contract for the Spaces plugin."
      ],
      "path": "x-pack/plugins/spaces/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "spaces",
          "id": "def-server.SpacesPluginSetup.spacesService",
          "type": "Object",
          "tags": [],
          "label": "spacesService",
          "description": [
            "\nService for interacting with spaces."
          ],
          "signature": [
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesServiceSetup",
              "text": "SpacesServiceSetup"
            }
          ],
          "path": "x-pack/plugins/spaces/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "spaces",
          "id": "def-server.SpacesPluginSetup.spacesClient",
          "type": "Object",
          "tags": [
            "private"
          ],
          "label": "spacesClient",
          "description": [
            "\nRegistries exposed for the security plugin to transparently provide authorization and audit logging."
          ],
          "signature": [
            "{ setClientRepositoryFactory: (factory: ",
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesClientRepositoryFactory",
              "text": "SpacesClientRepositoryFactory"
            },
            ") => void; registerClientWrapper: (wrapper: ",
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesClientWrapper",
              "text": "SpacesClientWrapper"
            },
            ") => void; }"
          ],
          "path": "x-pack/plugins/spaces/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "spaces",
      "id": "def-server.SpacesPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SpacesPluginStart",
      "description": [
        "\nStart contract for the Spaces plugin."
      ],
      "path": "x-pack/plugins/spaces/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "spaces",
          "id": "def-server.SpacesPluginStart.spacesService",
          "type": "Object",
          "tags": [],
          "label": "spacesService",
          "description": [
            "Service for interacting with spaces."
          ],
          "signature": [
            {
              "pluginId": "spaces",
              "scope": "server",
              "docId": "kibSpacesPluginApi",
              "section": "def-server.SpacesServiceStart",
              "text": "SpacesServiceStart"
            }
          ],
          "path": "x-pack/plugins/spaces/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "spaces",
        "id": "def-common.addSpaceIdToPath",
        "type": "Function",
        "tags": [],
        "label": "addSpaceIdToPath",
        "description": [
          "\nGiven a server base path, space id, and requested resource, this will construct a space-aware path\nthat includes a URL identifier with the space id.\n"
        ],
        "signature": [
          "(basePath: string, spaceId: string, requestedPath: string) => string"
        ],
        "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.addSpaceIdToPath.$1",
            "type": "string",
            "tags": [],
            "label": "basePath",
            "description": [
              "the server's base path."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.addSpaceIdToPath.$2",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [
              "the space id."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.addSpaceIdToPath.$3",
            "type": "string",
            "tags": [],
            "label": "requestedPath",
            "description": [
              "the requested path (e.g. `/app/dashboard`)."
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "the space-aware version of the requested path, inclusive of the server's base path."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.getSpaceIdFromPath",
        "type": "Function",
        "tags": [
          "private"
        ],
        "label": "getSpaceIdFromPath",
        "description": [
          "\nExtracts the space id from the given path.\n"
        ],
        "signature": [
          "(requestBasePath: string | null | undefined, serverBasePath: string | null | undefined) => { spaceId: string; pathHasExplicitSpaceIdentifier: boolean; }"
        ],
        "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.getSpaceIdFromPath.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "requestBasePath",
            "description": [
              "The base path of the current request."
            ],
            "signature": [
              "string | null | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.getSpaceIdFromPath.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "serverBasePath",
            "description": [
              "The server's base path."
            ],
            "signature": [
              "string | null | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/lib/spaces_url_parser.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "the space id."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.isReservedSpace",
        "type": "Function",
        "tags": [],
        "label": "isReservedSpace",
        "description": [
          "\nReturns whether the given Space is reserved or not.\n"
        ],
        "signature": [
          "(space: Partial<",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          },
          "> | null | undefined) => boolean"
        ],
        "path": "x-pack/plugins/spaces/common/is_reserved_space.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.isReservedSpace.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "space",
            "description": [
              "the space"
            ],
            "signature": [
              "Partial<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              "> | null | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/is_reserved_space.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "boolean"
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "spaces",
        "id": "def-common.GetAllSpacesOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetAllSpacesOptions",
        "description": [
          "\nControls how spaces are retrieved."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.GetAllSpacesOptions.purpose",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "purpose",
            "description": [
              "\nAn optional purpose describing how the set of spaces will be used.\nThe default purpose (`any`) will retrieve all spaces the user is authorized to see,\nwhereas a more specific purpose will retrieve all spaces the user is authorized to perform a specific action within.\n"
            ],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.GetAllSpacesOptions.includeAuthorizedPurposes",
            "type": "CompoundType",
            "tags": [
              "see"
            ],
            "label": "includeAuthorizedPurposes",
            "description": [
              "\nSet to true to return a set of flags indicating which purposes the user is authorized for.\n"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.GetSpaceResult",
        "type": "Interface",
        "tags": [],
        "label": "GetSpaceResult",
        "description": [
          "\nResponse format when querying for spaces."
        ],
        "signature": [
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.GetSpaceResult",
            "text": "GetSpaceResult"
          },
          " extends ",
          {
            "pluginId": "spaces",
            "scope": "common",
            "docId": "kibSpacesPluginApi",
            "section": "def-common.Space",
            "text": "Space"
          }
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.GetSpaceResult.authorizedPurposes",
            "type": "Object",
            "tags": [],
            "label": "authorizedPurposes",
            "description": [
              "\nA set of flags indicating which purposes the user is authorized for."
            ],
            "signature": [
              "Record<",
              {
                "pluginId": "spaces",
                "scope": "common",
                "docId": "kibSpacesPluginApi",
                "section": "def-common.GetAllSpacesPurpose",
                "text": "GetAllSpacesPurpose"
              },
              ", boolean> | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.LegacyUrlAliasTarget",
        "type": "Interface",
        "tags": [],
        "label": "LegacyUrlAliasTarget",
        "description": [
          "\nClient interface for interacting with legacy URL aliases."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.LegacyUrlAliasTarget.targetSpace",
            "type": "string",
            "tags": [],
            "label": "targetSpace",
            "description": [
              "\nThe namespace that the object existed in when it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.LegacyUrlAliasTarget.targetType",
            "type": "string",
            "tags": [],
            "label": "targetType",
            "description": [
              "\nThe type of the object when it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.LegacyUrlAliasTarget.sourceId",
            "type": "string",
            "tags": [],
            "label": "sourceId",
            "description": [
              "\nThe original ID of the object, before it was converted."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.Space",
        "type": "Interface",
        "tags": [],
        "label": "Space",
        "description": [
          "\nA Space."
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe unique identifier for this space.\nThe id becomes part of the \"URL Identifier\" of the space.\n\nExample: an id of `marketing` would result in the URL identifier of `/s/marketing`."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this space."
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nOptional description for this space."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [
              "\nOptional color (hex code) for this space.\nIf neither `color` nor `imageUrl` is specified, then a color will be automatically generated."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.initials",
            "type": "string",
            "tags": [],
            "label": "initials",
            "description": [
              "\nOptional display initials for this space's avatar. Supports a maximum of 2 characters.\nIf initials are not provided, then they will be derived from the space name automatically.\n\nInitials are not displayed if an `imageUrl` has been specified."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.imageUrl",
            "type": "string",
            "tags": [],
            "label": "imageUrl",
            "description": [
              "\nOptional base-64 encoded data image url to show as this space's avatar.\nThis setting takes precedence over any configured `color` or `initials`."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space.disabledFeatures",
            "type": "Array",
            "tags": [],
            "label": "disabledFeatures",
            "description": [
              "\nThe set of feature ids that should be hidden within this space."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "spaces",
            "id": "def-common.Space._reserved",
            "type": "CompoundType",
            "tags": [
              "private"
            ],
            "label": "_reserved",
            "description": [
              "\nIndicates that this space is reserved (system controlled).\nReserved spaces cannot be created or deleted by end-users."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/spaces/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "spaces",
        "id": "def-common.DEFAULT_SPACE_ID",
        "type": "string",
        "tags": [],
        "label": "DEFAULT_SPACE_ID",
        "description": [],
        "signature": [
          "\"default\""
        ],
        "path": "x-pack/plugins/spaces/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.ENTER_SPACE_PATH",
        "type": "string",
        "tags": [],
        "label": "ENTER_SPACE_PATH",
        "description": [
          "\nThe path to enter a space."
        ],
        "signature": [
          "\"/spaces/enter\""
        ],
        "path": "x-pack/plugins/spaces/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.GetAllSpacesPurpose",
        "type": "Type",
        "tags": [],
        "label": "GetAllSpacesPurpose",
        "description": [
          "\nThe set of purposes to retrieve spaces:\n- `any`: retrieves all spaces the user is authorized to see.\n- `copySavedObjectsIntoSpace`: retrieves all spaces the user is authorized to copy saved objects into.\n- `findSavedObjects`: retrieves all spaces the user is authorized to search within.\n- `shareSavedObjectsIntoSpace`: retrieves all spaces the user is authorized to share saved objects into."
        ],
        "signature": [
          "\"any\" | \"copySavedObjectsIntoSpace\" | \"findSavedObjects\" | \"shareSavedObjectsIntoSpace\""
        ],
        "path": "x-pack/plugins/spaces/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.MAX_SPACE_INITIALS",
        "type": "number",
        "tags": [],
        "label": "MAX_SPACE_INITIALS",
        "description": [
          "\nThe maximum number of characters allowed in the Space Avatar's initials"
        ],
        "signature": [
          "2"
        ],
        "path": "x-pack/plugins/spaces/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spaces",
        "id": "def-common.SPACE_SEARCH_COUNT_THRESHOLD",
        "type": "number",
        "tags": [],
        "label": "SPACE_SEARCH_COUNT_THRESHOLD",
        "description": [
          "\nThe minimum number of spaces required to show a search control."
        ],
        "signature": [
          "8"
        ],
        "path": "x-pack/plugins/spaces/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}