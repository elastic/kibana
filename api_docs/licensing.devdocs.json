{
  "id": "licensing",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "licensing",
      "id": "def-public.LicensingPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "LicensingPluginSetup",
      "description": [],
      "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginSetup.license$",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "signature": [
            "Observable",
            "<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": true,
          "removeBy": "8.8.0",
          "trackAdoption": false,
          "references": [
            {
              "plugin": "security",
              "path": "x-pack/platform/plugins/shared/security/public/plugin.tsx"
            },
            {
              "plugin": "licenseManagement",
              "path": "x-pack/platform/plugins/shared/license_management/public/plugin.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/platform/plugins/shared/ml/public/plugin.ts"
            },
            {
              "plugin": "crossClusterReplication",
              "path": "x-pack/platform/plugins/private/cross_cluster_replication/public/plugin.ts"
            },
            {
              "plugin": "logstash",
              "path": "x-pack/platform/plugins/private/logstash/public/plugin.ts"
            },
            {
              "plugin": "painlessLab",
              "path": "x-pack/platform/plugins/private/painless_lab/public/plugin.tsx"
            },
            {
              "plugin": "painlessLab",
              "path": "x-pack/platform/plugins/private/painless_lab/public/plugin.tsx"
            },
            {
              "plugin": "watcher",
              "path": "x-pack/platform/plugins/private/watcher/public/plugin.ts"
            },
            {
              "plugin": "watcher",
              "path": "x-pack/platform/plugins/private/watcher/public/plugin.ts"
            },
            {
              "plugin": "searchprofiler",
              "path": "x-pack/platform/plugins/shared/searchprofiler/public/plugin.ts"
            },
            {
              "plugin": "searchprofiler",
              "path": "x-pack/platform/plugins/shared/searchprofiler/public/plugin.ts"
            },
            {
              "plugin": "slo",
              "path": "x-pack/solutions/observability/plugins/slo/public/plugin.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/public/plugin.tsx"
            }
          ]
        },
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginSetup.refresh",
          "type": "Function",
          "tags": [
            "deprecated"
          ],
          "label": "refresh",
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": true,
          "removeBy": "8.8.0",
          "trackAdoption": false,
          "references": [],
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginSetup.featureUsage",
          "type": "Object",
          "tags": [],
          "label": "featureUsage",
          "description": [
            "\nAPIs to register licensed feature usage."
          ],
          "signature": [
            "FeatureUsageServiceSetup"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "licensing",
      "id": "def-public.LicensingPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "LicensingPluginStart",
      "description": [],
      "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginStart.license$",
          "type": "Object",
          "tags": [],
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "signature": [
            "Observable",
            "<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginStart.getLicense",
          "type": "Function",
          "tags": [],
          "label": "getLicense",
          "description": [
            "\nRetrieves the {@link ILicense | licensing information}"
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginStart.refresh",
          "type": "Function",
          "tags": [],
          "label": "refresh",
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-public.LicensingPluginStart.featureUsage",
          "type": "Object",
          "tags": [],
          "label": "featureUsage",
          "description": [
            "\nAPIs to manage licensed feature usage."
          ],
          "signature": [
            "FeatureUsageServiceStart"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "licensing",
        "id": "def-server.wrapRouteWithLicenseCheck",
        "type": "Function",
        "tags": [],
        "label": "wrapRouteWithLicenseCheck",
        "description": [],
        "signature": [
          "(checkLicense: ",
          {
            "pluginId": "licensing",
            "scope": "server",
            "docId": "kibLicensingPluginApi",
            "section": "def-server.CheckLicense",
            "text": "CheckLicense"
          },
          ", handler: ",
          "RequestHandler",
          "<P, Q, B, Context, any, ",
          "KibanaResponseFactory",
          ">) => ",
          "RequestHandler",
          "<P, Q, B, Context, any, ",
          "KibanaResponseFactory",
          ">"
        ],
        "path": "x-pack/platform/plugins/shared/licensing/server/wrap_route_with_license_check.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.wrapRouteWithLicenseCheck.$1",
            "type": "Function",
            "tags": [],
            "label": "checkLicense",
            "description": [],
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.CheckLicense",
                "text": "CheckLicense"
              }
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/wrap_route_with_license_check.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "licensing",
            "id": "def-server.wrapRouteWithLicenseCheck.$2",
            "type": "Function",
            "tags": [],
            "label": "handler",
            "description": [],
            "signature": [
              "RequestHandler",
              "<P, Q, B, Context, any, ",
              "KibanaResponseFactory",
              ">"
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/wrap_route_with_license_check.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "licensing",
        "id": "def-server.ElasticsearchError",
        "type": "Interface",
        "tags": [],
        "label": "ElasticsearchError",
        "description": [],
        "signature": [
          {
            "pluginId": "licensing",
            "scope": "server",
            "docId": "kibLicensingPluginApi",
            "section": "def-server.ElasticsearchError",
            "text": "ElasticsearchError"
          },
          " extends Error"
        ],
        "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.ElasticsearchError.status",
            "type": "number",
            "tags": [],
            "label": "status",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "licensing",
        "id": "def-server.FeatureUsageServiceSetup",
        "type": "Interface",
        "tags": [],
        "label": "FeatureUsageServiceSetup",
        "description": [],
        "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.FeatureUsageServiceSetup.register",
            "type": "Function",
            "tags": [],
            "label": "register",
            "description": [
              "\nRegister a feature to be able to notify of it's usages using the {@link FeatureUsageServiceStart | service start contract}."
            ],
            "signature": [
              "(featureName: string, licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => void"
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "licensing",
                "id": "def-server.FeatureUsageServiceSetup.register.$1",
                "type": "string",
                "tags": [],
                "label": "featureName",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "licensing",
                "id": "def-server.FeatureUsageServiceSetup.register.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "licenseType",
                "description": [],
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "licensing",
        "id": "def-server.FeatureUsageServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "FeatureUsageServiceStart",
        "description": [],
        "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.FeatureUsageServiceStart.notifyUsage",
            "type": "Function",
            "tags": [],
            "label": "notifyUsage",
            "description": [
              "\nNotify of a registered feature usage at given time.\n"
            ],
            "signature": [
              "(featureName: string, usedAt?: number | Date | undefined) => void"
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "licensing",
                "id": "def-server.FeatureUsageServiceStart.notifyUsage.$1",
                "type": "string",
                "tags": [],
                "label": "featureName",
                "description": [
                  "- the name of the feature to notify usage of"
                ],
                "signature": [
                  "string"
                ],
                "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "licensing",
                "id": "def-server.FeatureUsageServiceStart.notifyUsage.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "usedAt",
                "description": [
                  "- Either a `Date` or an unix timestamp with ms. If not specified, it will be set to the current time."
                ],
                "signature": [
                  "number | Date | undefined"
                ],
                "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "licensing",
            "id": "def-server.FeatureUsageServiceStart.getLastUsages",
            "type": "Function",
            "tags": [],
            "label": "getLastUsages",
            "description": [
              "\nReturn a map containing last usage timestamp for all features.\nFeatures that were not used yet do not appear in the map."
            ],
            "signature": [
              "() => ",
              "LastFeatureUsage",
              "[]"
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/services/feature_usage_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "licensing",
        "id": "def-server.LicensingApiRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "LicensingApiRequestHandlerContext",
        "description": [
          "\nThe APIs exposed on the `licensing` key of {@link RequestHandlerContext} for plugins that depend on licensing."
        ],
        "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.LicensingApiRequestHandlerContext.featureUsage",
            "type": "Object",
            "tags": [],
            "label": "featureUsage",
            "description": [],
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.FeatureUsageServiceStart",
                "text": "FeatureUsageServiceStart"
              }
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "licensing",
            "id": "def-server.LicensingApiRequestHandlerContext.license",
            "type": "Object",
            "tags": [],
            "label": "license",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/licensing-types",
                "scope": "common",
                "docId": "kibKbnLicensingTypesPluginApi",
                "section": "def-common.ILicense",
                "text": "ILicense"
              }
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "licensing",
        "id": "def-server.CheckLicense",
        "type": "Type",
        "tags": [],
        "label": "CheckLicense",
        "description": [],
        "signature": [
          "(license: ",
          {
            "pluginId": "@kbn/licensing-types",
            "scope": "common",
            "docId": "kibKbnLicensingTypesPluginApi",
            "section": "def-common.ILicense",
            "text": "ILicense"
          },
          ") => { valid: false; message: string; } | { valid: true; message: null; }"
        ],
        "path": "x-pack/platform/plugins/shared/licensing/server/wrap_route_with_license_check.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "licensing",
            "id": "def-server.CheckLicense.$1",
            "type": "Object",
            "tags": [],
            "label": "license",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/licensing-types",
                "scope": "common",
                "docId": "kibKbnLicensingTypesPluginApi",
                "section": "def-common.ILicense",
                "text": "ILicense"
              }
            ],
            "path": "x-pack/platform/plugins/shared/licensing/server/wrap_route_with_license_check.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "licensing",
      "id": "def-server.LicensingPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "LicensingPluginSetup",
      "description": [],
      "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginSetup.license$",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "signature": [
            "Observable",
            "<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": true,
          "removeBy": "8.8.0",
          "trackAdoption": false,
          "references": [
            {
              "plugin": "spaces",
              "path": "x-pack/platform/plugins/shared/spaces/server/usage_collection/spaces_usage_collector.ts"
            },
            {
              "plugin": "spaces",
              "path": "x-pack/platform/plugins/shared/spaces/server/plugin.ts"
            },
            {
              "plugin": "spaces",
              "path": "x-pack/platform/plugins/shared/spaces/server/plugin.ts"
            },
            {
              "plugin": "security",
              "path": "x-pack/platform/plugins/shared/security/server/plugin.ts"
            },
            {
              "plugin": "actions",
              "path": "x-pack/platform/plugins/shared/actions/server/plugin.ts"
            },
            {
              "plugin": "alerting",
              "path": "x-pack/platform/plugins/shared/alerting/server/plugin.ts"
            },
            {
              "plugin": "reindexService",
              "path": "x-pack/platform/plugins/private/reindex_service/server/src/lib/reindex_service.ts"
            },
            {
              "plugin": "remoteClusters",
              "path": "x-pack/platform/plugins/private/remote_clusters/server/plugin.ts"
            },
            {
              "plugin": "graph",
              "path": "x-pack/platform/plugins/private/graph/server/plugin.ts"
            },
            {
              "plugin": "indexLifecycleManagement",
              "path": "x-pack/platform/plugins/private/index_lifecycle_management/server/services/license.ts"
            },
            {
              "plugin": "painlessLab",
              "path": "x-pack/platform/plugins/private/painless_lab/server/services/license.ts"
            },
            {
              "plugin": "rollup",
              "path": "x-pack/platform/plugins/private/rollup/server/services/license.ts"
            },
            {
              "plugin": "snapshotRestore",
              "path": "x-pack/platform/plugins/private/snapshot_restore/server/services/license.ts"
            },
            {
              "plugin": "transform",
              "path": "x-pack/platform/plugins/private/transform/server/services/license.ts"
            },
            {
              "plugin": "upgradeAssistant",
              "path": "x-pack/platform/plugins/private/upgrade_assistant/server/lib/data_streams/data_stream_migration_service.ts"
            },
            {
              "plugin": "aiops",
              "path": "x-pack/platform/plugins/shared/aiops/server/plugin.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/platform/plugins/shared/ml/server/plugin.ts"
            },
            {
              "plugin": "osquery",
              "path": "x-pack/platform/plugins/shared/osquery/server/handlers/action/create_action_service.ts"
            },
            {
              "plugin": "searchprofiler",
              "path": "x-pack/platform/plugins/shared/searchprofiler/server/plugin.ts"
            },
            {
              "plugin": "spaces",
              "path": "x-pack/platform/plugins/shared/spaces/server/usage_collection/spaces_usage_collector.test.ts"
            },
            {
              "plugin": "reindexService",
              "path": "x-pack/platform/plugins/private/reindex_service/server/src/lib/reindex_service.test.ts"
            },
            {
              "plugin": "reindexService",
              "path": "x-pack/platform/plugins/private/reindex_service/server/src/lib/reindex_service.test.ts"
            },
            {
              "plugin": "apm",
              "path": "x-pack/solutions/observability/plugins/apm/server/routes/fleet/api_keys/add_api_keys_to_policies_if_missing.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_is_alert_suppression_active.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/indicator_match/threat_mapping/create_threat_signals.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/query/query.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/threshold/threshold.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_is_alert_suppression_active.test.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_is_alert_suppression_active.test.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/solutions/security/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_is_alert_suppression_active.test.ts"
            },
            {
              "plugin": "actions",
              "path": "x-pack/platform/plugins/shared/actions/server/lib/license_state.test.ts"
            },
            {
              "plugin": "actions",
              "path": "x-pack/platform/plugins/shared/actions/server/lib/license_state.test.ts"
            },
            {
              "plugin": "alerting",
              "path": "x-pack/platform/plugins/shared/alerting/server/lib/license_state.test.ts"
            },
            {
              "plugin": "alerting",
              "path": "x-pack/platform/plugins/shared/alerting/server/lib/license_state.test.ts"
            }
          ]
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginSetup.refresh",
          "type": "Function",
          "tags": [
            "deprecated"
          ],
          "label": "refresh",
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": true,
          "removeBy": "8.8.0",
          "trackAdoption": false,
          "references": [],
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginSetup.featureUsage",
          "type": "Object",
          "tags": [],
          "label": "featureUsage",
          "description": [
            "\nAPIs to register licensed feature usage."
          ],
          "signature": [
            {
              "pluginId": "licensing",
              "scope": "server",
              "docId": "kibLicensingPluginApi",
              "section": "def-server.FeatureUsageServiceSetup",
              "text": "FeatureUsageServiceSetup"
            }
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "licensing",
      "id": "def-server.LicensingPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "LicensingPluginStart",
      "description": [],
      "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginStart.license$",
          "type": "Object",
          "tags": [],
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "signature": [
            "Observable",
            "<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginStart.getLicense",
          "type": "Function",
          "tags": [],
          "label": "getLicense",
          "description": [
            "\nRetrieves the {@link ILicense | licensing information}"
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginStart.refresh",
          "type": "Function",
          "tags": [],
          "label": "refresh",
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "signature": [
            "() => Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginStart.createLicensePoller",
          "type": "Function",
          "tags": [],
          "label": "createLicensePoller",
          "description": [
            "\nCreates a license poller to retrieve a license data with.\nAllows a plugin to configure a cluster to retrieve data from at\ngiven polling frequency."
          ],
          "signature": [
            "(clusterClient: ",
            "IClusterClient",
            ", pollingFrequency: number) => { license$: ",
            "Observable",
            "<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">; refresh(): Promise<",
            {
              "pluginId": "@kbn/licensing-types",
              "scope": "common",
              "docId": "kibKbnLicensingTypesPluginApi",
              "section": "def-common.ILicense",
              "text": "ILicense"
            },
            ">; }"
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "licensing",
              "id": "def-server.LicensingPluginStart.createLicensePoller.$1",
              "type": "Object",
              "tags": [],
              "label": "clusterClient",
              "description": [],
              "signature": [
                "IClusterClient"
              ],
              "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            },
            {
              "parentPluginId": "licensing",
              "id": "def-server.LicensingPluginStart.createLicensePoller.$2",
              "type": "number",
              "tags": [],
              "label": "pollingFrequency",
              "description": [],
              "signature": [
                "number"
              ],
              "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "licensing",
          "id": "def-server.LicensingPluginStart.featureUsage",
          "type": "Object",
          "tags": [],
          "label": "featureUsage",
          "description": [
            "\nAPIs to manage licensed feature usage."
          ],
          "signature": [
            {
              "pluginId": "licensing",
              "scope": "server",
              "docId": "kibLicensingPluginApi",
              "section": "def-server.FeatureUsageServiceStart",
              "text": "FeatureUsageServiceStart"
            }
          ],
          "path": "x-pack/platform/plugins/shared/licensing/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}