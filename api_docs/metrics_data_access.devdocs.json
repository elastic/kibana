{
  "id": "metricsDataAccess",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-public.useAssetDetailsRedirect",
        "type": "Function",
        "tags": [],
        "label": "useAssetDetailsRedirect",
        "description": [],
        "signature": [
          "() => { getAssetDetailUrl: ({ entityType, entityId, search, }: { entityType: \"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\"; entityId: string; search: QueryParams; }) => ",
          "RouterLinkProps",
          "; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/pages/link_to/use_asset_details_redirect.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-public.RouteState",
        "type": "Interface",
        "tags": [],
        "label": "RouteState",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-public.RouteState.originAppId",
            "type": "string",
            "tags": [],
            "label": "originAppId",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-public.RouteState.originPathname",
            "type": "string",
            "tags": [],
            "label": "originPathname",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-public.RouteState.originSearch",
            "type": "string",
            "tags": [],
            "label": "originSearch",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "metricsDataAccess",
      "id": "def-public.MetricsDataPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "MetricsDataPluginSetup",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-public.MetricsDataPluginSetup.metricsClient",
          "type": "Object",
          "tags": [],
          "label": "metricsClient",
          "description": [],
          "signature": [
            "MetricsDataClient"
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "metricsDataAccess",
      "id": "def-public.MetricsDataPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "MetricsDataPluginStart",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-public.MetricsDataPluginStart.metricsClient",
          "type": "Object",
          "tags": [],
          "label": "metricsClient",
          "description": [],
          "signature": [
            "MetricsDataClient"
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-public.MetricsDataPluginStart.HostMetricsTable",
          "type": "Function",
          "tags": [],
          "label": "HostMetricsTable",
          "description": [],
          "signature": [
            "(props: ",
            "NodeMetricsTableProps",
            ") => JSX.Element"
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "metricsDataAccess",
              "id": "def-public.MetricsDataPluginStart.HostMetricsTable.$1",
              "type": "CompoundType",
              "tags": [],
              "label": "props",
              "description": [],
              "signature": [
                "NodeMetricsTableProps"
              ],
              "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-public.MetricsDataPluginStart.PodMetricsTable",
          "type": "Function",
          "tags": [],
          "label": "PodMetricsTable",
          "description": [],
          "signature": [
            "(props: ",
            "NodeMetricsTableProps",
            ") => JSX.Element"
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "metricsDataAccess",
              "id": "def-public.MetricsDataPluginStart.PodMetricsTable.$1",
              "type": "CompoundType",
              "tags": [],
              "label": "props",
              "description": [],
              "signature": [
                "NodeMetricsTableProps"
              ],
              "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-public.MetricsDataPluginStart.ContainerMetricsTable",
          "type": "Function",
          "tags": [],
          "label": "ContainerMetricsTable",
          "description": [],
          "signature": [
            "(props: ",
            "NodeMetricsTableProps",
            ") => JSX.Element"
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "metricsDataAccess",
              "id": "def-public.MetricsDataPluginStart.ContainerMetricsTable.$1",
              "type": "CompoundType",
              "tags": [],
              "label": "props",
              "description": [],
              "signature": [
                "NodeMetricsTableProps"
              ],
              "path": "x-pack/solutions/observability/plugins/metrics_data_access/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.MetricsDataClient",
        "type": "Class",
        "tags": [],
        "label": "MetricsDataClient",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.MetricsDataClient.getMetricIndices",
            "type": "Function",
            "tags": [],
            "label": "getMetricIndices",
            "description": [],
            "signature": [
              "(options: ",
              {
                "pluginId": "metricsDataAccess",
                "scope": "server",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-server.GetMetricIndicesOptions",
                "text": "GetMetricIndicesOptions"
              },
              ") => Promise<string>"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-server.MetricsDataClient.getMetricIndices.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "metricsDataAccess",
                    "scope": "server",
                    "docId": "kibMetricsDataAccessPluginApi",
                    "section": "def-server.GetMetricIndicesOptions",
                    "text": "GetMetricIndicesOptions"
                  }
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.MetricsDataClient.updateMetricIndices",
            "type": "Function",
            "tags": [],
            "label": "updateMetricIndices",
            "description": [],
            "signature": [
              "(options: ",
              {
                "pluginId": "metricsDataAccess",
                "scope": "server",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-server.UpdateMetricIndicesOptions",
                "text": "UpdateMetricIndicesOptions"
              },
              ") => Promise<",
              "SavedObject",
              "<{ metricIndices: string; }>>"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-server.MetricsDataClient.updateMetricIndices.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "metricsDataAccess",
                    "scope": "server",
                    "docId": "kibMetricsDataAccessPluginApi",
                    "section": "def-server.UpdateMetricIndicesOptions",
                    "text": "UpdateMetricIndicesOptions"
                  }
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.MetricsDataClient.setDefaultMetricIndicesHandler",
            "type": "Function",
            "tags": [],
            "label": "setDefaultMetricIndicesHandler",
            "description": [],
            "signature": [
              "(handler: ",
              {
                "pluginId": "metricsDataAccess",
                "scope": "server",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-server.DefaultMetricIndicesHandler",
                "text": "DefaultMetricIndicesHandler"
              },
              ") => void"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-server.MetricsDataClient.setDefaultMetricIndicesHandler.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "handler",
                "description": [],
                "signature": [
                  {
                    "pluginId": "metricsDataAccess",
                    "scope": "server",
                    "docId": "kibMetricsDataAccessPluginApi",
                    "section": "def-server.DefaultMetricIndicesHandler",
                    "text": "DefaultMetricIndicesHandler"
                  }
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.fetchMetrics",
        "type": "Function",
        "tags": [],
        "label": "fetchMetrics",
        "description": [],
        "signature": [
          "(search: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "server",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-server.ESSearchClient",
            "text": "ESSearchClient"
          },
          ", rawOptions: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsAPIRequest",
            "text": "MetricsAPIRequest"
          },
          ") => Promise<{ series: ({ id: string; columns: { name: string; type: \"string\" | \"number\" | \"date\"; }[]; rows: ({ timestamp: number; } & { [x: string]: string | number | object[] | null | undefined; })[]; } & { keys?: string[] | undefined; } & { metricsets?: string[] | undefined; })[]; info: { afterKey: { [x: string]: string | null; } | null | undefined; } & { interval?: number | undefined; }; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.fetchMetrics.$1",
            "type": "Function",
            "tags": [],
            "label": "search",
            "description": [],
            "signature": [
              {
                "pluginId": "metricsDataAccess",
                "scope": "server",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-server.ESSearchClient",
                "text": "ESSearchClient"
              }
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.fetchMetrics.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "rawOptions",
            "description": [],
            "signature": [
              {
                "pluginId": "metricsDataAccess",
                "scope": "common",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-common.MetricsAPIRequest",
                "text": "MetricsAPIRequest"
              }
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.GetMetricIndicesOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetMetricIndicesOptions",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.GetMetricIndicesOptions.savedObjectsClient",
            "type": "Object",
            "tags": [],
            "label": "savedObjectsClient",
            "description": [],
            "signature": [
              "SavedObjectsClientContract"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.LogQueryFields",
        "type": "Interface",
        "tags": [],
        "label": "LogQueryFields",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.LogQueryFields.indexPattern",
            "type": "string",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.DefaultMetricIndicesHandler",
        "type": "Type",
        "tags": [],
        "label": "DefaultMetricIndicesHandler",
        "description": [],
        "signature": [
          "((options: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "server",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-server.GetMetricIndicesOptions",
            "text": "GetMetricIndicesOptions"
          },
          ") => Promise<string>) | null"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.ESSearchClient",
        "type": "Type",
        "tags": [],
        "label": "ESSearchClient",
        "description": [],
        "signature": [
          "<Hit = {}, Aggregation = undefined>(options: ",
          "CallWithRequestParams",
          ") => Promise<",
          "InfraDatabaseSearchResponse",
          "<Hit, Aggregation>>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.ESSearchClient.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "CallWithRequestParams"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.metricsDataSourceSavedObjectName",
        "type": "string",
        "tags": [],
        "label": "metricsDataSourceSavedObjectName",
        "description": [],
        "signature": [
          "\"metrics-data-source\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/saved_objects/metrics_data_source/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.UpdateMetricIndicesOptions",
        "type": "Type",
        "tags": [],
        "label": "UpdateMetricIndicesOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "metricsDataAccess",
            "scope": "server",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-server.GetMetricIndicesOptions",
            "text": "GetMetricIndicesOptions"
          },
          " & { metricIndices: string; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.BasicMetricValueRT",
        "type": "Object",
        "tags": [],
        "label": "BasicMetricValueRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ value: ",
          "UnionC",
          "<[",
          "NumberC",
          ", ",
          "NullC",
          "]>; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/lib/metrics/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-server.MetricsDataClientMock",
        "type": "Object",
        "tags": [],
        "label": "MetricsDataClientMock",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client_mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-server.MetricsDataClientMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "metricsDataAccess",
                "scope": "server",
                "docId": "kibMetricsDataAccessPluginApi",
                "section": "def-server.MetricsDataClient",
                "text": "MetricsDataClient"
              }
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/client_mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "metricsDataAccess",
      "id": "def-server.MetricsDataPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "MetricsDataPluginSetup",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "metricsDataAccess",
          "id": "def-server.MetricsDataPluginSetup.client",
          "type": "Object",
          "tags": [],
          "label": "client",
          "description": [],
          "signature": [
            {
              "pluginId": "metricsDataAccess",
              "scope": "server",
              "docId": "kibMetricsDataAccessPluginApi",
              "section": "def-server.MetricsDataClient",
              "text": "MetricsDataClient"
            }
          ],
          "path": "x-pack/solutions/observability/plugins/metrics_data_access/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.findInventoryFields",
        "type": "Function",
        "tags": [],
        "label": "findInventoryFields",
        "description": [],
        "signature": [
          "(type: \"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\") => { id: string; name: string; os?: string | undefined; ip?: string | undefined; cloudProvider?: string | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.findInventoryFields.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\""
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.findInventoryModel",
        "type": "Function",
        "tags": [],
        "label": "findInventoryModel",
        "description": [],
        "signature": [
          "<TType extends \"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\">(type: TType) => { readonly host: ",
          "InventoryModel",
          "<\"host\", { cpuV2: ",
          "SchemaBasedAggregations",
          "; diskSpaceUsage: ",
          "SchemaBasedAggregations",
          "; load: ",
          "SchemaBasedAggregations",
          "; logRate: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; memory: ",
          "SchemaBasedAggregations",
          "; memoryFree: ",
          "SchemaBasedAggregations",
          "; normalizedLoad1m: ",
          "SchemaBasedAggregations",
          "; rxV2: ",
          "SchemaBasedAggregations",
          "; txV2: ",
          "SchemaBasedAggregations",
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, { cpuUsage: ",
          "SchemaBasedFormula",
          "; cpuUsageIowait: ",
          "SchemaBasedFormula",
          "; cpuUsageIrq: ",
          "SchemaBasedFormula",
          "; cpuUsageNice: ",
          "SchemaBasedFormula",
          "; cpuUsageSoftirq: ",
          "SchemaBasedFormula",
          "; cpuUsageSteal: ",
          "SchemaBasedFormula",
          "; cpuUsageUser: ",
          "SchemaBasedFormula",
          "; cpuUsageSystem: ",
          "SchemaBasedFormula",
          "; diskIORead: ",
          "SchemaBasedFormula",
          "; diskIOWrite: ",
          "SchemaBasedFormula",
          "; diskReadThroughput: ",
          "SchemaBasedFormula",
          "; diskWriteThroughput: ",
          "SchemaBasedFormula",
          "; diskSpaceAvailable: ",
          "SchemaBasedFormula",
          "; diskUsage: ",
          "SchemaBasedFormula",
          "; diskUsageAverage: ",
          "SchemaBasedFormula",
          "; hostCount: ",
          "LensBaseLayer",
          "; logRate: ",
          "LensBaseLayer",
          "; normalizedLoad1m: ",
          "SchemaBasedFormula",
          "; load1m: ",
          "SchemaBasedFormula",
          "; load5m: ",
          "SchemaBasedFormula",
          "; load15m: ",
          "SchemaBasedFormula",
          "; memoryUsage: ",
          "SchemaBasedFormula",
          "; memoryFree: ",
          "SchemaBasedFormula",
          "; memoryUsed: ",
          "SchemaBasedFormula",
          "; memoryFreeExcludingCache: ",
          "SchemaBasedFormula",
          "; memoryCache: ",
          "SchemaBasedFormula",
          "; rx: ",
          "SchemaBasedFormula",
          "; tx: ",
          "SchemaBasedFormula",
          "; }, { kubernetesNode?: { xy: { nodeCpuCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodeMemoryCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodeDiskCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodePodCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; } | undefined; cpu: { xy: { cpuUsageBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; loadBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; cpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; normalizedLoad1m: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { cpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; normalizedLoad1m: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; disk: { xy: { diskThroughputReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskUsageByMountPoint: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIOReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskSpaceAvailable: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIORead: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIOWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskReadThroughput: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskWriteThroughput: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { diskUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; memory: { xy: { memoryUsageBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; memoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; memoryFree: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { memoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; network: { readonly xy: { readonly rxTx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly rx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly tx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; logs: { xy: { logRate: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; }>; readonly pod: ",
          "InventoryModel",
          "<\"pod\", { memory: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>; readonly container: ",
          "InventoryModel",
          "<\"container\", { memory: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, { dockerContainerCpuUsage: ",
          "LensBaseLayer",
          "; dockerContainerMemoryUsage: ",
          "LensBaseLayer",
          "; dockerContainerNetworkRx: ",
          "LensBaseLayer",
          "; dockerContainerNetworkTx: ",
          "LensBaseLayer",
          "; dockerContainerDiskIORead: ",
          "LensBaseLayer",
          "; dockerContainerDiskIOWrite: ",
          "LensBaseLayer",
          "; k8sContainerCpuUsage: ",
          "LensBaseLayer",
          "; k8sContainerMemoryUsage: ",
          "LensBaseLayer",
          "; }, { readonly cpu: { readonly xy: { readonly dockerContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly k8sContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; readonly metric: { readonly dockerContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; readonly k8sContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; readonly memory: { xy: { dockerContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; k8sContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { dockerContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; k8sContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; readonly network: { xy: { dockerContainerRxTx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; readonly diskIO: { xy: { dockerContainerDiskIOReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; }>; readonly awsEC2: ",
          "InventoryModel",
          "<\"awsEC2\", { cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; diskIOReadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; diskIOWriteBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>; readonly awsS3: ",
          "InventoryModel",
          "<\"awsS3\", { s3BucketSize: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3NumberOfObjects: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3TotalRequests: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3UploadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3DownloadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>; readonly awsRDS: ",
          "InventoryModel",
          "<\"awsRDS\", { cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsLatency: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsConnections: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsQueriesExecuted: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsActiveTransactions: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>; readonly awsSQS: ",
          "InventoryModel",
          "<\"awsSQS\", { sqsMessagesVisible: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesDelayed: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesEmpty: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesSent: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsOldestMessage: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>; }[TType]"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.findInventoryModel.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "TType"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.getFieldByType",
        "type": "Function",
        "tags": [],
        "label": "getFieldByType",
        "description": [],
        "signature": [
          "(type: \"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\") => \"container.id\" | \"host.name\" | \"kubernetes.pod.uid\" | undefined"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.getFieldByType.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\""
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.isBasicMetricAgg",
        "type": "Function",
        "tags": [],
        "label": "isBasicMetricAgg",
        "description": [],
        "signature": [
          "(agg: unknown) => agg is Record<string, Pick<",
          "AggregationsMetricAggregationBase",
          ", \"field\"> | undefined>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.isBasicMetricAgg.$1",
            "type": "Unknown",
            "tags": [],
            "label": "agg",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.isDerivativeAgg",
        "type": "Function",
        "tags": [],
        "label": "isDerivativeAgg",
        "description": [],
        "signature": [
          "(agg: unknown) => agg is Pick<",
          "AggregationsAggregationContainer",
          ", \"derivative\">"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.isDerivativeAgg.$1",
            "type": "Unknown",
            "tags": [],
            "label": "agg",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.isSumBucketAgg",
        "type": "Function",
        "tags": [],
        "label": "isSumBucketAgg",
        "description": [],
        "signature": [
          "(agg: unknown) => agg is Pick<",
          "AggregationsAggregationContainer",
          ", \"sum_bucket\">"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.isSumBucketAgg.$1",
            "type": "Unknown",
            "tags": [],
            "label": "agg",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.isTermsWithAggregation",
        "type": "Function",
        "tags": [],
        "label": "isTermsWithAggregation",
        "description": [],
        "signature": [
          "(agg: unknown) => agg is Pick<",
          "AggregationsAggregationContainer",
          ", \"aggregations\" | \"terms\">"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.isTermsWithAggregation.$1",
            "type": "Unknown",
            "tags": [],
            "label": "agg",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.networkTraffic",
        "type": "Function",
        "tags": [],
        "label": "networkTraffic",
        "description": [],
        "signature": [
          "(id: string, field: string) => ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          }
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/shared/metrics/snapshot/network_traffic.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.networkTraffic.$1",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/shared/metrics/snapshot/network_traffic.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.networkTraffic.$2",
            "type": "string",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/shared/metrics/snapshot/network_traffic.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIMetric",
        "type": "Interface",
        "tags": [],
        "label": "MetricsAPIMetric",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.MetricsAPIMetric.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.MetricsAPIMetric.aggregations",
            "type": "Object",
            "tags": [],
            "label": "aggregations",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              "AggregationsAggregate",
              "; }"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.DataSchemaFormat",
        "type": "Enum",
        "tags": [],
        "label": "DataSchemaFormat",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/shared/metrics/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryFormatterType",
        "type": "Type",
        "tags": [],
        "label": "InventoryFormatterType",
        "description": [],
        "signature": [
          "\"number\" | \"percent\" | \"bytes\" | \"bits\" | \"abbreviatedNumber\" | \"highPrecision\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryItemType",
        "type": "Type",
        "tags": [],
        "label": "InventoryItemType",
        "description": [],
        "signature": [
          "\"host\" | \"container\" | \"pod\" | \"awsEC2\" | \"awsS3\" | \"awsSQS\" | \"awsRDS\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.inventoryModels",
        "type": "Array",
        "tags": [],
        "label": "inventoryModels",
        "description": [],
        "signature": [
          "(",
          "InventoryModel",
          "<\"host\", { cpuV2: ",
          "SchemaBasedAggregations",
          "; diskSpaceUsage: ",
          "SchemaBasedAggregations",
          "; load: ",
          "SchemaBasedAggregations",
          "; logRate: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; memory: ",
          "SchemaBasedAggregations",
          "; memoryFree: ",
          "SchemaBasedAggregations",
          "; normalizedLoad1m: ",
          "SchemaBasedAggregations",
          "; rxV2: ",
          "SchemaBasedAggregations",
          "; txV2: ",
          "SchemaBasedAggregations",
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, { cpuUsage: ",
          "SchemaBasedFormula",
          "; cpuUsageIowait: ",
          "SchemaBasedFormula",
          "; cpuUsageIrq: ",
          "SchemaBasedFormula",
          "; cpuUsageNice: ",
          "SchemaBasedFormula",
          "; cpuUsageSoftirq: ",
          "SchemaBasedFormula",
          "; cpuUsageSteal: ",
          "SchemaBasedFormula",
          "; cpuUsageUser: ",
          "SchemaBasedFormula",
          "; cpuUsageSystem: ",
          "SchemaBasedFormula",
          "; diskIORead: ",
          "SchemaBasedFormula",
          "; diskIOWrite: ",
          "SchemaBasedFormula",
          "; diskReadThroughput: ",
          "SchemaBasedFormula",
          "; diskWriteThroughput: ",
          "SchemaBasedFormula",
          "; diskSpaceAvailable: ",
          "SchemaBasedFormula",
          "; diskUsage: ",
          "SchemaBasedFormula",
          "; diskUsageAverage: ",
          "SchemaBasedFormula",
          "; hostCount: ",
          "LensBaseLayer",
          "; logRate: ",
          "LensBaseLayer",
          "; normalizedLoad1m: ",
          "SchemaBasedFormula",
          "; load1m: ",
          "SchemaBasedFormula",
          "; load5m: ",
          "SchemaBasedFormula",
          "; load15m: ",
          "SchemaBasedFormula",
          "; memoryUsage: ",
          "SchemaBasedFormula",
          "; memoryFree: ",
          "SchemaBasedFormula",
          "; memoryUsed: ",
          "SchemaBasedFormula",
          "; memoryFreeExcludingCache: ",
          "SchemaBasedFormula",
          "; memoryCache: ",
          "SchemaBasedFormula",
          "; rx: ",
          "SchemaBasedFormula",
          "; tx: ",
          "SchemaBasedFormula",
          "; }, { kubernetesNode?: { xy: { nodeCpuCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodeMemoryCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodeDiskCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; nodePodCapacity: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; } | undefined; cpu: { xy: { cpuUsageBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; loadBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; cpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; normalizedLoad1m: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { cpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; normalizedLoad1m: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; disk: { xy: { diskThroughputReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskUsageByMountPoint: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIOReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskSpaceAvailable: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIORead: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskIOWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskReadThroughput: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; diskWriteThroughput: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { diskUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; memory: { xy: { memoryUsageBreakdown: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; memoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; memoryFree: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { memoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; network: { readonly xy: { readonly rxTx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly rx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly tx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; logs: { xy: { logRate: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; }> | ",
          "InventoryModel",
          "<\"pod\", { memory: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined> | ",
          "InventoryModel",
          "<\"container\", { memory: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, { dockerContainerCpuUsage: ",
          "LensBaseLayer",
          "; dockerContainerMemoryUsage: ",
          "LensBaseLayer",
          "; dockerContainerNetworkRx: ",
          "LensBaseLayer",
          "; dockerContainerNetworkTx: ",
          "LensBaseLayer",
          "; dockerContainerDiskIORead: ",
          "LensBaseLayer",
          "; dockerContainerDiskIOWrite: ",
          "LensBaseLayer",
          "; k8sContainerCpuUsage: ",
          "LensBaseLayer",
          "; k8sContainerMemoryUsage: ",
          "LensBaseLayer",
          "; }, { readonly cpu: { readonly xy: { readonly dockerContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; readonly k8sContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; readonly metric: { readonly dockerContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; readonly k8sContainerCpuUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; readonly memory: { xy: { dockerContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; k8sContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; metric: { dockerContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; k8sContainerMemoryUsage: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; label?: string | undefined; filter?: string | undefined; format?: \"string\" | \"number\" | \"duration\" | \"currency\" | \"percent\" | \"bytes\" | \"bits\" | undefined; decimals?: number | undefined; normalizeByUnit?: \"m\" | \"s\" | \"d\" | \"h\" | undefined; compactValues?: boolean | undefined; randomSampling?: number | undefined; useGlobalFilter?: boolean | undefined; seriesColor?: string | undefined; value: string; chartType: \"metric\"; querySecondaryMetric?: string | undefined; queryMaxValue?: string | undefined; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; trendLine?: boolean | undefined; subtitle?: string | undefined; } & { id: string; }; }; }; readonly network: { xy: { dockerContainerRxTx: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; readonly diskIO: { xy: { dockerContainerDiskIOReadWrite: { title: string; dataset?: ",
          "LensDataset",
          " | undefined; chartType: \"xy\"; layers: ({ dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"series\"; breakdown?: ",
          "LensBreakdownConfig",
          " | undefined; xAxis: ",
          "LensBreakdownConfig",
          "; seriesType: \"line\" | \"area\" | \"bar\"; } | { dataset?: ",
          "LensDataset",
          " | undefined; yAxis: ",
          "LensBaseLayer",
          "[]; type: \"annotation\"; events: ({ name: string; color?: string | undefined; icon?: string | undefined; datetime: string; } | { name: string; color?: string | undefined; icon?: string | undefined; field: string; filter: string; })[]; } | ",
          "LensReferenceLineLayer",
          ")[]; legend?: { show?: boolean | undefined; position?: \"right\" | \"top\" | \"bottom\" | \"left\" | undefined; } | undefined; axisTitleVisibility?: { showXAxisTitle?: boolean | undefined; showYAxisTitle?: boolean | undefined; } | undefined; emphasizeFitting?: boolean | undefined; fittingFunction?: \"None\" | \"Average\" | \"Zero\" | \"Linear\" | \"Carry\" | \"Lookahead\" | \"Nearest\" | undefined; yBounds?: ",
          "LensYBoundsConfig",
          " | undefined; } & { id: string; }; }; }; }> | ",
          "InventoryModel",
          "<\"awsEC2\", { cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; tx: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; diskIOReadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; diskIOWriteBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined> | ",
          "InventoryModel",
          "<\"awsS3\", { s3BucketSize: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3NumberOfObjects: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3TotalRequests: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3UploadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; s3DownloadBytes: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined> | ",
          "InventoryModel",
          "<\"awsRDS\", { cpu: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsLatency: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsConnections: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsQueriesExecuted: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; rdsActiveTransactions: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined> | ",
          "InventoryModel",
          "<\"awsSQS\", { sqsMessagesVisible: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesDelayed: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesEmpty: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsMessagesSent: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; sqsOldestMessage: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsUIAggregation",
            "text": "MetricsUIAggregation"
          },
          "; }, undefined, undefined>)[]"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryTsvbType",
        "type": "Type",
        "tags": [],
        "label": "InventoryTsvbType",
        "description": [],
        "signature": [
          "\"custom\" | \"podOverview\" | \"podCpuUsage\" | \"podMemoryUsage\" | \"podLogUsage\" | \"podNetworkTraffic\" | \"nginxHits\" | \"nginxRequestRate\" | \"nginxActiveConnections\" | \"nginxRequestsPerConnection\" | \"awsOverview\" | \"awsCpuUtilization\" | \"awsNetworkBytes\" | \"awsNetworkPackets\" | \"awsDiskioBytes\" | \"awsDiskioOps\" | \"awsEC2CpuUtilization\" | \"awsEC2NetworkTraffic\" | \"awsEC2DiskIOBytes\" | \"awsS3TotalRequests\" | \"awsS3NumberOfObjects\" | \"awsS3BucketSize\" | \"awsS3DownloadBytes\" | \"awsS3UploadBytes\" | \"awsRDSCpuTotal\" | \"awsRDSConnections\" | \"awsRDSQueriesExecuted\" | \"awsRDSActiveTransactions\" | \"awsRDSLatency\" | \"awsSQSMessagesVisible\" | \"awsSQSMessagesDelayed\" | \"awsSQSMessagesSent\" | \"awsSQSMessagesEmpty\" | \"awsSQSOldestMessage\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryVisType",
        "type": "Type",
        "tags": [],
        "label": "InventoryVisType",
        "description": [],
        "signature": [
          "\"line\" | \"area\" | \"bar\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.METRICS_EXPLORER_API_MAX_METRICS",
        "type": "number",
        "tags": [],
        "label": "METRICS_EXPLORER_API_MAX_METRICS",
        "description": [],
        "signature": [
          "20"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIColumn",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIColumn",
        "description": [],
        "signature": [
          "{ name: string; type: \"string\" | \"number\" | \"date\"; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIColumnType",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIColumnType",
        "description": [],
        "signature": [
          "\"string\" | \"number\" | \"date\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIPageInfo",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIPageInfo",
        "description": [],
        "signature": [
          "{ afterKey: { [x: string]: string | null; } | null | undefined; } & { interval?: number | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIRequest",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIRequest",
        "description": [],
        "signature": [
          "Omit<{ timerange: { from: number; to: number; interval: string; }; indexPattern: string; metrics: { id: string; aggregations: { [key: string]: unknown; }; }[]; includeTimeseries: boolean | undefined; } & { groupBy?: (string | null | undefined)[] | undefined; groupInstance?: (string | null | undefined)[] | undefined; modules?: string[] | undefined; afterKey?: { [x: string]: string | null; } | null | undefined; limit?: number | null | undefined; filters?: { [key: string]: unknown; }[] | undefined; dropPartialBuckets?: boolean | undefined; alignDataToEnd?: boolean | undefined; }, \"metrics\"> & { metrics: ",
          {
            "pluginId": "metricsDataAccess",
            "scope": "common",
            "docId": "kibMetricsDataAccessPluginApi",
            "section": "def-common.MetricsAPIMetric",
            "text": "MetricsAPIMetric"
          },
          "[]; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIResponse",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIResponse",
        "description": [],
        "signature": [
          "{ series: ({ id: string; columns: { name: string; type: \"string\" | \"number\" | \"date\"; }[]; rows: ({ timestamp: number; } & { [x: string]: string | number | object[] | null | undefined; })[]; } & { keys?: string[] | undefined; } & { metricsets?: string[] | undefined; })[]; info: { afterKey: { [x: string]: string | null; } | null | undefined; } & { interval?: number | undefined; }; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIRow",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPIRow",
        "description": [],
        "signature": [
          "{ timestamp: number; } & { [x: string]: string | number | object[] | null | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPISeries",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPISeries",
        "description": [],
        "signature": [
          "{ id: string; columns: { name: string; type: \"string\" | \"number\" | \"date\"; }[]; rows: ({ timestamp: number; } & { [x: string]: string | number | object[] | null | undefined; })[]; } & { keys?: string[] | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPITimerange",
        "type": "Type",
        "tags": [],
        "label": "MetricsAPITimerange",
        "description": [],
        "signature": [
          "{ from: number; to: number; interval: string; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsUIAggregation",
        "type": "Type",
        "tags": [],
        "label": "MetricsUIAggregation",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          "AggregationsAggregate",
          "; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.SnapshotMetricType",
        "type": "Type",
        "tags": [],
        "label": "SnapshotMetricType",
        "description": [],
        "signature": [
          "\"count\" | \"custom\" | \"memory\" | \"rx\" | \"logRate\" | \"normalizedLoad1m\" | \"memoryFree\" | \"tx\" | \"cpuV2\" | \"cpu\" | \"diskLatency\" | \"diskSpaceUsage\" | \"load\" | \"memoryTotal\" | \"txV2\" | \"rxV2\" | \"diskIOReadBytes\" | \"diskIOWriteBytes\" | \"s3TotalRequests\" | \"s3NumberOfObjects\" | \"s3BucketSize\" | \"s3DownloadBytes\" | \"s3UploadBytes\" | \"rdsConnections\" | \"rdsQueriesExecuted\" | \"rdsActiveTransactions\" | \"rdsLatency\" | \"sqsMessagesVisible\" | \"sqsMessagesDelayed\" | \"sqsMessagesSent\" | \"sqsMessagesEmpty\" | \"sqsOldestMessage\""
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.TSVBMetricModel",
        "type": "Type",
        "tags": [],
        "label": "TSVBMetricModel",
        "description": [],
        "signature": [
          "{ id: \"custom\" | \"podOverview\" | \"podCpuUsage\" | \"podMemoryUsage\" | \"podLogUsage\" | \"podNetworkTraffic\" | \"nginxHits\" | \"nginxRequestRate\" | \"nginxActiveConnections\" | \"nginxRequestsPerConnection\" | \"awsOverview\" | \"awsCpuUtilization\" | \"awsNetworkBytes\" | \"awsNetworkPackets\" | \"awsDiskioBytes\" | \"awsDiskioOps\" | \"awsEC2CpuUtilization\" | \"awsEC2NetworkTraffic\" | \"awsEC2DiskIOBytes\" | \"awsS3TotalRequests\" | \"awsS3NumberOfObjects\" | \"awsS3BucketSize\" | \"awsS3DownloadBytes\" | \"awsS3UploadBytes\" | \"awsRDSCpuTotal\" | \"awsRDSConnections\" | \"awsRDSQueriesExecuted\" | \"awsRDSActiveTransactions\" | \"awsRDSLatency\" | \"awsSQSMessagesVisible\" | \"awsSQSMessagesDelayed\" | \"awsSQSMessagesSent\" | \"awsSQSMessagesEmpty\" | \"awsSQSOldestMessage\"; requires: string[]; index_pattern: string | string[]; interval: string; time_field: string; type: string; series: ({ id: string; metrics: ({ id: string; type: \"count\"; } | ({ id: string; type: \"min\" | \"max\" | \"sum\" | \"avg\" | \"count\" | \"cardinality\" | \"cumulative_sum\" | \"derivative\" | \"calculation\" | \"series_agg\" | \"positive_only\"; } & { field?: string | undefined; }) | { id: string; script: string; type: \"calculation\"; variables: { field: string; id: string; name: string; }[]; } | { id: string; field: string; unit: string; type: \"derivative\"; } | ({ id: string; type: \"percentile\"; percentiles: { id: string; value: number; }[]; } & { field?: string | undefined; }) | { id: string; function: string; type: \"series_agg\"; })[]; split_mode: string; } & { terms_field?: string | undefined; terms_size?: number | undefined; terms_order_by?: string | undefined; filter?: { query: string; language: \"kuery\" | \"lucene\"; } | undefined; })[]; } & { filter?: string | undefined; map_field_to?: string | undefined; id_type?: \"cloud\" | \"node\" | undefined; drop_last_bucket?: boolean | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.TSVBMetricModelCreator",
        "type": "Type",
        "tags": [],
        "label": "TSVBMetricModelCreator",
        "description": [],
        "signature": [
          "(timeField: string, indexPattern: string | string[], interval: string) => { id: \"custom\" | \"podOverview\" | \"podCpuUsage\" | \"podMemoryUsage\" | \"podLogUsage\" | \"podNetworkTraffic\" | \"nginxHits\" | \"nginxRequestRate\" | \"nginxActiveConnections\" | \"nginxRequestsPerConnection\" | \"awsOverview\" | \"awsCpuUtilization\" | \"awsNetworkBytes\" | \"awsNetworkPackets\" | \"awsDiskioBytes\" | \"awsDiskioOps\" | \"awsEC2CpuUtilization\" | \"awsEC2NetworkTraffic\" | \"awsEC2DiskIOBytes\" | \"awsS3TotalRequests\" | \"awsS3NumberOfObjects\" | \"awsS3BucketSize\" | \"awsS3DownloadBytes\" | \"awsS3UploadBytes\" | \"awsRDSCpuTotal\" | \"awsRDSConnections\" | \"awsRDSQueriesExecuted\" | \"awsRDSActiveTransactions\" | \"awsRDSLatency\" | \"awsSQSMessagesVisible\" | \"awsSQSMessagesDelayed\" | \"awsSQSMessagesSent\" | \"awsSQSMessagesEmpty\" | \"awsSQSOldestMessage\"; requires: string[]; index_pattern: string | string[]; interval: string; time_field: string; type: string; series: ({ id: string; metrics: ({ id: string; type: \"count\"; } | ({ id: string; type: \"min\" | \"max\" | \"sum\" | \"avg\" | \"count\" | \"cardinality\" | \"cumulative_sum\" | \"derivative\" | \"calculation\" | \"series_agg\" | \"positive_only\"; } & { field?: string | undefined; }) | { id: string; script: string; type: \"calculation\"; variables: { field: string; id: string; name: string; }[]; } | { id: string; field: string; unit: string; type: \"derivative\"; } | ({ id: string; type: \"percentile\"; percentiles: { id: string; value: number; }[]; } & { field?: string | undefined; }) | { id: string; function: string; type: \"series_agg\"; })[]; split_mode: string; } & { terms_field?: string | undefined; terms_size?: number | undefined; terms_order_by?: string | undefined; filter?: { query: string; language: \"kuery\" | \"lucene\"; } | undefined; })[]; } & { filter?: string | undefined; map_field_to?: string | undefined; id_type?: \"cloud\" | \"node\" | undefined; drop_last_bucket?: boolean | undefined; }"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.TSVBMetricModelCreator.$1",
            "type": "string",
            "tags": [],
            "label": "timeField",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.TSVBMetricModelCreator.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              "string | string[]"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.TSVBMetricModelCreator.$3",
            "type": "string",
            "tags": [],
            "label": "interval",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryFormatterTypeRT",
        "type": "Object",
        "tags": [],
        "label": "InventoryFormatterTypeRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ abbreviatedNumber: null; bits: null; bytes: null; number: null; percent: null; highPrecision: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryTsvbTypeKeysRT",
        "type": "Object",
        "tags": [],
        "label": "InventoryTsvbTypeKeysRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ podOverview: null; podCpuUsage: null; podMemoryUsage: null; podLogUsage: null; podNetworkTraffic: null; nginxHits: null; nginxRequestRate: null; nginxActiveConnections: null; nginxRequestsPerConnection: null; awsOverview: null; awsCpuUtilization: null; awsNetworkBytes: null; awsNetworkPackets: null; awsDiskioBytes: null; awsDiskioOps: null; awsEC2CpuUtilization: null; awsEC2NetworkTraffic: null; awsEC2DiskIOBytes: null; awsS3TotalRequests: null; awsS3NumberOfObjects: null; awsS3BucketSize: null; awsS3DownloadBytes: null; awsS3UploadBytes: null; awsRDSCpuTotal: null; awsRDSConnections: null; awsRDSQueriesExecuted: null; awsRDSActiveTransactions: null; awsRDSLatency: null; awsSQSMessagesVisible: null; awsSQSMessagesDelayed: null; awsSQSMessagesSent: null; awsSQSMessagesEmpty: null; awsSQSOldestMessage: null; custom: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.InventoryVisTypeRT",
        "type": "Object",
        "tags": [],
        "label": "InventoryVisTypeRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ line: null; area: null; bar: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.ItemTypeRT",
        "type": "Object",
        "tags": [],
        "label": "ItemTypeRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ host: null; pod: null; container: null; awsEC2: null; awsS3: null; awsSQS: null; awsRDS: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.metrics",
        "type": "Object",
        "tags": [],
        "label": "metrics",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.metrics.tsvb",
            "type": "Object",
            "tags": [],
            "label": "tsvb",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "metricsDataAccess",
                "id": "def-common.metrics.tsvb.Unnamed",
                "type": "Any",
                "tags": [],
                "label": "Unnamed",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/metrics.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIColumnRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIColumnRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ name: ",
          "StringC",
          "; type: ",
          "KeyofC",
          "<{ date: null; number: null; string: null; }>; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIColumnTypeRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIColumnTypeRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ date: null; number: null; string: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIMetricRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIMetricRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ id: ",
          "StringC",
          "; aggregations: ",
          "UnknownRecordC",
          "; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIPageInfoRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIPageInfoRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ afterKey: ",
          "UnionC",
          "<[",
          "NullC",
          ", ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>>, ",
          "UndefinedC",
          "]>; }>, ",
          "PartialC",
          "<{ interval: ",
          "NumberC",
          "; }>]>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIRequestRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIRequestRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ timerange: ",
          "TypeC",
          "<{ from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; interval: ",
          "StringC",
          "; }>; indexPattern: ",
          "StringC",
          "; metrics: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; aggregations: ",
          "UnknownRecordC",
          "; }>>; includeTimeseries: ",
          "UnionC",
          "<[",
          "BooleanC",
          ", ",
          "Type",
          "<true, undefined, unknown>]>; }>, ",
          "PartialC",
          "<{ groupBy: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          "]>>; groupInstance: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          "]>>; modules: ",
          "ArrayC",
          "<",
          "StringC",
          ">; afterKey: ",
          "UnionC",
          "<[",
          "NullC",
          ", ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>>]>; limit: ",
          "UnionC",
          "<[",
          "NumberC",
          ", ",
          "NullC",
          "]>; filters: ",
          "ArrayC",
          "<",
          "UnknownRecordC",
          ">; dropPartialBuckets: ",
          "BooleanC",
          "; alignDataToEnd: ",
          "BooleanC",
          "; }>]>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIResponseRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIResponseRT",
        "description": [],
        "signature": [
          "TypeC",
          "<{ series: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; columns: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; type: ",
          "KeyofC",
          "<{ date: null; number: null; string: null; }>; }>>; rows: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ timestamp: ",
          "NumberC",
          "; }>, ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NumberC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          ", ",
          "ArrayC",
          "<",
          "ObjectC",
          ">]>>]>>; }>, ",
          "PartialC",
          "<{ keys: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>, ",
          "PartialC",
          "<{ metricsets: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>>; info: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ afterKey: ",
          "UnionC",
          "<[",
          "NullC",
          ", ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NullC",
          "]>>, ",
          "UndefinedC",
          "]>; }>, ",
          "PartialC",
          "<{ interval: ",
          "NumberC",
          "; }>]>; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIResponseSeriesRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIResponseSeriesRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; columns: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; type: ",
          "KeyofC",
          "<{ date: null; number: null; string: null; }>; }>>; rows: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ timestamp: ",
          "NumberC",
          "; }>, ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NumberC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          ", ",
          "ArrayC",
          "<",
          "ObjectC",
          ">]>>]>>; }>, ",
          "PartialC",
          "<{ keys: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>, ",
          "PartialC",
          "<{ metricsets: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPIRowRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPIRowRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ timestamp: ",
          "NumberC",
          "; }>, ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NumberC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          ", ",
          "ArrayC",
          "<",
          "ObjectC",
          ">]>>]>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.MetricsAPISeriesRT",
        "type": "Object",
        "tags": [],
        "label": "MetricsAPISeriesRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; columns: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; type: ",
          "KeyofC",
          "<{ date: null; number: null; string: null; }>; }>>; rows: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ timestamp: ",
          "NumberC",
          "; }>, ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NumberC",
          ", ",
          "NullC",
          ", ",
          "UndefinedC",
          ", ",
          "ArrayC",
          "<",
          "ObjectC",
          ">]>>]>>; }>, ",
          "PartialC",
          "<{ keys: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/http_api/metrics_api.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.SnapshotMetricTypeKeys",
        "type": "Object",
        "tags": [],
        "label": "SnapshotMetricTypeKeys",
        "description": [],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.count",
            "type": "Uncategorized",
            "tags": [],
            "label": "count",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.cpuV2",
            "type": "Uncategorized",
            "tags": [],
            "label": "cpuV2",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.cpu",
            "type": "Uncategorized",
            "tags": [],
            "label": "cpu",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.diskLatency",
            "type": "Uncategorized",
            "tags": [],
            "label": "diskLatency",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.diskSpaceUsage",
            "type": "Uncategorized",
            "tags": [],
            "label": "diskSpaceUsage",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.load",
            "type": "Uncategorized",
            "tags": [],
            "label": "load",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.memory",
            "type": "Uncategorized",
            "tags": [],
            "label": "memory",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.memoryFree",
            "type": "Uncategorized",
            "tags": [],
            "label": "memoryFree",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.memoryTotal",
            "type": "Uncategorized",
            "tags": [],
            "label": "memoryTotal",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.normalizedLoad1m",
            "type": "Uncategorized",
            "tags": [],
            "label": "normalizedLoad1m",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.tx",
            "type": "Uncategorized",
            "tags": [],
            "label": "tx",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rx",
            "type": "Uncategorized",
            "tags": [],
            "label": "rx",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.txV2",
            "type": "Uncategorized",
            "tags": [],
            "label": "txV2",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rxV2",
            "type": "Uncategorized",
            "tags": [],
            "label": "rxV2",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.logRate",
            "type": "Uncategorized",
            "tags": [],
            "label": "logRate",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.diskIOReadBytes",
            "type": "Uncategorized",
            "tags": [],
            "label": "diskIOReadBytes",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.diskIOWriteBytes",
            "type": "Uncategorized",
            "tags": [],
            "label": "diskIOWriteBytes",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.s3TotalRequests",
            "type": "Uncategorized",
            "tags": [],
            "label": "s3TotalRequests",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.s3NumberOfObjects",
            "type": "Uncategorized",
            "tags": [],
            "label": "s3NumberOfObjects",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.s3BucketSize",
            "type": "Uncategorized",
            "tags": [],
            "label": "s3BucketSize",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.s3DownloadBytes",
            "type": "Uncategorized",
            "tags": [],
            "label": "s3DownloadBytes",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.s3UploadBytes",
            "type": "Uncategorized",
            "tags": [],
            "label": "s3UploadBytes",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rdsConnections",
            "type": "Uncategorized",
            "tags": [],
            "label": "rdsConnections",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rdsQueriesExecuted",
            "type": "Uncategorized",
            "tags": [],
            "label": "rdsQueriesExecuted",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rdsActiveTransactions",
            "type": "Uncategorized",
            "tags": [],
            "label": "rdsActiveTransactions",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.rdsLatency",
            "type": "Uncategorized",
            "tags": [],
            "label": "rdsLatency",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.sqsMessagesVisible",
            "type": "Uncategorized",
            "tags": [],
            "label": "sqsMessagesVisible",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.sqsMessagesDelayed",
            "type": "Uncategorized",
            "tags": [],
            "label": "sqsMessagesDelayed",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.sqsMessagesSent",
            "type": "Uncategorized",
            "tags": [],
            "label": "sqsMessagesSent",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.sqsMessagesEmpty",
            "type": "Uncategorized",
            "tags": [],
            "label": "sqsMessagesEmpty",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.sqsOldestMessage",
            "type": "Uncategorized",
            "tags": [],
            "label": "sqsOldestMessage",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "metricsDataAccess",
            "id": "def-common.SnapshotMetricTypeKeys.custom",
            "type": "Uncategorized",
            "tags": [],
            "label": "custom",
            "description": [],
            "signature": [
              "null"
            ],
            "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "metricsDataAccess",
        "id": "def-common.SnapshotMetricTypeRT",
        "type": "Object",
        "tags": [],
        "label": "SnapshotMetricTypeRT",
        "description": [],
        "signature": [
          "KeyofC",
          "<{ count: null; cpuV2: null; cpu: null; diskLatency: null; diskSpaceUsage: null; load: null; memory: null; memoryFree: null; memoryTotal: null; normalizedLoad1m: null; tx: null; rx: null; txV2: null; rxV2: null; logRate: null; diskIOReadBytes: null; diskIOWriteBytes: null; s3TotalRequests: null; s3NumberOfObjects: null; s3BucketSize: null; s3DownloadBytes: null; s3UploadBytes: null; rdsConnections: null; rdsQueriesExecuted: null; rdsActiveTransactions: null; rdsLatency: null; sqsMessagesVisible: null; sqsMessagesDelayed: null; sqsMessagesSent: null; sqsMessagesEmpty: null; sqsOldestMessage: null; custom: null; }>"
        ],
        "path": "x-pack/solutions/observability/plugins/metrics_data_access/common/inventory_models/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}