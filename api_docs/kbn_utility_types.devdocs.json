{
  "id": "@kbn/utility-types",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.DeepPartialArray",
        "type": "Interface",
        "tags": [],
        "label": "DeepPartialArray",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.DeepPartialArray",
            "text": "DeepPartialArray"
          },
          "<T> extends ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.DeepPartial",
            "text": "DeepPartial"
          },
          "<T>[]"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.JsonArray",
        "type": "Interface",
        "tags": [],
        "label": "JsonArray",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          " extends ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonValue",
            "text": "JsonValue"
          },
          "[]"
        ],
        "path": "packages/kbn-utility-types/src/serializable/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.JsonObject",
        "type": "Interface",
        "tags": [],
        "label": "JsonObject",
        "description": [],
        "path": "packages/kbn-utility-types/src/serializable/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/utility-types",
            "id": "def-common.JsonObject.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[key: string]: JsonValue",
            "description": [],
            "signature": [
              "[key: string]:  ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.JsonValue",
                "text": "JsonValue"
              }
            ],
            "path": "packages/kbn-utility-types/src/serializable/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.ObservableLike",
        "type": "Interface",
        "tags": [],
        "label": "ObservableLike",
        "description": [
          "\nMinimal interface for an object resembling an `Observable`."
        ],
        "signature": [
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.ObservableLike",
            "text": "ObservableLike"
          },
          "<T>"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/utility-types",
            "id": "def-common.ObservableLike.subscribe",
            "type": "Function",
            "tags": [],
            "label": "subscribe",
            "description": [],
            "signature": [
              "(observer: (value: T) => void) => void"
            ],
            "path": "packages/kbn-utility-types/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/utility-types",
                "id": "def-common.ObservableLike.subscribe.$1",
                "type": "Function",
                "tags": [],
                "label": "observer",
                "description": [],
                "signature": [
                  "(value: T) => void"
                ],
                "path": "packages/kbn-utility-types/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.RecursiveReadonlyArray",
        "type": "Interface",
        "tags": [],
        "label": "RecursiveReadonlyArray",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.RecursiveReadonlyArray",
            "text": "RecursiveReadonlyArray"
          },
          "<T> extends readonly ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.RecursiveReadonly",
            "text": "RecursiveReadonly"
          },
          "<T>[]"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.SerializableRecord",
        "type": "Interface",
        "tags": [],
        "label": "SerializableRecord",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " extends Record<string, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.Serializable",
            "text": "Serializable"
          },
          ">"
        ],
        "path": "packages/kbn-utility-types/src/serializable/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.$Values",
        "type": "Type",
        "tags": [
          "desc",
          "see"
        ],
        "label": "$Values",
        "description": [
          "\n$Values"
        ],
        "signature": [
          "T[keyof T]"
        ],
        "path": "node_modules/utility-types/dist/utility-types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.ArrayElement",
        "type": "Type",
        "tags": [],
        "label": "ArrayElement",
        "description": [],
        "signature": [
          "A extends readonly (infer T)[] ? T : never"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Assign",
        "type": "Type",
        "tags": [
          "desc"
        ],
        "label": "Assign",
        "description": [
          "\nAssign"
        ],
        "signature": [
          "{ [P in keyof I]: I[P]; }"
        ],
        "path": "node_modules/utility-types/dist/mapped-types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.AugmentedRequired",
        "type": "Type",
        "tags": [
          "desc"
        ],
        "label": "AugmentedRequired",
        "description": [
          "\nRequired"
        ],
        "signature": [
          "Omit",
          "<T, K> & Required<Pick<T, K>>"
        ],
        "path": "node_modules/utility-types/dist/mapped-types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.AwaitedProperties",
        "type": "Type",
        "tags": [],
        "label": "AwaitedProperties",
        "description": [
          "\nUnwrap all promise attributes of the given type"
        ],
        "signature": [
          "{ [K in keyof T]: Awaited<T[K]>; }"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Class",
        "type": "Type",
        "tags": [
          "desc",
          "see"
        ],
        "label": "Class",
        "description": [
          "\nClass"
        ],
        "signature": [
          "new (...args: any[]) => T"
        ],
        "path": "node_modules/utility-types/dist/utility-types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.DedotObject",
        "type": "Type",
        "tags": [],
        "label": "DedotObject",
        "description": [],
        "signature": [
          "(Exclude<",
          "ValuesType",
          "<{ [TKey in keyof TObject]: {} extends Pick<TObject, TKey> ? ",
          "DeepPartial",
          "<DedotKey<TObject, TKey, Exclude<TObject[TKey], undefined>>> : DedotKey<TObject, TKey, TObject[TKey]>; }>, undefined> extends any ? (k: Exclude<",
          "ValuesType",
          "<{ [TKey in keyof TObject]: {} extends Pick<TObject, TKey> ? ",
          "DeepPartial",
          "<DedotKey<TObject, TKey, Exclude<TObject[TKey], undefined>>> : DedotKey<TObject, TKey, TObject[TKey]>; }>, undefined>) => void : never) extends (k: infer I) => void ? I : never"
        ],
        "path": "packages/kbn-utility-types/src/dot.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.DeepPartial",
        "type": "Type",
        "tags": [],
        "label": "DeepPartial",
        "description": [
          "\nDeep partial version of a type."
        ],
        "signature": [
          "T extends any[] ? ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.DeepPartialArray",
            "text": "DeepPartialArray"
          },
          "<T[number]> : T extends object ? ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.DeepPartialObject",
            "text": "DeepPartialObject"
          },
          "<T> : T"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.DeepPartialObject",
        "type": "Type",
        "tags": [],
        "label": "DeepPartialObject",
        "description": [],
        "signature": [
          "{ [P in keyof T]+?: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.DeepPartial",
            "text": "DeepPartial"
          },
          "<T[P]> | undefined; }"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.DotObject",
        "type": "Type",
        "tags": [],
        "label": "DotObject",
        "description": [],
        "signature": [
          "(",
          "ValuesType",
          "<{ [TKey in keyof TObject & string]: {} extends Pick<TObject, TKey> ? Partial<DotKey<Required<TObject>, TKey, TPrefix>> : DotKey<TObject, TKey, TPrefix>; }> extends any ? (k: ",
          "ValuesType",
          "<{ [TKey in keyof TObject & string]: {} extends Pick<TObject, TKey> ? Partial<DotKey<Required<TObject>, TKey, TPrefix>> : DotKey<TObject, TKey, TPrefix>; }>) => void : never) extends (k: infer I) => void ? I : never"
        ],
        "path": "packages/kbn-utility-types/src/dot.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Ensure",
        "type": "Type",
        "tags": [],
        "label": "Ensure",
        "description": [
          "\nEnsures T is of type X."
        ],
        "signature": [
          "T extends X ? T : never"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.JsonValue",
        "type": "Type",
        "tags": [],
        "label": "JsonValue",
        "description": [],
        "signature": [
          "string | number | boolean | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonObject",
            "text": "JsonObject"
          },
          " | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.JsonArray",
            "text": "JsonArray"
          },
          " | null"
        ],
        "path": "packages/kbn-utility-types/src/serializable/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.MaybePromise",
        "type": "Type",
        "tags": [],
        "label": "MaybePromise",
        "description": [
          "\nA type that may or may not be a `Promise`."
        ],
        "signature": [
          "T | Promise<T>"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.MethodKeysOf",
        "type": "Type",
        "tags": [],
        "label": "MethodKeysOf",
        "description": [
          "\nReturns public method names"
        ],
        "signature": [
          "{ [K in keyof T]: T[K] extends (...args: any[]) => any ? K : never; }[keyof T]"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.OneOf",
        "type": "Type",
        "tags": [],
        "label": "OneOf",
        "description": [
          "\nXOR for some properties applied to a type\n(XOR is one of these but not both or neither)\n\nUsage: OneOf<typeToExtend, one | but | not | multiple | of | these | are | required>\n\nTo require aria-label or aria-labelledby but not both\nExample: OneOf<Type, 'aria-label' | 'aria-labelledby'>"
        ],
        "signature": [
          "Omit<T, K> & { [k in K]: Pick<Required<T>, k> & { [k1 in Exclude<K, k>]?: undefined; }; }[K]"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Optional",
        "type": "Type",
        "tags": [
          "desc"
        ],
        "label": "Optional",
        "description": [
          "\nOptional"
        ],
        "signature": [
          "Omit",
          "<T, K> & Partial<Pick<T, K>>"
        ],
        "path": "node_modules/utility-types/dist/mapped-types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.PublicContract",
        "type": "Type",
        "tags": [],
        "label": "PublicContract",
        "description": [
          "\nReturns an object with public keys only."
        ],
        "signature": [
          "{ [P in keyof T]: T[P]; }"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.PublicKeys",
        "type": "Type",
        "tags": [],
        "label": "PublicKeys",
        "description": [
          "\nReturns public keys of an object."
        ],
        "signature": [
          "keyof T"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.PublicMethodsOf",
        "type": "Type",
        "tags": [],
        "label": "PublicMethodsOf",
        "description": [
          "\n Returns an object with public methods only."
        ],
        "signature": [
          "{ [P in ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.MethodKeysOf",
            "text": "MethodKeysOf"
          },
          "<T>]: T[P]; }"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.RecursiveReadonly",
        "type": "Type",
        "tags": [],
        "label": "RecursiveReadonly",
        "description": [],
        "signature": [
          "T extends (...args: any) => any ? T : T extends any[] ? ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.RecursiveReadonlyArray",
            "text": "RecursiveReadonlyArray"
          },
          "<T[number]> : T extends object ? Readonly<{ [K in keyof T]: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.RecursiveReadonly",
            "text": "RecursiveReadonly"
          },
          "<T[K]>; }> : T"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Serializable",
        "type": "Type",
        "tags": [],
        "label": "Serializable",
        "description": [],
        "signature": [
          "string | number | boolean | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | ",
          "SerializableArray",
          " | null | undefined"
        ],
        "path": "packages/kbn-utility-types/src/serializable/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.ShallowPromise",
        "type": "Type",
        "tags": [],
        "label": "ShallowPromise",
        "description": [
          "\nConverts a type to a `Promise`, unless it is already a `Promise`. Useful when proxying the return value of a possibly async function."
        ],
        "signature": [
          "T extends Promise<infer U> ? Promise<U> : Promise<T>"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.UnionToIntersection",
        "type": "Type",
        "tags": [],
        "label": "UnionToIntersection",
        "description": [
          "\nUtility type for converting a union of types into an intersection.\n\nThis is a bit of \"black magic\" that will interpret a Union type as an Intersection\ntype.  This is necessary in the case of distinguishing one collection from\nanother."
        ],
        "signature": [
          "(U extends any ? (k: U) => void : never) extends (k: infer I) => void ? I : never"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.UnwrapObservable",
        "type": "Type",
        "tags": [],
        "label": "UnwrapObservable",
        "description": [
          "\nReturns wrapped type of an observable."
        ],
        "signature": [
          "T extends ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.ObservableLike",
            "text": "ObservableLike"
          },
          "<infer U> ? U : never"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Values",
        "type": "Type",
        "tags": [],
        "label": "Values",
        "description": [
          "\nReturns types or array or object values."
        ],
        "signature": [
          "T extends any[] ? T[number] : T extends object ? T[keyof T] : never"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/utility-types",
        "id": "def-common.Writable",
        "type": "Type",
        "tags": [],
        "label": "Writable",
        "description": [
          "\n Makes an object with readonly properties mutable."
        ],
        "signature": [
          "{ -readonly [K in keyof T]: T[K]; }"
        ],
        "path": "packages/kbn-utility-types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}