{
  "id": "visDefaultEditor",
  "client": {
    "classes": [
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.DefaultEditorController",
        "type": "Class",
        "tags": [],
        "label": "DefaultEditorController",
        "description": [],
        "signature": [
          {
            "pluginId": "visDefaultEditor",
            "scope": "public",
            "docId": "kibVisDefaultEditorPluginApi",
            "section": "def-public.DefaultEditorController",
            "text": "DefaultEditorController"
          },
          " implements ",
          {
            "pluginId": "visualize",
            "scope": "public",
            "docId": "kibVisualizePluginApi",
            "section": "def-public.IEditorController",
            "text": "IEditorController"
          }
        ],
        "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.DefaultEditorController.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "visDefaultEditor",
                "id": "def-public.DefaultEditorController.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "el",
                "description": [],
                "signature": [
                  "HTMLElement"
                ],
                "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "visDefaultEditor",
                "id": "def-public.DefaultEditorController.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "vis",
                "description": [],
                "signature": [
                  {
                    "pluginId": "visualizations",
                    "scope": "public",
                    "docId": "kibVisualizationsPluginApi",
                    "section": "def-public.Vis",
                    "text": "Vis"
                  },
                  "<",
                  {
                    "pluginId": "visualizations",
                    "scope": "common",
                    "docId": "kibVisualizationsPluginApi",
                    "section": "def-common.VisParams",
                    "text": "VisParams"
                  },
                  ">"
                ],
                "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "visDefaultEditor",
                "id": "def-public.DefaultEditorController.Unnamed.$3",
                "type": "Object",
                "tags": [],
                "label": "eventEmitter",
                "description": [],
                "signature": [
                  "EventEmitter"
                ],
                "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "visDefaultEditor",
                "id": "def-public.DefaultEditorController.Unnamed.$4",
                "type": "Object",
                "tags": [],
                "label": "embeddableHandler",
                "description": [],
                "signature": [
                  "Pick<",
                  "VisualizeEmbeddable",
                  ", \"type\" | \"destroy\" | \"parent\" | \"id\" | \"getDescription\" | \"render\" | \"getInspectorAdapters\" | \"openInspector\" | \"transferCustomizationsToUiState\" | \"hasInspector\" | \"onContainerLoading\" | \"onContainerRender\" | \"onContainerError\" | \"reload\" | \"supportedTriggers\" | \"inputIsRefType\" | \"getInputAsValueType\" | \"getInputAsRefType\" | \"runtimeId\" | \"isContainer\" | \"deferEmbeddableLoad\" | \"fatalError\" | \"getIsContainer\" | \"getUpdated$\" | \"getInput$\" | \"getOutput$\" | \"getOutput\" | \"getInput\" | \"getTitle\" | \"getRoot\" | \"updateInput\">"
                ],
                "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.DefaultEditorController.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "(props: ",
              {
                "pluginId": "visualize",
                "scope": "public",
                "docId": "kibVisualizePluginApi",
                "section": "def-public.EditorRenderProps",
                "text": "EditorRenderProps"
              },
              ") => void"
            ],
            "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "visDefaultEditor",
                "id": "def-public.DefaultEditorController.render.$1",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  {
                    "pluginId": "visualize",
                    "scope": "public",
                    "docId": "kibVisualizePluginApi",
                    "section": "def-public.EditorRenderProps",
                    "text": "EditorRenderProps"
                  }
                ],
                "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.DefaultEditorController.destroy",
            "type": "Function",
            "tags": [],
            "label": "destroy",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/vis_default_editor/public/default_editor_controller.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.BasicOptions",
        "type": "Function",
        "tags": [],
        "label": "BasicOptions",
        "description": [],
        "signature": [
          "({\n  stateParams,\n  setValue,\n  legendPositions,\n}: ",
          {
            "pluginId": "visualizations",
            "scope": "public",
            "docId": "kibVisualizationsPluginApi",
            "section": "def-public.VisEditorOptionsProps",
            "text": "VisEditorOptionsProps"
          },
          "<VisParams> & { legendPositions: LegendPositions; }) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/basic_options.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.BasicOptions.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  stateParams,\n  setValue,\n  legendPositions,\n}",
            "description": [],
            "signature": [
              {
                "pluginId": "visualizations",
                "scope": "public",
                "docId": "kibVisualizationsPluginApi",
                "section": "def-public.VisEditorOptionsProps",
                "text": "VisEditorOptionsProps"
              },
              "<VisParams> & { legendPositions: LegendPositions; }"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/basic_options.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.ColorRanges",
        "type": "Function",
        "tags": [],
        "label": "ColorRanges",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj,\n  colorsRange,\n  setValue,\n  setValidity,\n  setTouched,\n}: ColorRangesProps) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/color_ranges.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.ColorRanges.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj,\n  colorsRange,\n  setValue,\n  setValidity,\n  setTouched,\n}",
            "description": [],
            "signature": [
              "ColorRangesProps"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/color_ranges.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.ColorSchemaOptions",
        "type": "Function",
        "tags": [],
        "label": "ColorSchemaOptions",
        "description": [],
        "signature": [
          "({\n  disabled,\n  colorSchema,\n  colorSchemas,\n  invertColors,\n  uiState,\n  setValue,\n  showHelpText = true,\n}: ColorSchemaOptionsProps) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/color_schema.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.ColorSchemaOptions.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  disabled,\n  colorSchema,\n  colorSchemas,\n  invertColors,\n  uiState,\n  setValue,\n  showHelpText = true,\n}",
            "description": [],
            "signature": [
              "ColorSchemaOptionsProps"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/color_schema.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.getInitialWidth",
        "type": "Function",
        "tags": [],
        "label": "getInitialWidth",
        "description": [],
        "signature": [
          "(size: ",
          {
            "pluginId": "visDefaultEditor",
            "scope": "public",
            "docId": "kibVisDefaultEditorPluginApi",
            "section": "def-public.DefaultEditorSize",
            "text": "DefaultEditorSize"
          },
          ") => 15 | 30 | 50"
        ],
        "path": "src/plugins/vis_default_editor/public/editor_size.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.getInitialWidth.$1",
            "type": "Enum",
            "tags": [],
            "label": "size",
            "description": [],
            "signature": [
              {
                "pluginId": "visDefaultEditor",
                "scope": "public",
                "docId": "kibVisDefaultEditorPluginApi",
                "section": "def-public.DefaultEditorSize",
                "text": "DefaultEditorSize"
              }
            ],
            "path": "src/plugins/vis_default_editor/public/editor_size.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.groupAndSortBy",
        "type": "Function",
        "tags": [],
        "label": "groupAndSortBy",
        "description": [
          "\nGroups and sorts alphabetically objects and returns an array of options that are compatible with EuiComboBox options.\n"
        ],
        "signature": [
          "(objects: T[], groupBy: TGroupBy, labelName: TLabelName, keyName: TKeyName | undefined) => ",
          {
            "pluginId": "visDefaultEditor",
            "scope": "public",
            "docId": "kibVisDefaultEditorPluginApi",
            "section": "def-public.ComboBoxGroupedOptions",
            "text": "ComboBoxGroupedOptions"
          },
          "<T>"
        ],
        "path": "src/plugins/vis_default_editor/public/utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.groupAndSortBy.$1",
            "type": "Array",
            "tags": [],
            "label": "objects",
            "description": [
              "An array of objects that will be grouped."
            ],
            "signature": [
              "T[]"
            ],
            "path": "src/plugins/vis_default_editor/public/utils.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.groupAndSortBy.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "groupBy",
            "description": [
              "A field name which objects are grouped by."
            ],
            "signature": [
              "TGroupBy"
            ],
            "path": "src/plugins/vis_default_editor/public/utils.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.groupAndSortBy.$3",
            "type": "Uncategorized",
            "tags": [],
            "label": "labelName",
            "description": [
              "A name of a property which value will be displayed."
            ],
            "signature": [
              "TLabelName"
            ],
            "path": "src/plugins/vis_default_editor/public/utils.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.groupAndSortBy.$4",
            "type": "Uncategorized",
            "tags": [],
            "label": "keyName",
            "description": [],
            "signature": [
              "TKeyName | undefined"
            ],
            "path": "src/plugins/vis_default_editor/public/utils.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "An array of grouped and sorted alphabetically `objects` that are compatible with EuiComboBox options."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.LongLegendOptions",
        "type": "Function",
        "tags": [],
        "label": "LongLegendOptions",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj,\n  setValue,\n  truncateLegend,\n  maxLegendLines,\n}: ",
          "LongLegendOptionsProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/long_legend_options.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.LongLegendOptions.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj,\n  setValue,\n  truncateLegend,\n  maxLegendLines,\n}",
            "description": [],
            "signature": [
              "LongLegendOptionsProps"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/long_legend_options.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.NumberInputOption",
        "type": "Function",
        "tags": [],
        "label": "NumberInputOption",
        "description": [
          "\nDo not use this component anymore.\nPlease, use NumberInputOption in 'required_number_input.tsx'.\nIt is required for compatibility with TS 3.7.0\nThis should be removed in the future"
        ],
        "signature": [
          "({\n  disabled,\n  error,\n  isInvalid,\n  label,\n  max,\n  min,\n  paramName,\n  step,\n  value = '',\n  setValue,\n  'data-test-subj': dataTestSubj,\n}: NumberInputOptionProps<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/number_input.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.NumberInputOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  disabled,\n  error,\n  isInvalid,\n  label,\n  max,\n  min,\n  paramName,\n  step,\n  value = '',\n  setValue,\n  'data-test-subj': dataTestSubj,\n}",
            "description": [],
            "signature": [
              "NumberInputOptionProps<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/number_input.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.PalettePicker",
        "type": "Function",
        "tags": [],
        "label": "PalettePicker",
        "description": [],
        "signature": [
          "({\n  activePalette,\n  palettes,\n  paramName,\n  setPalette,\n}: ",
          "PalettePickerProps",
          "<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/controls/palette_picker.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.PalettePicker.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  activePalette,\n  palettes,\n  paramName,\n  setPalette,\n}",
            "description": [],
            "signature": [
              "PalettePickerProps",
              "<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/palette_picker.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.PercentageModeOption",
        "type": "Function",
        "tags": [],
        "label": "PercentageModeOption",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj,\n  setValue,\n  percentageMode,\n  formatPattern,\n}: ",
          "PercentageModeOptionProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/percentage_mode.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.PercentageModeOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj,\n  setValue,\n  percentageMode,\n  formatPattern,\n}",
            "description": [],
            "signature": [
              "PercentageModeOptionProps"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/percentage_mode.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.RangeOption",
        "type": "Function",
        "tags": [],
        "label": "RangeOption",
        "description": [],
        "signature": [
          "({\n  label,\n  max,\n  min,\n  showInput,\n  showLabels,\n  showValue = true,\n  step,\n  paramName,\n  value,\n  setValue,\n}: RangeOptionProps<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/range.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RangeOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  label,\n  max,\n  min,\n  showInput,\n  showLabels,\n  showValue = true,\n  step,\n  paramName,\n  value,\n  setValue,\n}",
            "description": [],
            "signature": [
              "RangeOptionProps<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/range.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.RangesParamEditor",
        "type": "Function",
        "tags": [],
        "label": "RangesParamEditor",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj = 'range',\n  addRangeValues,\n  error,\n  value = [],\n  hidePlaceholders,\n  setValue,\n  setTouched,\n  setValidity,\n  validateRange,\n}: RangesParamEditorProps) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RangesParamEditor.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj = 'range',\n  addRangeValues,\n  error,\n  value = [],\n  hidePlaceholders,\n  setValue,\n  setTouched,\n  setValidity,\n  validateRange,\n}",
            "description": [],
            "signature": [
              "RangesParamEditorProps"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.RequiredNumberInputOption",
        "type": "Function",
        "tags": [],
        "label": "RequiredNumberInputOption",
        "description": [
          "\nUse only this component instead of NumberInputOption in 'number_input.tsx'.\nIt is required for compatibility with TS 3.7.0\n"
        ],
        "signature": [
          "({\n  disabled,\n  error,\n  isInvalid,\n  label,\n  max,\n  min,\n  paramName,\n  step,\n  value,\n  setValue,\n  setValidity,\n  'data-test-subj': dataTestSubj,\n}: NumberInputOptionProps<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/required_number_input.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RequiredNumberInputOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  disabled,\n  error,\n  isInvalid,\n  label,\n  max,\n  min,\n  paramName,\n  step,\n  value,\n  setValue,\n  setValidity,\n  'data-test-subj': dataTestSubj,\n}",
            "description": [],
            "signature": [
              "NumberInputOptionProps<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/required_number_input.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.SelectOption",
        "type": "Function",
        "tags": [],
        "label": "SelectOption",
        "description": [],
        "signature": [
          "({\n  disabled,\n  helpText,\n  id,\n  label,\n  labelAppend,\n  options,\n  paramName,\n  value,\n  setValue,\n  'data-test-subj': dataTestSubj,\n}: SelectOptionProps<ParamName, ValidParamValues>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/select.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SelectOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  disabled,\n  helpText,\n  id,\n  label,\n  labelAppend,\n  options,\n  paramName,\n  value,\n  setValue,\n  'data-test-subj': dataTestSubj,\n}",
            "description": [],
            "signature": [
              "SelectOptionProps<ParamName, ValidParamValues>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/select.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.SwitchOption",
        "type": "Function",
        "tags": [],
        "label": "SwitchOption",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj,\n  tooltip,\n  label,\n  disabled,\n  paramName,\n  value = false,\n  setValue,\n}: SwitchOptionProps<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/switch.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SwitchOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj,\n  tooltip,\n  label,\n  disabled,\n  paramName,\n  value = false,\n  setValue,\n}",
            "description": [],
            "signature": [
              "SwitchOptionProps<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/switch.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.TextInputOption",
        "type": "Function",
        "tags": [],
        "label": "TextInputOption",
        "description": [],
        "signature": [
          "({\n  'data-test-subj': dataTestSubj,\n  disabled,\n  helpText,\n  label,\n  paramName,\n  value = '',\n  setValue,\n}: TextInputOptionProps<ParamName>) => JSX.Element"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/text_input.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.TextInputOption.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  'data-test-subj': dataTestSubj,\n  disabled,\n  helpText,\n  label,\n  paramName,\n  value = '',\n  setValue,\n}",
            "description": [],
            "signature": [
              "TextInputOptionProps<ParamName>"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/text_input.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.useValidation",
        "type": "Function",
        "tags": [],
        "label": "useValidation",
        "description": [
          "\nthe effect is used to set up the editor form validity\nand reset it if a param has been removed"
        ],
        "signature": [
          "(setValidity: (isValid: boolean) => void, isValid: boolean) => void"
        ],
        "path": "src/plugins/vis_default_editor/public/components/controls/utils/agg_utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.useValidation.$1",
            "type": "Function",
            "tags": [],
            "label": "setValidity",
            "description": [],
            "signature": [
              "(isValid: boolean) => void"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/utils/agg_utils.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.useValidation.$2",
            "type": "boolean",
            "tags": [],
            "label": "isValid",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/utils/agg_utils.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.RangeValues",
        "type": "Interface",
        "tags": [],
        "label": "RangeValues",
        "description": [],
        "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RangeValues.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"range\" | undefined"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RangeValues.from",
            "type": "number",
            "tags": [],
            "label": "from",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.RangeValues.to",
            "type": "number",
            "tags": [],
            "label": "to",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/vis_default_editor/public/components/controls/ranges.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.DefaultEditorSize",
        "type": "Enum",
        "tags": [],
        "label": "DefaultEditorSize",
        "description": [],
        "path": "src/plugins/vis_default_editor/public/editor_size.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.ComboBoxGroupedOptions",
        "type": "Type",
        "tags": [],
        "label": "ComboBoxGroupedOptions",
        "description": [],
        "signature": [
          "GroupOrOption<T>[]"
        ],
        "path": "src/plugins/vis_default_editor/public/utils.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.SetColorRangeValue",
        "type": "Type",
        "tags": [],
        "label": "SetColorRangeValue",
        "description": [],
        "signature": [
          "(paramName: string, value: ",
          {
            "pluginId": "visDefaultEditor",
            "scope": "public",
            "docId": "kibVisDefaultEditorPluginApi",
            "section": "def-public.RangeValues",
            "text": "RangeValues"
          },
          "[]) => void"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/color_ranges.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SetColorRangeValue.$1",
            "type": "string",
            "tags": [],
            "label": "paramName",
            "description": [],
            "path": "src/plugins/vis_default_editor/public/components/options/color_ranges.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SetColorRangeValue.$2",
            "type": "Array",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              {
                "pluginId": "visDefaultEditor",
                "scope": "public",
                "docId": "kibVisDefaultEditorPluginApi",
                "section": "def-public.RangeValues",
                "text": "RangeValues"
              },
              "[]"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/color_ranges.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "visDefaultEditor",
        "id": "def-public.SetColorSchemaOptionsValue",
        "type": "Type",
        "tags": [],
        "label": "SetColorSchemaOptionsValue",
        "description": [],
        "signature": [
          "<T extends \"colorSchema\" | \"invertColors\">(paramName: T, value: ",
          {
            "pluginId": "charts",
            "scope": "common",
            "docId": "kibChartsPluginApi",
            "section": "def-common.ColorSchemaParams",
            "text": "ColorSchemaParams"
          },
          "[T]) => void"
        ],
        "path": "src/plugins/vis_default_editor/public/components/options/color_schema.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SetColorSchemaOptionsValue.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "paramName",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/color_schema.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "visDefaultEditor",
            "id": "def-public.SetColorSchemaOptionsValue.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              {
                "pluginId": "charts",
                "scope": "common",
                "docId": "kibChartsPluginApi",
                "section": "def-common.ColorSchemaParams",
                "text": "ColorSchemaParams"
              },
              "[T]"
            ],
            "path": "src/plugins/vis_default_editor/public/components/options/color_schema.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}