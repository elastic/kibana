{
  "id": "observabilityAIAssistant",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.KnowledgeBaseEntry",
        "type": "Interface",
        "tags": [],
        "label": "KnowledgeBaseEntry",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.doc_id",
            "type": "string",
            "tags": [],
            "label": "doc_id",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.confidence",
            "type": "CompoundType",
            "tags": [],
            "label": "confidence",
            "description": [],
            "signature": [
              "\"medium\" | \"high\" | \"low\""
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.is_correction",
            "type": "boolean",
            "tags": [],
            "label": "is_correction",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "Record<string, string> | undefined"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.role",
            "type": "Enum",
            "tags": [],
            "label": "role",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntryRole",
                "text": "KnowledgeBaseEntryRole"
              }
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantService",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityAIAssistantService",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.isEnabled",
            "type": "Function",
            "tags": [],
            "label": "isEnabled",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.callApi",
            "type": "Function",
            "tags": [],
            "label": "callApi",
            "description": [],
            "signature": [
              "<TEndpoint extends \"POST /internal/observability_ai_assistant/chat\" | \"POST /internal/observability_ai_assistant/chat/complete\" | \"GET /internal/observability_ai_assistant/conversation/{conversationId}\" | \"POST /internal/observability_ai_assistant/conversations\" | \"POST /internal/observability_ai_assistant/conversation\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\" | \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\" | \"GET /internal/observability_ai_assistant/connectors\" | \"GET /internal/observability_ai_assistant/functions\" | \"POST /internal/observability_ai_assistant/functions/recall\" | \"POST /internal/observability_ai_assistant/functions/summarize\" | \"POST /internal/observability_ai_assistant/kb/setup\" | \"GET /internal/observability_ai_assistant/kb/status\" | \"GET /internal/observability_ai_assistant/kb/entries\" | \"POST /internal/observability_ai_assistant/kb/entries/import\" | \"POST /internal/observability_ai_assistant/kb/entries/save\" | \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\">(endpoint: TEndpoint, ...args: MaybeOptionalArgs<",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "common",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-common.ClientRequestParamsOf",
                "text": "ClientRequestParamsOf"
              },
              "<{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ entryId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>, ",
              "PartialC",
              "<{ confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; role: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"assistant_summarization\">, ",
              "LiteralC",
              "<\"user_entry\">, ",
              "LiteralC",
              "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ entries: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { entries: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }[]; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
              "TypeC",
              "<{ query: ",
              "TypeC",
              "<{ query: ",
              "StringC",
              "; sortBy: ",
              "StringC",
              "; sortDirection: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"asc\">, ",
              "LiteralC",
              "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntry",
                "text": "KnowledgeBaseEntry"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
              "MlDeploymentState",
              " | undefined; allocation_state?: ",
              "MlDeploymentAllocationState",
              " | undefined; model_name?: string | undefined; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{}>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ queries: ",
              "ArrayC",
              "<",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">>; }>, ",
              "PartialC",
              "<{ categories: ",
              "ArrayC",
              "<",
              "StringC",
              ">; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { queries: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
              "RecalledEntry",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ functionDefinitions: ",
              "FunctionDefinition",
              "<",
              "CompatibleJSONSchema",
              ">[]; contextDefinitions: ",
              "ContextDefinition",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.ConnectorWithExtraFindData",
                "text": "ConnectorWithExtraFindData"
              },
              "[]>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ title: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationUpdateRequest",
              ", ",
              "ConversationUpdateRequest",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { conversation: ",
              "ConversationUpdateRequest",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationRequestBase",
              ", ",
              "ConversationRequestBase",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { conversation: ",
              "ConversationRequestBase",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ query: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; }; }; }) => Promise<",
              "Readable",
              " | ",
              "ChatCompletion",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; functions: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; parameters: ",
              "AnyC",
              "; }>>; }>, ",
              "PartialC",
              "<{ functionCall: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { name: string; messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; }, TEndpoint> & Omit<FetchOptions, \"query\" | \"body\" | \"signal\" | \"pathname\"> & { signal: AbortSignal | null; }>) => Promise<",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "common",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-common.ReturnOf",
                "text": "ReturnOf"
              },
              "<{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ entryId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>, ",
              "PartialC",
              "<{ confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; role: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"assistant_summarization\">, ",
              "LiteralC",
              "<\"user_entry\">, ",
              "LiteralC",
              "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ entries: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { entries: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }[]; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
              "TypeC",
              "<{ query: ",
              "TypeC",
              "<{ query: ",
              "StringC",
              "; sortBy: ",
              "StringC",
              "; sortDirection: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"asc\">, ",
              "LiteralC",
              "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntry",
                "text": "KnowledgeBaseEntry"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
              "MlDeploymentState",
              " | undefined; allocation_state?: ",
              "MlDeploymentAllocationState",
              " | undefined; model_name?: string | undefined; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{}>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ queries: ",
              "ArrayC",
              "<",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">>; }>, ",
              "PartialC",
              "<{ categories: ",
              "ArrayC",
              "<",
              "StringC",
              ">; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { queries: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
              "RecalledEntry",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ functionDefinitions: ",
              "FunctionDefinition",
              "<",
              "CompatibleJSONSchema",
              ">[]; contextDefinitions: ",
              "ContextDefinition",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.ConnectorWithExtraFindData",
                "text": "ConnectorWithExtraFindData"
              },
              "[]>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ title: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationUpdateRequest",
              ", ",
              "ConversationUpdateRequest",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { conversation: ",
              "ConversationUpdateRequest",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationRequestBase",
              ", ",
              "ConversationRequestBase",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { conversation: ",
              "ConversationRequestBase",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ query: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; }; }; }) => Promise<",
              "Readable",
              " | ",
              "ChatCompletion",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; functions: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; parameters: ",
              "AnyC",
              "; }>>; }>, ",
              "PartialC",
              "<{ functionCall: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { name: string; messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; }, TEndpoint>>"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.callApi.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "endpoint",
                "description": [],
                "signature": [
                  "TEndpoint"
                ],
                "path": "packages/kbn-server-route-repository/src/typings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.callApi.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "RequiredKeys",
                  "<",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions> extends never ? [] | [",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions] : [",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions]"
                ],
                "path": "packages/kbn-server-route-repository/src/typings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.getCurrentUser",
            "type": "Function",
            "tags": [],
            "label": "getCurrentUser",
            "description": [],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/security-plugin-types-common",
                "scope": "common",
                "docId": "kibKbnSecurityPluginTypesCommonPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.getLicense",
            "type": "Function",
            "tags": [],
            "label": "getLicense",
            "description": [],
            "signature": [
              "() => ",
              "Observable",
              "<",
              "ILicense",
              ">"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.getLicenseManagementLocator",
            "type": "Function",
            "tags": [],
            "label": "getLicenseManagementLocator",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.SharePublicStart",
                "text": "SharePublicStart"
              }
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; }) => Promise<",
              "ObservabilityAIAssistantChatService",
              ">"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{}",
                "description": [],
                "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantService.start.$1.signal",
                    "type": "Object",
                    "tags": [],
                    "label": "signal",
                    "description": [],
                    "signature": [
                      "AbortSignal"
                    ],
                    "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.register",
            "type": "Function",
            "tags": [],
            "label": "register",
            "description": [],
            "signature": [
              "(fn: ",
              "ChatRegistrationRenderFunction",
              ") => void"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.register.$1",
                "type": "Function",
                "tags": [],
                "label": "fn",
                "description": [],
                "signature": [
                  "ChatRegistrationRenderFunction"
                ],
                "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.KnowledgeBaseEntryRole",
        "type": "Enum",
        "tags": [],
        "label": "KnowledgeBaseEntryRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.APIReturnType",
        "type": "Type",
        "tags": [],
        "label": "APIReturnType",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          "FunctionDefinition",
          "<",
          "CompatibleJSONSchema",
          ">[]; contextDefinitions: ",
          "ContextDefinition",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; }; }; }) => Promise<",
          "Readable",
          " | ",
          "ChatCompletion",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: any; handler: ({}: any) => Promise<infer TReturnType>; } & ",
          "ServerRouteCreateOptions",
          " ? TReturnType : never"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIClientRequestParamsOf",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIClientRequestParamsOf",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          "FunctionDefinition",
          "<",
          "CompatibleJSONSchema",
          ">[]; contextDefinitions: ",
          "ContextDefinition",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; }; }; }) => Promise<",
          "Readable",
          " | ",
          "ChatCompletion",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: infer TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined | undefined; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          " ? TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? ClientRequestParamsOfType<TRouteParamsRT> : {} : never"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIEndpoint",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIEndpoint",
        "description": [],
        "signature": [
          "\"POST /internal/observability_ai_assistant/chat\" | \"POST /internal/observability_ai_assistant/chat/complete\" | \"GET /internal/observability_ai_assistant/conversation/{conversationId}\" | \"POST /internal/observability_ai_assistant/conversations\" | \"POST /internal/observability_ai_assistant/conversation\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\" | \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\" | \"GET /internal/observability_ai_assistant/connectors\" | \"GET /internal/observability_ai_assistant/functions\" | \"POST /internal/observability_ai_assistant/functions/recall\" | \"POST /internal/observability_ai_assistant/functions/summarize\" | \"POST /internal/observability_ai_assistant/kb/setup\" | \"GET /internal/observability_ai_assistant/kb/status\" | \"GET /internal/observability_ai_assistant/kb/entries\" | \"POST /internal/observability_ai_assistant/kb/entries/import\" | \"POST /internal/observability_ai_assistant/kb/entries/save\" | \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\""
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginSetup",
      "description": [],
      "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginStart",
      "description": [],
      "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPluginStart.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [],
          "signature": [
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "public",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-public.ObservabilityAIAssistantService",
              "text": "ObservabilityAIAssistantService"
            }
          ],
          "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPluginStart.ObservabilityAIAssistantContextualInsight",
          "type": "CompoundType",
          "tags": [],
          "label": "ObservabilityAIAssistantContextualInsight",
          "description": [],
          "signature": [
            "React.ForwardRefExoticComponent<",
            "InsightProps",
            "> | null"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPluginStart.ObservabilityAIAssistantActionMenuItem",
          "type": "CompoundType",
          "tags": [],
          "label": "ObservabilityAIAssistantActionMenuItem",
          "description": [],
          "signature": [
            "React.ForwardRefExoticComponent<Pick<React.RefAttributes<{}> & ",
            {
              "pluginId": "@kbn/shared-ux-utility",
              "scope": "common",
              "docId": "kibKbnSharedUxUtilityPluginApi",
              "section": "def-common.WithSuspenseExtendedDeps",
              "text": "WithSuspenseExtendedDeps"
            },
            ", \"key\" | \"css\" | \"analytics\"> & React.RefAttributes<{}>> | null"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPluginStart.useGenAIConnectors",
          "type": "Function",
          "tags": [],
          "label": "useGenAIConnectors",
          "description": [],
          "signature": [
            "() => ",
            "UseGenAIConnectorsResult"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.ObservabilityAIAssistantServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantServerRouteRepository",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          "FunctionDefinition",
          "<",
          "CompatibleJSONSchema",
          ">[]; contextDefinitions: ",
          "ContextDefinition",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; }; }; }) => Promise<",
          "Readable",
          " | ",
          "ChatCompletion",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/server/routes/get_global_observability_ai_assistant_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-server.ObservabilityAIAssistantPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginStart",
      "description": [],
      "path": "x-pack/plugins/observability_ai_assistant/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-server.ObservabilityAIAssistantPluginStart.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [
            "\nReturns a Observability AI Assistant service instance"
          ],
          "signature": [
            "ObservabilityAIAssistantService"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    },
    "setup": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-server.ObservabilityAIAssistantPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginSetup",
      "description": [],
      "path": "x-pack/plugins/observability_ai_assistant/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-server.ObservabilityAIAssistantPluginSetup.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [
            "\nReturns a Observability AI Assistant service instance"
          ],
          "signature": [
            "ObservabilityAIAssistantService"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.KnowledgeBaseEntry",
        "type": "Interface",
        "tags": [],
        "label": "KnowledgeBaseEntry",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.doc_id",
            "type": "string",
            "tags": [],
            "label": "doc_id",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.confidence",
            "type": "CompoundType",
            "tags": [],
            "label": "confidence",
            "description": [],
            "signature": [
              "\"medium\" | \"high\" | \"low\""
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.is_correction",
            "type": "boolean",
            "tags": [],
            "label": "is_correction",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "Record<string, string> | undefined"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.role",
            "type": "Enum",
            "tags": [],
            "label": "role",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntryRole",
                "text": "KnowledgeBaseEntryRole"
              }
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.KnowledgeBaseEntryRole",
        "type": "Enum",
        "tags": [],
        "label": "KnowledgeBaseEntryRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [],
    "objects": []
  }
}