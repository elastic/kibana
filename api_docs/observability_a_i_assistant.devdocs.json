{
  "id": "observabilityAIAssistant",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.AssistantAvatar",
        "type": "Function",
        "tags": [],
        "label": "AssistantAvatar",
        "description": [],
        "signature": [
          "({ size = 's', css }: ",
          "AssistantAvatarProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/assistant_avatar.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.AssistantAvatar.$1",
            "type": "Object",
            "tags": [],
            "label": "{ size = 's', css }",
            "description": [],
            "signature": [
              "AssistantAvatarProps"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/assistant_avatar.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ChatItemControls",
        "type": "Function",
        "tags": [],
        "label": "ChatItemControls",
        "description": [],
        "signature": [
          "({\n  error,\n  loading,\n  canRegenerate,\n  canGiveFeedback,\n  onFeedbackClick,\n  onRegenerateClick,\n  onStopGeneratingClick,\n}: { error: any; loading: boolean; canRegenerate: boolean; canGiveFeedback: boolean; onFeedbackClick: (feedback: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.Feedback",
            "text": "Feedback"
          },
          ") => void; onRegenerateClick: () => void; onStopGeneratingClick: () => void; }) => JSX.Element | null"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ChatItemControls.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  error,\n  loading,\n  canRegenerate,\n  canGiveFeedback,\n  onFeedbackClick,\n  onRegenerateClick,\n  onStopGeneratingClick,\n}",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.error",
                "type": "Any",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.loading",
                "type": "boolean",
                "tags": [],
                "label": "loading",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.canRegenerate",
                "type": "boolean",
                "tags": [],
                "label": "canRegenerate",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.canGiveFeedback",
                "type": "boolean",
                "tags": [],
                "label": "canGiveFeedback",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.onFeedbackClick",
                "type": "Function",
                "tags": [],
                "label": "onFeedbackClick",
                "description": [],
                "signature": [
                  "(feedback: ",
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "public",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-public.Feedback",
                    "text": "Feedback"
                  },
                  ") => void"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ChatItemControls.$1.onFeedbackClick.$1",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "feedback",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "observabilityAIAssistant",
                        "scope": "public",
                        "docId": "kibObservabilityAIAssistantPluginApi",
                        "section": "def-public.Feedback",
                        "text": "Feedback"
                      }
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                    "deprecated": false,
                    "trackAdoption": false,
                    "isRequired": true
                  }
                ],
                "returnComment": []
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.onRegenerateClick",
                "type": "Function",
                "tags": [],
                "label": "onRegenerateClick",
                "description": [],
                "signature": [
                  "() => void"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ChatItemControls.$1.onStopGeneratingClick",
                "type": "Function",
                "tags": [],
                "label": "onStopGeneratingClick",
                "description": [],
                "signature": [
                  "() => void"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/chat_item_controls.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ConnectorSelectorBase",
        "type": "Function",
        "tags": [],
        "label": "ConnectorSelectorBase",
        "description": [],
        "signature": [
          "(props: ",
          "UseGenAIConnectorsResult",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/connector_selector/connector_selector_base.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ConnectorSelectorBase.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "UseGenAIConnectorsResult"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/connector_selector/connector_selector_base.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.createFunctionRequestMessage",
        "type": "Function",
        "tags": [],
        "label": "createFunctionRequestMessage",
        "description": [],
        "signature": [
          "({\n  name,\n  args,\n}: { name: string; args?: Record<string, any> | undefined; }) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.MessageAddEvent",
            "text": "MessageAddEvent"
          }
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_request_message.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.createFunctionRequestMessage.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  name,\n  args,\n}",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_request_message.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.createFunctionRequestMessage.$1.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_request_message.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.createFunctionRequestMessage.$1.args",
                "type": "Object",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "Record<string, any> | undefined"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_request_message.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.createFunctionResponseMessage",
        "type": "Function",
        "tags": [],
        "label": "createFunctionResponseMessage",
        "description": [],
        "signature": [
          "({\n  name,\n  content,\n  data,\n}: { name: string; content: unknown; data?: unknown; }) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.MessageAddEvent",
            "text": "MessageAddEvent"
          }
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_response_message.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.createFunctionResponseMessage.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  name,\n  content,\n  data,\n}",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_response_message.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.createFunctionResponseMessage.$1.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_response_message.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.createFunctionResponseMessage.$1.content",
                "type": "Unknown",
                "tags": [],
                "label": "content",
                "description": [],
                "signature": [
                  "unknown"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_response_message.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.createFunctionResponseMessage.$1.data",
                "type": "Unknown",
                "tags": [],
                "label": "data",
                "description": [],
                "signature": [
                  "unknown"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/create_function_response_message.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.createScreenContextAction",
        "type": "Function",
        "tags": [],
        "label": "createScreenContextAction",
        "description": [],
        "signature": [
          "(definition: TActionDefinition, respond: ",
          "ScreenContextActionRespondFunction",
          "<TResponse>) => ",
          "ScreenContextActionDefinition",
          "<TResponse>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/utils/create_screen_context_action.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.createScreenContextAction.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "definition",
            "description": [],
            "signature": [
              "TActionDefinition"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/utils/create_screen_context_action.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.createScreenContextAction.$2",
            "type": "Function",
            "tags": [],
            "label": "respond",
            "description": [],
            "signature": [
              "ScreenContextActionRespondFunction",
              "<TResponse>"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/utils/create_screen_context_action.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.createStorybookChatService",
        "type": "Function",
        "tags": [],
        "label": "createStorybookChatService",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantChatService",
            "text": "ObservabilityAIAssistantChatService"
          }
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/storybook_mock.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.createStorybookService",
        "type": "Function",
        "tags": [],
        "label": "createStorybookService",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantService",
            "text": "ObservabilityAIAssistantService"
          }
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/storybook_mock.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.FailedToLoadResponse",
        "type": "Function",
        "tags": [],
        "label": "FailedToLoadResponse",
        "description": [],
        "signature": [
          "() => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/message_panel/failed_to_load_response.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.FeedbackButtons",
        "type": "Function",
        "tags": [],
        "label": "FeedbackButtons",
        "description": [],
        "signature": [
          "({ onClickFeedback }: FeedbackButtonsProps) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/buttons/feedback_buttons.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.FeedbackButtons.$1",
            "type": "Object",
            "tags": [],
            "label": "{ onClickFeedback }",
            "description": [],
            "signature": [
              "FeedbackButtonsProps"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/buttons/feedback_buttons.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.isSupportedConnectorType",
        "type": "Function",
        "tags": [],
        "label": "isSupportedConnectorType",
        "description": [],
        "signature": [
          "(type: string) => boolean"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/connectors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.isSupportedConnectorType.$1",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/connectors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.MessageText",
        "type": "Function",
        "tags": [],
        "label": "MessageText",
        "description": [],
        "signature": [
          "({ loading, content, onActionClick }: Props) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/message_panel/message_text.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.MessageText.$1",
            "type": "Object",
            "tags": [],
            "label": "{ loading, content, onActionClick }",
            "description": [],
            "signature": [
              "Props"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/message_panel/message_text.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.useAbortableAsync",
        "type": "Function",
        "tags": [],
        "label": "useAbortableAsync",
        "description": [],
        "signature": [
          "(fn: ({}: { signal: AbortSignal; }) => T | Promise<T>, deps: any[], options: { clearValueOnNext?: boolean | undefined; defaultValue?: (() => T) | undefined; } | undefined) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.AbortableAsyncState",
            "text": "AbortableAsyncState"
          },
          "<T>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.useAbortableAsync.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; }) => T | Promise<T>"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.useAbortableAsync.$2",
            "type": "Array",
            "tags": [],
            "label": "deps",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.useAbortableAsync.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.useAbortableAsync.$3.clearValueOnNext",
                "type": "CompoundType",
                "tags": [],
                "label": "clearValueOnNext",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.useAbortableAsync.$3.defaultValue",
                "type": "Function",
                "tags": [],
                "label": "defaultValue",
                "description": [],
                "signature": [
                  "(() => T) | undefined"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.useGenAIConnectorsWithoutContext",
        "type": "Function",
        "tags": [],
        "label": "useGenAIConnectorsWithoutContext",
        "description": [],
        "signature": [
          "(assistant: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantService",
            "text": "ObservabilityAIAssistantService"
          },
          ") => ",
          "UseGenAIConnectorsResult"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_genai_connectors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.useGenAIConnectorsWithoutContext.$1",
            "type": "Object",
            "tags": [],
            "label": "assistant",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ObservabilityAIAssistantService",
                "text": "ObservabilityAIAssistantService"
              }
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_genai_connectors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; } | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; token_count?: ",
              "TokenCount",
              " | undefined; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.KnowledgeBaseEntry",
        "type": "Interface",
        "tags": [],
        "label": "KnowledgeBaseEntry",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.doc_id",
            "type": "string",
            "tags": [],
            "label": "doc_id",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.confidence",
            "type": "CompoundType",
            "tags": [],
            "label": "confidence",
            "description": [],
            "signature": [
              "\"medium\" | \"high\" | \"low\""
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.is_correction",
            "type": "boolean",
            "tags": [],
            "label": "is_correction",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "Record<string, string> | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.KnowledgeBaseEntry.role",
            "type": "Enum",
            "tags": [],
            "label": "role",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntryRole",
                "text": "KnowledgeBaseEntryRole"
              }
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantChatService",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityAIAssistantChatService",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.sendAnalyticsEvent",
            "type": "Function",
            "tags": [],
            "label": "sendAnalyticsEvent",
            "description": [],
            "signature": [
              "(event: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.TelemetryEventTypeWithPayload",
                "text": "TelemetryEventTypeWithPayload"
              },
              ") => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.sendAnalyticsEvent.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "public",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-public.TelemetryEventTypeWithPayload",
                    "text": "TelemetryEventTypeWithPayload"
                  }
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.chat",
            "type": "Function",
            "tags": [],
            "label": "chat",
            "description": [],
            "signature": [
              "(name: string, options: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; function?: \"none\" | \"auto\" | undefined; signal: AbortSignal; }) => ",
              "Observable",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.StreamingChatResponseEventWithoutError",
                "text": "StreamingChatResponseEventWithoutError"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.chat.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.chat.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.chat.$2.messages",
                    "type": "Array",
                    "tags": [],
                    "label": "messages",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "observabilityAIAssistant",
                        "scope": "common",
                        "docId": "kibObservabilityAIAssistantPluginApi",
                        "section": "def-common.Message",
                        "text": "Message"
                      },
                      "[]"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.chat.$2.connectorId",
                    "type": "string",
                    "tags": [],
                    "label": "connectorId",
                    "description": [],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.chat.$2.function",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "function",
                    "description": [],
                    "signature": [
                      "\"none\" | \"auto\" | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.chat.$2.signal",
                    "type": "Object",
                    "tags": [],
                    "label": "signal",
                    "description": [],
                    "signature": [
                      "AbortSignal"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.complete",
            "type": "Function",
            "tags": [],
            "label": "complete",
            "description": [],
            "signature": [
              "(options: { getScreenContexts: () => ",
              "ObservabilityAIAssistantScreenContext",
              "[]; conversationId?: string | undefined; connectorId: string; messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; persist: boolean; disableFunctions: boolean; signal: AbortSignal; responseLanguage: string; }) => ",
              "Observable",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.StreamingChatResponseEventWithoutError",
                "text": "StreamingChatResponseEventWithoutError"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.complete.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.getScreenContexts",
                    "type": "Function",
                    "tags": [],
                    "label": "getScreenContexts",
                    "description": [],
                    "signature": [
                      "() => ",
                      "ObservabilityAIAssistantScreenContext",
                      "[]"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false,
                    "children": [],
                    "returnComment": []
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.conversationId",
                    "type": "string",
                    "tags": [],
                    "label": "conversationId",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.connectorId",
                    "type": "string",
                    "tags": [],
                    "label": "connectorId",
                    "description": [],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.messages",
                    "type": "Array",
                    "tags": [],
                    "label": "messages",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "observabilityAIAssistant",
                        "scope": "common",
                        "docId": "kibObservabilityAIAssistantPluginApi",
                        "section": "def-common.Message",
                        "text": "Message"
                      },
                      "[]"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.persist",
                    "type": "boolean",
                    "tags": [],
                    "label": "persist",
                    "description": [],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.disableFunctions",
                    "type": "boolean",
                    "tags": [],
                    "label": "disableFunctions",
                    "description": [],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.signal",
                    "type": "Object",
                    "tags": [],
                    "label": "signal",
                    "description": [],
                    "signature": [
                      "AbortSignal"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.complete.$1.responseLanguage",
                    "type": "string",
                    "tags": [],
                    "label": "responseLanguage",
                    "description": [],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.getFunctions",
            "type": "Function",
            "tags": [],
            "label": "getFunctions",
            "description": [],
            "signature": [
              "(options?: { contexts?: string[] | undefined; filter?: string | undefined; } | undefined) => ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.FunctionDefinition",
                "text": "FunctionDefinition"
              },
              "<any>[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.getFunctions.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.getFunctions.$1.contexts",
                    "type": "Array",
                    "tags": [],
                    "label": "contexts",
                    "description": [],
                    "signature": [
                      "string[] | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.getFunctions.$1.filter",
                    "type": "string",
                    "tags": [],
                    "label": "filter",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.hasFunction",
            "type": "Function",
            "tags": [],
            "label": "hasFunction",
            "description": [],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.hasFunction.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.getSystemMessage",
            "type": "Function",
            "tags": [],
            "label": "getSystemMessage",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              }
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.hasRenderFunction",
            "type": "Function",
            "tags": [],
            "label": "hasRenderFunction",
            "description": [],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.hasRenderFunction.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantChatService.renderFunction",
            "type": "Function",
            "tags": [],
            "label": "renderFunction",
            "description": [],
            "signature": [
              "(name: string, args: string | undefined, response: { data?: string | undefined; content?: string | undefined; }, onActionClick: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ChatActionClickHandler",
                "text": "ChatActionClickHandler"
              },
              ") => React.ReactNode"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$2",
                "type": "string",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$3",
                "type": "Object",
                "tags": [],
                "label": "response",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$3.data",
                    "type": "string",
                    "tags": [],
                    "label": "data",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$3.content",
                    "type": "string",
                    "tags": [],
                    "label": "content",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantChatService.renderFunction.$4",
                "type": "Function",
                "tags": [],
                "label": "onActionClick",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "public",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-public.ChatActionClickHandler",
                    "text": "ChatActionClickHandler"
                  }
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantService",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityAIAssistantService",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.callApi",
            "type": "Function",
            "tags": [],
            "label": "callApi",
            "description": [],
            "signature": [
              "<TEndpoint extends \"POST /internal/observability_ai_assistant/chat\" | \"POST /internal/observability_ai_assistant/chat/complete\" | \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\" | \"GET /internal/observability_ai_assistant/conversation/{conversationId}\" | \"POST /internal/observability_ai_assistant/conversations\" | \"POST /internal/observability_ai_assistant/conversation\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\" | \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\" | \"GET /internal/observability_ai_assistant/connectors\" | \"GET /internal/observability_ai_assistant/functions\" | \"POST /internal/observability_ai_assistant/functions/recall\" | \"POST /internal/observability_ai_assistant/functions/summarize\" | \"POST /internal/observability_ai_assistant/kb/setup\" | \"GET /internal/observability_ai_assistant/kb/status\" | \"GET /internal/observability_ai_assistant/kb/entries\" | \"POST /internal/observability_ai_assistant/kb/entries/import\" | \"POST /internal/observability_ai_assistant/kb/entries/save\" | \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\">(endpoint: TEndpoint, ...args: MaybeOptionalArgs<",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "common",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-common.ClientRequestParamsOf",
                "text": "ClientRequestParamsOf"
              },
              "<{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ entryId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>, ",
              "PartialC",
              "<{ confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; role: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"assistant_summarization\">, ",
              "LiteralC",
              "<\"user_entry\">, ",
              "LiteralC",
              "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ entries: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { entries: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }[]; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
              "TypeC",
              "<{ query: ",
              "TypeC",
              "<{ query: ",
              "StringC",
              "; sortBy: ",
              "StringC",
              "; sortDirection: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"asc\">, ",
              "LiteralC",
              "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntry",
                "text": "KnowledgeBaseEntry"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
              "MlDeploymentState",
              " | undefined; allocation_state?: ",
              "MlDeploymentAllocationState",
              " | undefined; model_name?: string | undefined; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{}>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ queries: ",
              "ArrayC",
              "<",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">>; }>, ",
              "PartialC",
              "<{ categories: ",
              "ArrayC",
              "<",
              "StringC",
              ">; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { queries: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
              "RecalledEntry",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ functionDefinitions: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.FunctionDefinition",
                "text": "FunctionDefinition"
              },
              "<any>[]; systemMessage: string; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.ConnectorWithExtraFindData",
                "text": "ConnectorWithExtraFindData"
              },
              "[]>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ title: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationUpdateRequest",
              ", ",
              "ConversationUpdateRequest",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { conversation: ",
              "ConversationUpdateRequest",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationRequestBase",
              ", ",
              "ConversationRequestBase",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { conversation: ",
              "ConversationRequestBase",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ query: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\": { endpoint: \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\"; params?: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; responseLanguage: ",
              "StringC",
              "; disableFunctions: ",
              "Type",
              "<boolean, boolean, unknown>; instructions: ",
              "ArrayC",
              "<",
              "UnionC",
              "<[",
              "StringC",
              ", ",
              "TypeC",
              "<{ doc_id: ",
              "StringC",
              "; text: ",
              "StringC",
              "; }>]>>; }>]>; }>, ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ actions: ",
              "ArrayC",
              "<",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; }>, ",
              "PartialC",
              "<{ parameters: ",
              "AnyC",
              "; }>]>>; }>; query: ",
              "PartialC",
              "<{ format: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"default\">, ",
              "LiteralC",
              "<\"openai\">]>; }>; }>]> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body?: { actions?: ({ name: string; description: string; } & { parameters?: any; })[] | undefined; } | undefined; query?: { format?: \"default\" | \"openai\" | undefined; } | undefined; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; responseLanguage: ",
              "StringC",
              "; disableFunctions: ",
              "Type",
              "<boolean, boolean, unknown>; instructions: ",
              "ArrayC",
              "<",
              "UnionC",
              "<[",
              "StringC",
              ", ",
              "TypeC",
              "<{ doc_id: ",
              "StringC",
              "; text: ",
              "StringC",
              "; }>]>>; }>]>; }>, ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ screenContexts: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              "ObservabilityAIAssistantScreenContextRequest",
              ", ",
              "ObservabilityAIAssistantScreenContextRequest",
              ", unknown>>; }>; }>]> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body: { screenContexts: ",
              "ObservabilityAIAssistantScreenContextRequest",
              "[]; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; functions: ",
              "ArrayC",
              "<",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; }>, ",
              "PartialC",
              "<{ parameters: ",
              "AnyC",
              "; }>]>>; }>, ",
              "PartialC",
              "<{ functionCall: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { name: string; messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; functions: ({ name: string; description: string; } & { parameters?: any; })[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; }, TEndpoint> & Omit<FetchOptions, \"query\" | \"body\" | \"signal\" | \"pathname\"> & { signal: AbortSignal | null; }>) => Promise<",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "common",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-common.ReturnOf",
                "text": "ReturnOf"
              },
              "<{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ entryId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>, ",
              "PartialC",
              "<{ confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; role: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"assistant_summarization\">, ",
              "LiteralC",
              "<\"user_entry\">, ",
              "LiteralC",
              "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ entries: ",
              "ArrayC",
              "<",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }>>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { entries: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; }[]; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
              "TypeC",
              "<{ query: ",
              "TypeC",
              "<{ query: ",
              "StringC",
              "; sortBy: ",
              "StringC",
              "; sortDirection: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"asc\">, ",
              "LiteralC",
              "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntry",
                "text": "KnowledgeBaseEntry"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
              "MlDeploymentState",
              " | undefined; allocation_state?: ",
              "MlDeploymentAllocationState",
              " | undefined; model_name?: string | undefined; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{}>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ id: ",
              "StringC",
              "; text: ",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"low\">, ",
              "LiteralC",
              "<\"medium\">, ",
              "LiteralC",
              "<\"high\">]>; is_correction: ",
              "Type",
              "<boolean, boolean, unknown>; public: ",
              "Type",
              "<boolean, boolean, unknown>; labels: ",
              "RecordC",
              "<",
              "StringC",
              ", ",
              "StringC",
              ">; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { id: string; text: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ queries: ",
              "ArrayC",
              "<",
              "BrandC",
              "<",
              "StringC",
              ", ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">>; }>, ",
              "PartialC",
              "<{ categories: ",
              "ArrayC",
              "<",
              "StringC",
              ">; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { queries: ",
              "Branded",
              "<string, ",
              {
                "pluginId": "@kbn/io-ts-utils",
                "scope": "common",
                "docId": "kibKbnIoTsUtilsPluginApi",
                "section": "def-common.NonEmptyStringBrand",
                "text": "NonEmptyStringBrand"
              },
              ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
              "RecalledEntry",
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<{ functionDefinitions: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.FunctionDefinition",
                "text": "FunctionDefinition"
              },
              "<any>[]; systemMessage: string; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              ") => Promise<",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.ConnectorWithExtraFindData",
                "text": "ConnectorWithExtraFindData"
              },
              "[]>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ title: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationUpdateRequest",
              ", ",
              "ConversationUpdateRequest",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; body: { conversation: ",
              "ConversationUpdateRequest",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ conversation: ",
              "Type",
              "<",
              "ConversationRequestBase",
              ", ",
              "ConversationRequestBase",
              ", unknown>; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { conversation: ",
              "ConversationRequestBase",
              "; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ query: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              "[]; }>; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
              "TypeC",
              "<{ path: ",
              "TypeC",
              "<{ conversationId: ",
              "StringC",
              "; }>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { path: { conversationId: string; }; }; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Conversation",
                "text": "Conversation"
              },
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\": { endpoint: \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\"; params?: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; responseLanguage: ",
              "StringC",
              "; disableFunctions: ",
              "Type",
              "<boolean, boolean, unknown>; instructions: ",
              "ArrayC",
              "<",
              "UnionC",
              "<[",
              "StringC",
              ", ",
              "TypeC",
              "<{ doc_id: ",
              "StringC",
              "; text: ",
              "StringC",
              "; }>]>>; }>]>; }>, ",
              "PartialC",
              "<{ body: ",
              "PartialC",
              "<{ actions: ",
              "ArrayC",
              "<",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; }>, ",
              "PartialC",
              "<{ parameters: ",
              "AnyC",
              "; }>]>>; }>; query: ",
              "PartialC",
              "<{ format: ",
              "UnionC",
              "<[",
              "LiteralC",
              "<\"default\">, ",
              "LiteralC",
              "<\"openai\">]>; }>; }>]> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body?: { actions?: ({ name: string; description: string; } & { parameters?: any; })[] | undefined; } | undefined; query?: { format?: \"default\" | \"openai\" | undefined; } | undefined; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; persist: ",
              "Type",
              "<boolean, boolean, unknown>; }>, ",
              "PartialC",
              "<{ conversationId: ",
              "StringC",
              "; title: ",
              "StringC",
              "; responseLanguage: ",
              "StringC",
              "; disableFunctions: ",
              "Type",
              "<boolean, boolean, unknown>; instructions: ",
              "ArrayC",
              "<",
              "UnionC",
              "<[",
              "StringC",
              ", ",
              "TypeC",
              "<{ doc_id: ",
              "StringC",
              "; text: ",
              "StringC",
              "; }>]>>; }>]>; }>, ",
              "TypeC",
              "<{ body: ",
              "TypeC",
              "<{ screenContexts: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              "ObservabilityAIAssistantScreenContextRequest",
              ", ",
              "ObservabilityAIAssistantScreenContextRequest",
              ", unknown>>; }>; }>]> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body: { screenContexts: ",
              "ObservabilityAIAssistantScreenContextRequest",
              "[]; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
              "TypeC",
              "<{ body: ",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; messages: ",
              "ArrayC",
              "<",
              "Type",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ", unknown>>; connectorId: ",
              "StringC",
              "; functions: ",
              "ArrayC",
              "<",
              "IntersectionC",
              "<[",
              "TypeC",
              "<{ name: ",
              "StringC",
              "; description: ",
              "StringC",
              "; }>, ",
              "PartialC",
              "<{ parameters: ",
              "AnyC",
              "; }>]>>; }>, ",
              "PartialC",
              "<{ functionCall: ",
              "StringC",
              "; }>]>; }> | undefined; handler: ({}: ",
              "ObservabilityAIAssistantRouteHandlerResources",
              " & { params: { body: { name: string; messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]; connectorId: string; functions: ({ name: string; description: string; } & { parameters?: any; })[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
              "Readable",
              ">; } & ",
              "ObservabilityAIAssistantRouteCreateOptions",
              "; }, TEndpoint>>"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.callApi.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "endpoint",
                "description": [],
                "signature": [
                  "TEndpoint"
                ],
                "path": "packages/kbn-server-route-repository/src/typings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.callApi.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "RequiredKeys",
                  "<",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions> extends never ? [] | [",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions] : [",
                  {
                    "pluginId": "@kbn/server-route-repository",
                    "scope": "common",
                    "docId": "kibKbnServerRouteRepositoryPluginApi",
                    "section": "def-common.ClientRequestParamsOf",
                    "text": "ClientRequestParamsOf"
                  },
                  "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions]"
                ],
                "path": "packages/kbn-server-route-repository/src/typings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.isEnabled",
            "type": "Function",
            "tags": [],
            "label": "isEnabled",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; }) => Promise<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ObservabilityAIAssistantChatService",
                "text": "ObservabilityAIAssistantChatService"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{}",
                "description": [],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observabilityAIAssistant",
                    "id": "def-public.ObservabilityAIAssistantService.start.$1.signal",
                    "type": "Object",
                    "tags": [],
                    "label": "signal",
                    "description": [],
                    "signature": [
                      "AbortSignal"
                    ],
                    "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.register",
            "type": "Function",
            "tags": [],
            "label": "register",
            "description": [],
            "signature": [
              "(fn: ",
              "ChatRegistrationRenderFunction",
              ") => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.register.$1",
                "type": "Function",
                "tags": [],
                "label": "fn",
                "description": [],
                "signature": [
                  "ChatRegistrationRenderFunction"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.setScreenContext",
            "type": "Function",
            "tags": [],
            "label": "setScreenContext",
            "description": [],
            "signature": [
              "(screenContext: ",
              "ObservabilityAIAssistantScreenContext",
              ") => () => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.setScreenContext.$1",
                "type": "Object",
                "tags": [],
                "label": "screenContext",
                "description": [],
                "signature": [
                  "ObservabilityAIAssistantScreenContext"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.getScreenContexts",
            "type": "Function",
            "tags": [],
            "label": "getScreenContexts",
            "description": [],
            "signature": [
              "() => ",
              "ObservabilityAIAssistantScreenContext",
              "[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.conversations",
            "type": "Object",
            "tags": [],
            "label": "conversations",
            "description": [],
            "signature": [
              "ObservabilityAIAssistantConversationService"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantService.navigate",
            "type": "Function",
            "tags": [],
            "label": "navigate",
            "description": [],
            "signature": [
              "(callback: () => void) => Promise<",
              "Observable",
              "<",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageAddEvent",
                "text": "MessageAddEvent"
              },
              ">>"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.ObservabilityAIAssistantService.navigate.$1",
                "type": "Function",
                "tags": [],
                "label": "callback",
                "description": [],
                "signature": [
                  "() => void"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.UseChatResult",
        "type": "Interface",
        "tags": [],
        "label": "UseChatResult",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.UseChatResult.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.UseChatResult.setMessages",
            "type": "Function",
            "tags": [],
            "label": "setMessages",
            "description": [],
            "signature": [
              "(messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]) => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.UseChatResult.setMessages.$1",
                "type": "Array",
                "tags": [],
                "label": "messages",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "common",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-common.Message",
                    "text": "Message"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.UseChatResult.state",
            "type": "Enum",
            "tags": [],
            "label": "state",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ChatState",
                "text": "ChatState"
              }
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.UseChatResult.next",
            "type": "Function",
            "tags": [],
            "label": "next",
            "description": [],
            "signature": [
              "(messages: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]) => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.UseChatResult.next.$1",
                "type": "Array",
                "tags": [],
                "label": "messages",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "common",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-common.Message",
                    "text": "Message"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.UseChatResult.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ChatActionClickType",
        "type": "Enum",
        "tags": [],
        "label": "ChatActionClickType",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ChatState",
        "type": "Enum",
        "tags": [],
        "label": "ChatState",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.FunctionVisibility",
        "type": "Enum",
        "tags": [],
        "label": "FunctionVisibility",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/function_visibility.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.KnowledgeBaseEntryRole",
        "type": "Enum",
        "tags": [],
        "label": "KnowledgeBaseEntryRole",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantTelemetryEventType",
        "type": "Enum",
        "tags": [],
        "label": "ObservabilityAIAssistantTelemetryEventType",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/analytics/telemetry_event_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.VisualizeESQLUserIntention",
        "type": "Enum",
        "tags": [],
        "label": "VisualizeESQLUserIntention",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/visualize_esql.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.AbortableAsyncState",
        "type": "Type",
        "tags": [],
        "label": "AbortableAsyncState",
        "description": [],
        "signature": [
          "(T extends Promise<infer TReturn> ? State<TReturn> : State<T>) & { refresh: () => void; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_abortable_async.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.aiAssistantLogsIndexPattern",
        "type": "string",
        "tags": [],
        "label": "aiAssistantLogsIndexPattern",
        "description": [],
        "signature": [
          "\"observability:aiAssistantLogsIndexPattern\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.aiAssistantResponseLanguage",
        "type": "string",
        "tags": [],
        "label": "aiAssistantResponseLanguage",
        "description": [],
        "signature": [
          "\"observability:aiAssistantResponseLanguage\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.aiAssistantSimulatedFunctionCalling",
        "type": "string",
        "tags": [],
        "label": "aiAssistantSimulatedFunctionCalling",
        "description": [],
        "signature": [
          "\"observability:aiAssistantSimulatedFunctionCalling\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.APIReturnType",
        "type": "Type",
        "tags": [],
        "label": "APIReturnType",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.FunctionDefinition",
            "text": "FunctionDefinition"
          },
          "<any>[]; systemMessage: string; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\": { endpoint: \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ actions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>; query: ",
          "PartialC",
          "<{ format: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"default\">, ",
          "LiteralC",
          "<\"openai\">]>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body?: { actions?: ({ name: string; description: string; } & { parameters?: any; })[] | undefined; } | undefined; query?: { format?: \"default\" | \"openai\" | undefined; } | undefined; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ screenContexts: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          "ObservabilityAIAssistantScreenContextRequest",
          ", ",
          "ObservabilityAIAssistantScreenContextRequest",
          ", unknown>>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body: { screenContexts: ",
          "ObservabilityAIAssistantScreenContextRequest",
          "[]; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: ({ name: string; description: string; } & { parameters?: any; })[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: any; handler: ({}: any) => Promise<infer TReturnType>; } & ",
          "ServerRouteCreateOptions",
          " ? TReturnType : never"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ChatActionClickHandler",
        "type": "Type",
        "tags": [],
        "label": "ChatActionClickHandler",
        "description": [],
        "signature": [
          "(payload: ChatActionClickPayloadExecuteEsql) => void"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ChatActionClickHandler.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "payload",
            "description": [],
            "signature": [
              "{ type: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ChatActionClickType",
                "text": "ChatActionClickType"
              },
              "; } & { query: string; userOverrides?: unknown; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ChatActionClickPayload",
        "type": "Type",
        "tags": [],
        "label": "ChatActionClickPayload",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ChatActionClickType",
            "text": "ChatActionClickType"
          },
          "; } & { query: string; userOverrides?: unknown; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/chat/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Feedback",
        "type": "Type",
        "tags": [],
        "label": "Feedback",
        "description": [],
        "signature": [
          "\"negative\" | \"positive\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/components/buttons/feedback_buttons.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.LANGUAGE_OPTIONS",
        "type": "Array",
        "tags": [],
        "label": "LANGUAGE_OPTIONS",
        "description": [],
        "signature": [
          "{ value: string; label: string; }[]"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/language_options.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIClientRequestParamsOf",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIClientRequestParamsOf",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.FunctionDefinition",
            "text": "FunctionDefinition"
          },
          "<any>[]; systemMessage: string; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\": { endpoint: \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ actions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>; query: ",
          "PartialC",
          "<{ format: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"default\">, ",
          "LiteralC",
          "<\"openai\">]>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body?: { actions?: ({ name: string; description: string; } & { parameters?: any; })[] | undefined; } | undefined; query?: { format?: \"default\" | \"openai\" | undefined; } | undefined; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ screenContexts: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          "ObservabilityAIAssistantScreenContextRequest",
          ", ",
          "ObservabilityAIAssistantScreenContextRequest",
          ", unknown>>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body: { screenContexts: ",
          "ObservabilityAIAssistantScreenContextRequest",
          "[]; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: ({ name: string; description: string; } & { parameters?: any; })[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: infer TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined | undefined; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          " ? TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? ClientRequestParamsOfType<TRouteParamsRT> : {} : never"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIEndpoint",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIEndpoint",
        "description": [],
        "signature": [
          "\"POST /internal/observability_ai_assistant/chat\" | \"POST /internal/observability_ai_assistant/chat/complete\" | \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\" | \"GET /internal/observability_ai_assistant/conversation/{conversationId}\" | \"POST /internal/observability_ai_assistant/conversations\" | \"POST /internal/observability_ai_assistant/conversation\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\" | \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\" | \"GET /internal/observability_ai_assistant/connectors\" | \"GET /internal/observability_ai_assistant/functions\" | \"POST /internal/observability_ai_assistant/functions/recall\" | \"POST /internal/observability_ai_assistant/functions/summarize\" | \"POST /internal/observability_ai_assistant/kb/setup\" | \"GET /internal/observability_ai_assistant/kb/status\" | \"GET /internal/observability_ai_assistant/kb/entries\" | \"POST /internal/observability_ai_assistant/kb/entries/import\" | \"POST /internal/observability_ai_assistant/kb/entries/save\" | \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.RegisterRenderFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "RegisterRenderFunctionDefinition",
        "description": [],
        "signature": [
          "(name: string, render: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.RenderFunction",
            "text": "RenderFunction"
          },
          "<TFunctionArguments, TFunctionResponse>) => void"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.RegisterRenderFunctionDefinition.$1",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.RegisterRenderFunctionDefinition.$2",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "(options: { arguments: TFunctionArguments; response: TFunctionResponse; onActionClick: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ChatActionClickHandler",
                "text": "ChatActionClickHandler"
              },
              "; }) => React.ReactNode"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-public.RegisterRenderFunctionDefinition.$2.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "{ arguments: TArguments; response: TResponse; onActionClick: ",
                  {
                    "pluginId": "observabilityAIAssistant",
                    "scope": "public",
                    "docId": "kibObservabilityAIAssistantPluginApi",
                    "section": "def-public.ChatActionClickHandler",
                    "text": "ChatActionClickHandler"
                  },
                  "; }"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.RenderFunction",
        "type": "Type",
        "tags": [],
        "label": "RenderFunction",
        "description": [],
        "signature": [
          "(options: { arguments: TArguments; response: TResponse; onActionClick: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ChatActionClickHandler",
            "text": "ChatActionClickHandler"
          },
          "; }) => React.ReactNode"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.RenderFunction.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "{ arguments: TArguments; response: TResponse; onActionClick: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ChatActionClickHandler",
                "text": "ChatActionClickHandler"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.TelemetryEventTypeWithPayload",
        "type": "Type",
        "tags": [],
        "label": "TelemetryEventTypeWithPayload",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantTelemetryEventType",
            "text": "ObservabilityAIAssistantTelemetryEventType"
          },
          ".ChatFeedback; payload: ",
          "ChatFeedback",
          "; } | { type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantTelemetryEventType",
            "text": "ObservabilityAIAssistantTelemetryEventType"
          },
          ".InsightFeedback; payload: ",
          "InsightFeedback",
          "; } | { type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "public",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-public.ObservabilityAIAssistantTelemetryEventType",
            "text": "ObservabilityAIAssistantTelemetryEventType"
          },
          ".UserSentPromptInChat; payload: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/analytics/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.VISUALIZE_ESQL_USER_INTENTIONS",
        "type": "Array",
        "tags": [],
        "label": "VISUALIZE_ESQL_USER_INTENTIONS",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.VisualizeESQLUserIntention",
            "text": "VisualizeESQLUserIntention"
          },
          "[]"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/visualize_esql.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.DEFAULT_LANGUAGE_OPTION",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_LANGUAGE_OPTION",
        "description": [],
        "signature": [
          "{ value: string; label: string; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/language_options.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPublicSetup",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPublicSetup",
      "description": [],
      "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPublicStart",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPublicStart",
      "description": [],
      "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [],
          "signature": [
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "public",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-public.ObservabilityAIAssistantService",
              "text": "ObservabilityAIAssistantService"
            }
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.ObservabilityAIAssistantContextualInsight",
          "type": "CompoundType",
          "tags": [],
          "label": "ObservabilityAIAssistantContextualInsight",
          "description": [],
          "signature": [
            "React.ForwardRefExoticComponent<",
            "InsightProps",
            "> | null"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.ObservabilityAIAssistantMultipaneFlyoutContext",
          "type": "Object",
          "tags": [],
          "label": "ObservabilityAIAssistantMultipaneFlyoutContext",
          "description": [],
          "signature": [
            "React.Context<",
            "ChatFlyoutSecondSlotHandler",
            " | undefined>"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.ObservabilityAIAssistantChatServiceContext",
          "type": "Object",
          "tags": [],
          "label": "ObservabilityAIAssistantChatServiceContext",
          "description": [],
          "signature": [
            "React.Context<",
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "public",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-public.ObservabilityAIAssistantChatService",
              "text": "ObservabilityAIAssistantChatService"
            },
            " | undefined>"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.useObservabilityAIAssistantChatService",
          "type": "Function",
          "tags": [],
          "label": "useObservabilityAIAssistantChatService",
          "description": [],
          "signature": [
            "() => ",
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "public",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-public.ObservabilityAIAssistantChatService",
              "text": "ObservabilityAIAssistantChatService"
            }
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": []
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.useGenAIConnectors",
          "type": "Function",
          "tags": [],
          "label": "useGenAIConnectors",
          "description": [],
          "signature": [
            "() => ",
            "UseGenAIConnectorsResult"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.useChat",
          "type": "Function",
          "tags": [],
          "label": "useChat",
          "description": [],
          "signature": [
            "(props: ",
            "UseChatProps",
            ") => ",
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "public",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-public.UseChatResult",
              "text": "UseChatResult"
            }
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "observabilityAIAssistant",
              "id": "def-public.ObservabilityAIAssistantPublicStart.useChat.$1",
              "type": "Object",
              "tags": [],
              "label": "props",
              "description": [],
              "signature": [
                "{ connectorId?: string | undefined; service: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "public",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-public.ObservabilityAIAssistantService",
                  "text": "ObservabilityAIAssistantService"
                },
                "; initialMessages: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "common",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-common.Message",
                  "text": "Message"
                },
                "[]; initialConversationId?: string | undefined; chatService: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "public",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-public.ObservabilityAIAssistantChatService",
                  "text": "ObservabilityAIAssistantChatService"
                },
                "; persist: boolean; disableFunctions?: boolean | undefined; onConversationUpdate?: ((event: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "common",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-common.ConversationCreateEvent",
                  "text": "ConversationCreateEvent"
                },
                " | ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "common",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-common.ConversationUpdateEvent",
                  "text": "ConversationUpdateEvent"
                },
                ") => void) | undefined; onChatComplete?: ((messages: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "common",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-common.Message",
                  "text": "Message"
                },
                "[]) => void) | undefined; }"
              ],
              "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/hooks/use_chat.ts",
              "deprecated": false,
              "trackAdoption": false
            }
          ]
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.useUserPreferredLanguage",
          "type": "Function",
          "tags": [],
          "label": "useUserPreferredLanguage",
          "description": [],
          "signature": [
            "() => { selectedLanguage: string; getPreferredLanguage: () => string; }"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.getContextualInsightMessages",
          "type": "Function",
          "tags": [],
          "label": "getContextualInsightMessages",
          "description": [],
          "signature": [
            "({}: { message: string; instructions: string; }) => ",
            {
              "pluginId": "observabilityAIAssistant",
              "scope": "common",
              "docId": "kibObservabilityAIAssistantPluginApi",
              "section": "def-common.Message",
              "text": "Message"
            },
            "[]"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "observabilityAIAssistant",
              "id": "def-public.ObservabilityAIAssistantPublicStart.getContextualInsightMessages.$1",
              "type": "Object",
              "tags": [],
              "label": "{}",
              "description": [],
              "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "children": [
                {
                  "parentPluginId": "observabilityAIAssistant",
                  "id": "def-public.ObservabilityAIAssistantPublicStart.getContextualInsightMessages.$1.message",
                  "type": "string",
                  "tags": [],
                  "label": "message",
                  "description": [],
                  "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                  "deprecated": false,
                  "trackAdoption": false
                },
                {
                  "parentPluginId": "observabilityAIAssistant",
                  "id": "def-public.ObservabilityAIAssistantPublicStart.getContextualInsightMessages.$1.instructions",
                  "type": "string",
                  "tags": [],
                  "label": "instructions",
                  "description": [],
                  "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
                  "deprecated": false,
                  "trackAdoption": false
                }
              ]
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPublicStart.createScreenContextAction",
          "type": "Function",
          "tags": [],
          "label": "createScreenContextAction",
          "description": [],
          "signature": [
            "<TActionDefinition extends Omit<",
            "ScreenContextActionDefinition",
            "<undefined>, \"respond\">, TResponse = ReturnOf<TActionDefinition>>(definition: TActionDefinition, respond: ",
            "ScreenContextActionRespondFunction",
            "<TResponse>) => ",
            "ScreenContextActionDefinition",
            "<TResponse>"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "observabilityAIAssistant",
              "id": "def-public.ObservabilityAIAssistantPublicStart.createScreenContextAction.$1",
              "type": "Uncategorized",
              "tags": [],
              "label": "definition",
              "description": [],
              "signature": [
                "TActionDefinition"
              ],
              "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/utils/create_screen_context_action.ts",
              "deprecated": false,
              "trackAdoption": false
            },
            {
              "parentPluginId": "observabilityAIAssistant",
              "id": "def-public.ObservabilityAIAssistantPublicStart.createScreenContextAction.$2",
              "type": "Function",
              "tags": [],
              "label": "respond",
              "description": [],
              "signature": [
                "({}: { args: TResponse; signal: AbortSignal; connectorId: string; client: Pick<",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "public",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-public.ObservabilityAIAssistantChatService",
                  "text": "ObservabilityAIAssistantChatService"
                },
                ", \"complete\" | \"chat\">; messages: ",
                {
                  "pluginId": "observabilityAIAssistant",
                  "scope": "common",
                  "docId": "kibObservabilityAIAssistantPluginApi",
                  "section": "def-common.Message",
                  "text": "Message"
                },
                "[]; }) => Promise<",
                "FunctionResponse",
                ">"
              ],
              "path": "x-pack/plugins/observability_solution/observability_ai_assistant/public/utils/create_screen_context_action.ts",
              "deprecated": false,
              "trackAdoption": false,
              "returnComment": [],
              "children": [
                {
                  "parentPluginId": "observabilityAIAssistant",
                  "id": "def-public.ObservabilityAIAssistantPublicStart.createScreenContextAction.$2.$1",
                  "type": "Object",
                  "tags": [],
                  "label": "__0",
                  "description": [],
                  "signature": [
                    "{ args: TArguments; signal: AbortSignal; connectorId: string; client: Pick<",
                    {
                      "pluginId": "observabilityAIAssistant",
                      "scope": "public",
                      "docId": "kibObservabilityAIAssistantPluginApi",
                      "section": "def-public.ObservabilityAIAssistantChatService",
                      "text": "ObservabilityAIAssistantChatService"
                    },
                    ", \"complete\" | \"chat\">; messages: ",
                    {
                      "pluginId": "observabilityAIAssistant",
                      "scope": "common",
                      "docId": "kibObservabilityAIAssistantPluginApi",
                      "section": "def-common.Message",
                      "text": "Message"
                    },
                    "[]; }"
                  ],
                  "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
                  "deprecated": false,
                  "trackAdoption": false
                }
              ]
            }
          ]
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.streamIntoObservable",
        "type": "Function",
        "tags": [],
        "label": "streamIntoObservable",
        "description": [],
        "signature": [
          "(readable: ",
          "Readable",
          ") => ",
          "Observable",
          "<any>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/service/util/stream_into_observable.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-server.streamIntoObservable.$1",
            "type": "Object",
            "tags": [],
            "label": "readable",
            "description": [],
            "signature": [
              "Readable"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/service/util/stream_into_observable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.aiAssistantLogsIndexPattern",
        "type": "string",
        "tags": [],
        "label": "aiAssistantLogsIndexPattern",
        "description": [],
        "signature": [
          "\"observability:aiAssistantLogsIndexPattern\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.aiAssistantResponseLanguage",
        "type": "string",
        "tags": [],
        "label": "aiAssistantResponseLanguage",
        "description": [],
        "signature": [
          "\"observability:aiAssistantResponseLanguage\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.aiAssistantSimulatedFunctionCalling",
        "type": "string",
        "tags": [],
        "label": "aiAssistantSimulatedFunctionCalling",
        "description": [],
        "signature": [
          "\"observability:aiAssistantSimulatedFunctionCalling\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.ObservabilityAIAssistantServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantServerRouteRepository",
        "description": [],
        "signature": [
          "{ \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/kb/entries/{entryId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ entryId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { entryId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/save\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>, ",
          "PartialC",
          "<{ confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; role: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"assistant_summarization\">, ",
          "LiteralC",
          "<\"user_entry\">, ",
          "LiteralC",
          "<\"elastic\">]>; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { confidence?: \"medium\" | \"high\" | \"low\" | undefined; is_correction?: boolean | undefined; public?: boolean | undefined; labels?: { [x: string]: string; } | undefined; role?: \"elastic\" | \"assistant_summarization\" | \"user_entry\" | undefined; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/entries/import\": { endpoint: \"POST /internal/observability_ai_assistant/kb/entries/import\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ entries: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { entries: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }[]; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/entries\": { endpoint: \"GET /internal/observability_ai_assistant/kb/entries\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; sortBy: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { query: { query: string; sortBy: string; sortDirection: \"asc\" | \"desc\"; }; }; }) => Promise<{ entries: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.KnowledgeBaseEntry",
            "text": "KnowledgeBaseEntry"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/kb/status\": { endpoint: \"GET /internal/observability_ai_assistant/kb/status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: ",
          "MlDeploymentState",
          " | undefined; allocation_state?: ",
          "MlDeploymentAllocationState",
          " | undefined; model_name?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/kb/setup\": { endpoint: \"POST /internal/observability_ai_assistant/kb/setup\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarize\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarize\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; labels: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; labels: { [x: string]: string; }; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ queries: ",
          "ArrayC",
          "<",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">>; }>, ",
          "PartialC",
          "<{ categories: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { queries: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">[]; } & { categories?: string[] | undefined; }; }; }) => Promise<{ entries: ",
          "RecalledEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/functions\": { endpoint: \"GET /internal/observability_ai_assistant/functions\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ functionDefinitions: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.FunctionDefinition",
            "text": "FunctionDefinition"
          },
          "<any>[]; systemMessage: string; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.ConnectorWithExtraFindData",
            "text": "ConnectorWithExtraFindData"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\": { endpoint: \"POST /api/observability_ai_assistant/chat/complete 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ actions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>; query: ",
          "PartialC",
          "<{ format: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"default\">, ",
          "LiteralC",
          "<\"openai\">]>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body?: { actions?: ({ name: string; description: string; } & { parameters?: any; })[] | undefined; } | undefined; query?: { format?: \"default\" | \"openai\" | undefined; } | undefined; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat/complete\": { endpoint: \"POST /internal/observability_ai_assistant/chat/complete\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; persist: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ conversationId: ",
          "StringC",
          "; title: ",
          "StringC",
          "; responseLanguage: ",
          "StringC",
          "; disableFunctions: ",
          "Type",
          "<boolean, boolean, unknown>; instructions: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "TypeC",
          "<{ doc_id: ",
          "StringC",
          "; text: ",
          "StringC",
          "; }>]>>; }>]>; }>, ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ screenContexts: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          "ObservabilityAIAssistantScreenContextRequest",
          ", ",
          "ObservabilityAIAssistantScreenContextRequest",
          ", unknown>>; }>; }>]> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; persist: boolean; } & { conversationId?: string | undefined; title?: string | undefined; responseLanguage?: string | undefined; disableFunctions?: boolean | undefined; instructions?: (string | { doc_id: string; text: string; })[] | undefined; }; } & { body: { screenContexts: ",
          "ObservabilityAIAssistantScreenContextRequest",
          "[]; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ parameters: ",
          "AnyC",
          "; }>]>>; }>, ",
          "PartialC",
          "<{ functionCall: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { name: string; messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: ({ name: string; description: string; } & { parameters?: any; })[]; } & { functionCall?: string | undefined; }; }; }) => Promise<",
          "Readable",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/routes/get_global_observability_ai_assistant_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.RegistrationCallback",
        "type": "Type",
        "tags": [],
        "label": "RegistrationCallback",
        "description": [],
        "signature": [
          "({}: { signal: AbortSignal; resources: ",
          "RespondFunctionResources",
          "; client: ",
          "ObservabilityAIAssistantClient",
          "; functions: ",
          "ChatFunctionClient",
          "; }) => Promise<void>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/service/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-server.RegistrationCallback.$1",
            "type": "Object",
            "tags": [],
            "label": "__0",
            "description": [],
            "signature": [
              "{ signal: AbortSignal; resources: ",
              "RespondFunctionResources",
              "; client: ",
              "ObservabilityAIAssistantClient",
              "; functions: ",
              "ChatFunctionClient",
              "; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/service/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-server.ObservabilityAIAssistantServerStart",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantServerStart",
      "description": [],
      "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-server.ObservabilityAIAssistantServerStart.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [
            "\nReturns a Observability AI Assistant service instance"
          ],
          "signature": [
            "ObservabilityAIAssistantService"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    },
    "setup": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-server.ObservabilityAIAssistantServerSetup",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantServerSetup",
      "description": [],
      "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-server.ObservabilityAIAssistantServerSetup.service",
          "type": "Object",
          "tags": [],
          "label": "service",
          "description": [
            "\nReturns a Observability AI Assistant service instance"
          ],
          "signature": [
            "ObservabilityAIAssistantService"
          ],
          "path": "x-pack/plugins/observability_solution/observability_ai_assistant/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ChatCompletionError",
        "type": "Class",
        "tags": [],
        "label": "ChatCompletionError",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionError",
            "text": "ChatCompletionError"
          },
          "<T> extends Error"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.ChatCompletionError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-common.ChatCompletionError.Unnamed.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "code",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-common.ChatCompletionError.Unnamed.$2",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observabilityAIAssistant",
                "id": "def-common.ChatCompletionError.Unnamed.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "meta",
                "description": [],
                "signature": [
                  "ErrorMetaAttributes[T]"
                ],
                "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.concatenateChatCompletionChunks",
        "type": "Function",
        "tags": [],
        "label": "concatenateChatCompletionChunks",
        "description": [],
        "signature": [
          "() => (source: ",
          "Observable",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionChunkEvent",
            "text": "ChatCompletionChunkEvent"
          },
          ">) => ",
          "Observable",
          "<",
          "ConcatenatedMessage",
          ">"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/utils/concatenate_chat_completion_chunks.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.createConversationNotFoundError",
        "type": "Function",
        "tags": [],
        "label": "createConversationNotFoundError",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionError",
            "text": "ChatCompletionError"
          },
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorCode",
            "text": "ChatCompletionErrorCode"
          },
          ".NotFoundError>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.createFunctionNotFoundError",
        "type": "Function",
        "tags": [],
        "label": "createFunctionNotFoundError",
        "description": [],
        "signature": [
          "(name: string) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionError",
            "text": "ChatCompletionError"
          },
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorCode",
            "text": "ChatCompletionErrorCode"
          },
          ".FunctionNotFoundError>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.createFunctionNotFoundError.$1",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.createInternalServerError",
        "type": "Function",
        "tags": [],
        "label": "createInternalServerError",
        "description": [],
        "signature": [
          "(originalErrorMessage: string) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionError",
            "text": "ChatCompletionError"
          },
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorCode",
            "text": "ChatCompletionErrorCode"
          },
          ".InternalError>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.createInternalServerError.$1",
            "type": "string",
            "tags": [],
            "label": "originalErrorMessage",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.createTokenLimitReachedError",
        "type": "Function",
        "tags": [],
        "label": "createTokenLimitReachedError",
        "description": [],
        "signature": [
          "(tokenLimit: number | undefined, tokenCount: number | undefined) => ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionError",
            "text": "ChatCompletionError"
          },
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorCode",
            "text": "ChatCompletionErrorCode"
          },
          ".TokenLimitReachedError>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.createTokenLimitReachedError.$1",
            "type": "number",
            "tags": [],
            "label": "tokenLimit",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.createTokenLimitReachedError.$2",
            "type": "number",
            "tags": [],
            "label": "tokenCount",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.isChatCompletionError",
        "type": "Function",
        "tags": [],
        "label": "isChatCompletionError",
        "description": [],
        "signature": [
          "(error: Error) => boolean"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.isChatCompletionError.$1",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "Error"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.isSupportedConnectorType",
        "type": "Function",
        "tags": [],
        "label": "isSupportedConnectorType",
        "description": [],
        "signature": [
          "(type: string) => boolean"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/connectors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.isSupportedConnectorType.$1",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/connectors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.isTokenLimitReachedError",
        "type": "Function",
        "tags": [],
        "label": "isTokenLimitReachedError",
        "description": [],
        "signature": [
          "(error: Error) => boolean"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.isTokenLimitReachedError.$1",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "Error"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; } | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; token_count?: ",
              "TokenCount",
              " | undefined; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.FunctionDefinition",
        "type": "Interface",
        "tags": [],
        "label": "FunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.FunctionDefinition",
            "text": "FunctionDefinition"
          },
          "<TParameters>"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.FunctionDefinition.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.FunctionDefinition.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.FunctionDefinition.visibility",
            "type": "CompoundType",
            "tags": [],
            "label": "visibility",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.FunctionVisibility",
                "text": "FunctionVisibility"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.FunctionDefinition.descriptionForUser",
            "type": "string",
            "tags": [],
            "label": "descriptionForUser",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.FunctionDefinition.parameters",
            "type": "Uncategorized",
            "tags": [],
            "label": "parameters",
            "description": [],
            "signature": [
              "TParameters | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.KnowledgeBaseEntry",
        "type": "Interface",
        "tags": [],
        "label": "KnowledgeBaseEntry",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.doc_id",
            "type": "string",
            "tags": [],
            "label": "doc_id",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.confidence",
            "type": "CompoundType",
            "tags": [],
            "label": "confidence",
            "description": [],
            "signature": [
              "\"medium\" | \"high\" | \"low\""
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.is_correction",
            "type": "boolean",
            "tags": [],
            "label": "is_correction",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "Record<string, string> | undefined"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.KnowledgeBaseEntry.role",
            "type": "Enum",
            "tags": [],
            "label": "role",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.KnowledgeBaseEntryRole",
                "text": "KnowledgeBaseEntryRole"
              }
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ChatCompletionErrorCode",
        "type": "Enum",
        "tags": [],
        "label": "ChatCompletionErrorCode",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.FunctionVisibility",
        "type": "Enum",
        "tags": [],
        "label": "FunctionVisibility",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/function_visibility.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.KnowledgeBaseEntryRole",
        "type": "Enum",
        "tags": [],
        "label": "KnowledgeBaseEntryRole",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.StreamingChatResponseEventType",
        "type": "Enum",
        "tags": [],
        "label": "StreamingChatResponseEventType",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.VisualizeESQLUserIntention",
        "type": "Enum",
        "tags": [],
        "label": "VisualizeESQLUserIntention",
        "description": [],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/visualize_esql.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.aiAssistantLogsIndexPattern",
        "type": "string",
        "tags": [],
        "label": "aiAssistantLogsIndexPattern",
        "description": [],
        "signature": [
          "\"observability:aiAssistantLogsIndexPattern\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.aiAssistantResponseLanguage",
        "type": "string",
        "tags": [],
        "label": "aiAssistantResponseLanguage",
        "description": [],
        "signature": [
          "\"observability:aiAssistantResponseLanguage\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.aiAssistantSimulatedFunctionCalling",
        "type": "string",
        "tags": [],
        "label": "aiAssistantSimulatedFunctionCalling",
        "description": [],
        "signature": [
          "\"observability:aiAssistantSimulatedFunctionCalling\""
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.BufferFlushEvent",
        "type": "Type",
        "tags": [],
        "label": "BufferFlushEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".BufferFlush; } & { data?: string | undefined; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ChatCompletionChunkEvent",
        "type": "Type",
        "tags": [],
        "label": "ChatCompletionChunkEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".ChatCompletionChunk; } & { id: string; message: { content?: string | undefined; function_call?: { name?: string | undefined; arguments?: string | undefined; } | undefined; }; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ChatCompletionErrorEvent",
        "type": "Type",
        "tags": [],
        "label": "ChatCompletionErrorEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".ChatCompletionError; } & { error: { message: string; stack?: string | undefined; code?: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorCode",
            "text": "ChatCompletionErrorCode"
          },
          " | undefined; meta?: Record<string, any> | undefined; }; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ConversationCreateEvent",
        "type": "Type",
        "tags": [],
        "label": "ConversationCreateEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".ConversationCreate; } & { conversation: { id: string; title: string; last_updated: string; token_count?: ",
          "TokenCount",
          " | undefined; }; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ConversationCreateRequest",
        "type": "Type",
        "tags": [],
        "label": "ConversationCreateRequest",
        "description": [],
        "signature": [
          "Omit<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ", \"namespace\" | \"user\" | \"conversation\"> & { conversation: { title: string; token_count?: ",
          "TokenCount",
          " | undefined; id?: string | undefined; }; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.ConversationUpdateEvent",
        "type": "Type",
        "tags": [],
        "label": "ConversationUpdateEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".ConversationUpdate; } & { conversation: { id: string; title: string; last_updated: string; token_count?: ",
          "TokenCount",
          " | undefined; }; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.LANGUAGE_OPTIONS",
        "type": "Array",
        "tags": [],
        "label": "LANGUAGE_OPTIONS",
        "description": [],
        "signature": [
          "{ value: string; label: string; }[]"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/language_options.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.MessageAddEvent",
        "type": "Type",
        "tags": [],
        "label": "MessageAddEvent",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.StreamingChatResponseEventType",
            "text": "StreamingChatResponseEventType"
          },
          ".MessageAdd; } & { message: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "; id: string; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.StreamingChatResponseEvent",
        "type": "Type",
        "tags": [],
        "label": "StreamingChatResponseEvent",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ConversationCreateEvent",
            "text": "ConversationCreateEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ConversationUpdateEvent",
            "text": "ConversationUpdateEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.MessageAddEvent",
            "text": "MessageAddEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionChunkEvent",
            "text": "ChatCompletionChunkEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionErrorEvent",
            "text": "ChatCompletionErrorEvent"
          },
          " | ",
          "TokenCountEvent"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.StreamingChatResponseEventWithoutError",
        "type": "Type",
        "tags": [],
        "label": "StreamingChatResponseEventWithoutError",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ConversationCreateEvent",
            "text": "ConversationCreateEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ConversationUpdateEvent",
            "text": "ConversationUpdateEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.MessageAddEvent",
            "text": "MessageAddEvent"
          },
          " | ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.ChatCompletionChunkEvent",
            "text": "ChatCompletionChunkEvent"
          },
          " | ",
          "TokenCountEvent"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/conversation_complete.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.VISUALIZE_ESQL_USER_INTENTIONS",
        "type": "Array",
        "tags": [],
        "label": "VISUALIZE_ESQL_USER_INTENTIONS",
        "description": [],
        "signature": [
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.VisualizeESQLUserIntention",
            "text": "VisualizeESQLUserIntention"
          },
          "[]"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/functions/visualize_esql.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.DEFAULT_LANGUAGE_OPTION",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_LANGUAGE_OPTION",
        "description": [],
        "signature": [
          "{ value: string; label: string; }"
        ],
        "path": "x-pack/plugins/observability_solution/observability_ai_assistant/common/ui_settings/language_options.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}