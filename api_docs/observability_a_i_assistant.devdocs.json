{
  "id": "observabilityAIAssistant",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ContextualInsight",
        "type": "Function",
        "tags": [],
        "label": "ContextualInsight",
        "description": [],
        "signature": [
          "React.ForwardRefExoticComponent<{ messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; title: string; } & React.RefAttributes<{}>>"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ContextualInsight.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantActionMenuItem",
        "type": "Function",
        "tags": [],
        "label": "ObservabilityAIAssistantActionMenuItem",
        "description": [],
        "signature": [
          "React.ForwardRefExoticComponent<React.RefAttributes<{}>>"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantActionMenuItem.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantProvider",
        "type": "Function",
        "tags": [],
        "label": "ObservabilityAIAssistantProvider",
        "description": [],
        "signature": [
          "React.ProviderExoticComponent<React.ProviderProps<",
          "ObservabilityAIAssistantService",
          " | undefined>>"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/context/observability_ai_assistant_provider.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.ObservabilityAIAssistantProvider.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.useObservabilityAIAssistant",
        "type": "Function",
        "tags": [],
        "label": "useObservabilityAIAssistant",
        "description": [],
        "signature": [
          "() => ",
          "ObservabilityAIAssistantService"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/hooks/use_observability_ai_assistant.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.useObservabilityAIAssistantOptional",
        "type": "Function",
        "tags": [],
        "label": "useObservabilityAIAssistantOptional",
        "description": [],
        "signature": [
          "() => ",
          "ObservabilityAIAssistantService",
          " | undefined"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/hooks/use_observability_ai_assistant.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-public.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.APIReturnType",
        "type": "Type",
        "tags": [],
        "label": "APIReturnType",
        "description": [],
        "signature": [
          "{ \"GET /internal/observability_ai_assistant/functions/kb_status\": { endpoint: \"GET /internal/observability_ai_assistant/functions/kb_status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: string | undefined; allocation_state?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/setup_kb\": { endpoint: \"POST /internal/observability_ai_assistant/functions/setup_kb\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarise\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarise\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ query: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { query: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ entries: ",
          "KnowledgeBaseEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/elasticsearch\": { endpoint: \"POST /internal/observability_ai_assistant/functions/elasticsearch\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ method: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"GET\">, ",
          "LiteralC",
          "<\"POST\">, ",
          "LiteralC",
          "<\"PATCH\">, ",
          "LiteralC",
          "<\"PUT\">, ",
          "LiteralC",
          "<\"DELETE\">]>; path: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ body: ",
          "AnyC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { method: \"GET\" | \"DELETE\" | \"POST\" | \"PUT\" | \"PATCH\"; path: string; } & { body?: any; }; }; }) => Promise<unknown>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.FindConnectorResult",
            "text": "FindConnectorResult"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ connectorId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { connectorId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; }; }; }) => Promise<",
          "IncomingMessage",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: any; handler: ({}: any) => Promise<infer TReturnType>; } & ",
          "ServerRouteCreateOptions",
          " ? TReturnType : never"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIClientRequestParamsOf",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIClientRequestParamsOf",
        "description": [],
        "signature": [
          "{ \"GET /internal/observability_ai_assistant/functions/kb_status\": { endpoint: \"GET /internal/observability_ai_assistant/functions/kb_status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: string | undefined; allocation_state?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/setup_kb\": { endpoint: \"POST /internal/observability_ai_assistant/functions/setup_kb\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarise\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarise\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ query: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { query: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ entries: ",
          "KnowledgeBaseEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/elasticsearch\": { endpoint: \"POST /internal/observability_ai_assistant/functions/elasticsearch\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ method: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"GET\">, ",
          "LiteralC",
          "<\"POST\">, ",
          "LiteralC",
          "<\"PATCH\">, ",
          "LiteralC",
          "<\"PUT\">, ",
          "LiteralC",
          "<\"DELETE\">]>; path: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ body: ",
          "AnyC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { method: \"GET\" | \"DELETE\" | \"POST\" | \"PUT\" | \"PATCH\"; path: string; } & { body?: any; }; }; }) => Promise<unknown>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.FindConnectorResult",
            "text": "FindConnectorResult"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ connectorId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { connectorId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; }; }; }) => Promise<",
          "IncomingMessage",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }[TEndpoint] extends { endpoint: any; params?: infer TRouteParamsRT | undefined; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          " ? TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? ClientRequestParamsOfType<TRouteParamsRT> : {} : never"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-public.ObservabilityAIAssistantAPIEndpoint",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantAPIEndpoint",
        "description": [],
        "signature": [
          "\"POST /internal/observability_ai_assistant/chat\" | \"GET /internal/observability_ai_assistant/conversation/{conversationId}\" | \"POST /internal/observability_ai_assistant/conversations\" | \"POST /internal/observability_ai_assistant/conversation\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\" | \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\" | \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\" | \"GET /internal/observability_ai_assistant/connectors\" | \"POST /internal/observability_ai_assistant/functions/elasticsearch\" | \"POST /internal/observability_ai_assistant/functions/recall\" | \"POST /internal/observability_ai_assistant/functions/summarise\" | \"POST /internal/observability_ai_assistant/functions/setup_kb\" | \"GET /internal/observability_ai_assistant/functions/kb_status\""
        ],
        "path": "x-pack/plugins/observability_ai_assistant/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginSetup",
      "description": [],
      "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "observabilityAIAssistant",
      "id": "def-public.ObservabilityAIAssistantPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "ObservabilityAIAssistantPluginStart",
      "description": [],
      "signature": [
        {
          "pluginId": "observabilityAIAssistant",
          "scope": "public",
          "docId": "kibObservabilityAIAssistantPluginApi",
          "section": "def-public.ObservabilityAIAssistantPluginStart",
          "text": "ObservabilityAIAssistantPluginStart"
        },
        " extends ",
        "ObservabilityAIAssistantService"
      ],
      "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "observabilityAIAssistant",
          "id": "def-public.ObservabilityAIAssistantPluginStart.register",
          "type": "Function",
          "tags": [],
          "label": "register",
          "description": [],
          "signature": [
            "(fn: ",
            "ChatRegistrationFunction",
            ") => void"
          ],
          "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "observabilityAIAssistant",
              "id": "def-public.ObservabilityAIAssistantPluginStart.register.$1",
              "type": "Function",
              "tags": [],
              "label": "fn",
              "description": [],
              "signature": [
                "ChatRegistrationFunction"
              ],
              "path": "x-pack/plugins/observability_ai_assistant/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-server.ObservabilityAIAssistantServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAIAssistantServerRouteRepository",
        "description": [],
        "signature": [
          "{ \"GET /internal/observability_ai_assistant/functions/kb_status\": { endpoint: \"GET /internal/observability_ai_assistant/functions/kb_status\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{ ready: boolean; error?: any; deployment_state?: string | undefined; allocation_state?: string | undefined; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/setup_kb\": { endpoint: \"POST /internal/observability_ai_assistant/functions/setup_kb\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<{}>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/summarise\": { endpoint: \"POST /internal/observability_ai_assistant/functions/summarise\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; text: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"low\">, ",
          "LiteralC",
          "<\"medium\">, ",
          "LiteralC",
          "<\"high\">]>; is_correction: ",
          "Type",
          "<boolean, boolean, unknown>; public: ",
          "Type",
          "<boolean, boolean, unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { id: string; text: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; confidence: \"medium\" | \"high\" | \"low\"; is_correction: boolean; public: boolean; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/recall\": { endpoint: \"POST /internal/observability_ai_assistant/functions/recall\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ query: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { query: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ entries: ",
          "KnowledgeBaseEntry",
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/functions/elasticsearch\": { endpoint: \"POST /internal/observability_ai_assistant/functions/elasticsearch\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ method: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"GET\">, ",
          "LiteralC",
          "<\"POST\">, ",
          "LiteralC",
          "<\"PATCH\">, ",
          "LiteralC",
          "<\"PUT\">, ",
          "LiteralC",
          "<\"DELETE\">]>; path: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ body: ",
          "AnyC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { method: \"GET\" | \"DELETE\" | \"POST\" | \"PUT\" | \"PATCH\"; path: string; } & { body?: any; }; }; }) => Promise<unknown>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/connectors\": { endpoint: \"GET /internal/observability_ai_assistant/connectors\"; params?: undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          ") => Promise<",
          {
            "pluginId": "actions",
            "scope": "server",
            "docId": "kibActionsPluginApi",
            "section": "def-server.FindConnectorResult",
            "text": "FindConnectorResult"
          },
          "[]>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"DELETE /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<void>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ title: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { title: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}/auto_title\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ connectorId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { connectorId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"PUT /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationUpdateRequest",
          ", ",
          "ConversationUpdateRequest",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; body: { conversation: ",
          "ConversationUpdateRequest",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversation\": { endpoint: \"POST /internal/observability_ai_assistant/conversation\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ conversation: ",
          "Type",
          "<",
          "ConversationRequestBase",
          ", ",
          "ConversationRequestBase",
          ", unknown>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { conversation: ",
          "ConversationRequestBase",
          "; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/conversations\": { endpoint: \"POST /internal/observability_ai_assistant/conversations\"; params?: ",
          "PartialC",
          "<{ body: ",
          "PartialC",
          "<{ query: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params?: { body?: { query?: string | undefined; } | undefined; } | undefined; }) => Promise<{ conversations: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          "[]; }>; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"GET /internal/observability_ai_assistant/conversation/{conversationId}\": { endpoint: \"GET /internal/observability_ai_assistant/conversation/{conversationId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ conversationId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { path: { conversationId: string; }; }; }) => Promise<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Conversation",
            "text": "Conversation"
          },
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; \"POST /internal/observability_ai_assistant/chat\": { endpoint: \"POST /internal/observability_ai_assistant/chat\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ messages: ",
          "ArrayC",
          "<",
          "Type",
          "<",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          ", unknown>>; connectorId: ",
          "StringC",
          "; functions: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; parameters: ",
          "AnyC",
          "; }>>; }>; }> | undefined; handler: ({}: ",
          "ObservabilityAIAssistantRouteHandlerResources",
          " & { params: { body: { messages: ",
          {
            "pluginId": "observabilityAIAssistant",
            "scope": "common",
            "docId": "kibObservabilityAIAssistantPluginApi",
            "section": "def-common.Message",
            "text": "Message"
          },
          "[]; connectorId: string; functions: { name: string; description: string; parameters: any; }[]; }; }; }) => Promise<",
          "IncomingMessage",
          ">; } & ",
          "ObservabilityAIAssistantRouteCreateOptions",
          "; }"
        ],
        "path": "x-pack/plugins/observability_ai_assistant/server/routes/get_global_observability_ai_assistant_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Conversation",
        "type": "Interface",
        "tags": [],
        "label": "Conversation",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              "{ id?: string | undefined; name: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.conversation",
            "type": "Object",
            "tags": [],
            "label": "conversation",
            "description": [],
            "signature": [
              "{ id: string; title: string; last_updated: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.messages",
            "type": "Array",
            "tags": [],
            "label": "messages",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.labels",
            "type": "Object",
            "tags": [],
            "label": "labels",
            "description": [],
            "signature": [
              "{ [x: string]: string; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.numeric_labels",
            "type": "Object",
            "tags": [],
            "label": "numeric_labels",
            "description": [],
            "signature": [
              "{ [x: string]: number; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.namespace",
            "type": "string",
            "tags": [],
            "label": "namespace",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Conversation.public",
            "type": "boolean",
            "tags": [],
            "label": "public",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.Message",
        "type": "Interface",
        "tags": [],
        "label": "Message",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.timestamp",
            "type": "string",
            "tags": [],
            "label": "'@timestamp'",
            "description": [],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observabilityAIAssistant",
            "id": "def-common.Message.message",
            "type": "Object",
            "tags": [],
            "label": "message",
            "description": [],
            "signature": [
              "{ content?: string | undefined; name?: string | undefined; role: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              "; function_call?: { name: string; arguments?: string | undefined; trigger: ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Assistant | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".User | ",
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "common",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-common.MessageRole",
                "text": "MessageRole"
              },
              ".Elastic; } | undefined; data?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observabilityAIAssistant",
        "id": "def-common.MessageRole",
        "type": "Enum",
        "tags": [],
        "label": "MessageRole",
        "description": [],
        "path": "x-pack/plugins/observability_ai_assistant/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [],
    "objects": []
  }
}