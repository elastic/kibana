{
  "id": "security",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "security",
        "id": "def-public.AuthenticatedUser",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticatedUser",
        "description": [
          "\nRepresents the currently authenticated user."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.AuthenticatedUser",
            "text": "AuthenticatedUser"
          },
          " extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.User",
            "text": "User"
          }
        ],
        "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.authentication_realm",
            "type": "Object",
            "tags": [],
            "label": "authentication_realm",
            "description": [
              "\nThe name and type of the Realm that has authenticated the user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.lookup_realm",
            "type": "Object",
            "tags": [],
            "label": "lookup_realm",
            "description": [
              "\nThe name and type of the Realm where the user information were retrieved from."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.authentication_provider",
            "type": "Object",
            "tags": [],
            "label": "authentication_provider",
            "description": [
              "\nThe authentication provider that used to authenticate user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticationProvider",
                "text": "AuthenticationProvider"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.authentication_type",
            "type": "string",
            "tags": [],
            "label": "authentication_type",
            "description": [
              "\nThe AuthenticationType used by ES to authenticate the user.\n"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.elastic_cloud_user",
            "type": "boolean",
            "tags": [],
            "label": "elastic_cloud_user",
            "description": [
              "\nIndicates whether user is authenticated via Elastic Cloud built-in SAML realm."
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticatedUser.profile_uid",
            "type": "string",
            "tags": [],
            "label": "profile_uid",
            "description": [
              "\nUser profile ID of this user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.AuthenticationServiceSetup",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticationServiceSetup",
        "description": [],
        "path": "x-pack/plugins/security/public/authentication/authentication_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticationServiceSetup.getCurrentUser",
            "type": "Function",
            "tags": [],
            "label": "getCurrentUser",
            "description": [
              "\nReturns currently authenticated user and throws if current user isn't authenticated."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              },
              ">"
            ],
            "path": "x-pack/plugins/security/public/authentication/authentication_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.AuthenticationServiceSetup.areAPIKeysEnabled",
            "type": "Function",
            "tags": [],
            "label": "areAPIKeysEnabled",
            "description": [
              "\nDetermines if API Keys are currently enabled."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "x-pack/plugins/security/public/authentication/authentication_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.ChangePasswordProps",
        "type": "Interface",
        "tags": [],
        "label": "ChangePasswordProps",
        "description": [],
        "path": "x-pack/plugins/security/public/ui_api/change_password/change_password.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.ChangePasswordProps.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              }
            ],
            "path": "x-pack/plugins/security/public/ui_api/change_password/change_password.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.PersonalInfoProps",
        "type": "Interface",
        "tags": [],
        "label": "PersonalInfoProps",
        "description": [],
        "path": "x-pack/plugins/security/public/ui_api/personal_info/personal_info.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.PersonalInfoProps.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              }
            ],
            "path": "x-pack/plugins/security/public/ui_api/personal_info/personal_info.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.SecurityLicense",
        "type": "Interface",
        "tags": [],
        "label": "SecurityLicense",
        "description": [],
        "path": "x-pack/plugins/security/common/licensing/license_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicense.isLicenseAvailable",
            "type": "Function",
            "tags": [],
            "label": "isLicenseAvailable",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicense.isEnabled",
            "type": "Function",
            "tags": [],
            "label": "isEnabled",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicense.getFeatures",
            "type": "Function",
            "tags": [],
            "label": "getFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.SecurityLicenseFeatures",
                "text": "SecurityLicenseFeatures"
              }
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicense.hasAtLeast",
            "type": "Function",
            "tags": [],
            "label": "hasAtLeast",
            "description": [],
            "signature": [
              "(licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean | undefined"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-public.SecurityLicense.hasAtLeast.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "licenseType",
                "description": [],
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "path": "x-pack/plugins/security/common/licensing/license_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicense.features$",
            "type": "Object",
            "tags": [],
            "label": "features$",
            "description": [],
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.SecurityLicenseFeatures",
                "text": "SecurityLicenseFeatures"
              },
              ">"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.SecurityLicenseFeatures",
        "type": "Interface",
        "tags": [],
        "label": "SecurityLicenseFeatures",
        "description": [
          "\nDescribes Security plugin features that depend on license."
        ],
        "path": "x-pack/plugins/security/common/licensing/license_features.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.showLogin",
            "type": "boolean",
            "tags": [],
            "label": "showLogin",
            "description": [
              "\nIndicates whether we show login page or skip it."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowLogin",
            "type": "boolean",
            "tags": [],
            "label": "allowLogin",
            "description": [
              "\nIndicates whether we allow login or disable it on the login page."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.showLinks",
            "type": "boolean",
            "tags": [],
            "label": "showLinks",
            "description": [
              "\nIndicates whether we show security links throughout the kibana app."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.showRoleMappingsManagement",
            "type": "boolean",
            "tags": [],
            "label": "showRoleMappingsManagement",
            "description": [
              "\nIndicates whether we show the Role Mappings UI."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowAccessAgreement",
            "type": "boolean",
            "tags": [],
            "label": "allowAccessAgreement",
            "description": [
              "\nIndicates whether we allow users to access agreement UI and acknowledge it."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowAuditLogging",
            "type": "boolean",
            "tags": [],
            "label": "allowAuditLogging",
            "description": [
              "\nIndicates whether we allow logging of audit events."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowRoleDocumentLevelSecurity",
            "type": "boolean",
            "tags": [],
            "label": "allowRoleDocumentLevelSecurity",
            "description": [
              "\nIndicates whether we allow users to define document level security in roles."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowRoleFieldLevelSecurity",
            "type": "boolean",
            "tags": [],
            "label": "allowRoleFieldLevelSecurity",
            "description": [
              "\nIndicates whether we allow users to define field level security in roles."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowRbac",
            "type": "boolean",
            "tags": [],
            "label": "allowRbac",
            "description": [
              "\nIndicates whether we allow Role-based access control (RBAC)."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowSubFeaturePrivileges",
            "type": "boolean",
            "tags": [],
            "label": "allowSubFeaturePrivileges",
            "description": [
              "\nIndicates whether we allow sub-feature privileges."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.allowUserProfileCollaboration",
            "type": "boolean",
            "tags": [],
            "label": "allowUserProfileCollaboration",
            "description": [
              "\nIndicates whether we allow user profile collaboration features (suggest and privileges checks APIs)."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityLicenseFeatures.layout",
            "type": "CompoundType",
            "tags": [],
            "label": "layout",
            "description": [
              "\nDescribes the layout of the login form if it's displayed."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.LoginLayout",
                "text": "LoginLayout"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.SecurityNavControlServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "SecurityNavControlServiceStart",
        "description": [],
        "path": "x-pack/plugins/security/public/nav_control/nav_control_service.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityNavControlServiceStart.getUserMenuLinks$",
            "type": "Function",
            "tags": [],
            "label": "getUserMenuLinks$",
            "description": [
              "\nReturns an Observable of the array of user menu links (the links that show up under the user's Avatar in the UI) registered by other plugins"
            ],
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "security",
                "scope": "public",
                "docId": "kibSecurityPluginApi",
                "section": "def-public.UserMenuLink",
                "text": "UserMenuLink"
              },
              "[]>"
            ],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_service.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-public.SecurityNavControlServiceStart.addUserMenuLinks",
            "type": "Function",
            "tags": [],
            "label": "addUserMenuLinks",
            "description": [
              "\nRegisters the provided user menu links to be displayed in the user menu (the links that show up under the user's Avatar in the UI)."
            ],
            "signature": [
              "(newUserMenuLink: ",
              {
                "pluginId": "security",
                "scope": "public",
                "docId": "kibSecurityPluginApi",
                "section": "def-public.UserMenuLink",
                "text": "UserMenuLink"
              },
              "[]) => void"
            ],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_service.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-public.SecurityNavControlServiceStart.addUserMenuLinks.$1",
                "type": "Array",
                "tags": [],
                "label": "newUserMenuLink",
                "description": [],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "public",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-public.UserMenuLink",
                    "text": "UserMenuLink"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/security/public/nav_control/nav_control_service.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.UiApi",
        "type": "Interface",
        "tags": [],
        "label": "UiApi",
        "description": [],
        "path": "x-pack/plugins/security/public/ui_api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.UiApi.components",
            "type": "Object",
            "tags": [],
            "label": "components",
            "description": [],
            "signature": [
              "{ getPersonalInfo: LazyComponentFn<",
              {
                "pluginId": "security",
                "scope": "public",
                "docId": "kibSecurityPluginApi",
                "section": "def-public.PersonalInfoProps",
                "text": "PersonalInfoProps"
              },
              ">; getChangePassword: LazyComponentFn<",
              {
                "pluginId": "security",
                "scope": "public",
                "docId": "kibSecurityPluginApi",
                "section": "def-public.ChangePasswordProps",
                "text": "ChangePasswordProps"
              },
              ">; }"
            ],
            "path": "x-pack/plugins/security/public/ui_api/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.UserMenuLink",
        "type": "Interface",
        "tags": [],
        "label": "UserMenuLink",
        "description": [],
        "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.UserMenuLink.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserMenuLink.iconType",
            "type": "CompoundType",
            "tags": [],
            "label": "iconType",
            "description": [],
            "signature": [
              "string | React.ComponentType<{}>"
            ],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserMenuLink.href",
            "type": "string",
            "tags": [],
            "label": "href",
            "description": [],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserMenuLink.order",
            "type": "number",
            "tags": [],
            "label": "order",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserMenuLink.setAsProfile",
            "type": "CompoundType",
            "tags": [],
            "label": "setAsProfile",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security/public/nav_control/nav_control_component.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.UserProfileBulkGetParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileBulkGetParams",
        "description": [
          "\nParameters for the bulk get API."
        ],
        "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileBulkGetParams.uids",
            "type": "Object",
            "tags": [],
            "label": "uids",
            "description": [
              "\nList of user profile identifiers."
            ],
            "signature": [
              "Set<string>"
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileBulkGetParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, suggest API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.UserProfileGetCurrentParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileGetCurrentParams",
        "description": [
          "\nParameters for the get user profile for the current user API."
        ],
        "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileGetCurrentParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, get API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-public.UserProfileSuggestParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileSuggestParams",
        "description": [
          "\nParameters for the suggest API."
        ],
        "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileSuggestParams.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nQuery string used to match name-related fields in user profiles. The following fields are treated as\nname-related: username, full_name and email."
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileSuggestParams.size",
            "type": "number",
            "tags": [],
            "label": "size",
            "description": [
              "\nDesired number of suggestions to return. The default value is 10."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-public.UserProfileSuggestParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, suggest API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/public/account_management/user_profile/user_profile_api_client.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "security",
        "id": "def-public.AuthenticationServiceStart",
        "type": "Type",
        "tags": [],
        "label": "AuthenticationServiceStart",
        "description": [
          "\nStart has the same contract as Setup for now."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "public",
            "docId": "kibSecurityPluginApi",
            "section": "def-public.AuthenticationServiceSetup",
            "text": "AuthenticationServiceSetup"
          }
        ],
        "path": "x-pack/plugins/security/public/authentication/authentication_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "security",
      "id": "def-public.SecurityPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SecurityPluginSetup",
      "description": [],
      "path": "x-pack/plugins/security/public/plugin.tsx",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginSetup.authc",
          "type": "Object",
          "tags": [],
          "label": "authc",
          "description": [
            "\nExposes authentication information about the currently logged in user."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.AuthenticationServiceSetup",
              "text": "AuthenticationServiceSetup"
            }
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginSetup.license",
          "type": "Object",
          "tags": [],
          "label": "license",
          "description": [
            "\nExposes information about the available security features under the current license."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.SecurityLicense",
              "text": "SecurityLicense"
            }
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "security",
      "id": "def-public.SecurityPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SecurityPluginStart",
      "description": [],
      "path": "x-pack/plugins/security/public/plugin.tsx",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginStart.navControlService",
          "type": "Object",
          "tags": [],
          "label": "navControlService",
          "description": [
            "\nExposes the ability to add custom links to the dropdown menu in the top right, where the user's Avatar is."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.SecurityNavControlServiceStart",
              "text": "SecurityNavControlServiceStart"
            }
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginStart.authc",
          "type": "Object",
          "tags": [],
          "label": "authc",
          "description": [
            "\nExposes authentication information about the currently logged in user."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.AuthenticationServiceSetup",
              "text": "AuthenticationServiceSetup"
            }
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginStart.userProfiles",
          "type": "Object",
          "tags": [],
          "label": "userProfiles",
          "description": [
            "\nA set of methods to work with Kibana user profiles."
          ],
          "signature": [
            "{ suggest: <D extends ",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.UserProfileData",
              "text": "UserProfileData"
            },
            ">(path: string, params: ",
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.UserProfileSuggestParams",
              "text": "UserProfileSuggestParams"
            },
            ") => Promise<",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.UserProfile",
              "text": "UserProfile"
            },
            "<D>[]>; getCurrent: <D extends ",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.UserProfileData",
              "text": "UserProfileData"
            },
            ">(params?: ",
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.UserProfileGetCurrentParams",
              "text": "UserProfileGetCurrentParams"
            },
            " | undefined) => Promise<",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.GetUserProfileResponse",
              "text": "GetUserProfileResponse"
            },
            "<D>>; bulkGet: <D extends ",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.UserProfileData",
              "text": "UserProfileData"
            },
            ">(params: ",
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.UserProfileBulkGetParams",
              "text": "UserProfileBulkGetParams"
            },
            ") => Promise<",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.UserProfile",
              "text": "UserProfile"
            },
            "<D>[]>; }"
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-public.SecurityPluginStart.uiApi",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "uiApi",
          "description": [
            "\nExposes UI components that will be loaded asynchronously."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "public",
              "docId": "kibSecurityPluginApi",
              "section": "def-public.UiApi",
              "text": "UiApi"
            }
          ],
          "path": "x-pack/plugins/security/public/plugin.tsx",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/account_settings/account_settings.tsx"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/account_settings/account_settings.tsx"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/account_settings/account_settings.tsx"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/public/applications/workplace_search/views/account_settings/account_settings.tsx"
            }
          ]
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "security",
        "id": "def-server.AuditEvent",
        "type": "Interface",
        "tags": [],
        "label": "AuditEvent",
        "description": [
          "\nAudit event schema using ECS format: https://www.elastic.co/guide/en/ecs/1.12/index.html\n\nIf you add additional fields to the schema ensure you update the Kibana Filebeat module:\nhttps://github.com/elastic/beats/tree/master/filebeat/module/kibana\n"
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "server",
            "docId": "kibSecurityPluginApi",
            "section": "def-server.AuditEvent",
            "text": "AuditEvent"
          },
          " extends ",
          {
            "pluginId": "@kbn/logging",
            "scope": "server",
            "docId": "kibKbnLoggingPluginApi",
            "section": "def-server.LogMeta",
            "text": "LogMeta"
          }
        ],
        "path": "x-pack/plugins/security/server/audit/audit_events.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.AuditEvent.message",
            "type": "string",
            "tags": [],
            "label": "message",
            "description": [],
            "path": "x-pack/plugins/security/server/audit/audit_events.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuditEvent.kibana",
            "type": "Object",
            "tags": [],
            "label": "kibana",
            "description": [],
            "signature": [
              "{ space_id?: string | undefined; session_id?: string | undefined; saved_object?: { type: string; id: string; } | undefined; authentication_provider?: string | undefined; authentication_type?: string | undefined; authentication_realm?: string | undefined; lookup_realm?: string | undefined; add_to_spaces?: readonly string[] | undefined; delete_from_spaces?: readonly string[] | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/security/server/audit/audit_events.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.AuditLogger",
        "type": "Interface",
        "tags": [],
        "label": "AuditLogger",
        "description": [],
        "path": "x-pack/plugins/security/server/audit/audit_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.AuditLogger.log",
            "type": "Function",
            "tags": [],
            "label": "log",
            "description": [
              "\nLogs an {@link AuditEvent} and automatically adds meta data about the\ncurrent user, space and correlation id.\n\nGuidelines around what events should be logged and how they should be\nstructured can be found in: `/x-pack/plugins/security/README.md`\n"
            ],
            "signature": [
              "(event: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.AuditEvent",
                "text": "AuditEvent"
              },
              " | undefined) => void"
            ],
            "path": "x-pack/plugins/security/server/audit/audit_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.AuditLogger.log.$1",
                "type": "Object",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "server",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-server.AuditEvent",
                    "text": "AuditEvent"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/security/server/audit/audit_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuditLogger.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [
              "\nIndicates whether audit logging is enabled or not.\n\nUseful for skipping resource-intense operations that don't need to be performed when audit\nlogging is disabled."
            ],
            "path": "x-pack/plugins/security/server/audit/audit_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.AuditServiceSetup",
        "type": "Interface",
        "tags": [],
        "label": "AuditServiceSetup",
        "description": [],
        "path": "x-pack/plugins/security/server/audit/audit_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.AuditServiceSetup.asScoped",
            "type": "Function",
            "tags": [],
            "label": "asScoped",
            "description": [
              "\nCreates an {@link AuditLogger} scoped to the current request.\n\nThis audit logger logs events with all required user and session info and should be used for\nall user-initiated actions.\n"
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.AuditLogger",
                "text": "AuditLogger"
              }
            ],
            "path": "x-pack/plugins/security/server/audit/audit_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.AuditServiceSetup.asScoped.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "server",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-server.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/security/server/audit/audit_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuditServiceSetup.withoutRequest",
            "type": "Object",
            "tags": [],
            "label": "withoutRequest",
            "description": [
              "\n{@link AuditLogger} for background tasks only.\n\nThis audit logger logs events without any user or session info and should never be used to log\nuser-initiated actions.\n"
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.AuditLogger",
                "text": "AuditLogger"
              }
            ],
            "path": "x-pack/plugins/security/server/audit/audit_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.AuthenticatedUser",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticatedUser",
        "description": [
          "\nRepresents the currently authenticated user."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.AuthenticatedUser",
            "text": "AuthenticatedUser"
          },
          " extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.User",
            "text": "User"
          }
        ],
        "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.authentication_realm",
            "type": "Object",
            "tags": [],
            "label": "authentication_realm",
            "description": [
              "\nThe name and type of the Realm that has authenticated the user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.lookup_realm",
            "type": "Object",
            "tags": [],
            "label": "lookup_realm",
            "description": [
              "\nThe name and type of the Realm where the user information were retrieved from."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.authentication_provider",
            "type": "Object",
            "tags": [],
            "label": "authentication_provider",
            "description": [
              "\nThe authentication provider that used to authenticate user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticationProvider",
                "text": "AuthenticationProvider"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.authentication_type",
            "type": "string",
            "tags": [],
            "label": "authentication_type",
            "description": [
              "\nThe AuthenticationType used by ES to authenticate the user.\n"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.elastic_cloud_user",
            "type": "boolean",
            "tags": [],
            "label": "elastic_cloud_user",
            "description": [
              "\nIndicates whether user is authenticated via Elastic Cloud built-in SAML realm."
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticatedUser.profile_uid",
            "type": "string",
            "tags": [],
            "label": "profile_uid",
            "description": [
              "\nUser profile ID of this user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.AuthenticationServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticationServiceStart",
        "description": [
          "\nAuthentication services available on the security plugin's start contract."
        ],
        "path": "x-pack/plugins/security/server/authentication/authentication_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticationServiceStart.apiKeys",
            "type": "Object",
            "tags": [],
            "label": "apiKeys",
            "description": [],
            "signature": [
              "{ create: (request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, createParams: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.CreateAPIKeyParams",
                "text": "CreateAPIKeyParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.CreateAPIKeyResult",
                "text": "CreateAPIKeyResult"
              },
              " | null>; areAPIKeysEnabled: () => Promise<boolean>; invalidate: (request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, params: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.InvalidateAPIKeysParams",
                "text": "InvalidateAPIKeysParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.InvalidateAPIKeyResult",
                "text": "InvalidateAPIKeyResult"
              },
              " | null>; grantAsInternalUser: (request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, createParams: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.CreateAPIKeyParams",
                "text": "CreateAPIKeyParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.GrantAPIKeyResult",
                "text": "GrantAPIKeyResult"
              },
              " | null>; invalidateAsInternalUser: (params: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.InvalidateAPIKeysParams",
                "text": "InvalidateAPIKeysParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.InvalidateAPIKeyResult",
                "text": "InvalidateAPIKeyResult"
              },
              " | null>; }"
            ],
            "path": "x-pack/plugins/security/server/authentication/authentication_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.AuthenticationServiceStart.getCurrentUser",
            "type": "Function",
            "tags": [],
            "label": "getCurrentUser",
            "description": [],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              },
              " | null"
            ],
            "path": "x-pack/plugins/security/server/authentication/authentication_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.AuthenticationServiceStart.getCurrentUser.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "server",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-server.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/security/server/authentication/authentication_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.CheckPrivilegesPayload",
        "type": "Interface",
        "tags": [],
        "label": "CheckPrivilegesPayload",
        "description": [
          "\nPrivileges that can be checked for the Kibana users."
        ],
        "path": "x-pack/plugins/security/server/authorization/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.CheckPrivilegesPayload.kibana",
            "type": "CompoundType",
            "tags": [],
            "label": "kibana",
            "description": [
              "\nA list of the Kibana specific privileges (usually generated with `security.authz.actions.*.get(...)`)."
            ],
            "signature": [
              "string | string[] | undefined"
            ],
            "path": "x-pack/plugins/security/server/authorization/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.CheckPrivilegesPayload.elasticsearch",
            "type": "Object",
            "tags": [],
            "label": "elasticsearch",
            "description": [
              "\nA set of the Elasticsearch cluster and index privileges."
            ],
            "signature": [
              "{ cluster: string[]; index: Record<string, string[]>; } | undefined"
            ],
            "path": "x-pack/plugins/security/server/authorization/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.CreateAPIKeyResult",
        "type": "Interface",
        "tags": [],
        "label": "CreateAPIKeyResult",
        "description": [
          "\nThe return value when creating an API key in Elasticsearch. The API key returned by this API\ncan then be used by sending a request with a Authorization header with a value having the\nprefix ApiKey `{token}` where token is id and api_key joined by a colon `{id}:{api_key}` and\nthen encoded to base64."
        ],
        "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.CreateAPIKeyResult.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nUnique id for this API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.CreateAPIKeyResult.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName for this API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.CreateAPIKeyResult.expiration",
            "type": "number",
            "tags": [],
            "label": "expiration",
            "description": [
              "\nOptional expiration in milliseconds for this API key"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.CreateAPIKeyResult.api_key",
            "type": "string",
            "tags": [],
            "label": "api_key",
            "description": [
              "\nGenerated API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.GrantAPIKeyResult",
        "type": "Interface",
        "tags": [],
        "label": "GrantAPIKeyResult",
        "description": [],
        "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.GrantAPIKeyResult.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nUnique id for this API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.GrantAPIKeyResult.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName for this API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.GrantAPIKeyResult.api_key",
            "type": "string",
            "tags": [],
            "label": "api_key",
            "description": [
              "\nGenerated API key"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.InvalidateAPIKeyResult",
        "type": "Interface",
        "tags": [],
        "label": "InvalidateAPIKeyResult",
        "description": [
          "\nThe return value when invalidating an API key in Elasticsearch."
        ],
        "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.InvalidateAPIKeyResult.invalidated_api_keys",
            "type": "Array",
            "tags": [],
            "label": "invalidated_api_keys",
            "description": [
              "\nThe IDs of the API keys that were invalidated as part of the request."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.InvalidateAPIKeyResult.previously_invalidated_api_keys",
            "type": "Array",
            "tags": [],
            "label": "previously_invalidated_api_keys",
            "description": [
              "\nThe IDs of the API keys that were already invalidated."
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.InvalidateAPIKeyResult.error_count",
            "type": "number",
            "tags": [],
            "label": "error_count",
            "description": [
              "\nThe number of errors that were encountered when invalidating the API keys."
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.InvalidateAPIKeyResult.error_details",
            "type": "Array",
            "tags": [],
            "label": "error_details",
            "description": [
              "\nDetails about these errors. This field is not present in the response when error_count is 0."
            ],
            "signature": [
              "{ type?: string | undefined; reason?: string | undefined; caused_by?: { type?: string | undefined; reason?: string | undefined; } | undefined; }[] | undefined"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.InvalidateAPIKeysParams",
        "type": "Interface",
        "tags": [],
        "label": "InvalidateAPIKeysParams",
        "description": [
          "\nRepresents the params for invalidating multiple API keys"
        ],
        "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.InvalidateAPIKeysParams.ids",
            "type": "Array",
            "tags": [],
            "label": "ids",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.UserProfileBulkGetParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileBulkGetParams",
        "description": [
          "\nParameters for the bulk get API."
        ],
        "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileBulkGetParams.uids",
            "type": "Object",
            "tags": [],
            "label": "uids",
            "description": [
              "\nList of user profile identifiers."
            ],
            "signature": [
              "Set<string>"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileBulkGetParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, suggest API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.UserProfileGetCurrentParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileGetCurrentParams",
        "description": [
          "\nParameters for the get user profile for the current user API."
        ],
        "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileGetCurrentParams.request",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [
              "\nUser request instance to get user profile for."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileGetCurrentParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, get API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.UserProfileRequiredPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileRequiredPrivileges",
        "description": [
          "\nThe set of privileges that users associated with the suggested user profile should have for a specified space id."
        ],
        "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileRequiredPrivileges.spaceId",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [
              "\nThe id of the Kibana Space."
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileRequiredPrivileges.privileges",
            "type": "Object",
            "tags": [],
            "label": "privileges",
            "description": [
              "\nThe set of the Kibana specific application privileges."
            ],
            "signature": [
              "{ kibana: string[]; }"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.UserProfileServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileServiceStart",
        "description": [
          "\nA set of methods to work with Kibana user profiles."
        ],
        "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileServiceStart.getCurrent",
            "type": "Function",
            "tags": [],
            "label": "getCurrent",
            "description": [
              "\nRetrieves a user profile for the current user extracted from the specified request. If the profile isn't available,\ne.g. for the anonymous users or users authenticated via authenticating proxies, the `null` value is returned."
            ],
            "signature": [
              "<D extends ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileData",
                "text": "UserProfileData"
              },
              ", L extends ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileLabels",
                "text": "UserProfileLabels"
              },
              ">(params: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.UserProfileGetCurrentParams",
                "text": "UserProfileGetCurrentParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileWithSecurity",
                "text": "UserProfileWithSecurity"
              },
              "<D, L> | null>"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.UserProfileServiceStart.getCurrent.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [
                  "Get current user profile operation parameters."
                ],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "server",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-server.UserProfileGetCurrentParams",
                    "text": "UserProfileGetCurrentParams"
                  }
                ],
                "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileServiceStart.bulkGet",
            "type": "Function",
            "tags": [],
            "label": "bulkGet",
            "description": [
              "\nRetrieves multiple user profiles by their identifiers."
            ],
            "signature": [
              "<D extends ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileData",
                "text": "UserProfileData"
              },
              ">(params: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.UserProfileBulkGetParams",
                "text": "UserProfileBulkGetParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfile",
                "text": "UserProfile"
              },
              "<D>[]>"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.UserProfileServiceStart.bulkGet.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [
                  "Bulk get operation parameters."
                ],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "server",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-server.UserProfileBulkGetParams",
                    "text": "UserProfileBulkGetParams"
                  }
                ],
                "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileServiceStart.suggest",
            "type": "Function",
            "tags": [],
            "label": "suggest",
            "description": [
              "\nSuggests multiple user profiles by search criteria."
            ],
            "signature": [
              "<D extends ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileData",
                "text": "UserProfileData"
              },
              ">(params: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.UserProfileSuggestParams",
                "text": "UserProfileSuggestParams"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfile",
                "text": "UserProfile"
              },
              "<D>[]>"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-server.UserProfileServiceStart.suggest.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [
                  "Suggest operation parameters."
                ],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "server",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-server.UserProfileSuggestParams",
                    "text": "UserProfileSuggestParams"
                  }
                ],
                "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.UserProfileSuggestParams",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileSuggestParams",
        "description": [
          "\nParameters for the suggest API."
        ],
        "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileSuggestParams.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nQuery string used to match name-related fields in user profiles. The following fields are treated as\nname-related: username, full_name and email."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileSuggestParams.hint",
            "type": "Object",
            "tags": [],
            "label": "hint",
            "description": [
              "\nExtra search criteria to improve relevance of the suggestion result. A profile matching the\nspecified hint is ranked higher in the response. But not-matching the hint does not exclude a\nprofile from the response as long as it matches the `name` field query."
            ],
            "signature": [
              "{ uids: string[]; } | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileSuggestParams.size",
            "type": "number",
            "tags": [],
            "label": "size",
            "description": [
              "\nDesired number of suggestion to return. The default value is 10."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileSuggestParams.dataPath",
            "type": "string",
            "tags": [],
            "label": "dataPath",
            "description": [
              "\nBy default, suggest API returns user information, but does not return any user data. The optional \"dataPath\"\nparameter can be used to return personal data for this user (within `kibana` namespace only)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-server.UserProfileSuggestParams.requiredPrivileges",
            "type": "Object",
            "tags": [],
            "label": "requiredPrivileges",
            "description": [
              "\nThe set of the privileges that users associated with the suggested user profile should have in the specified space.\nIf not specified, privileges check isn't performed and all matched profiles are returned irrespective to the\nprivileges of the associated users."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.UserProfileRequiredPrivileges",
                "text": "UserProfileRequiredPrivileges"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/security/server/user_profile/user_profile_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "security",
        "id": "def-server.AuthorizationServiceSetup",
        "type": "Type",
        "tags": [],
        "label": "AuthorizationServiceSetup",
        "description": [],
        "path": "x-pack/plugins/security/server/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.CasesSupportedOperations",
        "type": "Type",
        "tags": [],
        "label": "CasesSupportedOperations",
        "description": [],
        "signature": [
          "\"pushCase\" | \"createCase\" | \"createComment\" | \"createConfiguration\" | \"getCase\" | \"getComment\" | \"getTags\" | \"getReporters\" | \"getUserActions\" | \"findConfigurations\" | \"updateCase\" | \"updateComment\" | \"updateConfiguration\" | \"deleteCase\" | \"deleteComment\""
        ],
        "path": "x-pack/plugins/security/server/authorization/privileges/feature_privilege_builder/cases.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.CreateAPIKeyParams",
        "type": "Type",
        "tags": [],
        "label": "CreateAPIKeyParams",
        "description": [
          "\nRepresents the params for creating an API key"
        ],
        "signature": [
          "Omit<BaseCreateAPIKeyParams, \"role_descriptors\" | \"kibana_role_descriptors\"> & ((Pick<Required<BaseCreateAPIKeyParams>, \"role_descriptors\"> & { kibana_role_descriptors?: undefined; }) | (Pick<Required<BaseCreateAPIKeyParams>, \"kibana_role_descriptors\"> & { role_descriptors?: undefined; }))"
        ],
        "path": "x-pack/plugins/security/server/authentication/api_keys/api_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-server.ROUTE_TAG_CAN_REDIRECT",
        "type": "string",
        "tags": [],
        "label": "ROUTE_TAG_CAN_REDIRECT",
        "description": [
          "\nIf the route is marked with this tag Security can safely assume that the calling party that sends\nrequest to this route can handle redirect responses. It's particularly important if we want the\nspecific route to be able to initiate or participate in the authentication handshake that may\ninvolve redirects and will eventually redirect authenticated user to this route."
        ],
        "signature": [
          "\"security:canRedirect\""
        ],
        "path": "x-pack/plugins/security/server/routes/tags.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "security",
      "id": "def-server.SecurityPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SecurityPluginSetup",
      "description": [
        "\nDescribes public Security plugin contract returned at the `setup` stage."
      ],
      "path": "x-pack/plugins/security/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginSetup.authc",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "authc",
          "description": [],
          "signature": [
            "{ getCurrentUser: (request: ",
            {
              "pluginId": "@kbn/core-http-server",
              "scope": "server",
              "docId": "kibKbnCoreHttpServerPluginApi",
              "section": "def-server.KibanaRequest",
              "text": "KibanaRequest"
            },
            "<unknown, unknown, unknown, any>) => ",
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.AuthenticatedUser",
              "text": "AuthenticatedUser"
            },
            " | null; }"
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "encryptedSavedObjects",
              "path": "x-pack/plugins/encrypted_saved_objects/server/crypto/encryption_key_rotation_service.ts"
            },
            {
              "plugin": "encryptedSavedObjects",
              "path": "x-pack/plugins/encrypted_saved_objects/server/saved_objects/index.ts"
            },
            {
              "plugin": "actions",
              "path": "x-pack/plugins/actions/server/plugin.ts"
            },
            {
              "plugin": "data",
              "path": "src/plugins/data/server/search/session/session_service.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/server/routes/annotations.ts"
            },
            {
              "plugin": "logstash",
              "path": "x-pack/plugins/logstash/server/routes/pipeline/save.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/request_context_factory.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/request_context_factory.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/route.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/signals/create_signals_migration_route.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/signals/delete_signals_migration_route.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/signals/finalize_signals_migration_route.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/signals/open_close_signals_route.ts"
            },
            {
              "plugin": "cloudChat",
              "path": "x-pack/plugins/cloud_integrations/cloud_chat/server/routes/chat.ts"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/server/lib/timeline/utils/common.ts"
            }
          ]
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginSetup.authz",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "authz",
          "description": [],
          "signature": [
            {
              "pluginId": "security",
              "scope": "server",
              "docId": "kibSecurityPluginApi",
              "section": "def-server.AuthorizationServiceSetup",
              "text": "AuthorizationServiceSetup"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "actions",
              "path": "x-pack/plugins/actions/server/plugin.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/server/saved_objects/initialization/initialization.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/server/saved_objects/sync_task.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/server/plugin.ts"
            },
            {
              "plugin": "ml",
              "path": "x-pack/plugins/ml/server/plugin.ts"
            },
            {
              "plugin": "savedObjectsTagging",
              "path": "x-pack/plugins/saved_objects_tagging/server/request_handler_context.ts"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/server/lib/check_access.ts"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/server/lib/check_access.ts"
            },
            {
              "plugin": "enterpriseSearch",
              "path": "x-pack/plugins/enterprise_search/server/lib/check_access.ts"
            }
          ]
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginSetup.license",
          "type": "Object",
          "tags": [],
          "label": "license",
          "description": [
            "\nExposes information about the available security features under the current license."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.SecurityLicense",
              "text": "SecurityLicense"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginSetup.audit",
          "type": "Object",
          "tags": [],
          "label": "audit",
          "description": [
            "\nExposes services for audit logging."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "server",
              "docId": "kibSecurityPluginApi",
              "section": "def-server.AuditServiceSetup",
              "text": "AuditServiceSetup"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginSetup.privilegeDeprecationsService",
          "type": "Object",
          "tags": [],
          "label": "privilegeDeprecationsService",
          "description": [
            "\nExposes services to access kibana roles per feature id with the GetDeprecationsContext"
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "common",
              "docId": "kibSecurityPluginApi",
              "section": "def-common.PrivilegeDeprecationsService",
              "text": "PrivilegeDeprecationsService"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "security",
      "id": "def-server.SecurityPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SecurityPluginStart",
      "description": [
        "\nDescribes public Security plugin contract returned at the `start` stage."
      ],
      "path": "x-pack/plugins/security/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginStart.authc",
          "type": "Object",
          "tags": [],
          "label": "authc",
          "description": [
            "\nAuthentication services to confirm the user is who they say they are."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "server",
              "docId": "kibSecurityPluginApi",
              "section": "def-server.AuthenticationServiceStart",
              "text": "AuthenticationServiceStart"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginStart.authz",
          "type": "Object",
          "tags": [],
          "label": "authz",
          "description": [
            "\nAuthorization services to manage and access the permissions a particular user has."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "server",
              "docId": "kibSecurityPluginApi",
              "section": "def-server.AuthorizationServiceSetup",
              "text": "AuthorizationServiceSetup"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "security",
          "id": "def-server.SecurityPluginStart.userProfiles",
          "type": "Object",
          "tags": [],
          "label": "userProfiles",
          "description": [
            "\nUser profiles services to retrieve user profiles."
          ],
          "signature": [
            {
              "pluginId": "security",
              "scope": "server",
              "docId": "kibSecurityPluginApi",
              "section": "def-server.UserProfileServiceStart",
              "text": "UserProfileServiceStart"
            }
          ],
          "path": "x-pack/plugins/security/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "security",
        "id": "def-common.getUserDisplayName",
        "type": "Function",
        "tags": [],
        "label": "getUserDisplayName",
        "description": [
          "\nDetermines the display name for the provided user information."
        ],
        "signature": [
          "(params: ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.GetUserDisplayNameParams",
            "text": "GetUserDisplayNameParams"
          },
          ") => string"
        ],
        "path": "x-pack/plugins/security/common/model/user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.getUserDisplayName.$1",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [
              "Set of available user's name-related fields."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.GetUserDisplayNameParams",
                "text": "GetUserDisplayNameParams"
              }
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "security",
        "id": "def-common.ApiKey",
        "type": "Interface",
        "tags": [],
        "label": "ApiKey",
        "description": [],
        "path": "x-pack/plugins/security/common/model/api_key.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.username",
            "type": "string",
            "tags": [],
            "label": "username",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.realm",
            "type": "string",
            "tags": [],
            "label": "realm",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.creation",
            "type": "number",
            "tags": [],
            "label": "creation",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.expiration",
            "type": "number",
            "tags": [],
            "label": "expiration",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.invalidated",
            "type": "boolean",
            "tags": [],
            "label": "invalidated",
            "description": [],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.ApiKey.metadata",
            "type": "Object",
            "tags": [],
            "label": "metadata",
            "description": [],
            "signature": [
              "{ [x: string]: any; }"
            ],
            "path": "x-pack/plugins/security/common/model/api_key.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.AuthenticatedUser",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticatedUser",
        "description": [
          "\nRepresents the currently authenticated user."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.AuthenticatedUser",
            "text": "AuthenticatedUser"
          },
          " extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.User",
            "text": "User"
          }
        ],
        "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.authentication_realm",
            "type": "Object",
            "tags": [],
            "label": "authentication_realm",
            "description": [
              "\nThe name and type of the Realm that has authenticated the user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.lookup_realm",
            "type": "Object",
            "tags": [],
            "label": "lookup_realm",
            "description": [
              "\nThe name and type of the Realm where the user information were retrieved from."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserRealm",
                "text": "UserRealm"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.authentication_provider",
            "type": "Object",
            "tags": [],
            "label": "authentication_provider",
            "description": [
              "\nThe authentication provider that used to authenticate user."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticationProvider",
                "text": "AuthenticationProvider"
              }
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.authentication_type",
            "type": "string",
            "tags": [],
            "label": "authentication_type",
            "description": [
              "\nThe AuthenticationType used by ES to authenticate the user.\n"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.elastic_cloud_user",
            "type": "boolean",
            "tags": [],
            "label": "elastic_cloud_user",
            "description": [
              "\nIndicates whether user is authenticated via Elastic Cloud built-in SAML realm."
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticatedUser.profile_uid",
            "type": "string",
            "tags": [],
            "label": "profile_uid",
            "description": [
              "\nUser profile ID of this user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.AuthenticationProvider",
        "type": "Interface",
        "tags": [],
        "label": "AuthenticationProvider",
        "description": [
          "\nType and name tuple to identify provider used to authenticate user."
        ],
        "path": "x-pack/plugins/security/common/model/authentication_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticationProvider.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType of the Kibana authentication provider."
            ],
            "path": "x-pack/plugins/security/common/model/authentication_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.AuthenticationProvider.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the Kibana authentication provider (arbitrary string)."
            ],
            "path": "x-pack/plugins/security/common/model/authentication_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.FeaturesPrivileges",
        "type": "Interface",
        "tags": [],
        "label": "FeaturesPrivileges",
        "description": [],
        "path": "x-pack/plugins/security/common/model/features_privileges.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.FeaturesPrivileges.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[featureId: string]: string[]",
            "description": [],
            "signature": [
              "[featureId: string]:  string[]"
            ],
            "path": "x-pack/plugins/security/common/model/features_privileges.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.GetUserDisplayNameParams",
        "type": "Interface",
        "tags": [],
        "label": "GetUserDisplayNameParams",
        "description": [
          "\nSet of available name-related fields to pick as display name."
        ],
        "path": "x-pack/plugins/security/common/model/user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.GetUserDisplayNameParams.username",
            "type": "string",
            "tags": [],
            "label": "username",
            "description": [
              "\nUsername of the user."
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.GetUserDisplayNameParams.email",
            "type": "string",
            "tags": [],
            "label": "email",
            "description": [
              "\nOptional email of the user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.GetUserDisplayNameParams.full_name",
            "type": "string",
            "tags": [],
            "label": "full_name",
            "description": [
              "\nOptional full name of the user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.GetUserProfileResponse",
        "type": "Interface",
        "tags": [],
        "label": "GetUserProfileResponse",
        "description": [
          "\nUser profile enriched with session information."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.GetUserProfileResponse",
            "text": "GetUserProfileResponse"
          },
          "<D> extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfileWithSecurity",
            "text": "UserProfileWithSecurity"
          },
          "<D, ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfileLabels",
            "text": "UserProfileLabels"
          },
          ">"
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.GetUserProfileResponse.user",
            "type": "CompoundType",
            "tags": [],
            "label": "user",
            "description": [
              "\nInformation about the currently authenticated user that owns the profile."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileUserInfoWithSecurity",
                "text": "UserProfileUserInfoWithSecurity"
              },
              " & Pick<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.AuthenticatedUser",
                "text": "AuthenticatedUser"
              },
              ", \"authentication_provider\">"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdRequest",
        "type": "Interface",
        "tags": [],
        "label": "PrivilegeDeprecationsRolesByFeatureIdRequest",
        "description": [],
        "path": "x-pack/plugins/security/common/model/deprecations.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdRequest.context",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-deprecations-server",
                "scope": "server",
                "docId": "kibKbnCoreDeprecationsServerPluginApi",
                "section": "def-server.GetDeprecationsContext",
                "text": "GetDeprecationsContext"
              }
            ],
            "path": "x-pack/plugins/security/common/model/deprecations.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdRequest.featureId",
            "type": "string",
            "tags": [],
            "label": "featureId",
            "description": [],
            "path": "x-pack/plugins/security/common/model/deprecations.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdResponse",
        "type": "Interface",
        "tags": [],
        "label": "PrivilegeDeprecationsRolesByFeatureIdResponse",
        "description": [],
        "path": "x-pack/plugins/security/common/model/deprecations.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdResponse.roles",
            "type": "Array",
            "tags": [],
            "label": "roles",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.Role",
                "text": "Role"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/deprecations.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.PrivilegeDeprecationsRolesByFeatureIdResponse.errors",
            "type": "Array",
            "tags": [],
            "label": "errors",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-deprecations-common",
                "scope": "common",
                "docId": "kibKbnCoreDeprecationsCommonPluginApi",
                "section": "def-common.DeprecationsDetails",
                "text": "DeprecationsDetails"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/deprecations.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.PrivilegeDeprecationsService",
        "type": "Interface",
        "tags": [],
        "label": "PrivilegeDeprecationsService",
        "description": [],
        "path": "x-pack/plugins/security/common/model/deprecations.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.PrivilegeDeprecationsService.getKibanaRolesByFeatureId",
            "type": "Function",
            "tags": [],
            "label": "getKibanaRolesByFeatureId",
            "description": [],
            "signature": [
              "(args: ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.PrivilegeDeprecationsRolesByFeatureIdRequest",
                "text": "PrivilegeDeprecationsRolesByFeatureIdRequest"
              },
              ") => Promise<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.PrivilegeDeprecationsRolesByFeatureIdResponse",
                "text": "PrivilegeDeprecationsRolesByFeatureIdResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/security/common/model/deprecations.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-common.PrivilegeDeprecationsService.getKibanaRolesByFeatureId.$1",
                "type": "Object",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  {
                    "pluginId": "security",
                    "scope": "common",
                    "docId": "kibSecurityPluginApi",
                    "section": "def-common.PrivilegeDeprecationsRolesByFeatureIdRequest",
                    "text": "PrivilegeDeprecationsRolesByFeatureIdRequest"
                  }
                ],
                "path": "x-pack/plugins/security/common/model/deprecations.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.Role",
        "type": "Interface",
        "tags": [],
        "label": "Role",
        "description": [],
        "path": "x-pack/plugins/security/common/model/role.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.Role.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role.elasticsearch",
            "type": "Object",
            "tags": [],
            "label": "elasticsearch",
            "description": [],
            "signature": [
              "{ cluster: string[]; indices: ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.RoleIndexPrivilege",
                "text": "RoleIndexPrivilege"
              },
              "[]; run_as: string[]; }"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role.kibana",
            "type": "Array",
            "tags": [],
            "label": "kibana",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.RoleKibanaPrivilege",
                "text": "RoleKibanaPrivilege"
              },
              "[]"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role.metadata",
            "type": "Object",
            "tags": [],
            "label": "metadata",
            "description": [],
            "signature": [
              "{ [anyKey: string]: any; } | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role.transient_metadata",
            "type": "Object",
            "tags": [],
            "label": "transient_metadata",
            "description": [],
            "signature": [
              "{ [anyKey: string]: any; } | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role._transform_error",
            "type": "Array",
            "tags": [],
            "label": "_transform_error",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.Role._unrecognized_applications",
            "type": "Array",
            "tags": [],
            "label": "_unrecognized_applications",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.RoleIndexPrivilege",
        "type": "Interface",
        "tags": [],
        "label": "RoleIndexPrivilege",
        "description": [],
        "path": "x-pack/plugins/security/common/model/role.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.RoleIndexPrivilege.names",
            "type": "Array",
            "tags": [],
            "label": "names",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleIndexPrivilege.privileges",
            "type": "Array",
            "tags": [],
            "label": "privileges",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleIndexPrivilege.field_security",
            "type": "Object",
            "tags": [],
            "label": "field_security",
            "description": [],
            "signature": [
              "{ grant?: string[] | undefined; except?: string[] | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleIndexPrivilege.query",
            "type": "string",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.RoleKibanaPrivilege",
        "type": "Interface",
        "tags": [],
        "label": "RoleKibanaPrivilege",
        "description": [],
        "path": "x-pack/plugins/security/common/model/role.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.RoleKibanaPrivilege.spaces",
            "type": "Array",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleKibanaPrivilege.base",
            "type": "Array",
            "tags": [],
            "label": "base",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleKibanaPrivilege.feature",
            "type": "Object",
            "tags": [],
            "label": "feature",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.FeaturesPrivileges",
                "text": "FeaturesPrivileges"
              }
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.RoleKibanaPrivilege._reserved",
            "type": "Array",
            "tags": [],
            "label": "_reserved",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/role.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.SecurityLicense",
        "type": "Interface",
        "tags": [],
        "label": "SecurityLicense",
        "description": [],
        "path": "x-pack/plugins/security/common/licensing/license_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicense.isLicenseAvailable",
            "type": "Function",
            "tags": [],
            "label": "isLicenseAvailable",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicense.isEnabled",
            "type": "Function",
            "tags": [],
            "label": "isEnabled",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicense.getFeatures",
            "type": "Function",
            "tags": [],
            "label": "getFeatures",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.SecurityLicenseFeatures",
                "text": "SecurityLicenseFeatures"
              }
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicense.hasAtLeast",
            "type": "Function",
            "tags": [],
            "label": "hasAtLeast",
            "description": [],
            "signature": [
              "(licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean | undefined"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "security",
                "id": "def-common.SecurityLicense.hasAtLeast.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "licenseType",
                "description": [],
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "path": "x-pack/plugins/security/common/licensing/license_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicense.features$",
            "type": "Object",
            "tags": [],
            "label": "features$",
            "description": [],
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.SecurityLicenseFeatures",
                "text": "SecurityLicenseFeatures"
              },
              ">"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_service.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.SecurityLicenseFeatures",
        "type": "Interface",
        "tags": [],
        "label": "SecurityLicenseFeatures",
        "description": [
          "\nDescribes Security plugin features that depend on license."
        ],
        "path": "x-pack/plugins/security/common/licensing/license_features.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.showLogin",
            "type": "boolean",
            "tags": [],
            "label": "showLogin",
            "description": [
              "\nIndicates whether we show login page or skip it."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowLogin",
            "type": "boolean",
            "tags": [],
            "label": "allowLogin",
            "description": [
              "\nIndicates whether we allow login or disable it on the login page."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.showLinks",
            "type": "boolean",
            "tags": [],
            "label": "showLinks",
            "description": [
              "\nIndicates whether we show security links throughout the kibana app."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.showRoleMappingsManagement",
            "type": "boolean",
            "tags": [],
            "label": "showRoleMappingsManagement",
            "description": [
              "\nIndicates whether we show the Role Mappings UI."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowAccessAgreement",
            "type": "boolean",
            "tags": [],
            "label": "allowAccessAgreement",
            "description": [
              "\nIndicates whether we allow users to access agreement UI and acknowledge it."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowAuditLogging",
            "type": "boolean",
            "tags": [],
            "label": "allowAuditLogging",
            "description": [
              "\nIndicates whether we allow logging of audit events."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowRoleDocumentLevelSecurity",
            "type": "boolean",
            "tags": [],
            "label": "allowRoleDocumentLevelSecurity",
            "description": [
              "\nIndicates whether we allow users to define document level security in roles."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowRoleFieldLevelSecurity",
            "type": "boolean",
            "tags": [],
            "label": "allowRoleFieldLevelSecurity",
            "description": [
              "\nIndicates whether we allow users to define field level security in roles."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowRbac",
            "type": "boolean",
            "tags": [],
            "label": "allowRbac",
            "description": [
              "\nIndicates whether we allow Role-based access control (RBAC)."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowSubFeaturePrivileges",
            "type": "boolean",
            "tags": [],
            "label": "allowSubFeaturePrivileges",
            "description": [
              "\nIndicates whether we allow sub-feature privileges."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.allowUserProfileCollaboration",
            "type": "boolean",
            "tags": [],
            "label": "allowUserProfileCollaboration",
            "description": [
              "\nIndicates whether we allow user profile collaboration features (suggest and privileges checks APIs)."
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.SecurityLicenseFeatures.layout",
            "type": "CompoundType",
            "tags": [],
            "label": "layout",
            "description": [
              "\nDescribes the layout of the login form if it's displayed."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.LoginLayout",
                "text": "LoginLayout"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/security/common/licensing/license_features.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.User",
        "type": "Interface",
        "tags": [],
        "label": "User",
        "description": [
          "\nA set of fields describing Kibana user."
        ],
        "path": "x-pack/plugins/security/common/model/user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.User.username",
            "type": "string",
            "tags": [],
            "label": "username",
            "description": [],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.User.email",
            "type": "string",
            "tags": [],
            "label": "email",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.User.full_name",
            "type": "string",
            "tags": [],
            "label": "full_name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.User.roles",
            "type": "Object",
            "tags": [],
            "label": "roles",
            "description": [],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.User.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.User.metadata",
            "type": "Object",
            "tags": [],
            "label": "metadata",
            "description": [],
            "signature": [
              "{ _reserved: boolean; _deprecated?: boolean | undefined; _deprecated_reason?: string | undefined; } | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfile",
        "type": "Interface",
        "tags": [],
        "label": "UserProfile",
        "description": [
          "\nIMPORTANT:\n\nThe types in this file are duplicated at\n`packages/kbn-user-profile-components/src/user_profile.ts`\n\nWhen making changes please ensure to keep both files in sync.\n\nDescribes basic properties stored in user profile."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfile",
            "text": "UserProfile"
          },
          "<D>"
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfile.uid",
            "type": "string",
            "tags": [],
            "label": "uid",
            "description": [
              "\nUnique ID for of the user profile."
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfile.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [
              "\nIndicates whether user profile is enabled or not."
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfile.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [
              "\nInformation about the user that owns profile."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileUserInfo",
                "text": "UserProfileUserInfo"
              }
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfile.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [
              "\nUser specific data associated with the profile."
            ],
            "signature": [
              "{ [P in keyof D]?: D[P] | undefined; }"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileAvatarData",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileAvatarData",
        "description": [
          "\nAvatar stored in user profile."
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileAvatarData.initials",
            "type": "string",
            "tags": [],
            "label": "initials",
            "description": [
              "\nOptional initials (two letters) of the user to use as avatar if avatar picture isn't specified."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileAvatarData.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [
              "\nBackground color of the avatar when initials are used."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileAvatarData.imageUrl",
            "type": "string",
            "tags": [],
            "label": "imageUrl",
            "description": [
              "\nBase64 data URL for the user avatar image."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileUserInfo",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileUserInfo",
        "description": [
          "\nBasic user information returned in user profile."
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfo.username",
            "type": "string",
            "tags": [],
            "label": "username",
            "description": [
              "\nUsername of the user."
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfo.email",
            "type": "string",
            "tags": [],
            "label": "email",
            "description": [
              "\nOptional email of the user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfo.full_name",
            "type": "string",
            "tags": [],
            "label": "full_name",
            "description": [
              "\nOptional full name of the user."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileUserInfoWithSecurity",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileUserInfoWithSecurity",
        "description": [
          "\nExtended user information returned in user profile (both basic and security related properties)."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfileUserInfoWithSecurity",
            "text": "UserProfileUserInfoWithSecurity"
          },
          " extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfileUserInfo",
            "text": "UserProfileUserInfo"
          }
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfoWithSecurity.roles",
            "type": "Object",
            "tags": [],
            "label": "roles",
            "description": [
              "\nList of the user roles."
            ],
            "signature": [
              "readonly string[]"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfoWithSecurity.realm_name",
            "type": "string",
            "tags": [],
            "label": "realm_name",
            "description": [
              "\nName of the Elasticsearch security realm that was used to authenticate user."
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileUserInfoWithSecurity.realm_domain",
            "type": "string",
            "tags": [],
            "label": "realm_domain",
            "description": [
              "\nOptional name of the security domain that Elasticsearch security realm that was\nused to authenticate user resides in (if any)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileWithSecurity",
        "type": "Interface",
        "tags": [],
        "label": "UserProfileWithSecurity",
        "description": [
          "\nDescribes all properties stored in user profile (both basic and security related properties)."
        ],
        "signature": [
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfileWithSecurity",
            "text": "UserProfileWithSecurity"
          },
          "<D, L> extends ",
          {
            "pluginId": "security",
            "scope": "common",
            "docId": "kibSecurityPluginApi",
            "section": "def-common.UserProfile",
            "text": "UserProfile"
          },
          "<D>"
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileWithSecurity.user",
            "type": "Object",
            "tags": [],
            "label": "user",
            "description": [
              "\nInformation about the user that owns profile."
            ],
            "signature": [
              {
                "pluginId": "security",
                "scope": "common",
                "docId": "kibSecurityPluginApi",
                "section": "def-common.UserProfileUserInfoWithSecurity",
                "text": "UserProfileUserInfoWithSecurity"
              }
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserProfileWithSecurity.labels",
            "type": "Uncategorized",
            "tags": [],
            "label": "labels",
            "description": [
              "\nUser specific _searchable_ labels associated with the profile. Note that labels are considered\nsecurity related field since it's going to be used to store user's space ID."
            ],
            "signature": [
              "L"
            ],
            "path": "x-pack/plugins/security/common/model/user_profile.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserRealm",
        "type": "Interface",
        "tags": [],
        "label": "UserRealm",
        "description": [
          "\nAn Elasticsearch realm that was used to resolve and authenticate the user."
        ],
        "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "security",
            "id": "def-common.UserRealm.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nArbitrary name of the security realm."
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "security",
            "id": "def-common.UserRealm.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType of the security realm (file, native, saml etc.)."
            ],
            "path": "x-pack/plugins/security/common/model/authenticated_user.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "security",
        "id": "def-common.LoginLayout",
        "type": "Type",
        "tags": [],
        "label": "LoginLayout",
        "description": [
          "\nRepresents types of login form layouts."
        ],
        "signature": [
          "\"form\" | \"error-es-unavailable\" | \"error-xpack-unavailable\""
        ],
        "path": "x-pack/plugins/security/common/licensing/license_features.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileData",
        "type": "Type",
        "tags": [],
        "label": "UserProfileData",
        "description": [
          "\nPlaceholder for data stored in user profile."
        ],
        "signature": [
          "{ [x: string]: unknown; }"
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "security",
        "id": "def-common.UserProfileLabels",
        "type": "Type",
        "tags": [],
        "label": "UserProfileLabels",
        "description": [
          "\nType of the user profile labels structure (currently"
        ],
        "signature": [
          "{ [x: string]: string; }"
        ],
        "path": "x-pack/plugins/security/common/model/user_profile.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}