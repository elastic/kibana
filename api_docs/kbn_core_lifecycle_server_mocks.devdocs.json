{
  "id": "@kbn/core-lifecycle-server-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "parentPluginId": "@kbn/core-lifecycle-server-mocks",
        "id": "def-server.coreInternalLifecycleMock",
        "type": "Object",
        "tags": [],
        "label": "coreInternalLifecycleMock",
        "description": [],
        "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreInternalLifecycleMock.createInternalPreboot",
            "type": "Function",
            "tags": [],
            "label": "createInternalPreboot",
            "description": [],
            "signature": [
              "() => { analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-server",
                "scope": "server",
                "docId": "kibKbnCoreAnalyticsServerPluginApi",
                "section": "def-server.AnalyticsServicePreboot",
                "text": "AnalyticsServicePreboot"
              },
              ">; context: jest.Mocked<",
              "InternalContextSetup",
              ">; elasticsearch: MockedElasticSearchServicePreboot; http: ",
              {
                "pluginId": "@kbn/core-http-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerMocksPluginApi",
                "section": "def-server.InternalHttpServicePrebootMock",
                "text": "InternalHttpServicePrebootMock"
              },
              "; httpResources: { createRegistrar: jest.Mock<jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              ">, [], any>; }; uiSettings: jest.Mocked<",
              "InternalUiSettingsServicePreboot",
              ">; logging: jest.Mocked<",
              "InternalLoggingServicePreboot",
              ">; preboot: ",
              {
                "pluginId": "@kbn/core-preboot-server-mocks",
                "scope": "server",
                "docId": "kibKbnCorePrebootServerMocksPluginApi",
                "section": "def-server.InternalPrebootServicePrebootMock",
                "text": "InternalPrebootServicePrebootMock"
              },
              "; }"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreInternalLifecycleMock.createInternalSetup",
            "type": "Function",
            "tags": [],
            "label": "createInternalSetup",
            "description": [],
            "signature": [
              "() => { analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-server",
                "scope": "server",
                "docId": "kibKbnCoreAnalyticsServerPluginApi",
                "section": "def-server.AnalyticsServiceSetup",
                "text": "AnalyticsServiceSetup"
              },
              ">; capabilities: jest.Mocked<",
              {
                "pluginId": "@kbn/core-capabilities-server",
                "scope": "server",
                "docId": "kibKbnCoreCapabilitiesServerPluginApi",
                "section": "def-server.CapabilitiesSetup",
                "text": "CapabilitiesSetup"
              },
              ">; context: jest.Mocked<",
              "InternalContextSetup",
              ">; docLinks: ",
              {
                "pluginId": "@kbn/core-doc-links-server",
                "scope": "server",
                "docId": "kibKbnCoreDocLinksServerPluginApi",
                "section": "def-server.DocLinksServiceSetup",
                "text": "DocLinksServiceSetup"
              },
              "; elasticsearch: MockedInternalElasticSearchServiceSetup; featureFlags: jest.Mocked<",
              {
                "pluginId": "@kbn/core-feature-flags-server-internal",
                "scope": "server",
                "docId": "kibKbnCoreFeatureFlagsServerInternalPluginApi",
                "section": "def-server.InternalFeatureFlagsSetup",
                "text": "InternalFeatureFlagsSetup"
              },
              ">; http: ",
              {
                "pluginId": "@kbn/core-http-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerMocksPluginApi",
                "section": "def-server.InternalHttpServiceSetupMock",
                "text": "InternalHttpServiceSetupMock"
              },
              "; savedObjects: jest.Mocked<",
              "InternalSavedObjectsServiceSetup",
              ">; status: jest.Mocked<",
              "InternalStatusServiceSetup",
              ">; environment: jest.Mocked<",
              "InternalEnvironmentServicePreboot",
              ">; i18n: jest.Mocked<",
              {
                "pluginId": "@kbn/core-i18n-server",
                "scope": "server",
                "docId": "kibKbnCoreI18nServerPluginApi",
                "section": "def-server.I18nServiceSetup",
                "text": "I18nServiceSetup"
              },
              ">; httpResources: { createRegistrar: jest.Mock<jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-resources-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpResourcesServerPluginApi",
                "section": "def-server.HttpResources",
                "text": "HttpResources"
              },
              ">, [], any>; }; rendering: jest.Mocked<",
              "InternalRenderingServiceSetup",
              ">; uiSettings: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-server",
                "scope": "server",
                "docId": "kibKbnCoreUiSettingsServerPluginApi",
                "section": "def-server.UiSettingsServiceSetup",
                "text": "UiSettingsServiceSetup"
              },
              ">; logging: jest.Mocked<",
              "InternalLoggingServicePreboot",
              ">; metrics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-metrics-server",
                "scope": "server",
                "docId": "kibKbnCoreMetricsServerPluginApi",
                "section": "def-server.MetricsServiceSetup",
                "text": "MetricsServiceSetup"
              },
              ">; deprecations: jest.Mocked<",
              {
                "pluginId": "@kbn/core-deprecations-server",
                "scope": "server",
                "docId": "kibKbnCoreDeprecationsServerPluginApi",
                "section": "def-server.DeprecationRegistryProvider",
                "text": "DeprecationRegistryProvider"
              },
              ">; executionContext: jest.Mocked<",
              "IExecutionContext",
              ">; coreUsageData: jest.Mocked<",
              "InternalCoreUsageDataSetup",
              ">; customBranding: { register: jest.Mock<any, any, any>; getBrandingFor: jest.Mock<any, any, any>; }; userSettings: jest.Mocked<",
              "InternalUserSettingsServiceSetup",
              ">; security: jest.Mocked<",
              {
                "pluginId": "@kbn/core-security-server",
                "scope": "server",
                "docId": "kibKbnCoreSecurityServerPluginApi",
                "section": "def-server.SecurityServiceSetup",
                "text": "SecurityServiceSetup"
              },
              ">; userProfile: jest.Mocked<",
              {
                "pluginId": "@kbn/core-user-profile-server",
                "scope": "server",
                "docId": "kibKbnCoreUserProfileServerPluginApi",
                "section": "def-server.UserProfileServiceSetup",
                "text": "UserProfileServiceSetup"
              },
              ">; }"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreInternalLifecycleMock.createInternalStart",
            "type": "Function",
            "tags": [],
            "label": "createInternalStart",
            "description": [],
            "signature": [
              "() => { analytics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-analytics-server",
                "scope": "server",
                "docId": "kibKbnCoreAnalyticsServerPluginApi",
                "section": "def-server.AnalyticsServiceStart",
                "text": "AnalyticsServiceStart"
              },
              ">; capabilities: jest.Mocked<",
              {
                "pluginId": "@kbn/core-capabilities-server",
                "scope": "server",
                "docId": "kibKbnCoreCapabilitiesServerPluginApi",
                "section": "def-server.CapabilitiesStart",
                "text": "CapabilitiesStart"
              },
              ">; docLinks: ",
              {
                "pluginId": "@kbn/core-doc-links-server",
                "scope": "server",
                "docId": "kibKbnCoreDocLinksServerPluginApi",
                "section": "def-server.DocLinksServiceSetup",
                "text": "DocLinksServiceSetup"
              },
              "; elasticsearch: MockedInternalElasticsearchServiceStart; featureFlags: jest.Mocked<",
              {
                "pluginId": "@kbn/core-feature-flags-server",
                "scope": "server",
                "docId": "kibKbnCoreFeatureFlagsServerPluginApi",
                "section": "def-server.FeatureFlagsStart",
                "text": "FeatureFlagsStart"
              },
              ">; http: ",
              {
                "pluginId": "@kbn/core-http-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerMocksPluginApi",
                "section": "def-server.InternalHttpServiceStartMock",
                "text": "InternalHttpServiceStartMock"
              },
              "; metrics: jest.Mocked<",
              {
                "pluginId": "@kbn/core-metrics-server",
                "scope": "server",
                "docId": "kibKbnCoreMetricsServerPluginApi",
                "section": "def-server.MetricsServiceSetup",
                "text": "MetricsServiceSetup"
              },
              ">; savedObjects: jest.Mocked<",
              "InternalSavedObjectsServiceStart",
              ">; uiSettings: jest.Mocked<",
              {
                "pluginId": "@kbn/core-ui-settings-server",
                "scope": "server",
                "docId": "kibKbnCoreUiSettingsServerPluginApi",
                "section": "def-server.UiSettingsServiceStart",
                "text": "UiSettingsServiceStart"
              },
              ">; coreUsageData: jest.Mocked<",
              {
                "pluginId": "@kbn/core-usage-data-server",
                "scope": "server",
                "docId": "kibKbnCoreUsageDataServerPluginApi",
                "section": "def-server.CoreUsageDataStart",
                "text": "CoreUsageDataStart"
              },
              ">; executionContext: jest.Mocked<",
              "IExecutionContext",
              ">; deprecations: jest.Mocked<",
              {
                "pluginId": "@kbn/core-deprecations-server-internal",
                "scope": "server",
                "docId": "kibKbnCoreDeprecationsServerInternalPluginApi",
                "section": "def-server.InternalDeprecationsServiceStart",
                "text": "InternalDeprecationsServiceStart"
              },
              ">; customBranding: {}; security: ",
              {
                "pluginId": "@kbn/core-security-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreSecurityServerMocksPluginApi",
                "section": "def-server.InternalSecurityStartMock",
                "text": "InternalSecurityStartMock"
              },
              "; userProfile: jest.Mocked<",
              {
                "pluginId": "@kbn/core-user-profile-server-internal",
                "scope": "server",
                "docId": "kibKbnCoreUserProfileServerInternalPluginApi",
                "section": "def-server.InternalUserProfileServiceStart",
                "text": "InternalUserProfileServiceStart"
              },
              ">; }"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-lifecycle-server-mocks",
        "id": "def-server.coreLifecycleMock",
        "type": "Object",
        "tags": [],
        "label": "coreLifecycleMock",
        "description": [],
        "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreLifecycleMock.createPreboot",
            "type": "Function",
            "tags": [],
            "label": "createPreboot",
            "description": [],
            "signature": [
              "() => CorePrebootMockType"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreLifecycleMock.createCoreSetup",
            "type": "Function",
            "tags": [],
            "label": "createCoreSetup",
            "description": [],
            "signature": [
              "({ pluginStartDeps, pluginStartContract, }?: { pluginStartDeps?: object | undefined; pluginStartContract?: any; }) => CoreSetupMockType"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-lifecycle-server-mocks",
                "id": "def-server.coreLifecycleMock.createCoreSetup.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ pluginStartDeps?: object | undefined; pluginStartContract?: any; }"
                ],
                "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/core_setup.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-lifecycle-server-mocks",
            "id": "def-server.coreLifecycleMock.createCoreStart",
            "type": "Function",
            "tags": [],
            "label": "createCoreStart",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/utility-types-jest",
                "scope": "common",
                "docId": "kibKbnUtilityTypesJestPluginApi",
                "section": "def-common.MockedKeys",
                "text": "MockedKeys"
              },
              "<",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "server",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ">"
            ],
            "path": "packages/core/lifecycle/core-lifecycle-server-mocks/src/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}