[[logging-settings]]
=== Logging settings in {kib}
++++
<titleabbrev>Logging settings</titleabbrev>
++++

You do not need to configure any additional settings to use the logging features in {kib}. Logging is enabled by default and will log at `info` level.

NOTE: The logging configuration is validated against the predefined schema and if there are any issues with it, {kib} will fail to start with the detailed error message.

{kib} relies on three high-level entities to set the logging service: appenders, loggers, and root. These can be configured in the `logging` namespace in `kibana.yml`.

- Appenders define where log messages are displayed (stdout or console) and their layout (`pattern` or `json`). They also allow you to specify if you want the logs stored and, if so, where (file on the disk).
- Loggers define what logging settings, such as the level of verbosity and the appenders, to apply to a particular context. Each log entry context provides information about the service or plugin that emits it and any of its sub-parts, for example, `metrics.ops` or `elasticsearch.query`.
- Root is a logger that applies to all the log entries in {kib}.

The valid settings in the `logging.appenders` namespace vary depending on the appender type.
To learn more about {kib} logging configuration, go to <<logging-configuration, Configure Logging in {kib}>>.

Refer to the <<log-settings-examples, examples>> for common configuration use cases. 

[cols="2*<"]
|===
| `logging.appender.<appender-name>`
| Unique appender identifier.

| `logging.appenders.<appender-name>.type`
| Determines where the log messages are output. Options are console, file, rewrite, rolling-file.

| `logging.appenders.<appender-name>.fileName`
| Determines the filepath where the log messages are written to for file type appenders only. Required.

| `logging.appenders.<appender-name>.fileName`
| Determines the filepath where the log messages are written to for file and rolling-file appender types. Required.

| `logging.appenders.<appender-name>.policy.type`
| Specify the triggering policy for when a rollover should occur for the `rolling-file` type appender. Options are `size-limit` and `time-interval`.

| `logging.appenders.<appender-name>.policy.size`
| Specify the size at which the policy should trigger a rollover for a size-limit type `rolling-file` appender. 

2+a|
[TIP]
============
Use a string of `<count>[mb]` (e.g. '50mb').
============

| `logging.appenders.<appender-name>.policy.interval`
| Specify the time interval at which the policy should trigger a rollover for a time-interval type `rolling-file` appender. 

| `logging.appenders.<appender-name>.policy.modulate`
| Whether the interval should be adjusted to cause the next rollover to occur on the interval boundary. Boolean.

| `logging.appenders.<appender-name>.strategy.type`
| Rolling file strategy type. Only `numeric` is currently supported.

| `logging.appenders.<appender-name>.strategy.pattern`
| The suffix to append to the file path when rolling. Must include `%i`.

| `logging.appenders.<appender-name>.strategy.max`
| The maximum number of files to keep. Optional. Default is `7``.

| `logging.appenders.<appender-name>.layout.type`
| Determines how the log messages are displayed. Options are pattern or json. Required.

| `logging.appenders.<appender-name>.layout.highlight`
| Optional boolean for pattern layout only to highlight log messages in color.

| `logging.appenders.<appender-name>.layout.pattern`
| Optional string pattern for placeholders that will be replaced with data from the actual log message. Applicable to pattern type layout only.

| `logging.root.appenders`
| Specify appenders to apply to `root`. Required.

| `logging.root.level`
| Specify default verbosity for all log messages to fall back to if not specifically configured at the individual logger level. Options are all, fatal, error, warn, info, debug, trace, off. The all and off levels can be used only in configuration and are just handy shortcuts that allow you to log every log record or disable logging entirely or for a specific logger. Required.

| `logging.<logger>.level`
| Specify verbosity of log messages for <logger> context. Optional and falls back to `root` level if not configured.

| `logging.<logger>.appenders`
| Determines the appender to apply to a specific logger context as an array. Optional and falls back to the `root` appender(s) if not specified.

|===
