[[plugin-api-changes]]
== Plugin API changes in {minor-version}
++++
<titleabbrev>Plugin API changes</titleabbrev>
++++

This page discusses the plugin API changes that you need to be aware of when migrating
your application to {kib} {minor-version}.

Other versions: {kibana-ref-all}/7.15/plugin-api-changes.html[7.15] |
{kibana-ref-all}/7.14/plugin-api-changes.html[7.14] |
{kibana-ref-all}/7.13/plugin-api-changes.html[7.13] |
{kibana-ref-all}/7.12/plugin-api-changes.html[7.12] |
{kibana-ref-all}/7.11/plugin-api-changes-7-11.html[7.11] |
{kibana-ref-all}/7.10/breaking-changes-7.10.html#general-plugin-API-changes-7-10[7.10] |
{kibana-ref-all}/7.9/breaking-changes-7.9.html#general-plugin-API-changes-79[7.9] |
{kibana-ref-all}/7.8/breaking-changes-7.8.html#general-plugin-API-changes-78[7.8]

[[breaking_plugin_v7.16.0_112602]]
.Deprecation warnings logged for plugins that cannot be disabled
[%collapsible]
====

The ability for most plugins to be disabled using the `{plugin_name}.enabled`
config option has been deprecated. In 8.0, most {kib} plugins can no longer
be disabled using this option.

You can still opt-in to this feature by explicitly adding an
`enabled` property to your config schema. However, we recommend against
this when possible. This change affects whether or not a plugin's code is loaded by
{kib}'s core, introducing complexity and creating a new set of configuration
scenarios that must be tested.

To allow some aspects of your plugin to be disabled,
for example the ability to remove it from the {kib} UI,
we recommend creating "nested" configuration options. For example, use
`{plugin_name}.ui.enabled` instead of `{plugin_name}.enabled`, and then read
from the configuration at runtime to conditionally render your application.
This gives you similar functionality without preventing your plugin code from loading altogether.

Refer to https://github.com/elastic/kibana/pull/112602[#112602].

====

[[breaking_plugin_v7.16.0_109368]]
.Angular removed from doc viewer
[%collapsible]
====

You can no longer use the `directive` property when registering a `DocView` via
the `addDocView()` method in *Discover* to register an Angular doc view.
Going forward, we no longer support Angular in our plugin APIs.

Refer to https://github.com/elastic/kibana/pull/109368[#109368].

====

[[breaking_plugin_v7.16.0_109243]]
.`LegacyRequest` type removed from Core API
[%collapsible]
====

The Core API no longer accepts `LegacyRequest` in `BasePath` and `ScopeableRequet` types.

Refer to https://github.com/elastic/kibana/pull/109243[#109243].

====

[[breaking_plugin_v7.16.0_107619]]
.Legacy {es} client removed
[%collapsible]
====

The legacy {es} client is no longer available in `CoreSetup` and
`RequestHandlerContext` interfaces. Use the
https://www.elastic.co/guide/en/kibana/current/elasticsearch-service.html[new client]
instead.

Refer to https://github.com/elastic/kibana/pull/107619[#107619].

====
