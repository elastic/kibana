[[access]]
== Access {kib}

The fastest way to access {kib} is to use our hosted {es} Service. If you <<install, installed {kib} on your own>>, access {kib} through the web application.

[float]
=== Set up on cloud

include::{docs-root}/shared/cloud/ess-getting-started.asciidoc[]

[float]
[[log-on-to-the-web-application]]
=== Log on to the web application

If you are using a self-managed deployment, access {kib} through the web application on port 5601.

. Point your web browser to the machine where you are running {kib} and specify the port number. For example, `localhost:5601` or `http://YOURDOMAIN.com:5601`.
+
To remotely connect to {kib}, set <<server-host,server.host>> to a non-loopback address.

. Log on to your account.

. Go to the home page, then click *{kib}*.

. To make the {kib} page your landing page, click *Make this my landing page*.

[float]
[[status]]
=== Check the {kib} status

The status page displays information about the server resource usage and installed plugins.

To view the {kib} status page, use the status endpoint. For example, `localhost:5601/status`. 

[role="screenshot"]
image::images/kibana-status-page-7_14_0.png[Kibana server status page]

For JSON-formatted server status details, use the `localhost:5601/api/status` API endpoint. 

[float]
[[not-ready]]
=== Troubleshoot {kib} UI error

Troubleshoot the `Kibana Server is not Ready yet` error.

. From within a {kib} node, confirm the connection to {es}:
+
[source,sh]
----
curl -XGET elasticsearch_ip_or_hostname:9200/
----
. Guarantee the health of the three {kib}-backing indices.  All indices must appear and display `status:green` and `status:open`:
+
[source,sh]
----
curl -XGET elasticsearch_ip_or_hostname:9200/_cat/indices/.kibana,.kibana_task_manager,.kibana_security_session?v=true
----
. <<start-stop,Shut down all {kib} nodes>>. 
. Choose any {kib} node, then update the config to set the <<change-overall-log-level,debug logging>>.
. <<start-stop,Start the node>>, then check the start-up debug logs for `ERROR` messages or other start-up issues. 
+
For example:

* When {kib} is unable to connect to a healthy {es} cluster, errors like `master_not_discovered_exception` or `unable to revive connection` or `license is not available` errors appear.
* When one or more {kib}-backing indices are unhealthy, the `index_not_green_timeout` error appears.
