[[settings]]
== Configuring Kibana

The Kibana server reads properties from the `kibana.yml` file on startup. The default settings configure Kibana to run
on `localhost:5601`. To change the host or port number, or connect to Elasticsearch running on a different machine,
you'll need to update your `kibana.yml` file. You can also enable SSL and set a variety of other options.

.Kibana Configuration Settings
[horizontal]
`server.port:`:: *Default: 5601* Kibana is served by a back end server. This setting specifies the port to use.
`server.host:`:: *Default: "localhost"* This setting specifies the host of the back end server.
`server.basePath:`:: Enables you to specify a path to mount Kibana at if you are running behind a proxy. This only affects
 the URLs generated by Kibana, your proxy is expected to remove the basePath value before forwarding requests
 to Kibana. This setting cannot end in a slash (`/`).
`server.maxPayloadBytes:`:: *Default: 1048576* The maximum payload size in bytes for incoming server requests.
`server.name:`:: *Default: "your-hostname"* A human-readable display name that identifies this Kibana instance.
`elasticsearch.url:`:: *Default: "http://localhost:9200"* The URL of the Elasticsearch instance to use for all your
queries.
`elasticsearch.preserveHost:`:: *Default: true* When this setting’s value is true Kibana uses the hostname specified in
the `server.host` setting. When the value of this setting is `false`, Kibana uses the hostname of the host that connects
to this Kibana instance.
`kibana.index:`:: *Default: ".kibana"* Kibana uses an index in Elasticsearch to store saved searches, visualizations and
dashboards. Kibana creates a new index if the index doesn’t already exist.
`kibana.defaultAppId:`:: *Default: "discover"* The default application to load.
[[tilemap-settings]]`tilemap.url:`:: *Default: `"https://tiles.elastic.co/v1/default/{z}/{x}/{y}.png?elastic_tile_service_tos=agree&my_app_name=kibana"`* The URL to the tile
service that Kibana uses to display map tiles in tilemap visualizations.
`tilemap.options.minZoom:`:: *Default: 1* The minimum zoom level.
`tilemap.options.maxZoom:`:: *Default: 10* The maximum zoom level.
`tilemap.options.attribution:`:: *Default: `"© [Elastic Tile Service](https://www.elastic.co/elastic-tile-service)"`* The map attribution string.
`tilemap.options.subdomains:`:: An array of subdomains used by the tile service.
Specify the position of the subdomain the URL with the token `{s}`.
`elasticsearch.username:` and `elasticsearch.password:`:: If your Elasticsearch is protected with basic authentication,
these settings provide the username and password that the Kibana server uses to perform maintenance on the Kibana index at
startup. Your Kibana users still need to authenticate with Elasticsearch, which is proxied through the Kibana server.
`server.ssl.cert:` and `server.ssl.key:`:: Paths to the PEM-format SSL certificate and SSL key files, respectively. These
files enable SSL for outgoing requests from the Kibana server to the browser.
`elasticsearch.ssl.cert:` and `elasticsearch.ssl.key:`:: Optional settings that provide the paths to the PEM-format SSL
certificate and key files. These files validate that your Elasticsearch backend uses the same key files.
`elasticsearch.ssl.ca:`:: Optional setting that enables you to specify a path to the PEM file for the certificate
authority for your Elasticsearch instance.
`elasticsearch.ssl.verify:`:: *Default: true* To disregard the validity of SSL certificates, change this setting’s value
to `false`.
`elasticsearch.pingTimeout:`:: *Default: the value of the `elasticsearch.requestTimeout` setting* Time in milliseconds to
wait for Elasticsearch to respond to pings.
`elasticsearch.requestTimeout:`:: *Default: 30000* Time in milliseconds to wait for responses from the back end or
Elasticsearch. This value must be a positive integer.
`elasticsearch.requestHeadersWhitelist:`:: *Default: `[ 'authorization' ]`* List of Kibana client-side headers to send to Elasticsearch.
To send *no* client-side headers, set this value to [] (an empty list).
`elasticsearch.customHeaders:`:: *Default: `{}`* Header names and values to send to Elasticsearch. Any custom headers
cannot be overwritten by client-side headers, regardless of the `elasticsearch.requestHeadersWhitelist` configuration.
`elasticsearch.shardTimeout:`:: *Default: 0* Time in milliseconds for Elasticsearch to wait for responses from shards. Set
to 0 to disable.
`elasticsearch.startupTimeout:`:: *Default: 5000* Time in milliseconds to wait for Elasticsearch at Kibana startup before
retrying.
`pid.file:`:: Specifies the path where Kibana creates the process ID file.
`logging.dest:`:: *Default: `stdout`* Enables you specify a file where Kibana stores log output.
`logging.silent:`:: *Default: false* Set the value of this setting to `true` to suppress all logging output.
`logging.quiet:`:: *Default: false* Set the value of this setting to `true` to suppress all logging output other than
error messages.
`logging.verbose`:: *Default: false* Set the value of this setting to `true` to log all events, including system usage
information and all requests.
`ops.interval`:: *Default: 5000* Set the interval in milliseconds to sample system and process performance metrics.
The minimum value is 100.
`status.allowAnonymous`:: *Default: false* If authentication is enabled, setting this to `true` allows
unauthenticated users to access the Kibana server status API and status page.

=== Configuring Kibana for Docker

The Docker image provides several methods for configuring Kibana. The conventional
approach is to provide a `kibana.yml` file as described above, but it's
also possible to use environment variables to define settings.

==== Bind-mounted configuration

One way to configure Kibana on Docker is to provide `kibana.yml` via bind-mounting:

["source","sh",subs="attributes"]
--------------------------------------------
docker run --rm -it -v ~/kibana.yml:/usr/share/kibana/config/kibana.yml {docker-image}
--------------------------------------------

==== Environment variable configuration

Under Docker, Kibana can be configured via environment variables. The following
mappings are available:

.Docker Environment Variables
[horizontal]
**Environment Variable**:: **Kibana Setting**
`ELASTICSEARCH_CUSTOMHEADERS`:: `elasticsearch.customHeaders`
`ELASTICSEARCH_PASSWORD`:: `elasticsearch.password`
`ELASTICSEARCH_PINGTIMEOUT`:: `elasticsearch.pingTimeout`
`ELASTICSEARCH_PRESERVEHOST`:: `elasticsearch.preserveHost`
`ELASTICSEARCH_REQUESTHEADERSWHITELIST`:: `elasticsearch.requestHeadersWhitelist`
`ELASTICSEARCH_REQUESTTIMEOUT`:: `elasticsearch.requestTimeout`
`ELASTICSEARCH_SHARDTIMEOUT`:: `elasticsearch.shardTimeout`
`ELASTICSEARCH_SSL_CA`:: `elasticsearch.ssl.ca`
`ELASTICSEARCH_SSL_CERT`:: `elasticsearch.ssl.cert`
`ELASTICSEARCH_SSL_KEY`:: `elasticsearch.ssl.key`
`ELASTICSEARCH_SSL_VERIFY`:: `elasticsearch.ssl.verify`
`ELASTICSEARCH_STARTUPTIMEOUT`:: `elasticsearch.startupTimeout`
`ELASTICSEARCH_URL`:: `elasticsearch.url`
`ELASTICSEARCH_USERNAME`:: `elasticsearch.username`
`KIBANA_DEFAULTAPPID`:: `kibana.defaultAppId`
`KIBANA_INDEX`:: `kibana.index`
`LOGGING_DEST`:: `logging.dest`
`LOGGING_QUIET`:: `logging.quiet`
`LOGGING_SILENT`:: `logging.silent`
`LOGGING_VERBOSE`:: `logging.verbose`
`OPS_INTERVAL`:: `ops.interval`
`PID_FILE`:: `pid.file`
`SERVER_BASEPATH`:: `server.basePath`
`SERVER_HOST`:: `server.host`
`SERVER_MAXPAYLOADBYTES`:: `server.maxPayloadBytes`
`SERVER_NAME`:: `server.name`
`SERVER_PORT`:: `server.port`
`SERVER_SSL_CERT`:: `server.ssl.cert`
`SERVER_SSL_KEY`:: `server.ssl.key`

Environment variables take precedence over settings configured in `kibana.yml`.

==== Docker defaults
The following settings have different default values when using the Docker image:

[horizontal]
`server.host`:: `"0"`
`elasticsearch.url`:: `http://elasticsearch:9200`
`elasticsearch.username`:: `elastic`
`elasticsearch.password`:: `changeme`
