[[uptime-security]]
== Elasticsearch Security

If you use Elasticsearch security, you'll need to enable certain privileges for users
that would like to access the Uptime app and for Heartbeat as well. See the {heartbeat-ref}/feature-roles.html[Heartbeat docs] for information on configuring Heartbeat roles. 
For example, create user and support roles for both Heartbeat and Uptime users to implement the privileges:

[float]
=== Create a role for privileged Uptime users

You'll need a role that lets you access the Heartbeat indices and adjust Uptime settings. Heartbeat indices match the pattern `heartbeat-*` by default.
You can create this with the following request:

["source","sh",subs="attributes,callouts"]
---------------------------------------------------------------
PUT /_security/role/uptime_all
{ 
  "indices" : [
    {
      "names" : [
        "heartbeat-*"
      ],
      "privileges" : [
        "read",
        "view_index_metadata"
      ],
      "field_security" : {
        "grant" : [
          "*"
        ]
      },
      "allow_restricted_indices" : false
    }
  ],
  "applications": [
    {
      "application": "uptime",
      "privileges": [ "all" ],
      "resources": [ "*" ]
    }
  ],
  "transient_metadata" : {
    "enabled" : true
  }
}
---------------------------------------------------------------
// CONSOLE

[float]
=== Assign the role to a privileged user

Next, you'll need to create a user with both the `uptime` role, and another role with sufficient {kibana-ref}/kibana-privileges.html[Kibana privileges],
such as the `kibana_admin` role.
You can do this with the following request:

["source","sh",subs="attributes,callouts"]
---------------------------------------------------------------
PUT /_security/user/jacknich
{
  "password" : "j@rV1s",
  "roles" : [ "uptime_all", "kibana_admin" ],
  "full_name" : "Jack Nicholson",
  "email" : "jacknich@example.com",
  "metadata" : {
    "intelligence" : 7
  }
}
---------------------------------------------------------------
// CONSOLE

[float]
=== Create a role for read-only Uptime users

A read-only role allows assigned users to access the Heartbeat indices, but does not allow them to adjust Uptime settings.
To create this role, `application` privileges must be set to `read`, instead of `all`.

As an example, you can create an `uptime_read` role with the following request:


["source","sh",subs="attributes,callouts"]
---------------------------------------------------------------
PUT /_security/role/uptime_read
{ 
  "indices" : [
    {
      "names" : [
        "heartbeat-*"
      ],
      "privileges" : [
        "read",
        "view_index_metadata"
      ],
      "field_security" : {
        "grant" : [
          "*"
        ]
      },
      "allow_restricted_indices" : false
    }
  ],
  "applications": [
    {
      "application": "uptime",
      "privileges": [ "read" ],
      "resources": [ "*" ]
    }
  ],
  "transient_metadata" : {
    "enabled" : true
  }
}
---------------------------------------------------------------
// CONSOLE

[float]
=== Assign the role to a privileged user

Next, you'll need to create a user with both the `uptime` role, and another role with sufficient {kibana-ref}/kibana-privileges.html[Kibana privileges],
such as the `kibana_admin` role.
You can do this with the following request:

["source","sh",subs="attributes,callouts"]
---------------------------------------------------------------
PUT /_security/user/uptime_reader
{
  "password" : "j@rV1s",
  "roles" : [ "uptime_read" ],
  "full_name" : "Jack Nicholson",
  "email" : "jacknich@example.com",
  "metadata" : {
    "intelligence" : 7
  }
}
---------------------------------------------------------------
// CONSOLE
