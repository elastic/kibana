
// This is a generated file. Please don't update it directly.
// Collection: Configure Kibana
// Product: Kibana


`console.ui.enabled`::
Toggling this causes the server to regenerate assets on the next startup, which may cause a delay before pages start being served. Set to `false` to disable Console.
+
Options: `yes`, `no`, `maybe`
+
Default: `true`
+
Platforms: `Self-managed`
+
Type: static

`csp.script_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src[Content Security Policy `script-src` directive].
+
Options: `option4`, `option5`, `option6`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: static

`csp.disableUnsafeEval`::
deprecated:[8.7.0,Use `csp.script_src: ['unsafe-eval']` instead if you wish to enable `unsafe-eval`. This config option will have no effect in a future version.] Set this to `false` to add the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_eval_expressions[`unsafe-eval`] source expression to the `script-src` directive.
+
When `csp.disableUnsafeEval` is set to `true`, Kibana will use a custom version of the Handlebars template library. Handlebars is used in various locations in the Kibana frontend where custom templates can be supplied by the user when for instance setting up a visualisation. If you experience any issues rendering Handlebars templates, please set this setting to `false` and https://github.com/elastic/kibana/issues/new/choose[open an issue] in the Kibana GitHub repository.
+
Options: `option7`, `option8`, `option9`
+
Default: `true`
+
Platforms: `Self-managed`, `Elastic Cloud`
+
Type: static

`csp.worker_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/worker-src[Content Security Policy `worker-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Default: `maybe`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: static

`csp.style_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src[Content Security Policy `style-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Default: `some-fake-value`
+
Platforms: `Self-managed`, `Elastic Cloud`
+
Type: dynamic

`csp.connect_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src[Content Security Policy `connect-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Default: `some-other-fake-value`
+
Platforms: `Self-managed`
+
Type: dynamic

`csp.default_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src[Content Security Policy `default-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Default: `toast`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: dynamic

`csp.font_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/font-src[Content Security Policy `font-src` directive].
+
Default: `strudles`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: dynamic

`csp.frame_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-src[Content Security Policy `frame-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Default: `tacos`
+
Platforms: `Elastic Cloud`, `Elastic serverless`
+
Type: dynamic

`csp.img_src`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src[Content Security Policy `img-src` directive].
+
Options: `option7`, `option8`, `option9`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: dynamic

`csp.frame_ancestors`::
Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors[Content Security Policy `frame-ancestors` directive].
+
Options: `option7`, `option8`, `option9`
+
Platforms: `Self-managed`, `Elastic Cloud`
+
Type: dynamic
+
NOTE: The `frame-ancestors` directive can also be configured by using <<server-securityResponseHeaders-disableEmbedding, `server.securityResponseHeaders.disableEmbedding`>>. In that case, that takes precedence and any values in `csp.frame_ancestors` are ignored.


[[elasticsearch-ssl-alwaysPresentCertificate]] `elasticsearch.ssl.alwaysPresentCertificate`::
Controls {kib} behavior in regard to presenting a client certificate when requested by {es}. This setting applies to all outbound SSL/TLS connections to {es}, including requests that are proxied for end users.
+
Options: `option7`, `option8`, `option9`
+
Default: `false`
+
Platforms: `Self-managed`, `Elastic serverless`
+
Type: static
+
WARNING: When {es} uses certificates to authenticate end users with a PKI realm and <<elasticsearch-ssl-alwaysPresentCertificate, `elasticsearch.ssl.alwaysPresentCertificate`>> is `true`, proxied requests may be executed as the identity that is tied to the {kib} server.


[[elasticsearch-ssl-keystore-path]] `elasticsearch.ssl.keystore.path`::
Path to a PKCS#12 keystore that contains an X.509 client certificate and it's corresponding private key. These are used by {kib} to authenticate itself when making outbound SSL/TLS connections to {es}. For this setting, you must also set the `xpack.security.http.ssl.client_authentication` setting in {es} to `required` or `optional` to request a client certificate from {kib}.
+
If the keystore contains any additional certificates, they are used as a trusted certificate chain for {es}. This chain is used by {kib} to establish trust when making outbound SSL/TLS connections to {es}. In addition to this setting, trusted certificates may be specified via <<elasticsearch-ssl-certificateAuthorities, `elasticsearch.ssl.certificateAuthorities`>> and/or <<elasticsearch-ssl-truststore-path, `elasticsearch.ssl.truststore.path`>>.
+
NOTE: This setting cannot be used in conjunction with <<elasticsearch-ssl-cert-key, `elasticsearch.ssl.certificate`>> or <<elasticsearch-ssl-cert-key, `elasticsearch.ssl.key`>>.


[[elasticsearch-idleSocketTimeout]] `elasticsearch.idleSocketTimeout`::
The timeout for idle sockets kept open between {kib} and {es}. If the socket is idle for longer than this timeout, it will be closed. If you have a transparent proxy between {kib} and {es} be sure to set this value lower than or equal to the proxy's timeout.
+
Default: `60s`

`elasticsearch.customHeaders`::
Header names and values to send to {es}. Any custom headers cannot be overwritten by client-side headers, regardless of the <<elasticsearch-requestHeadersWhitelist, `elasticsearch.requestHeadersWhitelist`>> configuration.
+
Default: `{}`


[[elasticsearch-requestHeadersWhitelist]] `elasticsearch.requestHeadersWhitelist`::
List of {kib} client-side headers to send to {es}. To send *no* client-side headers, set this value to [] (an empty list). Removing the `authorization` header from being whitelisted means that you cannot use <<basic-authentication, basic authentication>> in {kib}.
+
Default: `[ 'authorization', 'es-client-authentication' ]`


[[logging-root-level]] `logging.root.level`::
Level at which a log record should be logged. Supported levels are: _all_, _fatal_, _error_, _warn_, _info_, _debug_, _trace_, _off_. Levels are ordered from _all_ (highest) to _off_ and a log record will be logged it its level is higher than or equal to the level of its logger, otherwise the log record is ignored. Use this value to <<change-overall-log-level,change the overall log level>>.
+
Options: `all`, `fatal`, `error`, `warn`, `info`, `trace`, `off`
+
Default: `info`
+
Platforms: `Self-managed`, `Elastic Cloud`, `Elastic serverless`
+
Type: static
+
TIP: Set to `all` to log all events, including system usage information and all requests. Set to `off` to silence all logs.  You can also use the logging <<logging-cli-migration, cli commands>> to set log level to `verbose` or silence all logs.
+
include::../settings-examples/example-logging-root-level.asciidoc[]


