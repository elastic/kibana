[[advanced-osquery]]
== Advanced Osquery

[float]
[[osquery-map-fields]]
=== Map result fields to ECS

When you save queries or add queries to a pack, you can optionally map Osquery results or static values to fields in
the {ecs-ref}/ecs-reference.html[Elastic Common Schema] (ECS).
This standardizes your Osquery data for use across detections, machine learning,
and any other areas that rely on ECS-compliant data.
When the query is run, the results include the original `osquery.<fields>`
and the mapped ECS fields. For example, if you update a query to map `osquery.name` to `user.name`, the query results include both fields.

. Edit saved queries or queries in a pack to map fields:

* For *Saved queries*: Open the *Saved queries* tab, and then click the edit icon for the query that you want to map.

* For *packs*: Open the *Packs* tab, edit a pack, and then click the edit icon for the query that you want to map.

. In the **ECS mapping** section, select an **ECS field** to map.

. In the **Value** column, use the dropdown on the left to choose what type of value to map to the ECS field:

** **Osquery value**: Select an Osquery field. The fields available are based on the SQL query entered, and only include fields that the query returns. When the query runs, the ECS field is set dynamically to the value of the Osquery field selected.

** **Static value**: Enter a static value. When the query runs, the ECS field is set to the value entered. For example, static fields can be used to apply `tags` or your preferred `event.category` to the query results.

. Map more fields, as needed. To remove any mapped rows, click the delete icon.

. Save your changes.

[NOTE]
=========================

* Some ECS fields are restricted and cannot be mapped. These are not available in the ECS dropdown.

* Some ECS fields are restricted to a set of allowed values, like {ecs-ref}/ecs-event.html#field-event-category[event.category]. Use the {ecs-ref}/ecs-field-reference.html[ECS Field Reference] for help when mapping fields.

* Osquery date fields have a variety of data types (including integer, text, or bigint). When mapping an Osquery date field to an ECS date field, you might need to use SQL operators in the query to get an {es}-compatible
{ref}/date.html[date] type.
=========================


[float]
[[osquery-extended-tables]]
=== Extended tables for Kubernetes queries
In addition to the Osquery schema, the Elastic-provided version of Osquery also includes the following tables to support Kubernetes containers. These can be queried with live or scheduled queries.

* `host_users`

* `host_groups`

* `host_processes`

When querying these tables, the expectation is that the `/etc/passwd`, `/etc/group`, and `/proc` are available in the container under `/hostfs` as:
`/hostfs/etc/passwd`, `/hostfs/etc/group`, and `/hostfs/proc`. For information about the fields available in these tables, see the
https://docs.elastic.co/en/integrations/osquery_manager#exported-fields[exported fields] reference.

[float]
[[osquery-status]]
=== Osquery status

A query can have the following status:

[cols="2*<"]
|===
| Successful | The query successfully completed.
| Failed | The query encountered a problem, such as an issue with the query or the agent was disconnected, and might have failed.
| Not yet responded | The query has not been sent to the agent.
| Expired | The action request timed out. The agent may be offline.
|===

NOTE: If an agent is offline, the request status remains **pending** as {kib} retries the request.
By default, a query request times out after five minutes. The time out applies to the time it takes
to deliver the action request to an agent to run a query. If the action completes after the timeout period,
the results are still returned.


[float]
[[osquery-results]]
=== Osquery results
When you run live or scheduled queries, the results are automatically
stored in an {es} index, so that you can search, analyze, and visualize this data in {kib}.
For a list of the Osquery fields that can be returned in query results,
refer to https://docs.elastic.co/en/integrations/osquery_manager#exported-fields[exported fields].
Query results can also include ECS fields, if the query has a defined ECS mapping.

Osquery responses include the following information:

* Everything prefaced with `osquery.` is part of the query response. These fields are not mapped to ECS by default.

* Results include some ECS fields by default, such as `host.*` and `agent.*`, which provide information about the host that was queried.

* For live queries, the `action_data.query` is the query that was sent.

* For scheduled queries in a pack, the `action_id` has the format `pack_<pack-name>_<query-ID>`. You can use this information to look up the query that was run.

* By default, all query results are https://osquery.readthedocs.io/en/stable/deployment/logging/#snapshot-logs[snapshot logs]
that represent a point in time with a set of results, with no
https://osquery.readthedocs.io/en/stable/deployment/logging/#differential-logs[differentials].

* Osquery data is stored in the `logs-osquery_manager.result-<namespace>` datastream, and the result row data is under the `osquery` property in the document.
