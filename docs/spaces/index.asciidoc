[role="xpack"]
[[xpack-spaces]]
== Spaces

Spaces enable you to organize your dashboards and other saved 
objects into meaningful categories. Once inside a space, you see only 
the dashboards and saved objects that belong to that space. 

{kib} creates a default space for you. 
After you create your own 
spaces, you're asked to choose a space when you log in to Kibana. You can change your 
current space at any time by using the menu in the upper left.

[role="screenshot"]
image::spaces/images/change-space.png["Change current space"]

Kibana supports spaces in several ways.  You can:

[[spaces-getting-started]]

* <<spaces-managing, View&comma; create&comma; and delete spaces>>
* <<spaces-control-feature-visibility, Control feature access based on user needs>>
* <<spaces-control-user-access, Control feature access based on user privileges>>
* <<spaces-moving-objects, Move objects between spaces>>
* <<spaces-default-route, Configure a Space-level landing page>>
* <<spaces-delete-started, Disable the Spaces feature>>

[float]
[[spaces-managing]]
=== View, create, and delete spaces

Go to **Management > Spaces** for an overview of your spaces.  This view provides actions 
for you to create, edit, and delete spaces.

[role="screenshot"]
image::spaces/images/space-management.png["Space management"]

[float]
==== Create or edit a space 

You can create as many spaces as you like. Click *Create a space* and provide a name, 
URL identifier, optional description. 

The URL identifier is a short text string that becomes part of the 
{kib} URL when you are inside that space. {kib} suggests a URL identifier based 
on the name of your space, but you can customize the identifier to your liking.
You cannot change the space identifier once you create the space.

{kib} also has an <<spaces-api, API>> 
if you prefer to create spaces programatically.

[role="screenshot"]
image::spaces/images/edit-space.png["Space management"]

[float]
==== Delete a space

Deleting a space permanently removes the space and all of its contents. 
Find the space on the *Spaces* overview page and click the trash icon in the Actions column.
You can't delete the default space, but you can customize it to your liking.

[float]
[[spaces-control-feature-visibility]]
=== Control feature access based on user needs

You have control over which features are visible in each space. 
For example, you might hide Dev Tools 
in your "Executive" space or show Stack Monitoring only in your "Admin" space.
You can define which features to show or hide when you add or edit a space.

Controlling feature 
visibility is not a security feature. To secure access 
to specific features on a per-user basis, you must configure 
<<xpack-security-authorization, Kibana Security>>.

[role="screenshot"]
image::spaces/images/edit-space-feature-visibility.png["Controlling features visiblity"]

[float]
[[spaces-rbac-tutorial]]
=== Tutorial:  Use Role Based Access Control (RBAC) to customize Kibana Spaces

Role Based Access Control (RBAC) is used to provide access to data, tools,
and Kibana Spaces.  In this tutorial you will learn how to configure roles
that provide the right users with the right access to the data, tools, and
Kibana Spaces.

Our user is Harriet.  Harriet is a developer working on a bank's
online mortgage service.  Harriet has these three requirements:

1. have access to the data for that service 
2. build visualizations and dashboards
3. monitor the performance of the system

These are access and tool requirements, and a role will be used to provide
Harriet with the access and privileges needed to get the job done.

Prerequisites:

1. **Administrative privileges** to create a space, role, and a user.  Log in as a superuser (the `elastic` user is a superuser by default)
2. A **Space**: In this tutorial we use `Dev Mortgage` as the space name. See <<spaces-managing, view, create, and delete spaces>> for details on creating a space.
3. **Data**:  You can use <<tutorial-sample-data, sample data>> or live data.  In the steps below Filebeat and Metricbeat data are used.

With Harriet's requirements in mind, here are the steps that we will work through in this tutorial:

1. Create a role named `mortgage-developer`
2. Give the role the ability to monitor the Elastic Stack
3. Give the role permission to access the data in the relevant indices
4. Give the role permission to create visualizations and dashboards 
5. Create Harriet's user account with the proper roles

[float]
==== Create a role named `mortgage-developer`

Go to **Management > Roles** 
for an overview of your roles.  This view provides actions
for you to create, edit, and delete roles.

[role="screenshot"]
image::spaces/images/role-management.png["Role management"]


You can create as many roles as you like. Click *Create role* and provide a name; 
in this tutorial use `dev-mortgage` because this role is for a developer working on the bank's mortgage application.

[float]
==== Give the role the ability to monitor the Elastic Stack

Stack monitoring is an important feature for system admins and developers.  
Both of these groups of people will use stack monitoring to look at performance.
Developers will also use stack monitoring to evaluate and tune ingest pipelines.
Note for Gail: I need to learn how to link to https://www.elastic.co/guide/en/elasticsearch/reference/7.4/monitoring-overview.html (in an elasticsearch book).

Stack monitoring is a cluster level privilege, so in *Cluster privileges* select  **monitor**

[role="screenshot"]
image::spaces/images/role-monitor-privilege.png["Monitor privilege"]

[float]
==== Give the role permission to access the data

Access to data in indices is an index level privilege, so in 
*Index privileges* add a line or lines for the indices containing the 
data for this role.  There are two privileges needed, `read` and 
`view_index_metadata`.  All of the privileges are detailed at 
Note for Gail, I need to link here also: https://www.elastic.co/guide/en/elasticsearch/reference/7.4/security-privileges.html
In the screenshots Filebeat and Metricbeat data is used, but you 
should use the index patterns for your indices.

[role="screenshot"]
image::spaces/images/role-index-privilege.png["Index privilege"]

[float]
==== Give the role permission to create visualizations and dashboards

By default, roles do not give Kibana privileges.  Click **add space privilege** and associate this role with the `Dev Mortgage` space

[role="screenshot"]
image::spaces/images/role-space-init.png["Allow Kibana"]

[role="screenshot"]
image::spaces/images/role-space-associate.png["Associate space"]

In order to create new visualizations and dashboards users with the `dev-mortgage` role need read and write (All) access to the Visualize and Dashboard features.  The Discover feature has also been given read and write access because it is common for developers to create saved searches while designing visualizations.

[role="screenshot"]
image::spaces/images/role-space-visualization.png["Associate space"]

[float]
==== Create Harriet's user account with the proper roles

Create a user for Harriet with the `dev-mortgage` role and the `monitoring-user` role which is required for users of Stack Monitoring.

Finally, have Harriet log in and access the Dev Mortgage space and create a new visualization.

[role="screenshot"]
image::spaces/images/role-new-user.png["Develoer user"]

[float]
[[spaces-control-user-access]]
=== Control feature access based on user privileges

When using Kibana with security, you can configure applications and features 
based on your usersâ€™ requirements. This means different roles can have access 
to different features in the same space. 
Power users might have privileges to create and edit visualizations and dashboards, 
while analysts or executives might have Dashboard and Canvas with read-only privileges.
See <<adding_kibana_privileges>> for details.

[role="screenshot"]
image::spaces/images/spaces-roles.png["Controlling features visiblity"]

[float]
[[spaces-moving-objects]]
=== Move saved objects between spaces

You can <<managing-saved-objects-copy-to-space, copy objects>> from one space to another
in **Management > Saved objects**.

Alternately, you can move objects using {kib}'s <<managing-saved-objects-export-objects, import and export>>
interface.

. Navigate to the space that contains your saved objects.
. Export your saved objects.
. Navigate to the space where you want to import the objects.
. Import your saved objects.
. (Optional) Delete objects in the export space that you no longer need.

{kib} also has beta <<saved-objects-api-import, import>> and 
<<saved-objects-api-export, export>> APIs if you want to automate this process.

[float]
[[spaces-default-route]]
=== Configure a Space-level landing page

You can create a custom experience for users by configuring the {kib} landing page on a per-space basis.
The landing page can route users to a specific dashboard, application, or saved object as they enter each space.
To configure the landing page, use the `defaultRoute` setting in <<kibana-general-settings, Management > Advanced settings>>.

[float]
[[spaces-delete-started]]
=== Disable and version updates

Spaces are automatically enabled in {kib}. If you don't want use this feature, 
you can disable it
by setting `xpack.spaces.enabled` to `false` in your 
`kibana.yml` configuration file.

If you are upgrading your 
version of {kib}, the default space will contain all of your existing saved objects. 

