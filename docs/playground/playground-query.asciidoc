[xpack]
[[playground-query]]
== View and modify queries

:x:                    Playground

preview::[]

Once you've set up your chat interface, you can start chatting with the model.
{x} will automatically generate {es} queries based on your questions, and retrieve the most relevant documents from your {es} indices.
The {x} UI enables you to view and modify these queries.

* Click *View query* to open the visual query editor.
* Modify the query by selecting fields to query per index.
* Click *Save changes*.

[TIP]
====
The `{query}` variable represents the user's question, rewritten as an {es} query.
====

The following screenshot shows the query editor in the {x} UI.
In this simple example, the `books` index has two fields: `author` and `name`.
Selecting a field adds it to the `fields` array in the query.

[.screenshot]
image::images/edit-query.png[View and modify queries]

[float]
[[playground-query-relevance]]
=== Improving relevance

The fields you select in the query editor determine the relevance of the retrieved documents.

Remember that the next step in the workflow is to send the retrieved documents to the LLM to answer the question.
Context length is an important factor in ensuring the model has enough information to generate a relevant answer.
Refer to <<playground-context, Optimize context>> for more information.

<<playground-troubleshooting, Troubleshooting>> provides tips on how to diagnose and fix relevance issues.

[.screenshot]



[NOTE]
====
{x} uses the {ref}/retriever.html[`retriever`] syntax for {es} queries.
Retrievers make it easier to compose and test different retrieval strategies in your search pipelines. 
====
// TODO: uncomment and add to note once following page is live
//Refer to {ref}/retrievers-overview.html[documentation] for a high level overview of retrievers.