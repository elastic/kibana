[[development-basepath]]
=== Considerations for basePath

All communication from the Kibana UI to the server needs to respect the
`server.basePath`. Here are the "blessed" strategies for dealing with this
based on the context:

[float]
==== API requests and `src`, `href` attributes

Use relative urls that will resolve from the root, not the current page url.

["source","shell"]
-----------
// ðŸš« incorrect
$http.get('../../api/plugin/things');
<img src="/plugins/kibana/images/logo.png">
<a href="#/dashboard">

// âœ… correct
$http.get('api/plugin/things');
<img src="plugins/kibana/images/logo.png">
<a href="app/kibana#/dashboard">
-----------


[float]
==== Getting a static asset url

Use webpack to import the asset into the build. This will give you a URL in
JavaScript and gives webpack a chance to perform optimizations and
cache-busting.

["source","shell"]
-----------
// in plugin/public/main.js
import uiChrome from 'ui/chrome';
import logoUrl from 'plugins/facechimp/assets/banner.png';

uiChrome.setBrand({
  logo: `url(${logoUrl}) center no-repeat`
});
-----------

[float]
==== Server side

Append `config.get('server.basePath')` to any absolute URL path.

["source","shell"]
-----------
const basePath = server.config().get('server.basePath');
server.route({
  path: '/redirect',
  handler(req, reply) {
    reply.redirect(`${basePath}/otherLocation`);
  }
});
-----------

[float]
==== BasePathProxy in dev mode

The Kibana dev server automatically runs behind a proxy with a random
`server.basePath`. This way developers will be constantly verifying that their
code works with basePath, while they write it.

To accomplish this the `serve` task does a few things:

1. change the port for the server to the `dev.basePathProxyTarget` setting (default `5603`)
2. start a `BasePathProxy` at `server.port`
  - picks a random 3-letter value for `randomBasePath`
  - redirects from `/` to `/{randomBasePath}`
  - redirects from `/{any}/app/{appName}` to `/{randomBasePath}/app/{appName}` so that refreshes should work
  - proxies all requests starting with `/{randomBasePath}/` to the Kibana server

This proxy can sometimes have unintended side effects in development, so when
needed you can opt out by passing the `--no-base-path` flag to the `serve` task
or `npm start`.

["source","shell"]
-----------
npm start -- --no-base-path
-----------