---
# This file is intended as a model of how a set of configuration settings could be rendered 
# in order to be transformed and embedded into the public docs. Many of the setting values, 
# defaults, etc. are made up just for demo purposes.

# The required fields for each setting are `setting` and `description1`.

collection: Configure Kibana
product: Kibana
settings:

  - setting: console.ui.enabled
    description1: "Toggling this causes the server to regenerate assets on the next startup, which may cause a delay before pages start being served. Set to `false` to disable Console."
    default: true
    type: static
    options:
      - yes
      - no
      - maybe
    platforms:
      - Self-managed

  - setting: csp.script_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src[Content Security Policy `script-src` directive]."
    default: ~
    type: static
    options:
      - option4
      - option5
      - option6
    platforms:
      - Self-managed
      - Elastic serverless

  - setting: csp.disableUnsafeEval
    description1: "deprecated:[8.7.0,Use `csp.script_src: ['unsafe-eval']` instead if you wish to enable `unsafe-eval`. This config option will have no effect in a future version.] Set this to `false` to add the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src#unsafe_eval_expressions[`unsafe-eval`] source expression to the `script-src` directive."
    description2: "When `csp.disableUnsafeEval` is set to `true`, Kibana will use a custom version of the Handlebars template library. Handlebars is used in various locations in the Kibana frontend where custom templates can be supplied by the user when for instance setting up a visualisation. If you experience any issues rendering Handlebars templates, please set this setting to `false` and https://github.com/elastic/kibana/issues/new/choose[open an issue] in the Kibana GitHub repository."
    default: true
    type: static
    options:
      - option7
      - option8
      - option9
    platforms:
      - Self-managed
      - Elastic Cloud

  - setting: csp.worker_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/worker-src[Content Security Policy `worker-src` directive]."
    default: maybe
    type: static
    options:
      - option7
      - option8
      - option9
    platforms:
      - Self-managed
      - Elastic serverless

  - setting: csp.style_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/style-src[Content Security Policy `style-src` directive]."
    default: some-fake-value
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
      - Self-managed
      - Elastic Cloud

  - setting: csp.connect_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/connect-src[Content Security Policy `connect-src` directive]."
    default: some-other-fake-value
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
      - Self-managed

  - setting: csp.default_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/default-src[Content Security Policy `default-src` directive]."
    default: toast
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
     - Self-managed
     - Elastic serverless

  - setting: csp.font_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/font-src[Content Security Policy `font-src` directive]."
    default: strudles
    type: dynamic
    platforms:
     - Self-managed
     - Elastic serverless

  - setting: csp.frame_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-src[Content Security Policy `frame-src` directive]."
    default: tacos
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
     - Elastic Cloud
     - Elastic serverless

  - setting: csp.img_src
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/img-src[Content Security Policy `img-src` directive]."
    default: ~
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
     - Self-managed
     - Elastic serverless

  - setting: csp.frame_ancestors
    description1: "Add sources for the https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/frame-ancestors[Content Security Policy `frame-ancestors` directive]."
    note: "The `frame-ancestors` directive can also be configured by using <<server-securityResponseHeaders-disableEmbedding, `server.securityResponseHeaders.disableEmbedding`>>. In that case, that takes precedence and any values in `csp.frame_ancestors` are ignored."
    default: ~
    type: dynamic
    options:
      - option7
      - option8
      - option9
    platforms:
     - Self-managed
     - Elastic Cloud

  - setting: elasticsearch.ssl.alwaysPresentCertificate
    id: elasticsearch-ssl-alwaysPresentCertificate
    description1: "Controls {kib} behavior in regard to presenting a client certificate when requested by {es}. This setting applies to all outbound SSL/TLS connections to {es}, including requests that are proxied for end users."
    warning: "When {es} uses certificates to authenticate end users with a PKI realm and <<elasticsearch-ssl-alwaysPresentCertificate, `elasticsearch.ssl.alwaysPresentCertificate`>> is `true`, proxied requests may be executed as the identity that is tied to the {kib} server."
    default: false
    type: static
    options:
      - option7
      - option8
      - option9
    platforms:
     - Self-managed
     - Elastic serverless

  - setting: elasticsearch.ssl.keystore.path
    id: elasticsearch-ssl-keystore-path
    description1: "Path to a PKCS#12 keystore that contains an X.509 client certificate and it's corresponding private key. These are used by {kib} to authenticate itself when making outbound SSL/TLS connections to {es}. For this setting, you must also set the `xpack.security.http.ssl.client_authentication` setting in {es} to `required` or `optional` to request a client certificate from {kib}."
    description2: "If the keystore contains any additional certificates, they are used as a trusted certificate chain for {es}. This chain is used by {kib} to establish trust when making outbound SSL/TLS connections to {es}. In addition to this setting, trusted certificates may be specified via <<elasticsearch-ssl-certificateAuthorities, `elasticsearch.ssl.certificateAuthorities`>> and/or <<elasticsearch-ssl-truststore-path, `elasticsearch.ssl.truststore.path`>>."
    note: This setting cannot be used in conjunction with <<elasticsearch-ssl-cert-key, `elasticsearch.ssl.certificate`>> or <<elasticsearch-ssl-cert-key, `elasticsearch.ssl.key`>>.

  - setting: elasticsearch.idleSocketTimeout
    id: elasticsearch-idleSocketTimeout
    description1: "The timeout for idle sockets kept open between {kib} and {es}. If the socket is idle for longer than this timeout, it will be closed. If you have a transparent proxy between {kib} and {es} be sure to set this value lower than or equal to the proxy's timeout."
    default: 60s

  - setting: elasticsearch.customHeaders
    description1: "Header names and values to send to {es}. Any custom headers cannot be overwritten by client-side headers, regardless of the <<elasticsearch-requestHeadersWhitelist, `elasticsearch.requestHeadersWhitelist`>> configuration."
    default: "{}"

  - setting: elasticsearch.requestHeadersWhitelist
    id: elasticsearch-requestHeadersWhitelist
    description1: "List of {kib} client-side headers to send to {es}. To send *no* client-side headers, set this value to [] (an empty list). Removing the `authorization` header from being whitelisted means that you cannot use <<basic-authentication, basic authentication>> in {kib}."
    default: "[ 'authorization', 'es-client-authentication' ]"

  - setting: logging.root.level
    id: logging-root-level 
    description1: "Level at which a log record should be logged. Supported levels are: _all_, _fatal_, _error_, _warn_, _info_, _debug_, _trace_, _off_. Levels are ordered from _all_ (highest) to _off_ and a log record will be logged it its level is higher than or equal to the level of its logger, otherwise the log record is ignored. Use this value to <<change-overall-log-level,change the overall log level>>."
    default: info
    type: static
    options:
      - all
      - fatal
      - error
      - warn
      - info
      - trace
      - off
    platforms:
     - Self-managed
     - Elastic Cloud
     - Elastic serverless 
    tip: "Set to `all` to log all events, including system usage information and all requests. Set to `off` to silence all logs.  You can also use the logging <<logging-cli-migration, cli commands>> to set log level to `verbose` or silence all logs."
    # This can be an example, a table, or any other text to append below the setting description.
    example: example-logging-root-level.asciidoc