[role="xpack"]
[[api-keys]]
=== API Keys

An API key enables you to create secondary credentials with the same or lower 
access rights so that you can send requests on behalf of the user.  For example, 
you might have access to an Elasticsearch cluster and want to create a cron 
job to extract data from it on a daily basis. You can create an API key tied 
to your credentials and configure it with the minimum access required by the 
script, and then put the API key credentials into the cron job.  

You can also use API keys to automate ingestion of new data from 
remote sources, without a live user interaction. 

You can create API Keys in the {kib} Console and view and invalidate 
them in *Management > Security > API Keys*.

[role="screenshot"]
image:user/security/api-keys/images/api-keys.png["API Keys UI"]

[float]
[[api-keys-security-privileges]]
=== Security privileges

You must have the `manage_security`, `manage_api_key`, or the `manage_own_api_key` 
cluster privileges to use API Keys in {kib}. You can manage roles in 
*Management > Security > Roles*, or use the <<role-management-api, {kib} Role Management API>>. 

[float]
[[api-keys-service]]
=== {es} API key service

The {es} API key service is automatically enabled when you configure 
{ref}/configuring-tls.html#tls-http[TLS on the HTTP interface]. 
This ensures that API keys are not sent in clear-text by clients.

If HTTPS connections are not enabled between {kib} and {es}, you will 
get an error message, and you cannot use or manage API keys. 
For more information, see the 
{ref}/security-api-create-api-key.html[{es} API key documentation], 
or contact your system administrator.

[float]
[[create-api-key]]
=== Create an API key
You can {ref}/security-api-create-api-key.html[create an API key] from 
the Kibana Console. For example:

[source,js]
POST /_security/api_key
{
  "name": "my_api_key",
  "expiration": "1d"
}

This creates an API key with the name my_api_key that 
expires after one day. API key names must be globally unique. 
An expiration date is optional and follows {ref}/common-options.html#time-units[{es} time unit format]. 
If an expiration is not provided, the API key does not expire.

[float]
[[view-api-keys]]
=== View your API keys
The *API Keys* UI lists your API keys, including the name, date created, 
and expiration date. If an API key expires, its status changes from Active to Expired.
If you have `manage_security` or `manage_api_key` permissions, 
you can view the API keys of all users, and see which API key was 
created by which user in which realm.

If you have only the `manage_own_api_key` permission, you see only a list of your own keys.

[float]
[[invalidate-api-key]]
=== Invalidate an API key
From the *API Keys* UI, you can invalidate API keys individually or in bulk. 
Invalidated keys are deleted in batch after seven days.

You cannot modify an API key. If you need additional privileges, 
you must create a new key with the desired configuration and invalidate the old key.

[role="screenshot"]
image:user/security/api-keys/images/api-key-invalidate.png["API Keys invalidate"]



