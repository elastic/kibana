[float]
[[lens-end-to-end]]
== Tutorial: Analyze website data on a dashboard

Most dashboards use similar types of analysis to answer key questions. In this tutorial you will base your analysis off of {kib} sample data which resembles logs from the Apache web server.

When you're finished creating the dashboard, you'll be able to answer the following questions:

* How many users have visited your website?
* What is the distribution of visitors by operating system? 
* What is the average of bytes transfer per day?
* What is the health of your website?
* What is the traffic for your website by the hour?
* What is the percentage of small compared to large transferred files?
* What are the top social media sources of website traffic, and from what countries?

[discrete]
[[add-the-sample-web-logs-data]]
=== Add the data and create the dashboard

To create visualizations of the website traffic data, add the data set, then create the dashboard.

. From the *Home* page, click *Try our sample data*.

. From *Sample web logs*, click *Add data*.

. Open the main menu, click *Dashboard*.

. On the *Dashboards* page, click *Create dashboard*.

[discrete]
[[donut-vis]]
=== View the distribution of visitors by operating system

To determine the operating systems you should continue to support, and the importance of mobile traffic from iOS devices, 
create a donut chart that displays the top operating systems that your visitors use to access your webiste.

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears, and the <<set-time-filter,time filter>> is set to *Last 90 days*.

. From the *Chart Type* dropdown, select *Donut*.

. From the *Available fields* list, drag and drop the data fields to the *Drop a field or click to add* fields in the editor.

.. Drag and drop *clientip* to the *Size by* field.

.. Drag and drop *machine.os.keyword* to the *Slice by* field.
+
[role="screenshot"]
image::images/lens_end_to_end_2_1_1.png[Donut chart with clientip and machine.os.keyword fields]

. Change the color palette. 

.. From the editor, click *Top values of machine.os.keyword*. 

.. From the *Color palette* dropdown, select *Compability*.

.. Click *Close*.
+
[role="screenshot"]
image::images/lens_end_to_end_2_1.png[Donut chart with open config panel]

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `Visitors by OS`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

[discrete]
[[mixed-multiaxis]]
=== View the average of bytes transfer per day

To prevent potential server failures and optimize the cost of website maintenance, create an area chart that displays the average of bytes transfer, 
then add a line chart layer to compare the data to the number of visitors to your website.  

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears.

. From the *Available fields* list, drag and drop *bytes* to the visualization builder.

. To zoom in on the data you want to view, click and drag your cursor across the bars. 
+
[role="screenshot"]
image::images/lens_end_to_end_3_1_1.gif[Zoom in on the data]

. Change the *timestamp* interval.

.. From the editor, click *timestamp*.

.. Select *Customize time interval*.

.. Change the *Minimum interval* to `1 days`.
+
[role="screenshot"]
image::images/lens_end_to_end_3_1.png[Customize time interval]

.. Click *Close*.

. From the *Chart Type* dropdown, select *Area*.

[discrete]
[[add-a-data-layer]]
==== Add the line chart layer

To compare the average of bytes transfer to the number of users that visit your website, add a line chart layer.

. From the editor, click *+*.
+
[role="screenshot"]
image::images/lens_end_to_end_3_2.png[Add new layer button]

. From the new layer editor, click the *Chart type* dropdown, then click the line chart.
+
[role="screenshot"]
image::images/lens_end_to_end_3_3.png[Change layer type]
+
The chart type for the visualization changes to *Mixed XY*.

. From the *Available fields* list, drag and drop the data fields to the *Drop a field or click to add* fields in the editor.

.. Drag and drop *timestamp* to the *Horizontal axis* field.

.. Drag and drop *clientip* to the *Vertical axis* field.

. Change the *timestamp* interval.

.. From the editor, click *timestamp* in the line chart layer.

.. Select *Customize time interval*.

.. Change the *Minimum interval* to `1 days`.

.. Click *Close*.

. Change the *Unique count of clientip* label and color.

.. From the editor, click *Unique count of clientip*.

.. In the *Display name* field, enter `Unique visitors` in the line chart layer.

.. In the *Series color* field, enter *#CA8EAE*.

.. Click *Close*.

[discrete]
[[configure-the-multiaxis-chart]]
==== Configure the y-axes

There is a significant difference between the *timestamp per day* and *Unique visitors* data, which makes the *Unique visitors* data difficult to read. To improve the readability, 
display the *Unique visitors* data along a second y-axis, then change the formatting. When functions contain multiple formats, separate axes are created by default. 

. From the editor, click *Unique visitors* in the line chart layer.

.. For *Axis side*, click *Right*.

.. Click *Close*.

. From the editor, click *Average of bytes* in the area chart layer. 

.. From the *Value format* dropdown, select *Bytes (1024)*. 
+
[role="screenshot"]
image::images/lens_end_to_end_3_4.png[Multiaxis chart]

.. Click *Close*.

[discrete]
[[lens-legend-position]]
==== Change the legend position and save the visualization

The visualization is done, but the legend uses a lot of space. Change the legend position to the top of the chart, then save the visualization and add it to the dashboard.

. From the *Legend* dropdown, select the top position.
+
[role="screenshot"]
image::images/lens_end_to_end_3_5.png[legend position]

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `Average Bytes vs. Unique Visitors`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

[discrete]
[[percentage-stacked-area]]
=== View the health of your website 

To detect unusual traffic, bad website links, and server errors, create a percentage stacked area chart that displays the associated response codes.

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears.

. From the *Available fields* list, drag and drop the data fields to the *Drop a field or click to add* fields in the editor.

.. Drag and drop *Records* to the *Vertical axis* field.

.. Drag and drop *@timestamp* to the *Horizontal axis* field.

. From the *Chart Type* dropdown, select *Percentage bar*.

. To remove the vertical axis label, click *Left axis*, then deselect *Show*.
+
[role="screenshot"]
image::images/lens_end_to_end_4_3.png[Turn off axis name]

[discrete]
[[add-the-response-code-filters]]
==== Add the response code filters

For each response code that you want to display, create a filter. 

. From the editor, click the *Drop a field or click to add* field for *Break down by*. 

. From *Select a function*, click *Filters*.

. Add the filter for the successful response codes. 

.. Click *All records*.

.. In the *KQL* field, enter `response.keyword>=200 AND response.keyword<300`. 

.. In the *Label* field, enter `2XX`.
+
[role="screenshot"]
image::images/lens_end_to_end_4_1.png[First filter in filters aggregation]

.. Press Return.

. Add the filter for the redirect codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=300 AND response.keyword<400`. 

.. In the *Label* field, enter `3XX`, then press Return.

. Add the filter for the client error codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=400 AND response.keyword<500`. 

.. In the *Label* field, enter `4XX`, then press Return.

. Add the filter for the server error codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=500 AND response.keyword<600`. 

.. In the *Label* field, enter `5XX`, then press Return.

. To change the color pallette, select *Status* from the *Color palette* dropdown.

.. Click *Close*.

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `Response Codes Over Time`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

[discrete]
[[histogram]]
=== View the traffic for your website by the hour 

To find the best time to shut down your website for maintenance, create a histogram that displays the traffic for your website by the hour.

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears.

. From the *Available fields* list, drag and drop *bytes* to *Vertical axis* in the editor, then configure the options.

.. Click *Average of bytes*.

.. From *Select a function*, click *Sum*.

.. In the *Display name* field, enter `Transferred bytes`.

.. From the *Value format* dropdown, select `Bytes (1024)`.

.. Click *Close*.

. From the *Available fields* list, drag and drop *hour_of_day* to *Horizontal axis* in the editor, then configure the options.

.. Click *hour_of_day*.

.. Click and slide the *Intervals granularity* slider until the horizontal axis displays hourly intervals.
+
[role="screenshot"]
image::images/lens_end_to_end_5_2.png[Create custom ranges]

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `Hourly Traffic Distribution`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

[discrete]
[[custom-ranges]]
=== View the percent of small versus large transferred files 
 
To determine if your users transfer more small files versus large files, create a pie chart that displays the percentage of each size. 

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears.

. From the *Available fields* list, drag and drop *bytes* to *Vertical axis* in the editor, then configure the options.

.. Click *Average of bytes*.

.. From *Select a function*, click *Sum*.

.. Click *Close*.

. From the *Available fields* list, drag and drop *bytes* to *Break down by* in the editor, then specify the file size ranges.

.. Click *bytes*.

.. Click *Create custom ranges*, enter the following, then press Return:

* *Ranges* &mdash; `0` -> `10240`

* *Label* &mdash; `Below 10KB`

.. Click *Add range*, enter the following, then press Return:

* *Ranges* &mdash; `10240` -> `+∞`

* *Label* &mdash; `Above 10KB`
+
[role="screenshot"]
image::images/lens_end_to_end_6_1.png[Custom ranges configuration]

.. From the *Value format* dropdown, select *Bytes (1024)*.

.. Click *Close*.

. From the *Chart Type* dropdown, select *Pie*.
+
[role="screenshot"]
image::images/lens_end_to_end_6_2.png[Files size distribution]

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `File size distribution`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

[discrete]
[[treemap]]
=== View the top sources of website traffic

To determine how users find out about your website and where your users are located, create a treemap that displays the percentage of users that 
enter your website from specific social media websites, and the top countries where users are located.  

. From the dashboard, click *Create panel*, then click *Lens* on the *New visualization* window.

. Make sure the *kibana_sample_data_logs* index appears.

. From the *Chart Type* dropdown, select *Treemap*.

. From the *Available fields* list, drag and drop *Records* to the *Size by* field in the editor. 

. From the editor, click the *Drop a field or click to add* field for *Group by*, then create a filter for each website traffic source.

.. From *Select a function*, click *Filters*.

.. Click *All records*, enter the following, then press Return:

* *KQL* &mdash; `referer : *facebook.com*`

* *Label* &mdash; `Facebook`

.. Click *Add a filter*, enter the following, then press Return:

* *KQL* &mdash; `referer : *twitter.com*`

* *Label* &mdash; `Twitter`

.. Click *Add a filter*, enter the following, then press Return:

* *KQL* &mdash; `NOT referer : *twitter* OR NOT referer: *facebook.com*`

* *Label* &mdash; `Other`

.. Click *Close*.

[discrete]
[[add-the-countries]]
==== Add the geographic data

To determine the top countries where users are located, add the geographic data, then save and add the visualization to the dashboard.

Compare the top sources of website traffic data to the top three countries. 

. From the *Available fields* list, drag and drop *geo.src* to the visualization builder. 

. To change the *Group by* order, click and drag *Top values of geo.src* so that it appears first in the editor.
+
[role="screenshot"]
image::images/lens_end_to_end_7_2.png[Treemap vis]

. To view only the Facebook and Twitter data, remove the *Other* category. 

.. From the editor, click *Top values of geo.src*.

.. From the *Advanced* dropdown, deselect *Group other values as "Other"*.
+
[role="screenshot"]
image::images/lens_end_to_end_7_3.png[Group other values as Other]

.. Click *Close*.

. Save the visualization, then add it to the dashboard.

.. From the toolbar, click *Save*.

..  In the *Title* field, enter `Traffic Source For Top 3 Countries`. 

.. Select *Add to dashboard after saving*.

.. Click *Save and return*.

That's it! You've created a dashboard that provides you with a complete picture of your website data.

[role="screenshot"]
image::images/lens_end_to_end_dashboard.png[Final dashboard vis]
