[[create-a-dashboard-of-panels-with-web-server-data]]
== Tutorial: Build your first dashboard

Learn the most common ways to build a dashboard from your own data.
The tutorial will use sample data from the perspective of an analyst looking
at website logs, but this type of dashboard works on any type of data.
Before using this tutorial, you should be familiar with the <<kibana-concepts-analysts>>

[role="screenshot"]
image::images/lens_end_to_end_dashboard.png[Final dashboard vis]

[discrete]
[[add-the-data-and-create-the-dashboard]]
=== Add the data and create the dashboard

If you are working with your own data, you should already have an <<index-patterns, index pattern>>.
To install the sample logs that contain fake website traffic:

. From the {kib} *Home* page, click *Try our sample data*.

. From *Sample web logs*, click *Add data*.

Then create a new dashboard:

. Open the main menu, click *Dashboard*.

. Click *Create dashboard*.

. Set the <<set-time-filter,time filter>> to *Last 90 days*.

You don't need to save the dashboard while it's in draft mode.

[float]
[[open-and-set-up-lens]]
=== Open and set up Lens

*Lens* is the visualization builder recommended for most users.
With *Lens*, you identify the data fields you want to visualize, drag and drop the fields, then watch as
*Lens* uses heuristics to apply the fields and create a visualization for you.

. From the dashboard, click *Create panel*.

. On the *New visualization* window, click *Lens*.
+
[role="screenshot"]
image::images/lens_end_to_end_1_1.png[New visualization popover]

. Make sure the *kibana_sample_data_logs* index appears. You may need to select
a different index pattern from the menu.

[discrete]
[[view-the-number-of-website-visitors]]
=== View the unique count of a field

The simplest visualization in Lens is the Metric. It lets you display a big
number using an {es} aggregation function. Use "unique count", also known
as cardinality, to get an approximate count of the unique values in your field.

To determine how many users have visited your website within the last 90 days, build
a metric visualization on the IP address field:

. From the *Chart Type* dropdown, select *Metric*.
+
[role="screenshot"]
image::images/lens_end_to_end_1_2_1.png[Chart Type dropdown with Metric selected]

. From the *Available fields* list, drag and drop *clientip* to the visualization builder.
+
[role="screenshot"]
image::images/lens_end_to_end_1_3.png[Changed type and dropped clientip field]

. In the editor, click *Unique count of clientip*.

.. In the *Display name* field, enter `Unique visitors`.

.. Click *Close*.
+
[role="screenshot"]
image::images/lens_end_to_end_1_4.png[Flyout config open]

. Click *Save and return*. You will return to the dashboard, where you can customize
the layout and size of the newly added panel.

[discrete]
[[mixed-multiaxis]]
=== View a metric over time

The logs sample data has a default time field named `timestamp`, which *Lens* uses to
simplify chart building. To see bytes over time, drag and drop *bytes* from the field list
to the visualization builder. If your data has multiple time fields, drag and drop your
specific time field to replace the default.

*Lens* chooses a date interval automatically. To zoom in on the data you want to view,
click and drag your cursor across the bars. 
+
[role="screenshot"]
image::images/lens_end_to_end_3_1_1.gif[Zoom in on the data]

If you want more control over the time interval, customize it:

. In the editor, click *timestamp*.

. Select *Customize time interval*.

. Change the *Minimum interval* to `1 days`, then click *Close*.
+
[role="screenshot"]
image::images/lens_end_to_end_3_1.png[Customize time interval]

Bar charts are not always the best way to display metrics. You can switch the chart
type at any time. Open the chart switcher and choose *Area* now.

[discrete]
[[view-the-distribution-of-visitors-by-operating-system]]
=== View the unique count broken down by another field

Dashboards will combine multiple panels to give you a bigger picture summary
of your data. A common technique is to break down the most frequent values
as a percentage. If you want to break down by each exactly matching value,
such as to see the most frequent operating systems, use the *top values* function and
choose a chart type that displays in percentages:

. Open *Lens* and select *Donut* from the *Chart Type* dropdown.

. Drag and drop *clientip* to the *Size by* field.

. Drag and drop *machine.os.keyword* to the *Slice by* field.
+
[role="screenshot"]
image::images/lens_end_to_end_2_1_1.png[Donut chart with clientip and machine.os.keyword fields]

*Lens* chooses a default color palette and adds a visual indicator to the dimension that controls
the color. To change the color:

. In the editor, click on *Top values of machine.os.keyword*, which has a color indicator. 

. From the *Color palette* dropdown, select *Compatibility*.

. Click *Close*.
+
[role="screenshot"]
image::images/lens_end_to_end_2_1.png[Donut chart with open config panel]

. Click *Save and return*.

Because *top values* uses exact matches, there is no deduplication of similar values like "win 7" and "win 8".
The following tutorials will explain how to break down using more customizable groups.

[discrete]
[[custom-ranges]]
=== Compare a metric on a subset to the whole

To compare a subset to the whole you need to have non-overlapping data. You can build this type of
comparison using *ranges* for numeric data or *filters* for any data type. Filters can include ranges,
but ranges are simpler to use.

To determine if your users transfer more small files versus large files, create a pie chart that displays the percentage of each size: 

. From the *Available fields* list, drag and drop *bytes* to *Vertical axis* in the editor.

. Click *Median of bytes* and then select *Sum* instead. Then *Close*.

. From the *Available fields* list, drag and drop *bytes* to *Break down by* in the editor, then specify the file size ranges.

.. Click *bytes*.

.. Click *Create custom ranges*, enter the following, then press Return:

* *Ranges* &mdash; `0` -> `10240`

* *Label* &mdash; `Below 10KB`

.. Click *Add range*, enter the following, then press Return:

* *Ranges* &mdash; `10240` -> `+âˆž`

* *Label* &mdash; `Above 10KB`
+
[role="screenshot"]
image::images/lens_end_to_end_6_1.png[Custom ranges configuration]

.. From the *Value format* dropdown, select *Bytes (1024)*, then click *Close*.

. From the *Chart Type* dropdown, select *Pie*.
+
[role="screenshot"]
image::images/lens_end_to_end_6_2.png[Files size distribution]

. Click *Save and return*.

[discrete]
[[percentage-stacked-area]]
=== Create a time series chart with a break down

HTTP status codes have specific meanings based on their range. To show the percentage of errors over time:

. From the *Available fields* list, drag and drop the data fields to the dimension:

.. Drag and drop *Records* to the *Vertical axis* field.

.. Drag and drop *@timestamp* to the *Horizontal axis* field.

. From the *Chart Type* dropdown, select *Percentage bar*.

. To remove the vertical axis label, click *Left axis*, then deselect *Show*.
+
[role="screenshot"]
image::images/lens_end_to_end_4_3.png[Turn off axis name]

For each response code that you want to break down, create a filter. 

. In the editor, click the *Drop a field or click to add* field for *Break down by*.

. From *Select a function*, click *Filters*.

. Add the filter for the successful response codes. 

.. Click *All records*.

.. In the *KQL* field, enter `response.keyword>=200 AND response.keyword<300`. 

.. In the *Label* field, enter `2XX`, then press Return.
+
[role="screenshot"]
image::images/lens_end_to_end_4_1.png[First filter in filters aggregation]

. Add the filter for the redirect codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=300 AND response.keyword<400`. 

.. In the *Label* field, enter `3XX`, then press Return.

. Add the filter for the client error codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=400 AND response.keyword<500`. 

.. In the *Label* field, enter `4XX`, then press Return.

. Add the filter for the server error codes. 

.. Click *Add a filter*.

.. In the *KQL* field, enter `response.keyword>=500 AND response.keyword<600`. 

.. In the *Label* field, enter `5XX`, then press Return.

. To change the color palette, select *Status* from the *Color palette* dropdown, then click *Close*.

. Click *Save and return*.

[discrete]
[[histogram]]
=== View the numeric distribution in a histogram

Use the *ranges* function in *Lens* to see a numeric distribution. For logs data, this might
be used to find the best time to shut down your website for maintenance. You can do this by looking
at the count of records or the sum of total bytes within each histogram interval.
To create a numeric histogram showing total traffic per hour:

. From the *Available fields* list, drag and drop *bytes* to *Vertical axis* in the editor.

. Click *Median of bytes* and choose the *Sum* function instead.

. In the *Display name* field, enter `Transferred bytes`.

. From the *Value format* dropdown, select `Bytes (1024)`, then click *Close*.

. From the *Available fields* list, drag and drop *hour_of_day* to *Horizontal axis* in the editor.

. Click *hour_of_day*, and then slide the *Intervals granularity* slider until the horizontal axis displays hourly intervals.
+
[role="screenshot"]
image::images/lens_end_to_end_5_2.png[Create custom ranges]

. Click *Save and return*.

[discrete]
[[treemap]]
=== Create a multi-level break down

*Lens* supports multi-level breakdowns in the data table and proportion charts. For example,
to create a chart which breaks down the traffic sources and user geography, use the *filters*
function and *top values* function:

. From the *Chart Type* dropdown, select *Treemap*.

. From the *Available fields* list, drag and drop *Records* to the *Size by* field in the editor. 

. In the editor, click the *Drop a field or click to add* field for *Group by*, then create a filter for each website traffic source.

.. From *Select a function*, click *Filters*.

.. Click *All records*, enter the following, then press Return:

* *KQL* &mdash; `referer : *facebook.com*`

* *Label* &mdash; `Facebook`

.. Click *Add a filter*, enter the following, then press Return:

* *KQL* &mdash; `referer : *twitter.com*`

* *Label* &mdash; `Twitter`

.. Click *Add a filter*, enter the following, then press Return:

* *KQL* &mdash; `NOT referer : *twitter* OR NOT referer: *facebook.com*`

* *Label* &mdash; `Other`

.. Click *Close*.

Then add the next break down by geography:

. From the *Available fields* list, drag and drop *geo.src* to the visualization builder. 

. To change the *Group by* order, click and drag *Top values of geo.src* so that it appears first in the editor.
+
[role="screenshot"]
image::images/lens_end_to_end_7_2.png[Treemap vis]

. To view only the Facebook and Twitter data, remove the *Other* category. 

.. In the editor, click *Top values of geo.src*.

.. From the *Advanced* dropdown, deselect *Group other values as "Other"*, then click *Close*.
+
[role="screenshot"]
image::images/lens_end_to_end_7_3.png[Group other values as Other]

. Click *Save and return*.

[discrete]
=== Save the dashboard

Now that you have a complete overview of your web server data, save the dashboard.

. In the toolbar, click *Save*.

. On the *Save dashboard* window, enter `Web server data`, then click *Save*.
