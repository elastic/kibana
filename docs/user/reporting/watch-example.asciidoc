To automatically generate reports with a watch, you need to configure {watcher} to trust the {kib} serverâ€™s certificate.

[role="xpack"]
[[securing-reporting]]
==== Secure the reporting endpoints

. Enable {stack-security-features} on your {es} cluster. For more information, see {ref}/security-getting-started.html[Getting started with security].

. Configure TLS/SSL encryption for the {kib} server. For more information, see <<configuring-tls>>.

. Specify the {kib} server's CA certificate chain in `elasticsearch.yml`:
+
--
If you are using your own CA to sign the {kib} server certificate, then you need to specify the CA certificate chain in {es} to properly establish trust in TLS connections between {watcher} and {kib}. If your CA certificate chain is contained in a PKCS #12 trust store, specify it like so:

[source,yaml]
--------------------------------------------------------------------------------
xpack.http.ssl.truststore.path: "/path/to/your/truststore.p12"
xpack.http.ssl.truststore.type: "PKCS12"
xpack.http.ssl.truststore.password: "optional decryption password"
--------------------------------------------------------------------------------

Otherwise, if your CA certificate chain is in PEM format, specify it like so:

[source,yaml]
--------------------------------------------------------------------------------
xpack.http.ssl.certificate_authorities: ["/path/to/your/cacert1.pem", "/path/to/your/cacert2.pem"]
--------------------------------------------------------------------------------

For more information, see {ref}/notification-settings.html#ssl-notification-settings[the {watcher} HTTP TLS/SSL Settings].
--

. Add one or more users who have the permissions necessary to use {kib} and {report-features}. For more information, see <<reporting-roles-management-ui>>.
+
Once you've enabled SSL for {kib}, all requests to the reporting endpoints must include valid credentials.

[float]
[[configure-a-watch]]
==== Configure a watch

To configure a watch to email reports, use the `reporting` attachment type in an `email` action. For more information, refer to {ref}/actions-email.html#configuring-email[Configuring email accounts].

For example, the following watch generates a PDF report and emails the report every hour:

[source,js]
---------------------------------------------------------
PUT _watcher/watch/error_report
{
  "trigger" : {
    "schedule": {
      "interval": "1h"
    }
  },
  "actions" : {
    "email_admin" : { <1>
      "email": {
        "to": "'Recipient Name <recipient@example.com>'",
        "subject": "Error Monitoring Report",
        "attachments" : {
          "error_report.pdf" : {
            "reporting" : {
              "url": "http://0.0.0.0:5601/api/reporting/generate/printablePdf?jobParams=...", <2>
              "retries":40, <3>
              "interval":"15s", <4>
              "auth":{ <5>
                "basic":{
                  "username":"elastic",
                  "password":"changeme"
                }
              }
            }
          }
        }
      }
    }
  }
}
---------------------------------------------------------
// CONSOLE

<1> Configure at least one email account to enable Watcher to send email. For more information, refer to {ref}/actions-email.html#configuring-email[Configuring email accounts].
<2> An example POST URL. You can copy and paste the URL for any report.
<3> Optional, default is `40`.
<4> Optional, default is `15s`.
<5> User credentials for a user with permission to access {kib} and the {report-features}. For more information, refer to <<configuring-reporting>>.

[NOTE]
====
*Reporting* is integrated with Watcher only as an email attachment type.

The report generation URL might contain date-math expressions that cause the watch to fail with a `parse_exception`. To avoid a failed watch, remove curly braces `{`  `}` from date-math expressions and URL-encode characters.
For example, `...(range:(%27@timestamp%27:(gte:now-15m%2Fd,lte:now%2Fd))))...`

For more information about configuring watches, refer to {ref}/how-watcher-works.html[How Watcher works].
====
