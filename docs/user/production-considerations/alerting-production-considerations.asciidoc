[role="xpack"]
[[alerting-production-considerations]]
== Production considerations

Alerting runs both alert checks and actions as persistent background tasks managed by the Task Manager.

When relying on alerts and actions as mission critical services, make sure you follow the Task Manager <<task-manager-production-considerations>>.

[float]
[[alerting-background-tasks]]
=== Running background alert checks and actions

{kib} uses <<task-manager>> to run Alerts and Actions as background tasks, distributed across all {kib} instances in the cluster.

By default, each {kib} instance polls for work at three second intervals, and can run a maximum of ten concurrent tasks.
These tasks are then run on the {kib} server.

In the case of alerts which are recurring background checks, upon completion the task is scheduled again according to the <<defining-alerts-general-details, check interval>>.

For more details on Task Manager, see <<task-manager-background-tasks>>.

[IMPORTANT]
==============================================
Alert and action tasks can run late or at an inconsistent schedule.
This is typically a symptom of the specific usage of the cluster in question.

You can address such issues by tweaking the {kib} <<task-manager>> or scaling the deployment to better suit your use case.

For detailed guidance, see <<alerting-troubleshooting,`Alerting Troubleshooting`>>.
==============================================

[float]
[[alerting-scaling-guidance]]
=== Scaling Guidance

As alerts and actions leverage <<task-manager>> to perform the majority of work, scaling Alerting is possible by following the <<task-manager-scaling-guidance,Task Manager Scaling Guidance>>.

When estimating the required task throughput, keep the following in mind:

* Each alert uses a single recurring task that is scheduled to run at the cadence defined by its <<defining-alerts-general-details, check interval>>.
* Each action uses a single task. However, because <<alerting-concepts-suppressing-duplicate-notifications, actions are taken per instance>>, alerts can generate a large number of non-recurring tasks.

It is difficult to predict how much throughput is needed to ensure all Alerts and Actions are executed at consistent schedules.
By counting Alerts as recurring tasks and Actions as non-recurring tasks, a rough throughput <<task-manager-rough-throughput-estimation,can be estimated>> as a _tasks per minute_ measurment.

Predicting the buffer required to account for Actions depends heavily on the Alert Types you use, the amount of Alert Instances they might detect and the number of actions you might choose to assign to action groups when defining your Alerts. With that in mind, we recommend regularly <<task-manager-health-monitoring,monitoring the health>> of your {kib} Task Managers instances.
