[role="xpack"]
[[alerting-production-considerations]]
== Production considerations

{kib} alerting run both alert checks and actions as persistent background tasks managed by the {kib} Task Manager.

When relying on Alerts and Actions as mission critical services, it is important to ensure the {kib} Task Manager <<task-manager-production-considerations>> are followed.


[float]
[[alerting-scaling-guidance]]
=== Scaling Guidance

As Alerts and Actions leverage <<task-manager>> to perform the majority of their work, scaling {kib} Alerting is possible by following the <<task-manager-scaling-guidance,Task Manager Scaling Guidance>>.

When estimating the required task throughput, keep the follwoing in mind:

* Each Alert utilizes a single recurring task which is scheduled to run at the cadance defined by its <<defining-alerts-general-details, check interval>>
* Each Action utilizes a single task, but since <<alerting-concepts-suppressing-duplicate-notifications, actions are taken per instance>>, alerts can end up generating a large number of non-recurring tasks.

It is difficult to predict how much throughput is needed to ensure all Alerts and Actions are executed at consistent schedules, but by <<task-manager-rough-throughput-estimation,estimating a rough throughput>> as _tasks per minute_, a lower bound can be produces.
When producing the rough throughput estimate, count Alerts as recurring tasks and Actions as non-recurring tasks.

Predicting the buffer required to account for the Actions depends heavily on the Alert Types you use, the amount of Alert Instances they might detect and the number of actions you might choose to assign to action groups when defining your Alerts. With that in mind, we recommend regularly <<task-manager-health-monitoring,monitoring the health>> of your {kib} Task Managers instances.

[float]
=== Running background alert checks and actions

{kib} uses <<task-manager>> to run Alerts and Actions as background tasks, distributed across all {kib} nodes in the cluster.

By default, each {kib} instance polls for work at 3 second intervals, and can run a maximum of 10 concurrent tasks.
These tasks are then ran on the {kib} server.

In the case of alerts which are recurring background checks, upon completion the task is scheduled again according to the <<defining-alerts-general-details, check interval>>.

For more details on Task Manager, see <<task-manager-background-tasks>>.

[IMPORTANT]
==============================================
It is possible for alert and action tasks to be run late or at an inconsistent schedule.
This is usually a symptom of the specific usage of the cluster in question.

Such issues can be addressed by tweaking the {kib} <<task-manager>> or adjusting the cluster scaling strategy to better suit the unique use case.

For detailed guidance, see <<alerting-troubleshooting,`Alerting Troubelshooting`>>.
==============================================
