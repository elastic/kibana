[[rule-action-variables]]
== Rule action variables
:frontmatter-description: A summary of common variables for use in {kib} alerting rule actions.
:frontmatter-tags-products: [alerting] 
:frontmatter-tags-content-type: [reference] 
:frontmatter-tags-user-goals: [configure]

Rule actions use variables to customize the notifications for each alert.

There is a set of common variables available in all rules, as well as some that are unique to each rule.
This page covers only the common variables.
To learn how to use these variables with Mustache templates in rules, go to <<rule-action-variable-tips>>.

[float]
[[general-rule-action-variables]]
=== General variables

All rule types pass the following variables:

`alertActionGroup`::
(string) deprecated:[8.10.0] Use `alert.actionGroup` instead.
`alertActionGroupName`::
(string) deprecated:[8.10.0] Use `alert.actionGroupName` instead.
`alertActionSubgroup`::
(string) deprecated:[8.10.0] Use `alert.actionSubgroup` instead.
`alertId`::
(string) deprecated:[8.10.0] Use `rule.id` instead.
`alertInstanceId`::
(string) deprecated:[8.10.0] Use `alert.id` instead.
`alertName`::
(string) deprecated:[8.10.0] Use `rule.name` instead.
`date`::
(string) The date the rule scheduled the action, in ISO format. For example: `2024-04-30T00:55:42.839Z`
`kibanaBaseUrl`::
(string) The configured <<server-publicBaseUrl,`server.publicBaseUrl`>>. If not configured, this will be empty.
`params`::
(object) deprecated:[8.10.0] Use `rule.params` instead.
`rule`::
(object) Details about the rule.
`rule.id`::
(string) The rule identifier. For example: `47754354-d894-49d3-87ec-05745a74e2b7`.
`rule.name`::
(string) The rule name.
`rule.params`::
(object) The rule parameters, which vary by rule type.
`rule.spaceId`::
(string) The space identifier for the rule. For example, `default`.
`rule.tags`::
(array) The list of tags applied to the rule.
`rule.type`::
(string) The type of rule. For example, `.es-query`.
`rule.url`::
(string) The URL for the rule that generated the alert. This will be an empty string if the `server.publicBaseUrl` setting is not configured.
//TBD Are KibaanBaseUrl in fact absent instead of empty?
`spaceId`::
(string) deprecated:[8.10.0] Use `rule.spaceId` instead.
`tags`::
(array) deprecated:[8.10.0] Use `rule.tags` instead.

[float]
[role="child_attributes"]
[[alert-summary-action-variables]]
=== Action frequency: Summary of alerts variables

If the rule's action frequency is a summary of alerts, it passes the following variables:

`alerts.all.count`::
(integer) The count of all alerts.

`alerts.all.data`::
(array) An array of objects for all alerts.
The following object properties are examples; it is not a comprehensive list.
+
.Properties of the alerts.all.data objects
[%collapsible%open]
=====
//# tag::alerts-data[]
`_id`::
(string) For example, `27ace796-1dfb-4db9-9ce1-7a10472fd461`.
// Description TBD
`_index`::
(string) For example, `.internal.alerts-stack.alerts-default-000001`.
// Description TBD
`@timestamp`::
(string) For example, `2024-04-30T02:30:11.254Z`.
// Description TBD
`event.action`::
(string) For example: `active`.
// Description TBD
`event.kind`::
(string) For example: `signal`.
// TBD: The type of event (are there types other than signal?)
`kibana.alert.action_group`::
(string) The ID of the action group of the alert that scheduled the action. For example, `query matched`.
// TBD: How is this different than alert.actionGroup?
`kibana.alert.consecutive_matches`::
(integer)
// TBD: The number of consecutive runs that generated the alert?
// How is this different than alert.consecutiveMatches?
`kibana.alert.duration.us`::
(integer) For example, `5670590000`.
// TBD: The duration of the alert in microseconds?
`kibana.alert.end`::
(string) Datetime stamp of alert end. preview:[]
// TBD: This presumably does not exist unless the alert recovers?
`kibana.alert.evaluation`::
(object)
// TBD: The conditions that were met to generate the alert?
`kibana.alert.flapping`::
(boolean) A flag on the alert that indicates whether the alert status is changing repeatedly. preview:[]
`kibana.alert.flapping_history`::
(array of boolean)
// TBD: The twenty most recent flapping states?
`kibana.alert.instance.id`::
(string) Identifier for the source that generates the alert. For example, `query matched`. preview:[]
`kibana.alert.maintenance_window_ids`::
(array) The identifiers for maintenance windows that affect the alert.
//TBD: Is it an array of integers or strings? 
`kibana.alert.reason`::
(string) The reason for the alert (generated with the rule conditions). preview:[]
`kibana.alert.rule`::
(object) Details about the rule.
//TBD How is this different than the other rule object?
`kibana.alert.start`::
(string) Datetime stamp of alert start. For example, `2024-04-30T00:55:40.664Z`. preview:[]
`kibana.alert.status`::
(string) The alert status. For example, `active` or `OK`. preview:[]
// TBD: What is the meaning of "OK" here?
`kibana.alert.time_range.gte`::
(string) For example `2024-04-30T00:55:40.664Z`.
//TBD This is presumably "greater than or equal to" but what's the purpose?
`kibana.alert.time_range.lte`::
(string) For example `2024-04-30T00:55:40.664Z`.
//TBD Ditto "less than or equal to" but why?
`kibana.alert.title`::
(string) For example, `Document count is 3 in the last 5d. Alert when greater than 0`.
// Description TBD
`kibana.alert.url`::
(string) The URL for the alert. For example, `/app/management/insightsAndAlerting/triggersActions/rule/47754354-d894-49d3-87ec-05745a74e2b7`.
`kibana.alert.uuid`::
(string) A universally unique identifier for the alert. While the alert is active, the UUID value remains unchanged each time the rule runs. For example, `27ace796-1dfb-4db9-9ce1-7a10472fd461`. preview:[]
`kibana.alert.workflow_status`::
(string) For example, `open`.
// Description TBD
`kibana.space_ids`::
(array of strings) For example, `["default"]`.
// Description TBD
`kibana.title`::
(string) For example, `rule 'my-esql-query-rule' matched query`.
// Description TBD
`kibana.version`::
(string) The {kib} version identifier. For example, `8.14.0`.
`tags`::
(array) The list of tags applied to the alert.
//# end::alerts-data[]
=====

`alerts.new.count`:: The count of new alerts.

`alerts.new.data`::
An array of objects for new alerts. The following object properties are examples; it is not a comprehensive list.
+
.Properties of the alerts.new.data objects
[%collapsible]
=====
include::action-variables.asciidoc[tag=alerts-data]
=====

`alerts.ongoing.count`:: The count of ongoing alerts.

`alerts.ongoing.data`::
An array of objects for ongoing alerts. The following object properties are examples; it is not a comprehensive list.
+
.Properties of the alerts.ongoing.data objects
[%collapsible]
=====
include::action-variables.asciidoc[tag=alerts-data]
=====

`alerts.recovered.count`:: The count of recovered alerts.

`alerts.recovered.data`::
An array of objects for recovered alerts. The following object properties are examples; it is not a comprehensive list.
+
.Properties of the alerts.recovered.data objects
[%collapsible]
=====
include::action-variables.asciidoc[tag=alerts-data]
=====

`state.signals_count`::
(integer)
//TBD: Description

[float]
[[alert-action-variables]]
=== Action frequency: For each alert variables

If the rule's action frequency is not a summary of alerts, it passes the following variables:

`alert.actionGroup`::
(string) The ID of the action group of the alert that scheduled the action. For example, `query matched`.
`alert.actionGroupName`::
(string) The name of the action group of the alert that scheduled the action. For example, `Query matched`.
`alert.actionSubgroup`:: The action subgroup of the alert that scheduled the action.
//TBD When does the subgroup appear? Is it related to the subcategory of ServiceNow connectors?
`alert.consecutiveMatches`:: The number of consecutive runs that meet the rule conditions.
`alert.flapping`::
(boolean) A flag on the alert that indicates whether the alert status is changing repeatedly.
`alert.id`::
(string) The ID of the alert that scheduled the action. For example, `query matched`.
`alert.uuid`::
(string) A universally unique identifier for the alert. While the alert is active, the UUID value remains unchanged each time the rule runs. For example, `27ace796-1dfb-4db9-9ce1-7a10472fd461`. preview:[]
`context`::
(object) The context of the alert, which varies by rule type and typically contains multiple variables.
////
//TBD: Is there a reason these don't appear in the UI variable list?
`state.dateEnd`::
(string) For example: `2024-04-30T00:55:42.766Z`.
//TBD: Needs description
`state.dateStart`::
(string) For example: `2024-04-25T00:55:42.766Z`.
//TBD: Needs description
`state.duration`::
(integer)
//TBD: Needs description
`state.start`::
(string) For example: `2024-04-30T00:55:40.664Z`.
//TBD: Needs description
//TBD: Is these state ones general variables or only in some?
////
