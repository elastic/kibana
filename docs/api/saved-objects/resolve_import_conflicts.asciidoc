[[saved-objects-api-resolve-import-conflicts]]
=== Resolve Import Conflicts

experimental[This functionality is *experimental* and may be changed or removed completely in a future release.]

The resolve import conflicts API enables you to resolve conflicts given by the import API by indicating which records to overwrite as well as changing references to a newly created object.

Note: You cannot access this endpoint via the Console in Kibana.

==== Request

`POST /api/saved_objects/_resolve_import_conflicts`

==== Request body

The request body must be of type multipart/form-data.

`file`::
  (ndjson) The same new line delimited JSON objects given to the import API.

`overwrites` (optional)::
  (array) A list of "type" and "id" objects allowed to be overwritten on import.

`replaceReferences` (optional)::
  (array) A list of "type", "from" and "to" used to change imported saved object references to.

==== Response body

The response body will have a top level `success` property that indicates
if the import was successful or not. In the scenario the import wasn't successful
a top level `errors` array will contain the objects that failed to import.

==== Examples

The following example resolves conflicts by indicating to overwrite the dashboard.

[source,js]
--------------------------------------------------
POST api/saved_objects/_resolve_import_conflicts
Content-Type: multipart/form-data; boundary=EXAMPLE
--EXAMPLE
Content-Disposition: form-data; name="file"; filename="export.ndjson"
Content-Type: application/ndjson

{"type":"index-pattern","id":"my-pattern","attributes":{"title":"my-pattern-*"}}
{"type":"dashboard","id":"my-dashboard","attributes":{"title":"Look at my dashboard"}}
--EXAMPLE
Content-Disposition: form-data; name="overwrites"

[{"type":"dashboard","id":"my-dashboard"}]
--EXAMPLE---
--------------------------------------------------
// KIBANA

A successful call returns a response code of `200` and a response body
containing a JSON structure similar to the following example:

[source,js]
--------------------------------------------------
{
  "success": true
}
--------------------------------------------------

The following example replaces the visualization references to another.

[source,js]
--------------------------------------------------
POST api/saved_objects/_resolve_import_conflicts
Content-Type: multipart/form-data; boundary=EXAMPLE
--EXAMPLE
Content-Disposition: form-data; name="file"; filename="export.ndjson"
Content-Type: application/ndjson

{"type":"visualization","id":"my-vis","attributes":{"title":"Look at my visualization"}}
{"type":"dashboard","id":"my-dashboard","attributes":{"title":"Look at my dashboard"},"references":[{"name":"panel_0","type":"visualization","id":"my-vis"}]}
--EXAMPLE
Content-Disposition: form-data; name="replaceReferences"

[{"type":"visualization","from":"my-vis","to":"my-vis-2"}]
--EXAMPLE---
--------------------------------------------------
// KIBANA

A successful call returns a response code of `200` and a response body
containing a JSON structure similar to the following example:

[source,js]
--------------------------------------------------
{
  "success": true
}
--------------------------------------------------
