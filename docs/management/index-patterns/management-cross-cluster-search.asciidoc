[[management-cross-cluster-search]]
=== {ccs-cap}

{es} supports the ability to run search and aggregation requests across multiple
clusters using a module called _{ccs}_.

In order to take advantage of {ccs}, you must configure your {es}
clusters accordingly. Review the corresponding {es}
{ref}/modules-cross-cluster-search.html[documentation] before attempting to use {ccs} in {kib}.

Once your {es} clusters are configured for {ccs}, you can create
specific index patterns in {kib} to search across the clusters of your choosing. Using the
same syntax that you'd use in a raw {ccs} request in {es}, create your
index pattern in {kib} with the convention `<cluster-names>:<pattern>`.

For example, if you want to query {ls} indices across two of the {es} clusters
that you set up for {ccs}, which were named `cluster_one` and `cluster_two`,
you would use `cluster_one:logstash-*,cluster_two:logstash-*` as your index pattern in {kib}.

Just like in raw search requests in {es}, you can use wildcards in your cluster names
to match any number of clusters, so if you wanted to search {ls} indices across any
clusters named `cluster_foo`, `cluster_bar`, and so on, you would use `cluster_*:logstash-*`
as your index pattern in {kib}.

If you want to query across all {es} clusters that have been configured for {ccs}, 
then use a standalone wildcard for your cluster name in your {kib} index
pattern: `*:logstash-*`.

Once an index pattern is configured using the {ccs} syntax, all searches and
aggregations using that index pattern in {kib} take advantage of {ccs}.
