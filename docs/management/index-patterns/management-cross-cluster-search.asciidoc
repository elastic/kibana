[[management-cross-cluster-search]]
=== Cross Cluster Search

Elasticsearch supports the ability to run search and aggregation requests across multiple
clusters using a module called _cross cluster search_.

In order to take advantage of cross cluster search, you must configure your Elasticsearch
clusters accordingly. Review the corresponding Elasticsearch
{ref}/modules-cross-cluster-search.html[documentation] before attempting to use cross cluster
search in Kibana.

Once your Elasticsearch clusters are configured for cross cluster search, you can create
specific index patterns in Kibana to search across the clusters of your choosing. Using the
same syntax that you'd use in a raw cross cluster search request in Elasticsearch, create your
index pattern in Kibana with the convention `<cluster-names>:<pattern>`.

For example, if you want to query logstash indices across two of the Elasticsearch clusters
that you set up for cross cluster search, which were named `cluster_one` and `cluster_two`,
you would use `cluster_one,cluster_two:logstash-*` as your index pattern in Kibana.

Just like in raw search requests in Elasticsearch, you can use wildcards in your cluster names
to match any number of clusters, so if you wanted to search logstash indices across any
clusters named `cluster_foo`, `cluster_bar`, and so on, you would use `cluster_*:logstash-*`
as your index pattern in Kibana.

If you want to query across all Elasticsearch clusters that have been configured for cross
cluster search, then use a standalone wildcard for your cluster name in your Kibana index
pattern: `*:logstash-*`.

Once an index pattern is configured using the cross cluster search syntax, all searches and
aggregations using that index pattern in Kibana take advantage of cross cluster search.
