[[pre-configured-connectors]]
== Preconfigured connectors

If you are running {kib} on-prem, you can preconfigure a connector to have all
the information it needs prior to startup by adding it to the `kibana.yml` file.

NOTE: {ess} provides a preconfigured email connector but you cannot create
additional preconfigured connectors.

Preconfigured connectors offer the following benefits:

- Require no setup. Configuration and credentials needed to run an action are
predefined, including the connector name and ID.
- Appear in all spaces because they are not saved objects.
- Cannot be edited or deleted.

[float]
[[create-preconfigured-connectors]]
=== Create preconfigured connectors

Add `xpack.actions.preconfigured` settings to your `kibana.yml` file. The
settings vary depending on which type of connector you're adding.

This example shows a valid configuration for a Slack connector and a Webhook
connector:

```js
  xpack.actions.preconfigured:
    my-slack1:                  <1>
      actionTypeId: .slack      <2>
      name: 'Slack #xyz'        <3>
      secrets:
        webhookUrl: 'https://hooks.slack.com/services/abcd/efgh/ijklmnopqrstuvwxyz'
    webhook-service:
      actionTypeId: .webhook
      name: 'Email service'
      config:                   <4>
        url: 'https://email-alert-service.elastic.co'
        method: post
        headers:
          header1: value1
          header2: value2
      secrets:                  <5>
        user: elastic
        password: changeme
```

<1>  The key is the connector identifier, `my-slack1` in this example.
<2> `actionTypeId` is the action type identifier.
<3> `name` is the name of the preconfigured connector.
<4> `config` is the configuration specific to the connector type.
<5> `secrets` is the sensitive configuration, such as username, password, and keys, specific to the connector type.

[NOTE]
==============================================
Sensitive properties, such as passwords, can also be stored in the 
<<creating-keystore,{kib} keystore>>.
==============================================

[float]
[[build-in-preconfigured-connectors]]
=== Built-in preconfigured connectors

{kib} provides the following built-in preconfigured connectors:

* <<preconfigured-connector-alert-history,Alert history preconfigured {es} index connector>>
* <<elasticcloud,`Elastic-Cloud-SMTP` preconfigured email connector>>

[float]
[[managing-pre-configured-connectors]]
=== View preconfigured connectors

When you open the main menu, click *{stack-manage-app} > {connectors-ui}*. 
Preconfigured connectors appear regardless of which space you are 
in. They are tagged as “preconfigured”, and you cannot delete them.

[role="screenshot"]
image::images/preconfigured-connectors-managing.png[Connectors managing tab with pre-configured]

Clicking a preconfigured connector shows the description, but not the 
configuration.

[float]
[[preconfigured-webhook-configuration]]
=== Webhook preconfigured connector example

The following example creates a <<webhook-action-type,webhook connector>> with basic authentication:

[source,text]
--
xpack.actions.preconfigured:
  my-webhook:
    name: preconfigured-webhook-connector-type
    actionTypeId: .webhook
    config:
      url: https://test.host <1>
      method: post <2>
      headers: <3>
        testheader: testvalue
      hasAuth: true <4>
    secrets:
      user: testuser <5>
      password: passwordkeystorevalue <6>
--

<1> The web service request URL. If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.
<2> The HTTP request method, either `post`(default) or `put`.
<3> A set of key-value pairs sent as headers with the request.
<4> If `true`, this connector will require values for `user` and `password` inside the secrets configuration. Defaults to `true`.
<5> A valid user name. Required if `hasAuth` is set to `true`.
<6> A valid password. Required if `hasAuth` is set to `true`. NOTE: This value should be stored in the <<creating-keystore,{kib} keystore>>.

NOTE: SSL authentication is not supported in preconfigured webhook connectors.