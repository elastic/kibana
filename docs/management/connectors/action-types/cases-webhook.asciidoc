[[cases-webhook-action-type]]
== {webhook-cm} connector and action
++++
<titleabbrev>{webhook-cm}</titleabbrev>
++++
:frontmatter-description: Add a connector that can send requests to case management web services.
:frontmatter-tags-products: [kibana] 
:frontmatter-tags-content-type: [how-to] 
:frontmatter-tags-user-goals: [configure]

The {webhook-cm} connector uses https://github.com/axios/axios[axios] to send POST, PUT, and GET requests to a case management RESTful API web service. added:[8.15.0]

[float]
[[define-cases-webhook-ui]]
=== Create connectors in {kib}

You can create connectors in *{stack-manage-app} > {connectors-ui}*
or as needed when you're creating a rule.
In the first step, you must provide a name for the connector and its authentication details.
For example:

[role="screenshot"]
image::management/connectors/images/cases-webhook-connector.png[Set authentication details in the {webhook-cm} connector]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

In the second step, you must provide the information necessary to create cases in the external system.
For example:

[role="screenshot"]
image::management/connectors/images/cases-webhook-connector-create-case.png[Add case creation details in the {webhook-cm} connector]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

In the third step, you must provide information related to retrieving case details from the external system.
For example:

[role="screenshot"]
image::management/connectors/images/cases-webhook-connector-get-case.png[Add case retrieval details in the {webhook-cm} connector]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

In the fourth step, you must provide information necessary to update cases in the external system.
You can also optionally provide information to add comments to cases.
For example:

[role="screenshot"]
image::management/connectors/images/cases-webhook-connector-comments.png[Add case update and comment details in the {webhook-cm} connector]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

[float]
[[cases-webhook-connector-configuration]]
==== Connector configuration

{webhook-cm} connectors have the following configuration properties:

Add HTTP header::
A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
For example, set `Content-Type` to the appropriate media type for your requests.

Create case method::
The REST API HTTP request method to create a case in the third-party system: `post`(default), `put`, or `patch`.

Create case object::
A JSON payload sent to the create case URL to create a case.
Use the variable selector to add case data to the payload.
Required variables are `case.title` and `case.description`. For example:
+
--
[source,json]
----
{
	"fields": {
	  "summary": {{{case.title}}},
	  "description": {{{case.description}}},
	  "labels": {{{case.tags}}}
	}
}
----

NOTE: Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated in this step.
The JSON is validated after the Mustache variables have been placed when REST method runs. 
Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
--

Create case response external key::
The JSON key in the create external case response that contains the case ID.

Create case URL::
The REST API URL to create a case in the third-party system.
If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.

Create comment method::
The optional REST API HTTP request method to create a case comment in the third-party system: `post`, `put`(default), or `patch`.

Create comment object::
An optional JSON payload sent to the create comment URL to create a case comment.
Use the variable selector to add {kib} cases data to the payload.
The required variable is `case.comment`. For example:
+
--
[source,json]
-----
{
  "body": {{{case.comment}}}
}
-----

NOTE: Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated in this step. The JSON is validated once the mustache variables have been placed and when REST method runs. We recommend manually ensuring that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
--

Create comment URL::
The optional REST API URL to create a case comment by ID in the third-party system.
Use the variable selector to add the external system ID to the URL.
If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts. For example:
+
[source,text]
--
https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment
--

External case view URL::
The URL to view the case in the external system.
Use the variable selector to add the external system ID or external system title to the URL. For example:
+
[source,text]
--
https://testing-jira.atlassian.net/browse/{{{external.system.title}}}
--

Get case response external title key::
The JSON key in the get external case response that contains the case title.

Get case URL::
The REST API URL to GET case by ID from the third-party system.
Use the variable selector to add the external system ID to the URL.
If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.
For example:
+
--
[source,text]
----
https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}
----

NOTE: Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated in this step. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
--

Require authentication::
If true, a username and password for login type authentication must be provided.

Password::
The password for HTTP basic authentication.

Update case method::
The REST API HTTP request method to update the case in the third-party system: `post`, `put`(default), or `patch`.

Update case object::
A JSON payload sent to the update case URL to update the case.
Use the variable selector to add {{kib}} cases data to the payload.
Required variables are `case.title` and `case.description`.
For example:
+
--
[source,json]
------
{
	"fields": {
	  "summary": {{{case.title}}},
	  "description": {{{case.description}}},
	  "labels": {{{case.tags}}}
	}
}
------

NOTE: Due to Mustache template variables (which is the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated in this step.
The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
--

Update case URL::
The REST API URL to update the case by ID in the third-party system.
Use the variable selector to add the external system ID to the URL.
If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.
For example:
+
[source,text]
--
https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}
--

Username::
The username for HTTP basic authentication.

[float]
[[cases-webhook-action-configuration]]
=== Test connectors

You can test connectors as you're creating or editing the connector in {kib}. For example:

[role="screenshot"]
image::management/connectors/images/cases-webhook-test.png[{webhook-cm} params test]

{webhook-cm} actions have the following configuration properties:

Additional comments::
Additional information for the client, such as how to troubleshoot the issue.

Case ID::
A unique case identifier.

Description::
The details about the incident.

Labels:: The labels for the incident.

Severity::
The severity of the case can be `critical`, `high`, `low`, or `medium`.

Status::
The status of the case can be `closed`, `in-progress` or `open`.

Summary::
A brief case summary.

Tags::
A list of tags that can be used to filter cases. 

[float]
[[cases-webhook-connector-networking-configuration]]
=== Connector networking configuration

Use the <<action-settings,action configuration settings>> to customize connector networking configurations, such as proxies, certificates, or TLS settings. You can set configurations that apply to all your connectors or use `xpack.actions.customHostSettings` to set per-host configurations.
