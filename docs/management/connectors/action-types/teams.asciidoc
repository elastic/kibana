[[teams-action-type]]
== Microsoft Teams connector and action
++++
<titleabbrev>Microsoft Teams</titleabbrev>
++++
:frontmatter-description: Add a connector that can send messages to a Microsoft Teams channel.
:frontmatter-tags-products: [kibana] 
:frontmatter-tags-content-type: [how-to] 
:frontmatter-tags-user-goals: [configure]

The Microsoft Teams connector uses a webhook to send notifications.

[float]
[[define-teams-ui]]
=== Create connectors in {kib}

You can create connectors in *{stack-manage-app} > {connectors-ui}*
or as needed when you're creating a rule. For example:

[role="screenshot"]
image::management/connectors/images/teams-connector.png[Teams connector]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

[float]
[[teams-connector-configuration]]
==== Connector configuration

Microsoft Teams connectors have the following configuration properties:

Name::      The name of the connector.
Webhook URL::   The URL of the incoming webhook. Refer to <<configuring-teams>>. If you are using the <<action-settings,`xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.

[float]
[[teams-action-configuration]]
=== Test connectors

You can test connectors as you're creating or editing the connector in {kib}. For example:

[role="screenshot"]
image::management/connectors/images/teams-params-test.png[Teams params test]
// NOTE: This is an autogenerated screenshot. Do not edit it directly.

Microsoft Teams actions have the following properties.

Message:: The message text. Markdown, images, and other advanced formatting are not yet supported.

[float]
[[teams-connector-networking-configuration]]
=== Connector networking configuration

Use the <<action-settings, Action configuration settings>> to customize connector networking configurations, such as proxies, certificates, or TLS settings. You can set configurations that apply to all your connectors or use `xpack.actions.customHostSettings` to set per-host configurations.

[float]
[[configuring-teams]]
=== Configure Microsoft Teams

Microsoft 365 connectors are being https://devblogs.microsoft.com/microsoft365dev/retirement-of-office-365-connectors-within-microsoft-teams/[retired]; you must use the *Workflows* app to create a webhook URL.
For example:

. Go to the *Workflows* app in Teams and select the *Create* tab.
. Create a workflow from a blank template.
+
--
NOTE: You cannot use the "Post to a channel when a webhook request is received" template; it does not work with the Microsoft Teams connector.
--
. Add a trigger as the first step in the workflow. Search for webhook triggers and select *When a Teams webhook request is received*. Set *Who can trigger the flow?* to `Anyone`.
. Add *Post message in a chat or channel* as the second step in the workflow.
.. Set *Post as* to `Flow bot`.
.. Set *Post in* to `Channel`.
.. Set *Team* and *Channel* to the appropriate values for where you want the message displayed.
+
--
NOTE: Per https://learn.microsoft.com/en-us/power-automate/teams/send-a-message-in-teams#known-issues-and-limitations, you cannot use a private channel.
--
.. Set the *Message* to `@{triggerBody()?['text']}`.
+
--
Alternatively, you can add a *Parse JSON* step before the *Post message in a chat or channel* step in the workflow. Set the *Content* to `Body` and the *Schema* to the following value:

```json
{
    "type": "object",
    "properties": {
        "text": {
            "type": "string"
        }
    }
}
```
--
. Save the workflow and copy the HTTP POST URL from the first step. This is the URL required by the Microsoft Teams connector.