[[torq-action-type]]
== Torq connector and action
++++
<titleabbrev>Torq</titleabbrev>
++++

The Torq connector uses a Torq webhook to trigger workflows with Kibana actions.

[float]
[[define-torq-ui]]
=== Create connectors in {kib}

You can create connectors in *{stack-manage-app} > {connectors-ui}*
or as needed when you're creating a rule. For example:

[role="screenshot"]
image::management/connectors/images/torq-configured-connector.png[configured Torq connector]

[float]
[[torq-connector-configuration]]
==== Connector configuration
Torq connectors have the following configuration properties:

Name:: The name of the connector. The name is used to identify a connector in the Stack Management UI connector listing, and in the connector list when configuring an action.

Torq endpoint URL:: Endpoint URL (webhook) of the Elastic Security integration you created in Torq.

Torq authentication header secret:: Secret of the webhook authentication header.

[float]
[[preconfigured-torq-configuration]]
=== Create preconfigured connectors

If you are running {kib} on-prem, you can define connectors by
adding `xpack.actions.preconfigured` settings to your `kibana.yml` file.
For example:

[source,yaml]
--
xpack.actions.preconfigured:
  my-torq:
    name: preconfigured-torq-connector-type
    actionTypeId: .torq
    config:
      webhookIntegrationUrl: https://hooks.torq.io/v1/somehook
    secrets:
      token: mytorqtoken
--

Config defines information for the connector type.

`webhookIntegrationUrl`:: An address that corresponds to **Torq endpoint URL**.

Secrets defines sensitive information for the connector type.

`token`:: A string that corresponds to **Torq authentication header secret**.

[float]
[[torq-action-configuration]]
=== Test connectors

You can test connectors with the <<execute-connector-api,run connector API>> or
as you're creating or editing the connector in {kib}. For example:

[role="screenshot"]
image::management/connectors/images/torq-connector-test.png[Torq connector test]

Torq actions have the following configuration properties.

Body:: JSON payload to send to Torq.

