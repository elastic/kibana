[[servicenow-sir-action-type]]
== {sn-sir} connector and action
++++
<titleabbrev>{sn-sir}</titleabbrev>
++++

The {sn-sir} connector uses the
https://developer.servicenow.com/dev.do#!/reference/api/sandiego/rest/c_ImportSetAPI[import set API]
to create {sn} security incidents. You can use the connector for rule actions and cases.

[float]
[[servicenow-sir-connector-prerequisites]]
=== Prerequisites
After upgrading from {stack} version 7.15.0 or earlier to version 7.16.0 or later, you must complete the following within your {sn} instance before creating a new {sn-sir} connector or <<servicenow-sir-connector-update, updating an existing one>>:

. Install https://store.servicenow.com/sn_appstore_store.do#!/store/application/2f0746801baeb01019ae54e4604bcb0f[Elastic for Security Operations (SecOps)] from the {sn} Store.
. <<servicenow-sir-connector-prerequisites-integration-user,Create a {sn} integration user and assign it the appropriate roles>>.
. <<servicenow-sir-connector-prerequisites-cors-rule,Create a Cross-Origin Resource Sharing (CORS) rule>>.
. If you use open authorization (OAuth), you must also:
.. <<servicenow-sir-connector-prerequisites-rsa-key,Create an RSA keypair and add an X.509 Certificate>>.
.. <<servicenow-sir-connector-prerequisites-endpoint,Create an OAuth JWT API endpoint for external clients with a JWT Verifiers Map>>.

[float]
[[servicenow-sir-connector-prerequisites-integration-user]]
==== Create a {sn} integration user

To ensure authenticated communication between Elastic and {sn}, create a {sn} integration user and assign it the appropriate roles. 

. In your {sn} instance, go to *System Security -> Users and Groups -> Users*.
. Click *New*.
. Complete the form, then right-click on the menu bar and click *Save*.
. Go to the *Roles* tab and click *Edit*.
. Assign the integration user the following roles: 
* `import_set_loader`
* `import_transformer`
* `personalize_choices`
* `sn_si.basic`
* `x_elas2_sir_int.integration_user`
. Click *Save*.

[float]
[[servicenow-sir-connector-prerequisites-cors-rule]]
==== Create a CORS rule

A CORS rule is required for communication between Elastic and {sn}. To create a CORS rule:

. In your {sn} instance, go to *System Web Services -> REST -> CORS Rules*.
. Click *New*.
. Configure the rule as follows:
* *Name*: Name the rule.
* *REST API*: Set the rule to use the Elastic SecOps API by choosing `Elastic SIR API [x_elas2_sir_int/elastic_api]`.
* *Domain*: Enter the Kibana URL.
. Go to the *HTTP methods* tab and select *GET*.
. Click *Submit* to create the rule.

[float]
[[servicenow-sir-connector-prerequisites-rsa-key]]
==== Create an RSA keypair and add an X.509 Certificate

This step is required to use OAuth for authentication between Elastic and {sn}.

include::servicenow.asciidoc[tag=servicenow-rsa-key]

include::servicenow.asciidoc[tag=servicenow-certificate]

[float]
[[servicenow-sir-connector-prerequisites-endpoint]]
==== Create an OAuth JWT API endpoint for external clients with a JWT Verifiers Map

include::servicenow.asciidoc[tag=servicenow-endpoint]

[float]
[[servicenow-sir-connector-update]]
=== Update a deprecated {sn-sir} connector

{sn-sir} connectors created in {stack} version 7.15.0 or earlier are marked as deprecated after you upgrade to version 7.16.0 or later. Deprecated connectors have a yellow icon after their name and display a warning message when selected.

[role="screenshot"]
image::management/connectors/images/servicenow-sir-update-connector.png[Shows deprecated ServiceNow connectors]

IMPORTANT: Deprecated connectors will continue to function with the rules they were added to and can be assigned to new rules. However, it is strongly recommended to update deprecated connectors or <<creating-new-connector, create new ones>> to ensure you have access to connector enhancements, such as updating incidents.

To update a deprecated connector:

. Open the main menu and go to *{stack-manage-app} > {connectors-ui}*.
. Select the deprecated connector to open the *Edit connector* flyout.
. In the warning message, click *Update this connector*.
. Complete the guided steps in the *Edit connector* flyout.
.. Install https://store.servicenow.com/sn_appstore_store.do#!/store/application/2f0746801baeb01019ae54e4604bcb0f[Elastic for Security Operations (SecOps)] from the {sn} Store and complete the <<servicenow-sir-connector-prerequisites, required prerequisites>>.
.. Enter the URL of your {sn} instance.
.. Enter the username and password of your {sn} instance.
. Click *Update*.

[float]
[[define-servicenow-sir-ui]]
=== Create connectors in {kib}

You can create connectors in *{stack-manage-app} > {connectors-ui}*
or as needed when you're creating a rule. You must choose whether to use OAuth for authentication.

[role="screenshot"]
image::management/connectors/images/servicenow-sir-connector-basic.png[{sn-sir} connector using basic auth]

[role="screenshot"]
image::management/connectors/images/servicenow-sir-connector-oauth.png[{sn-sir} connector using OAuth]

[float]
[[servicenow-sir-connector-configuration]]
==== Connector configuration

{sn-sir} connectors have the following configuration properties:

Name::      The name of the connector.
Is OAuth::  The type of authentication to use.
URL::       {sn} instance URL.
Username::  Username for HTTP Basic authentication.
Password::  Password for HTTP Basic authentication.
User Identifier:: Identifier to use for OAuth type authentication. This identifier should be the *User field* you selected during setup. For example, if the selected *User field* is *Email*, the user identifier should be the user's email address.
Client ID:: The client ID assigned to your OAuth application.
Client Secret:: The client secret assigned to your OAuth application.
JWT Key ID:: The key ID assigned to the JWT verifier map of your OAuth application.
Private Key:: The RSA private key generated during setup.
Private Key Password:: The password for the RSA private key generated during setup, if set.

[float]
[[preconfigured-servicenow-sir-configuration]]
=== Create preconfigured connectors

If you are running {kib} on-prem, you can define connectors by
adding `xpack.actions.preconfigured` settings to your `kibana.yml` file.
For example:

Connector using Basic Authentication
[source,text]
--
xpack.actions.preconfigured:
  my-servicenow-sir:
    name: preconfigured-servicenow-connector-type
    actionTypeId: .servicenow-sir
    config:
      apiUrl: https://example.service-now.com/
      usesTableApi: false
    secrets:
      username: testuser
      password: passwordkeystorevalue
--

Connector using OAuth
[source,text]
--
xpack.actions.preconfigured:
  my-servicenow:
    name: preconfigured-oauth-servicenow-connector-type
    actionTypeId: .servicenow-sir
    config:
      apiUrl: https://example.service-now.com/
      usesTableApi: false
      isOAuth: true
      userIdentifierValue: testuser@email.com
      clientId: abcdefghijklmnopqrstuvwxyzabcdef
      jwtKeyId: fedcbazyxwvutsrqponmlkjihgfedcba
    secrets:
      clientSecret: secretsecret
      privateKey: -----BEGIN RSA PRIVATE KEY-----\nprivatekeyhere\n-----END RSA PRIVATE KEY-----
--

Config defines information for the connector type.

`apiUrl`:: An address that corresponds to *URL*.
`usesTableApi`:: A boolean that indicates if the connector uses the Table API or the Import Set API.

NOTE: If `usesTableApi` is set to false, the Elastic application should be installed in {sn}.

`isOAuth`:: A boolean that corresponds to *Is OAuth* and indicates if the connector uses Basic Authentication or OAuth.
`userIdentifierValue`:: A string that corresponds to *User Identifier*. Required if `isOAuth` is set to `true`.
`clientId`:: A string that corresponds to *Client ID*, used for OAuth authentication. Required if `isOAuth` is set to `true`.
`jwtKeyId`:: A string that corresponds to *JWT Key ID*, used for OAuth authentication. Required if `isOAuth` is set to `true`.

Secrets defines sensitive information for the connector type.

`username`:: A string that corresponds to *Username*. Required if `isOAuth` is set to `false`.
`password`::  A string that corresponds to *Password*. Should be stored in the <<creating-keystore, {kib} keystore>>. Required if `isOAuth` is set to `false`.
`clientSecret`:: A string that corresponds to *Client Secret*. Required if `isOAuth` is set to `true`.
`privateKey`:: A string that corresponds to *Private Key*. Required if `isOAuth` is set to `true`.
`privateKeyPassword`:: A string that corresponds to *Private Key Password*.

[float]
[[servicenow-sir-action-configuration]]
=== Test connectors

You can test connectors with the <<execute-connector-api,run connector API>> or
as you're creating or editing the connector in {kib}. For example:

[role="screenshot"]
image::management/connectors/images/servicenow-sir-params-test.png[{sn-sir} params test]

{sn-sir} actions have the following configuration properties.

Short description::    A short description for the incident, used for searching the contents of the knowledge base.
Priority::             The priority of the incident.
Category::             The category of the incident.
Subcategory::          The subcategory of the incident.
Correlation ID::       Connectors using the same Correlation ID will be associated with the same {sn} incident. This value determines whether a new {sn} incident will be created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as `{{ruleID}}:{{alert ID}}` to form the Correlation ID value in {sn}. The maximum character length for this value is 100 characters.

NOTE: Using the default configuration of `{{ruleID}}:{{alert ID}}` ensures that {sn} will create a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, {sn} creates and continually updates a single incident record for the alert.

Correlation Display::  A descriptive label of the alert for correlation purposes in {sn}.
Description::          The details about the incident.
Additional comments::  Additional information for the client, such as how to troubleshoot the issue.

[float]
[[servicenow-sir-connector-networking-configuration]]
=== Connector networking configuration

Use the <<action-settings, Action configuration settings>> to customize connector networking configurations, such as proxies, certificates, or TLS settings. You can set configurations that apply to all your connectors or use `xpack.actions.customHostSettings` to set per-host configurations.

[float]
[[configuring-servicenow-sir]]
=== Configure {sn-sir}

{sn} offers free https://developer.servicenow.com/dev.do#!/guides/madrid/now-platform/pdi-guide/obtaining-a-pdi[Personal Developer Instances], which you can use to test incidents.
