[role="xpack"]
[[opsgenie-action-type]]
=== Opsgenie connector and action
++++
<titleabbrev>Opsgenie</titleabbrev>
++++

The Opsgenie connector uses the https://docs.opsgenie.com/docs/alert-api[Opsgenie Alert API].

[float]
[[opsgenie-connector-configuration]]
==== Connector configuration

Opsgenie connectors have the following configuration properties.

Name::      The name of the connector. The name is used to identify a  connector in the management UI connector listing, or in the connector list when configuring an action.
URL::     The Opsgenie URL: https://api.opsgenie.com. For the EU instance of Opsgenie use: https://api.eu.opsgenie.com. If you are using the <<action-settings, `xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.
API Key::   The Opsgenie API authentication key for HTTP Basic authentication. Refer to https://support.atlassian.com/opsgenie/docs/create-a-default-api-integration/[How to generate an Opsgenie API key] for more information.

[float]
[[opgenie-connector-networking-configuration]]
==== Connector networking configuration

Use the <<action-settings, Action configuration settings>> to customize connector networking configurations, such as proxies, certificates, or TLS settings. You can set configurations that apply to all your connectors or use `xpack.actions.customHostSettings` to set per-host configurations.

[float]
[[Preconfigured-opsgenie-configuration]]
==== Preconfigured connector type

[source,text]
--
 my-opsgenie:
   name: preconfigured-opsgenie-connector-type
   actionTypeId: .opsgenie
   config:
    apiUrl: https://api.opsgenie.com
   secrets:
     apiKey: apikey
--

Config defines information for the connector type.

`apiUrl`:: A string that corresponds to *URL*

Secrets defines sensitive information for the connector type.

`apiKey`:: A string that corresponds to *API Key*.

[float]
[[define-opsgenie-ui]]
==== Define connector in Stack Management

Define Opsgenie connector properties.

[role="screenshot"]
image::management/connectors/images/opsgenie-connector.png[Opsgenie connector]

Test Opsgenie action parameters.

[role="screenshot"]
image::management/connectors/images/opsgenie-params-test.png[Opsgenie params test]

[float]
[[opsgenie-action-configuration]]
==== Action configuration

The Opsgenie connector supports two types of actions: Creating and Closing alerts. The properties supported for each action are different because Opsgenie defines different properties for each operation.

When testing the Opsgenie connector, choose the appropriate action from the selector. Switching the action will show a different form allowing the specific properties for that type of action to be configured.

Action::    Whether to create or close an alert within Opsgenie. When using the Opsgenie connector for a rule action, the Action selector is hidden and automatically set to the appropriate value. If the action is run when a rule fires, it will create an alert within Opsgenie. If the action is run when a rule recovers, it will close an alert within Opsgenie.

[float]
[[opsgenie-action-create-alert-configuration]]
===== Create alert configuration

The create alert action can be configured using the form or a JSON editor.

[float]
[[opsgenie-action-create-alert-form-configuration]]
====== Form configuration

The create alert action form has the following configuration properties.

Message::   The message for the alert. This field is required.
Opsgenie Tags::   The tags for the alert.
Priority::  The priority level for the alert.
Description::   The description for the alert to provide detailed information about the alert.
Alias::   The identifier for the alert. The `Alias` is used for https://support.atlassian.com/opsgenie/docs/what-is-alert-de-duplication/[alert de-duplication].
Entity::  The domain of the alert.
Source::  The source of the alert.
User::    The display name of the owner.
Note::    Additional information for the alert.

[float]
[[opsgenie-action-create-alert-json-configuration]]
====== JSON editor

A JSON editor is provided as an alternative to the form view. The editor also supports additional fields not shown in the form. The editor view supports all of the forms configuration properties but as lowercase keys as https://docs.opsgenie.com/docs/alert-api#create-alert[described in the Opsgenie API documentation]. The editor view supports the following additional properties.

responders::  The entities to receive notifications about the alert.
visibleTo::   The teams and users that the alert will be visible to without sending a notification to them.
actions::   The custom actions available to the alert.
details::   The custom properties of the alert.

[float]
[[opsgenie-action-create-alert-json-example-configuration]]
Example JSON editor contents

[source,json]
--
{
  "message": "An example alert message",
  "alias": "Life is too short for no alias",
  "description":"Every alert needs a description",
  "responders":[
      {"id":"4513b7ea-3b91-438f-b7e4-e3e54af9147c", "type":"team"},
      {"name":"NOC", "type":"team"},
      {"id":"bb4d9938-c3c2-455d-aaab-727aa701c0d8", "type":"user"},
      {"username":"trinity@opsgenie.com", "type":"user"},
      {"id":"aee8a0de-c80f-4515-a232-501c0bc9d715", "type":"escalation"},
      {"name":"Nightwatch Escalation", "type":"escalation"},
      {"id":"80564037-1984-4f38-b98e-8a1f662df552", "type":"schedule"},
      {"name":"First Responders Schedule", "type":"schedule"}
  ],
  "visibleTo":[
      {"id":"4513b7ea-3b91-438f-b7e4-e3e54af9147c","type":"team"},
      {"name":"rocket_team","type":"team"},
      {"id":"bb4d9938-c3c2-455d-aaab-727aa701c0d8","type":"user"},
      {"username":"trinity@opsgenie.com","type":"user"}
  ],
  "actions": ["Restart", "AnExampleAction"],
  "tags": ["OverwriteQuietHours","Critical"],
  "details":{"key1":"value1","key2":"value2"},
  "entity":"An example entity",
  "priority":"P1"
}
--

[float]
[[opsgenie-action-close-alert-configuration]]
===== Close alert configuration

The close alert action has the following configuration properties.

Alias::   The identifier for the alert. The `Alias` is used for https://support.atlassian.com/opsgenie/docs/what-is-alert-de-duplication/[alert de-duplication]. The alias must match the value used when creating the alert.
Note::    Additional information for the alert.
Source::  The display name of the source.
User::    The display name of the owner.

[float]
[[configuring-opsgenie]]
==== Configure an Opsgenie account

Opsgenie offers https://www.atlassian.com/software/opsgenie/try[free trial instances], which you can use to test creating and closing alerts.

After obtaining an Opsgenie instance, https://support.atlassian.com/opsgenie/docs/create-a-default-api-integration/[configure the API integration].

If a free trial is being used, navigate to the `Teams` dashboard and select the appropriate team.

image::management/connectors/images/opsgenie-teams.png[Opsgenie teams dashboard]

Select the `Integrations` menu item and select `Add integration`.

image::management/connectors/images/opsgenie-integrations.png[Opsgenie teams integrations]

Search for `API` and select the `API` integration.

image::management/connectors/images/opsgenie-add-api-integration.png[Opsgenie API integration]

Configuration the integration as needed and make note of the `API Key`. This key should be used to populate the `API Key` field when creating the Kibana Opsgenie connector. Click `Save Integration`.

image::management/connectors/images/opsgenie-save-integration.png[Opsgenie save integration]
