[role="xpack"]
[[tines-action-type]]
== Tines connector
++++
<titleabbrev>Tines</titleabbrev>
++++

The Tines connector uses Tines's https://www.tines.com/docs/actions/types/webhook[Webhook actions] to send events via POST request.

[float]
[[tines-connector-configuration]]
=== Connector configuration

Tines connectors have the following configuration properties.

URL::        The Tines Tenant URL. If you are using the <<action-settings, `xpack.actions.allowedHosts`>> setting, make sure the hostname is added to the allowed hosts.
Email::      The email used to sign in to Tines.
API Token::  A Tines API token created by the user. https://www.tines.com/api/authentication#generate-api-token[Docs]

[role="screenshot"]
image::../images/tines-connector.png[Tines connector]

[float]
[[Preconfigured-tines-configuration]]
==== Preconfigured connector type

[source,text]
--
 my-tines:
   name: preconfigured-tines-connector-type
   actionTypeId: .tines
   config:
     url: https://some-tenant-2345.tines.com
   secrets:
     email: some.address@test.com
     token: ausergeneratedapitoken
--

Config defines information for the connector type.

`url`:: A Tines tenant URL string that corresponds to *URL*.

Secrets defines sensitive information for the connector type.

`email`:: A string that corresponds to *Email*.
`token`:: A string that corresponds to *API Token*.

[float]
[[tines-action-parameters]]
=== Action parameters

Tines action have the following parameters.

Story::   The Story to send the events to.
Webhook:: The Webhook action from the previous story that will receive the events, it is the data entry point. 

Test Tines action parameters.

[role="screenshot"]
image::../images/tines-params-test.png[Tines params test]

[float]
[[tines-action-format]]
=== Actions

Once the Tines connector has been configured in an Alerting Rule.

[role="screenshot"]
image::../images/tines-alerting.png[Tines rule alert]

It will send a POST request to the Tines webhook action on every action execution that had at least one result.

=== Format

Tines connector will send the data in JSON format.

The message contains execution specific fields, such as `alertId`, `date`, `_index`, `kibanaBaseUrl`, along with the `rule` and `params` objects. 

The number of alerts (signals) can be found at `state.signals_count`.

The alerts (signals) data is stored in the `context.alerts` array, following the https://www.elastic.co/guide/en/ecs/current/ecs-field-reference.html[ECS] format.
