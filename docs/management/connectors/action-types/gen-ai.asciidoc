[[gen-ai-action-type]]
== Generative AI connector and action
++++
<titleabbrev>Generative AI</titleabbrev>
++++

The Generative AI connector uses https://github.com/axios/axios[axios] to send a POST request to an OpenAI provider, either OpenAI or Azure OpenAI. The connector uses the <<execute-connector-api,run connector API>> to send the request.

[float]
[[define-gen-ai-ui]]
=== Create connectors in {kib}

You can create connectors in *{stack-manage-app} > {connectors-ui}*.  For example:

[role="screenshot"]
image::management/connectors/images/gen-ai-connector.png[Generative AI connector]

[float]
[[gen-ai-connector-configuration]]
==== Connector configuration

Generative AI connectors have the following configuration properties:

Name::      The name of the connector.
API Provider::   The OpenAI API provider, either OpenAI or Azure OpenAI.
API URL::   The OpenAI request URL.
API Key::   The OpenAI or Azure OpenAI API key for authentication.

[float]
[[preconfigured-gen-ai-configuration]]
=== Create preconfigured connectors

If you are running {kib} on-prem, you can define connectors by
adding `xpack.actions.preconfigured` settings to your `kibana.yml` file.
For example:

[source,text]
--
xpack.actions.preconfigured:
  my-gen-ai:
    name: preconfigured-gen-ai-connector-type
    actionTypeId: .gen-ai
    config:
      apiUrl: https://api.openai.com/v1/chat/completions
      apiProvider: 'Azure OpenAI'
    secrets:
      apiKey: superlongapikey
--

Config defines information for the connector type.

`apiProvider`:: A string that corresponds to *OpenAI API Provider*.
`apiUrl`:: A URL string that corresponds to the *OpenAI API URL*.

Secrets defines sensitive information for the connector type.

`apiKey`:: A string that corresponds to *OpenAI API Key*.

[float]
[[gen-ai-action-configuration]]
=== Test connectors

You can test connectors with the <<execute-connector-api,run connector API>> or
as you're creating or editing the connector in {kib}. For example:

[role="screenshot"]
image::management/connectors/images/gen-ai-params-test.png[Generative AI params test]

The Generative AI actions have the following configuration properties.

Body::      A JSON payload sent to the OpenAI API URL. For example: 
+
[source,text]
--
{
  "model": "gpt-3.5-turbo",
  "messages": [
    {
      "role": "user",
      "content": "Hello world"
    }
  ]
}
--
[float]
[[gen-ai-connector-networking-configuration]]
=== Connector networking configuration

Use the <<action-settings, Action configuration settings>> to customize connector networking configurations, such as proxies, certificates, or TLS settings. You can set configurations that apply to all your connectors or use `xpack.actions.customHostSettings` to set per-host configurations.

[float]
[[gen-ai-connector-token-dashboard]]
=== Token usage dashboard

Once you've created a Generative AI connector, you can monitor its token usage using the *Generative AI Token Usage* dashboard. Select the connector in *{stack-manage-app}* > *{connectors-ui}* to view its details, then click the *View OpenAI Usage Dashboard for "_<Name>_" Connector* link to open the dashboard.

NOTE: To view the dashboard, you need at least `read` and `view_index_metadata` privileges for the `.kibana-event-log-*` index and the `Read` feature privilege for {kib}. You can set up a role with these minimum privileges and assign it to non-admin users who need to view this dashboard.
