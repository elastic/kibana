[[managing-fields]]
== Field management

Whenever possible,
{kib} uses the same field type for display as {es}.  However, a few field types
{es} supports are not available in {kib}. Use field formatters to customize how your
fields are displayed in Kibana, regardless of how they are stored in {es}.

Kibana provides these field formatters:

* <<field-formatters-string, Strings>>
* <<field-formatters-date, Dates>>
* <<field-formatters-geopoint, Geopoints>>
* <<field-formatters-numeric, Numbers>>

To format a field:

. Open the main menu, and click *Stack Management > Index Patterns*.
. Click the index pattern that contains the field you want to format.
. Find the field you want to format and click the edit icon (image:management/index-patterns/images/edit_icon.png[]).
. Enter a custom label for the field, if needed.
. Select a format and fill in the details.
+
[role="screenshot"]
image:management/index-patterns/images/edit-field-format.png["Edit field format"]



[[field-formatters-string]]
=== String field formatters

String fields support the `String` and `Url` formatters.

include::field-formatters/string-formatter.asciidoc[]

include::field-formatters/url-formatter.asciidoc[]

[[field-formatters-date]]
=== Date field formatters

Date fields support the `Date`, `Url`, and `String` formatters.

The `Date` formatter enables you to choose the display format of date stamps using the https://momentjs.com/[moment.js]
standard format definitions.

include::field-formatters/string-formatter.asciidoc[]

include::field-formatters/url-formatter.asciidoc[]

[[field-formatters-geopoint]]
=== Geographic point field formatters

Geographic point fields support the `String` formatter.

include::field-formatters/string-formatter.asciidoc[]

[[field-formatters-numeric]]
=== Numeric field formatters

Numeric fields support the `Url`, `Bytes`, `Duration`, `Number`, `Percentage`, `Histogram`, `String`, and `Color` formatters.

The `Bytes`, `Number`, and `Percentage` formatters enable you to choose the display formats of numbers in this field using
the <<numeral, Elastic numeral pattern>> syntax that {kib} maintains.

The `Histogram` formatter is only used for the {ref}/histogram.html[histogram field type]. When using the `Histogram` formatter,
you can apply the `Number`, `Bytes`, or `Percentage` format to the aggregated data.

`Number`, and `Percentage` formatters enable you to choose the display formats of numbers in this field using
the <<numeral, Elastic numeral pattern>> syntax that {kib} maintains.

include::field-formatters/url-formatter.asciidoc[]

include::field-formatters/string-formatter.asciidoc[]

include::field-formatters/duration-formatter.asciidoc[]

include::field-formatters/color-formatter.asciidoc[]

[[runtime-fields]]
=== Explore your data with runtime fields 

Manipulate your data fields without indexing your data. Runtime fields are most flexible than scripted fields. 

Index runtime fields so that you can view and analyze the field values in *Discover* and *Dashboard*.

*Discover* displays runtime fields as part of the document data...

You can visualize runtime fields in the following editors: 

* *Lens*
* *Maps*
* *TSVB*
* *Timelion*
* *Aggregation-based*

In *Discover* and *Dashboard*, you can query runtime fields with the <<kuery-query, {kib} query language>>, and create filters for runtime fields. 

For more information about runtime fields, refer to {ref}/runtime.html[Runtime fields].

[float]
[[create-runtime-fields]]
=== Create runtime fields

You can create runtime fields in *Discover* and *Lens*, or to visualize runtime fields in *Maps*, *TSVB*, *Timelion*, and *Aggregation-based* visualizations, 
create runtime fields for the index patterns you want to visualize.

// Do we add the Discover and Lens content here? Or in the separate sections?

. Open the main menu, then click *Stack Management > Index Patterns*.
. Select the index pattern you want to add the runtime field to.
. Click *Add field*, then enter the field details. 

[float]
[[set-the-field-value]]
==== Set the field value

Set the value of a field by emitting a single value from a Painless script. 

For example, to emit a single value from a Painless script:
----
emit(doc['bytes'].value * 10)
----

For example, to calculate the day of the week based on the value of the `@timestamp` field:
----
emit(doc['@timestamp'].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL, Locale.ROOT)
----

// The script field uses Painless. 
// The UI needs to point to the Kibana docs, not the ES docs. 
// We need good script examples from Jason Burns (runtime fields PM).

[float]
[[manage-runtime-fields]]
=== Manage runtime fields

Edit the settings for existing runtime fields, or remove runtime fields from the index pattern. 

. Open the main menu, then click *Stack Management > Index Patterns*.
. Select the index pattern that contains the runtime field you want to manage.
. For the runtime field you want to manage, open the edit options, or delete the runtime field. 

// What translates in scripted fields to runtime fields? Add that.

[[scripted-fields]]
=== Add scripted fields to index patterns

deprecated::[7.13,Use {ref}/runtime.html[runtime fields] instead of scripted fields. Runtime fields support Painless scripts and provide greater flexibility.]

Scripted fields compute data on the fly from the data in your {es} indices. The data is shown on
the Discover tab as part of the document data, and you can use scripted fields in your visualizations. You query scripted fields with the <<kuery-query, {kib} query language>>, and can filter them using the filter bar. The scripted field values are computed at query time, so they aren't indexed and cannot be searched using the {kib} default
query language.

WARNING: Computing data on the fly with scripted fields can be very resource intensive and can have a direct impact on
{kib} performance. Keep in mind that there's no built-in validation of a scripted field. If your scripts are
buggy, you'll get exceptions whenever you try to view the dynamically generated data.

When you define a scripted field in {kib}, you have a choice of the {ref}/modules-scripting-expression.html[Lucene expressions] or the
{ref}/modules-scripting-painless.html[Painless] scripting language.

You can reference any single value numeric field in your expressions, for example:

----
doc['field_name'].value
----

For more information on scripted fields and additional examples, refer to
https://www.elastic.co/blog/using-painless-kibana-scripted-fields[Using Painless in {kib} scripted fields]

[float]
[[create-scripted-field]]
=== Create a scripted field

. Open the main menu, then click *Stack Management > Index Patterns*.
. Select the index pattern you want to add a scripted field to.
. Go to the *Scripted fields* tab for the index pattern, then click *Add scripted field*.
. Enter a name for the scripted field.
. Enter the expression that you want to use to compute a value on the fly from your index data.
. Click *Create field*.

For more information about scripted fields in {es}, see
{ref}/modules-scripting.html[Scripting].

[float]
[[update-scripted-field]]
=== Update a scripted field

. Click the *Scripted fields* tab for the index pattern.
. Click the *Edit* button for the scripted field you want to change.
. Make your changes, then click *Save field*.

WARNING: Built-in validation is unsupported for scripted fields. If your scripts are buggy, you'll get
exceptions whenever you try to view the dynamically generated data.

[float]
[[delete-scripted-field]]
=== Delete a scripted field

. Click the *Scripted fields* tab for the index pattern.
. Click *Delete* for the scripted field you want to remove.
. Click *Delete* on the confirmation window.


