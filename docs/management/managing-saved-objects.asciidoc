[[managing-saved-objects]]
== Saved Objects

The *Saved Objects* UI helps you keep track of and manage your saved objects. These objects
store data for later use, including dashboards, visualizations, maps, index patterns,
Canvas workpads, and more.

To get started, open the main menu, then click *Stack Management > Saved Objects*. 

[role="screenshot"]
image::images/management-saved-objects.png[Saved Objects]

[float]
=== Required permissions

The `Saved Objects Management` {kib} privilege is required to access the *Saved Objects* UI.

To add the privilege, open the menu, then click *Stack Management > Roles*.

NOTE:
Granting access to Saved Objects Management will authorize users to manage all saved objects in {kib}, including objects that are managed by applications they may not otherwise be authorized to access.


[float]
[[managing-saved-objects-view]]
=== View, edit, and delete

* To view and edit an object in its associated application, click the object title.

* To show objects that use this object, so you know the
impact of deleting it, click the actions icon image:images/actions_icon.png[Actions icon]
and select *Relationships*.

* To delete one or more objects, select their checkboxes, and then click *Delete*.

[float]
[[managing-saved-objects-export-objects]]
=== Import and export

Using the import and export actions, you can move objects between different
{kib} instances. This action is useful when you
have multiple environments for development and production.
Import and export also work well when you have a large number
of objects to update and want to batch the process.

In addition to the user interface, {kib} provides beta <<saved-objects-api-import, import>> and <<saved-objects-api-export, export>> APIs if
you want to automate this process.

[float]
==== Compatibility across versions

With each release, {kib} introduces changes to the way saved objects are stored. When importing a saved object, {kib} will run the necessary migrations to ensure that the imported saved objects are compatible with the current version.

However, saved objects can only be imported into the same version, a newer minor on the same major, or the next major. Exported saved objects are not backwards compatible and cannot be imported into an older version of {kib}. See the table below for compatibility examples:

|=======
| Exporting version | Importing version | Compatible?
| 6.7.0 | 6.8.1 | Yes
| 6.8.1 | 7.3.0 | Yes
| 7.3.0 | 7.11.1 | Yes
| 7.11.1 | 7.6.0 | No
| 6.8.1 | 8.0.0 | No
|=======

[float]
==== Import

You can import multiple objects in a single operation. Click *Import* and
navigate to the NDJSON file that
represents the objects to import.  By default,
saved objects already in {kib} are overwritten.

NOTE: The <<savedObjects-maxImportExportSize, `savedObjects.maxImportExportSize`>> configuration setting
limits the number of saved objects which may be included in this file. Similarly, the
<<savedObjects-maxImportPayloadBytes, `savedObjects.maxImportPayloadBytes`>> setting limits the overall
size of the file that can be imported.


[float]
==== Export

You have two options for exporting saved objects.

* Select the checkboxes of objects that you want to export, and then click *Export*.
* Click *Export x objects*, and export objects by type.

This action creates an NDJSON with all your saved objects. By default, the NDJSON includes child objects that are related to the saved
objects. Exported dashboards include their associated index patterns.

NOTE: The <<savedObjects-maxImportExportSize, `savedObjects.maxImportExportSize`>> configuration setting
limits the number of saved objects which may be exported.


[float]
[role="xpack"]
[[managing-saved-objects-copy-to-space]]
=== Copy to other {kib} spaces

To copy a saved object to another space, click the actions icon image:images/actions_icon.png[Actions icon]
and select *Copy to space*. From here, you can select the spaces in which to copy the object.
You can also select whether to automatically overwrite any conflicts in the target spaces, or
resolve them manually.

WARNING: The copy operation automatically includes child objects that are related to the saved objects. If you don't want this behavior, use
the <<spaces-api-copy-saved-objects, copy saved objects to space API>> instead.


[float]
[[managing-saved-objects-object-definition]]
=== Advanced editing

Some objects offer an advanced *Edit* page for modifying the object definition.
To open the page, click the actions icon image:images/actions_icon.png[Actions icon]
and select *Inspect*.
You can change the object title, add a description, and modify
the JSON that defines the object properties.

If you access an object whose index has been deleted, you can:

* Recreate the index so you can continue using the object.
* Delete the object and recreate it using a different index.
* Change the index name in the object's `reference` array to point to an existing
index pattern. This is useful if the index you were working with has been renamed.

WARNING: Validation is not performed for object properties. Submitting an invalid
change will render the object unusable. A more failsafe approach is to use
*Discover* or *Dashboard* to create new objects instead of
directly editing an existing one.
