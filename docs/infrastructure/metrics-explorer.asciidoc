[role="xpack"]
[[metrics-explorer]]

== Metrics Explorer

Metrics Explorer allows you to visualize metrics data collected by Metricbeat and group it in various ways to visualize multiple metrics.
It can be a starting point for further investigations.

[role="screenshot"]
image::infrastructure/images/metrics-explorer-screen.png[Metrics Explorer in Kibana]

[float]
[[metrics-explorer-requirements]]
=== Metrics Explorer requirements and considerations

* The Metrics Explorer uses data collected from {metricbeat-ref}/metricbeat-overview.html[Metricbeat].
* You need read permissions on `metricbeat-*` or the metric index specified in the Infrastructure configuration UI.
* Metrics Explorer uses the timestamp field set in the Infrastructure configuration UI.
By default that is set to `@timestamp`.
* The interval for the X Axis is set to `auto`.
The bucket size is determined by the time range.
* *Open in Visualize* requires you to have access to the Visualize app, otherwise it is not available.

[float]
[[metrics-explorer-tutorial]]
=== Metrics Explorer tutorial

In this tutorial we'll use Metrics Explorer to view the system load metrics for each host we're monitoring with Metricbeat.
After that, we'll filter down to a specific host and explore the outbound traffic for each network interface.
Before we start, if you don't have any Metricbeat data, you'll need to head over to our
{metricbeat-ref}/metricbeat-overview.html[Metricbeat documentation] to install Metricbeat and start collecting data.

1. When you have Metricbeat running and collecting data, open Kibana and navigate to *Infrastructure*.
The *Inventory* tab shows the host or hosts you are monitoring.

2. Select the *Metrics Explorer* tab.
The initial configuration has the *Average* aggregation selected, the *of* field populated with some default metrics, and the *graph per* dropdown set to `Everything`.

3. To select the metrics to view, firstly delete all the metrics currently shown in the *of* field by clicking the *X* by each metric name.
Then, in this field, start typing `system.load.1` and select this metric.
Also add metrics for `system.load.5` and `system.load.15`.
You will see a graph showing the average values of the metrics you selected.
In this step we'll leave the aggregation dropdown set to *Average* but you can try different values later if you like.

4. In the *graph per* dropdown, enter `host.name` and select this field.
You will see a separate graph for each host you are monitoring.
If you are collecting metrics for multiple hosts, you will see something like the screenshot above.
If you only have metrics for a single host, you will see a single graph.
Congratulations! Either way, you've explored your first metric.

5. Let's explore a bit further.
In the upper right hand corner of the graph for one of the hosts, select the *Actions* dropdown and click *Add Filter* to show ony the metrics for that host.
This adds a {kibana-ref}/kuery-query.html[Kibana Query Language] filter for `host.name` in the second row of the Metrics Explorer configuration.
If you only have one host, the graph will not change as you are already exploring metrics for a single host.

6. Now you can start exploring some host-specific metrics.
First, delete each of the system load metrics in the *of* field by clicking the *X* by the metric name.
Then enter the metric `system.network.out.bytes` to explore the outbound network traffic.
This is a monotonically increasing value, so change the aggregation dropdown to `Rate`.

7. Since hosts have multiple network interfaces, it is more meaningful to display one graph for each network interface.
To do this, select the *graph per* dropdown, start typing `system.network.name` and select this field.
You will now see a separate graph for each network interface.

8. If you like, you can put one of these graphs in a dashboard.
Choose a graph, click the *Actions* dropdown and select *Open In Visualize*.
This opens the graph in {kibana-ref}/TSVB.html[TSVB].
From here you can save the graph and add it to a dashboard as usual.

Who's the Metrics Explorer now? You are!
