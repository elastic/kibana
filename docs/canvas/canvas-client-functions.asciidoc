[role="xpack"]
[[canvas-client-functions]]
=== Canvas client functions

These functions must execute in a browser. They are only available
from within the Canvas application, not via the Canvas HTTP API. These functions must 
execute in the browser because they use browser specific APIs, such as location, 
or interact with the workpad to read filters.

A *** denotes a required argument.

A *†* denotes an argument can be passed multiple times.

[float]
[[asset_fn]]
=== `asset`

Uses Canvas workpad asset objects to provide argument values. Usually images.

*Accepts:* `null`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ ***
|`string`
|The ID of the asset value to return
|===

*Returns:* `string`


[float]
[[filters_fn]]
=== `filters`

Collects element filters on the workpad, usually to provide them to a data source.

*Accepts:* `null`

*Returns:* `filter`

[float]
[[location_fn]]
=== `location`

Uses the browser's location functionality to get your current location. Usually 
quite slow, but fairly accurate.

*Accepts:* `null`

*Returns:* `datatable`

[float]
[[markdown_fn]]
=== `markdown`

Adds an element for rendering Markdown text. Great for single numbers, metrics, or paragraphs of text.

*Accepts:* `datatable`, `null`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ *†*

Alias: `expression`, `content`
|`string`
|A `string` containing Markdown. You can pass this multiple 
times to achieve concatenation 

Default: `""`

|`font`
|`style`
|Font settings. Technically, you can put other styles in here too 

Default: `{<<font_fn>>}`
|===

*Returns:* `render`

[float]
[[timelion_fn]]
=== `timelion`

Uses Timelion to extract one or more time series from many sources.

*Accepts:* `filter`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ 

Aliases: `q`, `query` 
|`string`
|A Timelion query 

Default: `".es(*)"`

|`interval`
|`string`
|Bucket interval for the time series 

Default: `"auto"`

|`from`
|`string`
|{es} `datemath` string for the start of the time range 

Default: `"now-1y"`

|`to`
|`string`
|{es} date math `string` for the end of the time range 

Default: `"now"`

|`timezone`
|`string`
|Time zone for the time range 

Default: `"UTC"`
|===

*Returns:* `datatable`

[float]
[[to_fn]]
=== `to`

Explicitly casts from one type to another.

*Accepts:* `any`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ *** 

Alias: `type`
|`string`
|A known type
|===

*Returns:* Depends on your input and arguments

[float]
[[urlparam_fn]]
=== `urlparam`

Accesses URL parameters and use them in expressions. This will always return a `string`.

*Accepts:* `null`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ ***  

Aliases: `var`, `variable`
|`string`
|The URL hash parameter to access

|`default`
|`string`
|Return this `string` if the url parameter is not defined  

Default: `""`
|===

*Returns:* `string`

