[role="xpack"]
[[canvas-server-functions]]
=== Canvas server functions

These functions can only execute on the server. This may be for performance
or security reasons, or because the function uses an API only available on the 
{kib} server. If the expression is executing in the browser, it will transfer to 
the server when it hits one of these functions.

A *** denotes a required argument.

A *â€ * denotes an argument can be passed multiple times.

[float]
[[demodata_fn]]
=== `demodata`

A mock data set that includes project CI times with usernames, countries, and run phases.

*Accepts:* `filter`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ 

Alias: `type`
|`string`
|The name of the demo data set to use  

Default: `"ci"`
|===

*Returns:* `datatable`


[float]
[[escount_fn]]
=== `escount`

Queries {es} for a count of the `number` of hits matching a query.

*Accepts:* `filter`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_  

Alias: `q`, `query`
|`string`
|A Lucene query `string` 

Default: `"-_index:.kibana"`

|`index`
|`string`
|Specify an index pattern, for example, "logstash-*"  

Default: `all`
|===

*Returns:* `number`


[float]
[[esdocs_fn]]
=== `esdocs`

Queries {es} and gets back raw documents. Specify the fields you want to receive, 
especially if you are asking for a lot of rows.

*Accepts:* `filter`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ 

Aliases: `q`, `query`
|`string`
|A Lucene query string 

Default: `"-_index:.kibana"`


|`index`
|`string`
|Specify an index pattern, for example, `"logstash-*"`  

Default: `"_all"`


|`sort`
|`string`
|Sort directions as `"field, direction"`, for example, `"@timestamp, desc"` or `"bytes, asc"`

|`fields`
|`string`
|Comma separated list of fields. Fewer fields will perform better

|`metaFields`
|`string`
|Comma separated list of meta fields, for example, `"_index,_type"`

|`count`
|`number`
|The number of docs to pull back. Smaller numbers perform better 

Default: `100`
|===

*Returns:* `datatable`


[float]
[[essql_fn]]
=== `essql`

Specifies an {es} SQL.

*Accepts:* `filter`

[cols="3*^<"]
|===
|Argument |Type |Description

|_Unnamed_ *** 

Alias: `q`, `query`
|`string`
|An {es} SQL query

|`count`
|`number`
|The number of documents to retrieve

Default: `1000`
|===

*Returns:* `datatable`


[float]
[[pointseries_fn]]
=== `pointseries`

Turns a `datatable` into a point series model. Currently Canvas differentiates measure 
from dimensions by looking for a <<canvas-tinymath-functions, Tiny Math function>>. If you enter a TinyMath 
expression in your argument, Canvas treats that argument as a measure. Otherwise, it 
is a dimension. Dimensions are combined to create unique keys. Measures are 
then deduplicated by those keys using the specified TinyMath function.

*Accepts:* `datatable`

[cols="3*^<"]
|===
|Argument |Type |Description

|`x`
|`string`
|The values along the X-axis

|`y`
|`string`
|The values along the Y-axis

|`color`
|`string`
|An expression to use in determining the mark's color

|`size`
|`string`
|For elements that support it, the size of the marks

|`text`
|`string`
|For use in charts that support it, the text to show in the mark
|===

*Returns:* `pointseries`

