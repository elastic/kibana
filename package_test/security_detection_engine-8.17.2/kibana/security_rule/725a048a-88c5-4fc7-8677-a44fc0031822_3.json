{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "Identifies multiple validation exeception errors within AWS Bedrock. Validation errors occur when you run the InvokeModel or InvokeModelWithResponseStream APIs on a foundation model that uses an incorrect inference parameter or corresponding value. These errors also occur when you use an inference parameter for one model with a model that doesn't have the same API parameter. This could indicate attempts to bypass limitations of other approved models, or to force an impact on the environment by incurring exhorbitant costs.",
    "false_positives": [
      "Legitimate misunderstanding by users on accessing the bedrock models."
    ],
    "from": "now-60m",
    "interval": "10m",
    "investigation_fields": {
      "field_names": [
        "target_time_window",
        "user.id",
        "cloud.account.id",
        "total_denials"
      ]
    },
    "language": "esql",
    "license": "Elastic License v2",
    "name": "AWS Bedrock Detected Multiple Validation Exception Errors by a Single User",
    "note": "## Triage and analysis\n\n### Investigating Amazon Bedrock Model Validation Exception Errors.\n\nAmazon Bedrock is AWSâ€™s managed service that enables developers to build and scale generative AI applications using large foundation models (FMs) from top providers.\n\nBedrock offers a variety of pretrained models from Amazon (such as the Titan series), as well as models from providers like Anthropic, Meta, Cohere, and AI21 Labs.\n\n#### Possible investigation steps\n\n- Identify the user account that caused validation errors in accessing the Amazon Bedrock models.\n- Investigate other alerts associated with the user account during the past 48 hours.\n- Consider the time of day. If the user is a human (not a program or script), did the activity take place during a normal time of day?\n- Examine the account's attempts to access Amazon Bedrock models in the last 24 hours.\n- If you suspect the account has been compromised, scope potentially compromised assets by tracking Amazon Bedrock model access, prompts generated, and responses to the prompts by the account in the last 24 hours.\n\n### False positive analysis\n\n- Verify the user account that that caused validation errors is a legitimate misunderstanding by users on accessing the bedrock models.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Disable or limit the account during the investigation and response.\n- Identify the possible impact of the incident and prioritize accordingly; the following actions can help you gain context:\n    - Identify the account role in the cloud environment.\n    - Identify if the attacker is moving laterally and compromising other Amazon Bedrock Services.\n    - Identify any regulatory or legal ramifications related to this activity.\n    - Identify if any implication to resource billing.\n- Review the permissions assigned to the implicated user group or role behind these requests to ensure they are authorized and expected to access bedrock and ensure that the least privilege principle is being followed.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection via the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n",
    "query": "from logs-aws_bedrock.invocation-*\n// truncate the timestamp to a 1-minute window\n| eval target_time_window = DATE_TRUNC(1 minutes, @timestamp)\n| where gen_ai.response.error_code == \"ValidationException\"\n| keep user.id, gen_ai.request.model.id, cloud.account.id, gen_ai.response.error_code, target_time_window\n// count the number of users causing validation errors within a 1 minute window\n| stats total_denials = count(*) by target_time_window, user.id, cloud.account.id\n| where total_denials > 3\n",
    "references": [
      "https://atlas.mitre.org/techniques/AML.T0015",
      "https://atlas.mitre.org/techniques/AML.T0034",
      "https://atlas.mitre.org/techniques/AML.T0046",
      "https://www.elastic.co/security-labs/elastic-advances-llm-security"
    ],
    "risk_score": 73,
    "rule_id": "725a048a-88c5-4fc7-8677-a44fc0031822",
    "setup": "## Setup\n\nThis rule requires that AWS Bedrock Integration be configured. For more information, see the AWS Bedrock integration documentation:\n\nhttps://www.elastic.co/docs/current/integrations/aws_bedrock\n",
    "severity": "high",
    "tags": [
      "Domain: LLM",
      "Data Source: AWS",
      "Data Source: AWS Bedrock",
      "Data Source: AWS S3",
      "Use Case: Policy Violation",
      "Mitre Atlas: T0015",
      "Mitre Atlas: T0034",
      "Mitre Atlas: T0046"
    ],
    "timestamp_override": "event.ingested",
    "type": "esql",
    "version": 3
  },
  "id": "725a048a-88c5-4fc7-8677-a44fc0031822_3",
  "type": "security-rule"
}