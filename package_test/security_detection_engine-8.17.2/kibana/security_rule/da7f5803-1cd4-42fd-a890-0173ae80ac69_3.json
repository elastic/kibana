{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "A supervised machine learning model has identified a DNS question name with a high probability of sourcing from a Domain Generation Algorithm (DGA), which could indicate command and control network activity.",
    "from": "now-10m",
    "index": [
      "logs-endpoint.events.*",
      "logs-network_traffic.*"
    ],
    "language": "kuery",
    "license": "Elastic License v2",
    "name": "Machine Learning Detected a DNS Request With a High DGA Probability Score",
    "query": "ml_is_dga.malicious_probability > 0.98\n",
    "references": [
      "https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html",
      "https://docs.elastic.co/en/integrations/dga",
      "https://www.elastic.co/security-labs/detect-domain-generation-algorithm-activity-with-new-kibana-integration"
    ],
    "related_integrations": [
      {
        "package": "dga",
        "version": "^2.0.0"
      },
      {
        "package": "endpoint",
        "version": "^8.2.0"
      },
      {
        "package": "network_traffic",
        "version": "^1.1.0"
      }
    ],
    "required_fields": [
      {
        "ecs": false,
        "name": "ml_is_dga.malicious_probability",
        "type": "unknown"
      }
    ],
    "risk_score": 21,
    "rule_id": "da7f5803-1cd4-42fd-a890-0173ae80ac69",
    "setup": "## Setup\n\nThe rule requires the Domain Generation Algorithm (DGA) Detection integration assets to be installed, as well as DNS events collected by integrations such as Elastic Defend, Network Packet Capture, or Packetbeat.  \n\n### DGA Detection Setup\nThe DGA Detection integration consists of an ML-based framework to detect DGA activity in DNS events.\n\n#### Prerequisite Requirements:\n- Fleet is required for DGA Detection.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n- DNS events collected by the [Elastic Defend](https://docs.elastic.co/en/integrations/endpoint), [Network Packet Capture](https://docs.elastic.co/integrations/network_traffic) integration, or [Packetbeat](https://www.elastic.co/guide/en/beats/packetbeat/current/packetbeat-overview.html).\n- To install Elastic Defend, refer to the [documentation](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n- To add the Network Packet Capture integration to an Elastic Agent policy, refer to [this](https://www.elastic.co/guide/en/fleet/current/add-integration-to-policy.html) guide.\n- To set up and run Packetbeat, follow [this](https://www.elastic.co/guide/en/beats/packetbeat/current/setting-up-and-running.html) guide.\n\n#### The following steps should be executed to install assets associated with the DGA Detection integration:\n- Go to the Kibana homepage. Under Management, click Integrations.\n- In the query bar, search for Domain Generation Algorithm Detection and select the integration to see more details about it.\n- Under Settings, click Install Domain Generation Algorithm Detection assets and follow the prompts to install the assets.\n\n#### Ingest Pipeline Setup\nBefore you can enable this rule, you'll need to enrich DNS events with predictions from the Supervised DGA Detection model. This is done via the ingest pipeline named `<package_version>-ml_dga_ingest_pipeline` installed with the DGA Detection package.\n- If using an Elastic Beat such as Packetbeat, add the DGA ingest pipeline to it by adding a simple configuration [setting](https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#pipelines-for-beats) to `packetbeat.yml`.\n- If adding the DGA ingest pipeline to an existing pipeline, use a [pipeline processor](https://www.elastic.co/guide/en/elasticsearch/reference/current/pipeline-processor.html).\n\n#### Adding Custom Mappings\n- Go to the Kibana homepage. Under Management, click Stack Management.\n- Under Data click Index Management and navigate to the Component Templates tab.\n- Templates that can be edited to add custom components will be marked with a @custom suffix. Edit the @custom component template corresponding to the beat/integration you added the DGA ingest pipeline to, by pasting the following JSON blob in the \"Load JSON\" flyout:\n```\n{\n  \"properties\": {\n    \"ml_is_dga\": {\n      \"properties\": {\n        \"malicious_prediction\": {\n          \"type\": \"long\"\n        },\n        \"malicious_probability\": {\n          \"type\": \"float\"\n        }\n      }\n    }\n  }\n}\n```\n",
    "severity": "low",
    "tags": [
      "Domain: Network",
      "Domain: Endpoint",
      "Data Source: Elastic Defend",
      "Use Case: Domain Generation Algorithm Detection",
      "Rule Type: ML",
      "Rule Type: Machine Learning",
      "Tactic: Command and Control"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0011",
          "name": "Command and Control",
          "reference": "https://attack.mitre.org/tactics/TA0011/"
        },
        "technique": [
          {
            "id": "T1568",
            "name": "Dynamic Resolution",
            "reference": "https://attack.mitre.org/techniques/T1568/",
            "subtechnique": [
              {
                "id": "T1568.002",
                "name": "Domain Generation Algorithms",
                "reference": "https://attack.mitre.org/techniques/T1568/002/"
              }
            ]
          }
        ]
      }
    ],
    "timestamp_override": "event.ingested",
    "type": "query",
    "version": 3
  },
  "id": "da7f5803-1cd4-42fd-a890-0173ae80ac69_3",
  "type": "security-rule"
}