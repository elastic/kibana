{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "Adversaries may attempt to clear or disable the Bash command-line history in an attempt to evade detection or forensic investigations.",
    "from": "now-9m",
    "index": [
      "logs-endpoint.events.*",
      "endgame-*",
      "auditbeat-*",
      "logs-auditd_manager.auditd-*"
    ],
    "language": "eql",
    "license": "Elastic License v2",
    "name": "Tampering of Shell Command-Line History",
    "query": "process where event.action in (\"exec\", \"exec_event\", \"executed\", \"process_started\") and event.type == \"start\" and\n (\n  ((process.args : (\"rm\", \"echo\") or\n    (process.args : \"ln\" and process.args : \"-sf\" and process.args : \"/dev/null\") or\n    (process.args : \"truncate\" and process.args : \"-s0\"))\n    and process.args : (\".bash_history\", \"/root/.bash_history\", \"/home/*/.bash_history\",\"/Users/.bash_history\", \"/Users/*/.bash_history\",\n                        \".zsh_history\", \"/root/.zsh_history\", \"/home/*/.zsh_history\", \"/Users/.zsh_history\", \"/Users/*/.zsh_history\")) or\n  (process.args : \"history\" and process.args : \"-c\") or\n  (process.args : \"export\" and process.args : (\"HISTFILE=/dev/null\", \"HISTFILESIZE=0\")) or\n  (process.args : \"unset\" and process.args : \"HISTFILE\") or\n  (process.args : \"set\" and process.args : \"history\" and process.args : \"+o\")\n )\n",
    "references": [
      "https://www.elastic.co/security-labs/detecting-log4j2-with-elastic-security"
    ],
    "related_integrations": [
      {
        "package": "endpoint",
        "version": "^8.2.0"
      },
      {
        "package": "auditd_manager",
        "version": "^1.0.0"
      }
    ],
    "required_fields": [
      {
        "ecs": true,
        "name": "event.action",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "event.type",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.args",
        "type": "keyword"
      }
    ],
    "risk_score": 47,
    "rule_id": "7bcbb3ac-e533-41ad-a612-d6c3bf666aba",
    "setup": "## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n",
    "severity": "medium",
    "tags": [
      "Domain: Endpoint",
      "OS: Linux",
      "OS: macOS",
      "Use Case: Threat Detection",
      "Tactic: Defense Evasion",
      "Data Source: Elastic Defend",
      "Data Source: Elastic Endgame",
      "Data Source: Auditd Manager"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0005",
          "name": "Defense Evasion",
          "reference": "https://attack.mitre.org/tactics/TA0005/"
        },
        "technique": [
          {
            "id": "T1070",
            "name": "Indicator Removal",
            "reference": "https://attack.mitre.org/techniques/T1070/",
            "subtechnique": [
              {
                "id": "T1070.003",
                "name": "Clear Command History",
                "reference": "https://attack.mitre.org/techniques/T1070/003/"
              }
            ]
          }
        ]
      }
    ],
    "timestamp_override": "event.ingested",
    "type": "eql",
    "version": 107
  },
  "id": "7bcbb3ac-e533-41ad-a612-d6c3bf666aba_107",
  "type": "security-rule"
}