{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "This rule detects the execution of a process where the LD_PRELOAD environment variable is set. LD_PRELOAD can be used to inject a shared library into a binary at or prior to execution. A threat actor may do this in order to load a malicious shared library for the purposes of persistence, privilege escalation, and defense evasion. This activity is not common and will potentially indicate malicious or suspicious behavior.",
    "from": "now-9m",
    "index": [
      "logs-endpoint.events.*"
    ],
    "language": "eql",
    "license": "Elastic License v2",
    "name": "Potential Process Injection via LD_PRELOAD Environment Variable",
    "note": "## Setup\nBy default, the `Elastic Defend` integration does not collect environment variable logging. In order to capture this behavior, this rule requires a specific configuration option set within the advanced settings of the `Elastic Defend` integration. \n```\nKibana -->\nFleet -->\nAgent policies -->\nAgent policy for which the option should be enabled -->\nName of the Elastic Defend integration --> \nShow advanced settings -->\nlinux.advanced.capture_env_vars\n```\n`linux.advanced.capture_env_vars` should be set to `LD_PRELOAD,LD_LIBRARY_PATH`. \nAfter saving the integration change, the Elastic Agents running this policy will be updated and the rule will function properly.",
    "query": "process where host.os.type == \"linux\" and \n event.action == \"exec\" and  \n process.env_vars : (\"LD_PRELOAD=?*\", \"LD_LIBRARY_PATH=?*\") \n",
    "references": [
      "https://www.getambassador.io/resources/code-injection-on-linux-and-macos"
    ],
    "related_integrations": [
      {
        "package": "endpoint",
        "version": "^8.2.0"
      }
    ],
    "required_fields": [
      {
        "ecs": true,
        "name": "event.action",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "host.os.type",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.env_vars",
        "type": "keyword"
      }
    ],
    "risk_score": 47,
    "rule_id": "4973e46b-a663-41b8-a875-ced16dda2bb0",
    "setup": "By default, the `Elastic Defend` integration does not collect environment variable logging. In order to capture this behavior, this rule requires a specific configuration option set within the advanced settings of the `Elastic Defend` integration.\n```\nKibana -->\nFleet -->\nAgent policies -->\nAgent policy for which the option should be enabled -->\nName of the Elastic Defend integration --> \nShow advanced settings -->\nlinux.advanced.capture_env_vars\n```\n`linux.advanced.capture_env_vars` should be set to `LD_PRELOAD,LD_LIBRARY_PATH`.\nAfter saving the integration change, the Elastic Agents running this policy will be updated and the rule will function properly.",
    "severity": "medium",
    "tags": [
      "Domain: Endpoint",
      "OS: Linux",
      "Use Case: Threat Detection",
      "Tactic: Defense Evasion",
      "Tactic: Persistence",
      "Tactic: Privilege Escalation"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0005",
          "name": "Defense Evasion",
          "reference": "https://attack.mitre.org/tactics/TA0005/"
        },
        "technique": [
          {
            "id": "T1574",
            "name": "Hijack Execution Flow",
            "reference": "https://attack.mitre.org/techniques/T1574/",
            "subtechnique": [
              {
                "id": "T1574.006",
                "name": "Dynamic Linker Hijacking",
                "reference": "https://attack.mitre.org/techniques/T1574/006/"
              }
            ]
          }
        ]
      },
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0003",
          "name": "Persistence",
          "reference": "https://attack.mitre.org/tactics/TA0003/"
        },
        "technique": [
          {
            "id": "T1574",
            "name": "Hijack Execution Flow",
            "reference": "https://attack.mitre.org/techniques/T1574/",
            "subtechnique": [
              {
                "id": "T1574.006",
                "name": "Dynamic Linker Hijacking",
                "reference": "https://attack.mitre.org/techniques/T1574/006/"
              }
            ]
          }
        ]
      },
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0004",
          "name": "Privilege Escalation",
          "reference": "https://attack.mitre.org/tactics/TA0004/"
        },
        "technique": [
          {
            "id": "T1574",
            "name": "Hijack Execution Flow",
            "reference": "https://attack.mitre.org/techniques/T1574/",
            "subtechnique": [
              {
                "id": "T1574.006",
                "name": "Dynamic Linker Hijacking",
                "reference": "https://attack.mitre.org/techniques/T1574/006/"
              }
            ]
          }
        ]
      }
    ],
    "timestamp_override": "event.ingested",
    "type": "eql",
    "version": 1
  },
  "id": "4973e46b-a663-41b8-a875-ced16dda2bb0_1",
  "type": "security-rule"
}