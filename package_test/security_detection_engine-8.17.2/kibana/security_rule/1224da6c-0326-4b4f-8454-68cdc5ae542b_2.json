{
  "attributes": {
    "anomaly_threshold": 75,
    "author": [
      "Elastic"
    ],
    "description": "A machine learning job combination has detected a set of one or more suspicious Windows processes with unusually high scores for malicious probability. These process(es) have been classified as malicious in several ways. The process(es) were predicted to be malicious by the ProblemChild supervised ML model. If the anomaly contains a cluster of suspicious processes, each process has the same user name, and the aggregate score of the event cluster was calculated to be unusually high by an unsupervised ML model. Such a cluster often contains suspicious or malicious activity, possibly involving LOLbins, that may be resistant to detection using conventional search rules.",
    "from": "now-45m",
    "interval": "15m",
    "license": "Elastic License v2",
    "machine_learning_job_id": "problem_child_high_sum_by_user",
    "name": "Suspicious Windows Process Cluster Spawned by a User",
    "references": [
      "https://www.elastic.co/guide/en/security/current/prebuilt-ml-jobs.html",
      "https://docs.elastic.co/en/integrations/problemchild",
      "https://www.elastic.co/security-labs/detecting-living-off-the-land-attacks-with-new-elastic-integration"
    ],
    "related_integrations": [
      {
        "package": "problemchild",
        "version": "^2.0.0"
      },
      {
        "package": "endpoint",
        "version": "^8.2.0"
      },
      {
        "package": "windows",
        "version": "^1.5.0"
      }
    ],
    "risk_score": 21,
    "rule_id": "1224da6c-0326-4b4f-8454-68cdc5ae542b",
    "setup": "The rule requires the Living off the Land (LotL) Attack Detection integration assets to be installed, as well as Windows process events collected by integrations such as Elastic Defend or Winlogbeat.  \n\n### LotL Attack Detection Setup\nThe LotL Attack Detection integration detects living-off-the-land activity in Windows process events.\n\n#### Prerequisite Requirements:\n- Fleet is required for LotL Attack Detection.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n- Windows process events collected by the [Elastic Defend](https://docs.elastic.co/en/integrations/endpoint) integration or Winlogbeat(https://www.elastic.co/guide/en/beats/winlogbeat/current/_winlogbeat_overview.html).\n- To install Elastic Defend, refer to the [documentation](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n- To set up and run Winlogbeat, follow [this](https://www.elastic.co/guide/en/beats/winlogbeat/current/winlogbeat-installation-configuration.html) guide.\n\n#### The following steps should be executed to install assets associated with the LotL Attack Detection integration:\n- Go to the Kibana homepage. Under Management, click Integrations.\n- In the query bar, search for Living off the Land Attack Detection and select the integration to see more details about it.\n- Under Settings, click Install Living off the Land Attack Detection assets and follow the prompts to install the assets.\n\n#### Ingest Pipeline Setup\nBefore you can enable this rule, you'll need to enrich Windows process events with predictions from the Supervised LotL Attack Detection model. This is done via the ingest pipeline named `<package_version>-problem_child_ingest_pipeline` installed with the LotL Attack Detection package.\n- If using an Elastic Beat such as Winlogbeat, add the LotL ingest pipeline to it by adding a simple configuration [setting](https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest.html#pipelines-for-beats) to `winlogbeat.yml`.\n- If adding the LotL ingest pipeline to an existing pipeline, use a [pipeline processor](https://www.elastic.co/guide/en/elasticsearch/reference/current/pipeline-processor.html).\n\n#### Adding Custom Mappings\n- Go to the Kibana homepage. Under Management, click Stack Management.\n- Under Data click Index Management and navigate to the Component Templates tab.\n- Templates that can be edited to add custom components will be marked with a @custom suffix. Edit the @custom component template corresponding to the beat/integration you added the LotL ingest pipeline to, by pasting the following JSON blob in the \"Load JSON\" flyout:\n```\n{\n  \"properties\": {\n    \"problemchild\": {\n      \"properties\": {\n        \"prediction\": {\n          \"type\": \"long\"\n        },\n        \"prediction_probability\": {\n          \"type\": \"float\"\n        }\n      }\n    },\n    \"blocklist_label\": {\n      \"type\": \"long\"\n    }\n  }\n}\n```\n\n### Anomaly Detection Setup\nBefore you can enable this rule, you'll need to enable the corresponding Anomaly Detection job. \n- Go to the Kibana homepage. Under Analytics, click Machine Learning.\n- Under Anomaly Detection, click Jobs, and then click \"Create job\". Select the Data View containing your enriched Windows process events. For example, this would be `logs-endpoint.events.*` if you used Elastic Defend to collect events, or `winlogbeat-*` if you used Winlogbeat.\n- If the selected Data View contains events that match the query in [this](https://github.com/elastic/integrations/blob/main/packages/problemchild/kibana/ml_module/problemchild-ml.json) configuration file, you will see a card for \"Living off the Land Attack Detection\" under \"Use preconfigured jobs\".\n- Keep the default settings and click \"Create jobs\" to start the anomaly detection job and datafeed.\n",
    "severity": "low",
    "tags": [
      "Domain: Endpoint",
      "OS: Windows",
      "Use Case: Living off the Land Attack Detection",
      "Rule Type: ML",
      "Rule Type: Machine Learning",
      "Tactic: Defense Evasion"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0005",
          "name": "Defense Evasion",
          "reference": "https://attack.mitre.org/tactics/TA0005/"
        },
        "technique": [
          {
            "id": "T1036",
            "name": "Masquerading",
            "reference": "https://attack.mitre.org/techniques/T1036/"
          }
        ]
      }
    ],
    "type": "machine_learning",
    "version": 2
  },
  "id": "1224da6c-0326-4b4f-8454-68cdc5ae542b_2",
  "type": "security-rule"
}