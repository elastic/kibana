{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "Identifies the use of Cmdlets and methods related to encryption/decryption of files in PowerShell scripts, which malware and offensive security tools can abuse to encrypt data or decrypt payloads to bypass security solutions.",
    "false_positives": [
      "Legitimate PowerShell Scripts which makes use of encryption."
    ],
    "from": "now-9m",
    "index": [
      "winlogbeat-*",
      "logs-windows.powershell*"
    ],
    "language": "kuery",
    "license": "Elastic License v2",
    "name": "PowerShell Script with Encryption/Decryption Capabilities",
    "note": "## Triage and analysis\n\n### Investigating PowerShell Script with Encryption/Decryption Capabilities\n\nPowerShell is one of the main tools system administrators use for automation, report routines, and other tasks, making it available for use in various environments, creating an attractive way for attackers to execute code.\n\nPowerShell offers encryption and decryption functionalities that attackers can abuse for various purposes, such as concealing payloads, C2 communications, and encrypting data as part of ransomware operations.\n\n#### Possible investigation steps\n\n- Examine the script content that triggered the detection; look for suspicious DLL imports, collection or exfiltration capabilities, suspicious functions, encoded or compressed data, and other potentially malicious characteristics.\n- Investigate the script execution chain (parent process tree) for unknown processes. Examine their executable files for prevalence, whether they are located in expected locations, and if they are signed with valid digital signatures.\n- Examine file or network events from the involved PowerShell process for suspicious behavior.\n- Investigate other alerts associated with the user/host during the past 48 hours.\n- Evaluate whether the user needs to use PowerShell to complete tasks.\n\n### False positive analysis\n\n- This is a dual-use mechanism, meaning its usage is not inherently malicious. Analysts can dismiss the alert if the script doesn't contain malicious functions or potential for abuse, no other suspicious activity was identified, and there are justifications for the execution.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved hosts to prevent further post-compromise behavior.\n- Restrict PowerShell usage outside of IT and engineering business units using GPOs, AppLocker, Intune, or similar software.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n",
    "query": "event.category:process and host.os.type:windows and\n  powershell.file.script_block_text : (\n    (\n      \"Cryptography.AESManaged\" or\n      \"Cryptography.RijndaelManaged\" or\n      \"Cryptography.SHA1Managed\" or\n      \"Cryptography.SHA256Managed\" or\n      \"Cryptography.SHA384Managed\" or\n      \"Cryptography.SHA512Managed\" or\n      \"Cryptography.SymmetricAlgorithm\" or\n      \"PasswordDeriveBytes\" or\n      \"Rfc2898DeriveBytes\"\n    ) and\n    (\n      CipherMode and PaddingMode\n    ) and\n    (\n      \".CreateEncryptor\" or\n      \".CreateDecryptor\"\n    )\n  ) and\n  not user.id : \"S-1-5-18\" and\n  not (\n    file.name : \"Bootstrap.Octopus.FunctionAppenderContext.ps1\" and\n    powershell.file.script_block_text : (\"function Decrypt-Variables\" or \"github.com/OctopusDeploy\")\n  )\n",
    "related_integrations": [
      {
        "package": "windows",
        "version": "^1.5.0"
      }
    ],
    "required_fields": [
      {
        "ecs": true,
        "name": "event.category",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "file.name",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "host.os.type",
        "type": "keyword"
      },
      {
        "ecs": false,
        "name": "powershell.file.script_block_text",
        "type": "unknown"
      },
      {
        "ecs": true,
        "name": "user.id",
        "type": "keyword"
      }
    ],
    "risk_score": 47,
    "rule_id": "1d9aeb0b-9549-46f6-a32d-05e2a001b7fd",
    "severity": "medium",
    "tags": [
      "Domain: Endpoint",
      "OS: Windows",
      "Use Case: Threat Detection",
      "Tactic: Defense Evasion",
      "Data Source: PowerShell Logs",
      "Resources: Investigation Guide"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0005",
          "name": "Defense Evasion",
          "reference": "https://attack.mitre.org/tactics/TA0005/"
        },
        "technique": [
          {
            "id": "T1027",
            "name": "Obfuscated Files or Information",
            "reference": "https://attack.mitre.org/techniques/T1027/"
          },
          {
            "id": "T1140",
            "name": "Deobfuscate/Decode Files or Information",
            "reference": "https://attack.mitre.org/techniques/T1140/"
          }
        ]
      }
    ],
    "timestamp_override": "event.ingested",
    "type": "query",
    "version": 9
  },
  "id": "1d9aeb0b-9549-46f6-a32d-05e2a001b7fd_9",
  "type": "security-rule"
}