{
  "attributes": {
    "author": [
      "Elastic"
    ],
    "description": "An adversary can use the Windows command line debugging utility cdb.exe to execute commands or shellcode. This rule looks for those instances and where the cdb.exe binary is outside of the normal WindowsKit installation paths.",
    "from": "now-9m",
    "index": [
      "logs-endpoint.events.process-*",
      "logs-windows.sysmon_operational-*",
      "endgame-*",
      "logs-sentinel_one_cloud_funnel.*",
      "logs-m365_defender.event-*",
      "logs-system.security-*"
    ],
    "language": "eql",
    "license": "Elastic License v2",
    "name": "Execution via Windows Command Debugging Utility",
    "query": "process where host.os.type == \"windows\" and event.type == \"start\" and\n (?process.pe.original_file_name == \"CDB.Exe\" or process.name : \"cdb.exe\") and\n  process.args : (\"-cf\", \"-c\", \"-pd\") and\n  not process.executable : (\"?:\\\\Program Files (x86)\\\\*\\\\cdb.exe\", \"?:\\\\Program Files\\\\*\\\\cdb.exe\")\n",
    "references": [
      "https://lolbas-project.github.io/lolbas/OtherMSBinaries/Cdb/"
    ],
    "related_integrations": [
      {
        "package": "endpoint",
        "version": "^8.2.0"
      },
      {
        "package": "windows",
        "version": "^2.0.0"
      },
      {
        "package": "system",
        "version": "^1.6.4"
      },
      {
        "package": "sentinel_one_cloud_funnel",
        "version": "^1.0.0"
      },
      {
        "package": "m365_defender",
        "version": "^2.0.0"
      }
    ],
    "required_fields": [
      {
        "ecs": true,
        "name": "event.type",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "host.os.type",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.args",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.executable",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.name",
        "type": "keyword"
      },
      {
        "ecs": true,
        "name": "process.pe.original_file_name",
        "type": "keyword"
      }
    ],
    "risk_score": 47,
    "rule_id": "bdfaddc4-4438-48b4-bc43-9f5cf8151c46",
    "setup": "## Setup\n\nIf enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2,\nevents will not define `event.ingested` and default fallback for EQL rules was not added until version 8.2.\nHence for this rule to work effectively, users will need to add a custom ingest pipeline to populate\n`event.ingested` to @timestamp.\nFor more details on adding a custom ingest pipeline refer - https://www.elastic.co/guide/en/fleet/current/data-streams-pipeline-tutorial.html\n",
    "severity": "medium",
    "tags": [
      "Domain: Endpoint",
      "OS: Windows",
      "Use Case: Threat Detection",
      "Tactic: Defense Evasion",
      "Data Source: Elastic Endgame",
      "Data Source: Elastic Defend",
      "Data Source: Sysmon",
      "Data Source: SentinelOne",
      "Data Source: Microsoft Defender for Endpoint"
    ],
    "threat": [
      {
        "framework": "MITRE ATT&CK",
        "tactic": {
          "id": "TA0005",
          "name": "Defense Evasion",
          "reference": "https://attack.mitre.org/tactics/TA0005/"
        },
        "technique": [
          {
            "id": "T1218",
            "name": "System Binary Proxy Execution",
            "reference": "https://attack.mitre.org/techniques/T1218/"
          }
        ]
      }
    ],
    "timestamp_override": "event.ingested",
    "type": "eql",
    "version": 101
  },
  "id": "bdfaddc4-4438-48b4-bc43-9f5cf8151c46_101",
  "type": "security-rule"
}