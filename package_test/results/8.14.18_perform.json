{
  "summary": {
    "total": 47,
    "skipped": 0,
    "succeeded": 45,
    "failed": 2
  },
  "results": {
    "updated": [
      {
        "name": "New Okta Authentication Behavior Detected",
        "description": "Detects events where Okta behavior detection has identified a new authentication behavior.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating New Okta Authentication Behavior Detected\n\nThis rule detects events where Okta behavior detection has identified a new authentication behavior such as a new device or location.\n\n#### Possible investigation steps:\n- Identify the user involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the authentication anomaly by examining the `okta.debug_context.debug_data.risk_behaviors` and `okta.debug_context.debug_data.flattened` fields.\n- Determine the client used by the actor. Review the `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- If the client is a device, check the `okta.device.id`, `okta.device.name`, `okta.device.os_platform`, `okta.device.os_version`, and `okta.device.managed` fields.\n- Review the past activities of the actor involved in this action by checking their previous actions.\n- Examine the `okta.request.ip_chain` field to potentially determine if the actor used a proxy or VPN to perform this action.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n\n### False positive analysis:\n- A user may be using a new device or location to sign in.\n- The Okta behavior detection may be incorrectly identifying a new authentication behavior and need adjusted.\n\n### Response and remediation:\n- If the user is legitimate and the authentication behavior is not suspicious, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting the user's password and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the user.\n- If the user is not legitimate, consider deactivating the user's account.\n- If this is a false positive, consider adjusting the Okta behavior detection settings.\n- Block the IP address or device used in the attempts if they appear suspicious, using the data from the `okta.client.ip` and `okta.device.id` fields.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.",
        "output_index": "",
        "version": 206,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Initial Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "15m",
        "from": "now-1800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://unit42.paloaltonetworks.com/muddled-libra/",
          "https://help.okta.com/oie/en-us/content/topics/security/behavior-detection/about-behavior-detection.htm",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            }
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.debug_context.debug_data.risk_behaviors",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "18379a26-723a-4b0a-acbc-37210e51c3d2",
        "rule_id": "260486ee-7d98-11ee-9599-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.928Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:38.231Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and okta.debug_context.debug_data.risk_behaviors:*",
        "language": "kuery"
      },
      {
        "name": "Okta User Sessions Started from Different Geolocations",
        "description": "Detects when a specific Okta actor has multiple sessions started from different geolocations. Adversaries may attempt to launch an attack by using a list of known usernames and passwords to gain unauthorized access to user accounts from different locations.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "\n## Triage and analysis\n\n### Investigating Okta User Sessions Started from Different Geolocations\n\nThis rule detects when a specific Okta actor has multiple sessions started from different geolocations. Adversaries may attempt to launch an attack by using a list of known usernames and passwords to gain unauthorized access to user accounts from different locations.\n\n#### Possible investigation steps:\n- Since this is an ES|QL rule, the `okta.actor.alternate_id` and `okta.client.id` values can be used to pivot into the raw authentication events related to this alert.\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - If the event type is `user.authentication.sso`, the user may have legitimately started a session via a proxy for security or privacy reasons.\n    - If the event type is `user.authentication.password`, the user may be using a proxy to access multiple accounts for password spraying.\n    - If the event type is `user.session.start`, the source may have attempted to establish a session via the Okta authentication API.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n\n### False positive analysis:\n- It is very rare that a legitimate user would have multiple sessions started from different geo-located countries in a short time frame.\n\n### Response and remediation:\n- If the user is legitimate and the authentication behavior is not suspicious based on device analysis, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting passwords for the users involves and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- If this is a false positive, consider adding the `okta.debug_context.debug_data.dt_hash` field to the `exceptions` list in the rule.\n    - This will prevent future occurrences of this event for this device from triggering the rule.\n    - Alternatively adding `okta.client.ip` or a CIDR range to the `exceptions` list can prevent future occurrences of this event from triggering the rule.\n        - This should be done with caution as it may prevent legitimate alerts from being generated.\n",
        "output_index": "",
        "version": 303,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Initial Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "15m",
        "from": "now-1800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.rezonate.io/blog/okta-logs-decoded-unveiling-identity-threats-through-threat-hunting/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/",
                "subtechnique": [
                  {
                    "id": "T1078.004",
                    "name": "Cloud Accounts",
                    "reference": "https://attack.mitre.org/techniques/T1078/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.\n",
        "related_integrations": [],
        "required_fields": [],
        "id": "05e4efd2-6089-454e-a0ad-38edd943058d",
        "rule_id": "2e56e1bc-867a-11ee-b13e-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.936Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:40.266Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "esql",
        "language": "esql",
        "query": "FROM logs-okta*\n| WHERE\n    event.dataset == \"okta.system\"\n    AND (event.action RLIKE \"user\\\\.authentication(.*)\" OR event.action == \"user.session.start\")\n    AND okta.security_context.is_proxy != true and okta.actor.id != \"unknown\"\n    AND event.outcome == \"success\"\n| KEEP event.action, okta.security_context.is_proxy, okta.actor.id, event.outcome, client.geo.country_name, okta.actor.alternate_id\n| STATS\n    geo_auth_counts = COUNT_DISTINCT(client.geo.country_name)\n    BY okta.actor.id, okta.actor.alternate_id\n| WHERE\n    geo_auth_counts >= 2"
      },
      {
        "name": "New Okta Identity Provider (IdP) Added by Admin",
        "description": "Detects the creation of a new Identity Provider (IdP) by a Super Administrator or Organization Administrator within Okta.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating New Okta Identity Provider (IdP) Added by Admin\n\nThis rule detects the creation of a new Identity Provider (IdP) by a Super Administrator or Organization Administrator within Okta.\n\n#### Possible investigation steps:\n- Identify the actor associated with the IdP creation by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Identify the IdP added by reviewing the `okta.target` field and determing if this IdP is authorized.\n- Determine the client used by the actor. Review the `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- If the client is a device, check the `okta.device.id`, `okta.device.name`, `okta.device.os_platform`, `okta.device.os_version`, and `okta.device.managed` fields.\n- Review the past activities of the actor involved in this action by checking their previous actions logged in the `okta.target` field.\n- Examine the `okta.request.ip_chain` field to potentially determine if the actor used a proxy or VPN to perform this action.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n\n### False positive analysis:\n- It might be a false positive if the action was part of a planned activity or performed by an authorized person.\n- Several unsuccessful attempts prior to this success, may indicate an adversary attempting to add an unauthorized IdP multiple times.\n\n### Response and remediation:\n- If the IdP is unauthorized, deactivate it immediately via the Okta console.\n- If the IdP is authorized, ensure that the actor who created it is authorized to do so.\n- If the actor is unauthorized, deactivate their account via the Okta console.\n- If the actor is authorized, ensure that the actor's account is not compromised.\n- Reset the user's password and enforce MFA re-enrollment, if applicable.\n- Block the IP address or device used in the attempts if they appear suspicious, using the data from the `okta.client.ip` and `okta.device.id` fields.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- If the deactivated IdP was crucial to the organization, consider adding a new IdP and removing the unauthorized IdP.",
        "output_index": "",
        "version": 205,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Persistence",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "15m",
        "from": "now-1800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://blog.cloudflare.com/cloudflare-investigation-of-the-january-2022-okta-compromise/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://unit42.paloaltonetworks.com/muddled-libra/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1556",
                "name": "Modify Authentication Process",
                "reference": "https://attack.mitre.org/techniques/T1556/",
                "subtechnique": [
                  {
                    "id": "T1556.007",
                    "name": "Hybrid Identity",
                    "reference": "https://attack.mitre.org/techniques/T1556/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "38c3cd2f-e740-4b11-bb83-19e5546d1767",
        "rule_id": "29b53942-7cd4-11ee-b70e-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.949Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:38.399Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset: \"okta.system\" and event.action: \"system.idp.lifecycle.create\" and okta.outcome.result: \"SUCCESS\"",
        "language": "kuery"
      },
      {
        "name": "Okta Sign-In Events via Third-Party IdP",
        "description": "Detects sign-in events where authentication is carried out via a third-party Identity Provider (IdP).",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Okta Sign-In Events via Third-Party IdP\n\nThis rule detects sign-in events where authentication is carried out via a third-party Identity Provider (IdP).\n\nAdversaries may attempt to add an unauthorized IdP to an Okta tenant to gain access to the tenant. Following this action, adversaries may attempt to sign in to the tenant using the unauthorized IdP. This rule detects both the addition of an unauthorized IdP and the subsequent sign-in attempt.\n\n#### Possible investigation steps:\n- Identify the third-party IdP by examining the `okta.authentication_context.issuer.id` field.\n- Once the third-party IdP is identified, determine if this IdP is authorized to be used by the tenant.\n- If the IdP is unauthorized, deactivate it immediately via the Okta console.\n- Identify the actor associated with the IdP creation by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields in historical data.\n    - The `New Okta Identity Provider (IdP) Added by Admin` rule may be helpful in identifying the actor and the IdP creation event.\n- Determine the client used by the actor. Review the `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- If the client is a device, check the `okta.device.id`, `okta.device.name`, `okta.device.os_platform`, `okta.device.os_version`, and `okta.device.managed` fields.\n- Review the past activities of the actor involved in this action by checking their previous actions logged in the `okta.target` field.\n- Examine the `okta.request.ip_chain` field to potentially determine if the actor used a proxy or VPN to perform this action.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n\n### False positive analysis:\n- It might be a false positive if this IdP is authorized to be used by the tenant.\n- This may be a false positive if an authorized third-party IdP is used to sign in to the tenant but failures occurred due to an incorrect configuration.\n\n### Response and remediation:\n- If the IdP is unauthorized, deactivate it immediately via the Okta console.\n- Reset the effected user's password and enforce MFA re-enrollment, if applicable.\n- Mobile device forensics may be required to determine if the user's device is compromised.\n- If the IdP is authorized, ensure that the actor who created it is authorized to do so.\n- If the actor is unauthorized, deactivate their account via the Okta console.\n- If the actor is authorized, ensure that the actor's account is not compromised.\n\n- Block the IP address or device used in the attempts if they appear suspicious, using the data from the `okta.client.ip` and `okta.device.id` fields.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- If the deactivated IdP was crucial to the organization, consider adding a new IdP and removing the unauthorized IdP.",
        "output_index": "",
        "version": 206,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Initial Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "15m",
        "from": "now-1800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://blog.cloudflare.com/cloudflare-investigation-of-the-january-2022-okta-compromise/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://unit42.paloaltonetworks.com/muddled-libra/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1199",
                "name": "Trusted Relationship",
                "reference": "https://attack.mitre.org/techniques/T1199/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.authentication_context.issuer.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.debug_context.debug_data.request_uri",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.reason",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "ea5d749c-2bf7-4920-a211-2f4a5e4c4ea7",
        "rule_id": "1ceb05c4-7d25-11ee-9562-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.952Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:36.212Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and okta.debug_context.debug_data.request_uri:/oauth2/v1/authorize/callback and\n    (not okta.authentication_context.issuer.id:Okta and event.action:(user.authentication.auth_via_IDP\n        or user.authentication.auth_via_inbound_SAML\n        or user.authentication.auth_via_mfa\n        or user.authentication.auth_via_social)\n        or event.action:user.session.start) or\n    (event.action:user.authentication.auth_via_IDP and okta.outcome.result:FAILURE\n        and okta.outcome.reason:(\"A SAML assert with the same ID has already been processed by Okta for a previous request\"\n            or \"Unable to match transformed username\"\n            or \"Unable to resolve IdP endpoint\"\n            or \"Unable to validate SAML Response\"\n            or \"Unable to validate incoming SAML Assertion\"))",
        "language": "kuery"
      },
      {
        "name": "Successful Application SSO from Rare Unknown Client Device",
        "description": "Detects successful single sign-on (SSO) events to Okta applications from an unrecognized or \"unknown\" client device, as identified by the user-agent string. This activity may be indicative of exploitation of a vulnerability in Okta's Classic Engine, which could allow an attacker to bypass application-specific sign-on policies, such as device or network restrictions. The vulnerability potentially enables unauthorized access to applications using only valid, stolen credentials, without requiring additional authentication factors.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 204,
        "tags": [
          "Domain: SaaS",
          "Data Source: Okta",
          "Use Case: Threat Detection",
          "Use Case: Identity and Access Audit",
          "Tactic: Initial Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://trust.okta.com/security-advisories/okta-classic-application-sign-on-policy-bypass-2024/"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          }
        ],
        "setup": "",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.outcome",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.client.device",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "df6392ec-35f2-4891-be10-f80586b876a4",
        "rule_id": "1502a836-84b2-11ef-b026-f661ea17fbcc",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.955Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:34.173Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "new_terms",
        "query": "event.dataset: \"okta.system\"\n    and event.action: \"user.authentication.sso\"\n    and event.outcome: \"success\"\n    and okta.client.device: (\"Unknown\" or \"unknown\")",
        "new_terms_fields": [
          "client.user.name",
          "okta.client.user_agent.raw_user_agent"
        ],
        "history_window_start": "now-14d",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Okta Brute Force or Password Spraying Attack",
        "description": "Identifies a high number of failed Okta user authentication attempts from a single IP address, which could be indicative of a brute force or password spraying attack. An adversary may attempt a brute force or password spraying attack to obtain unauthorized access to user accounts.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Okta Brute Force or Password Spraying Attack\n\nThis rule alerts when a high number of failed Okta user authentication attempts occur from a single IP address. This could be indicative of a brute force or password spraying attack, where an adversary may attempt to gain unauthorized access to user accounts by guessing the passwords.\n\n#### Possible investigation steps:\n\n- Review the `source.ip` field to identify the IP address from which the high volume of failed login attempts originated.\n- Look into the `event.outcome` field to verify that these are indeed failed authentication attempts.\n- Determine the `user.name` or `user.email` related to these failed login attempts. If the attempts are spread across multiple accounts, it might indicate a password spraying attack.\n- Check the timeline of the events. Are the failed attempts spread out evenly, or are there burst periods, which might indicate an automated tool?\n- Determine the geographical location of the source IP. Is this location consistent with the user's typical login location?\n- Analyze any previous successful logins from this IP. Was this IP previously associated with successful logins?\n\n### False positive analysis:\n\n- A single user or automated process that attempts to authenticate using expired or wrong credentials multiple times may trigger a false positive.\n- Analyze the behavior of the source IP. If the IP is associated with legitimate users or services, it may be a false positive.\n\n### Response and remediation:\n\n- If you identify unauthorized access attempts, consider blocking the source IP at the firewall level.\n- Notify the users who are targeted by the attack. Ask them to change their passwords and ensure they use unique, complex passwords.\n- Enhance monitoring on the affected user accounts for any suspicious activity.\n- If the attack is persistent, consider implementing CAPTCHA or account lockouts after a certain number of failed login attempts.\n- If the attack is persistent, consider implementing multi-factor authentication (MFA) for the affected user accounts.\n- Review and update your security policies based on the findings from the incident.",
        "output_index": "",
        "version": 412,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Automated processes that attempt to authenticate using expired credentials and unbounded retries may lead to false positives."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.category",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.outcome",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "1a738d18-3b92-49e0-8506-e6650b99f4ae",
        "rule_id": "42bf698b-4738-445b-8231-c834ddefd8a0",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.961Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:42.587Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "threshold",
        "query": "event.dataset:okta.system and event.category:authentication and event.outcome:failure",
        "threshold": {
          "field": [
            "source.ip"
          ],
          "value": 25
        },
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Attempted Bypass of Okta MFA",
        "description": "Detects attempts to bypass Okta multi-factor authentication (MFA). An adversary may attempt to bypass the Okta MFA policies configured for an organization in order to obtain unauthorized access to an application.",
        "risk_score": 73,
        "severity": "high",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempted Bypass of Okta MFA\n\nMulti-factor authentication (MFA) is a crucial security measure in preventing unauthorized access. Okta MFA, like other MFA solutions, requires the user to provide multiple means of identification at login. An adversary might attempt to bypass Okta MFA to gain unauthorized access to an application.\n\nThis rule detects attempts to bypass Okta MFA. It might indicate a serious attempt to compromise a user account within the organization's network.\n\n#### Possible investigation steps\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the bypass attempt.\n- Check the `okta.outcome.result` field to confirm the MFA bypass attempt.\n- Check if there are multiple unsuccessful MFA attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the MFA bypass attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the bypass attempt.\n\n### False positive analysis\n\n- Check if there were issues with the MFA system at the time of the bypass attempt. This could indicate a system error rather than a genuine bypass attempt.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the login attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's MFA settings to ensure they are correctly configured.\n\n### Response and remediation\n\n- If unauthorized access is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific MFA bypass technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 411,
        "tags": [
          "Data Source: Okta",
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/okta-and-lapsus-what-you-need-to-know",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1111",
                "name": "Multi-Factor Authentication Interception",
                "reference": "https://attack.mitre.org/techniques/T1111/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "c00f497c-ae62-4fdf-a460-4c7d3e28eaf7",
        "rule_id": "3805c3dc-f82c-4f8d-891e-63c24d3102b0",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.958Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:40.536Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:user.mfa.attempt_bypass",
        "language": "kuery"
      },
      {
        "name": "Attempt to Modify an Okta Network Zone",
        "description": "Detects attempts to modify an Okta network zone. Okta network zones can be configured to limit or restrict access to a network based on IP addresses or geolocations. An adversary may attempt to modify, delete, or deactivate an Okta network zone in order to remove or weaken an organization's security controls.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Modify an Okta Network Zone\n\nThe modification of an Okta network zone is a critical event as it could potentially allow an adversary to gain unrestricted access to your network. This rule detects attempts to modify, delete, or deactivate an Okta network zone, which may suggest an attempt to remove or weaken an organization's security controls.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the modification attempt.\n- Check the `okta.outcome.result` field to confirm the network zone modification attempt.\n- Check if there are multiple network zone modification attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the modification attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the modification attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the modification attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the modification attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized modification is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific modification technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Use Case: Network Security Monitoring",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Oyour organization's Okta network zones are regularly modified."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/network/network-zones.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "c2e093b1-5c77-42eb-9c49-e335eac8b2a5",
        "rule_id": "e48236ca-b67a-4b4e-840c-fdc7782bc0c3",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.978Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:18.856Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:(zone.update or network_zone.rule.disabled or zone.remove_blacklist)",
        "language": "kuery"
      },
      {
        "name": "Attempt to Deactivate an Okta Policy",
        "description": "Detects attempts to deactivate an Okta policy. An adversary may attempt to deactivate an Okta policy in order to weaken an organization's security controls. For example, an adversary may attempt to deactivate an Okta multi-factor authentication (MFA) policy in order to weaken the authentication requirements for user accounts.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Deactivate an Okta Policy\n\nOkta policies define rules to manage user access to resources. Policies such as multi-factor authentication (MFA) are critical for enforcing strong security measures. Deactivation of an Okta policy could potentially weaken the security posture, allowing for unauthorized access or facilitating other malicious activities.\n\nThis rule is designed to detect attempts to deactivate an Okta policy, which could be indicative of an adversary's attempt to weaken an organization's security controls. For example, disabling an MFA policy could lower the security of user authentication processes.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the deactivation attempt.\n- Check the `okta.outcome.result` field to confirm the policy deactivation attempt.\n- Check if there are multiple policy deactivation attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the policy deactivation attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the deactivation attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the deactivation attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the deactivation attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized policy deactivation is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific deactivation technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "If the behavior of deactivating Okta policies is expected, consider adding exceptions to this rule to filter false positives."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/Security_Policies.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "2a2f0e6a-fdf8-434a-822a-285a9addbd99",
        "rule_id": "b719a170-3bdb-4141-b0e3-13e3cf627bfe",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.965Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:10.271Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.lifecycle.deactivate",
        "language": "kuery"
      },
      {
        "name": "Stolen Credentials Used to Login to Okta Account After MFA Reset",
        "description": "Detects a sequence of suspicious activities on Windows hosts indicative of credential compromise, followed by efforts to undermine multi-factor authentication (MFA) and single sign-on (SSO) mechanisms for an Okta user account.",
        "risk_score": 73,
        "severity": "high",
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Stolen Credentials Used to Login to Okta Account After MFA Reset\n\nThis rule detects a sequence of suspicious activities on Windows hosts indicative of credential compromise, followed by efforts to undermine multi-factor authentication (MFA) and single sign-on (SSO) mechanisms for an Okta user account.\n\nTypically, adversaries initially extract credentials from targeted endpoints through various means. Subsequently, leveraging social engineering, they may seek to reset the MFA credentials associated with an Okta account, especially in scenarios where Active Directory (AD) services are integrated with Okta. Successfully resetting MFA allows the unauthorized use of stolen credentials to gain access to the compromised Okta account. The attacker can then register their own device for MFA, paving the way for unfettered access to the user's Okta account and any associated SaaS applications. This is particularly alarming if the compromised account has administrative rights, as it could lead to widespread access to organizational resources and configurations.\n\n#### Possible investigation steps:\n- Identify the user account associated with the Okta login attempt by examining the `user.name` field.\n- Identify the endpoint for the Credential Access alert for this user by examining the `host.name` and `host.id` fields from the alert document.\n- Cross-examine the Okta user and endpoint user to confirm that they are the same person.\n- Reach out to the user to confirm if they have intentionally reset their MFA credentials recently or asked for help in doing so.\n- If the user is unaware of the MFA reset, incident response may be required immediately to prevent further compromise.\n\n### False positive analysis:\n- A Windows administrator may have triggered a low-fidelity credential access alert during a legitimate administrative action. Following this, the administrator may have reset the MFA credentials for themselves and then logged into the Okta console for AD directory services integration management.\n\n### Response and remediation:\n- If confirmed that the user did not intentionally have their MFA factor reset, deactivate the user account.\n- After deactivation, reset the user's password and MFA factor to regain control of the account.\n    - Ensure that all user sessions are stopped during this process.\n- Immediately reset the user's AD password as well if Okta does not sync back to AD.\n- Forensic analysis on the user's endpoint may be required to determine the root cause of the compromise and identify the scope of the compromise.\n- Review Okta system logs to identify any other suspicious activity associated with the user account, such as creation of a backup account.\n- With the device ID captured from the MFA factor reset, search across all Okta logs for any other activity associated with the device ID.\n\n## Setup",
        "output_index": "",
        "version": 205,
        "tags": [
          "Tactic: Persistence",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Data Source: Elastic Defend",
          "Rule Type: Higher-Order Rule",
          "Domain: Endpoint",
          "Domain: Cloud"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "6h",
        "from": "now-43200s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "A Windows administrator may have triggered a low-fidelity credential access alert during a legitimate administrative action. Following this, the administrator may have reset the MFA credentials for themselves and then logged into the Okta console for AD directory services integration management."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1556",
                "name": "Modify Authentication Process",
                "reference": "https://attack.mitre.org/techniques/T1556/",
                "subtechnique": [
                  {
                    "id": "T1556.006",
                    "name": "Multi-Factor Authentication",
                    "reference": "https://attack.mitre.org/techniques/T1556/006/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta and Elastic Defend fleet integration structured data is required to be compatible with this rule. Directory services integration in Okta with AD synced is also required for this rule to be effective as it relies on triaging `user.name` from Okta and Elastic Defend events.",
        "related_integrations": [
          {
            "package": "endpoint",
            "version": "^8.2.0"
          },
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "host.os.type",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "signal.rule.threat.tactic.name",
            "type": "unknown",
            "ecs": false
          },
          {
            "name": "user.name",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "8b887fb8-fb26-4acd-bb7d-c7983de3af02",
        "rule_id": "5610b192-7f18-11ee-825b-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:06.968Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:46.607Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "eql",
        "query": "sequence by user.name with maxspan=12h\n    [any where host.os.type == \"windows\" and signal.rule.threat.tactic.name == \"Credential Access\"]\n    [any where event.dataset == \"okta.system\" and okta.event_type == \"user.mfa.factor.update\"]\n    [any where event.dataset == \"okta.system\" and okta.event_type: (\"user.session.start\", \"user.authentication*\")]",
        "language": "eql",
        "index": [
          "filebeat-*",
          "logs-okta*",
          ".alerts-security.*",
          "logs-endpoint.events.*"
        ],
        "filters": []
      },
      {
        "name": "Attempt to Delete an Okta Policy",
        "description": "Detects attempts to delete an Okta policy. An adversary may attempt to delete an Okta policy in order to weaken an organization's security controls. For example, an adversary may attempt to delete an Okta multi-factor authentication (MFA) policy in order to weaken the authentication requirements for user accounts.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Delete an Okta Policy\n\nOkta policies are critical to managing user access and enforcing security controls within an organization. The deletion of an Okta policy could drastically weaken an organization's security posture by allowing unrestricted access or facilitating other malicious activities.\n\nThis rule detects attempts to delete an Okta policy, which could be indicative of an adversary's attempt to weaken an organization's security controls. Adversaries may do this to bypass security barriers and enable further malicious activities.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the deletion attempt.\n- Check the `okta.outcome.result` field to confirm the policy deletion attempt.\n- Check if there are multiple policy deletion attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the policy deletion attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the deletion attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the deletion attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the deletion attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized policy deletion is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific deletion technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Okta policies are regularly deleted in your organization."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/Security_Policies.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "40d8020f-197e-4422-a111-86fac06f71bf",
        "rule_id": "b4bb1440-0fcb-4ed1-87e5-b06d58efc5e9",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.033Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:08.495Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.lifecycle.delete",
        "language": "kuery"
      },
      {
        "name": "Attempt to Deactivate an Okta Policy Rule",
        "description": "Detects attempts to deactivate a rule within an Okta policy. An adversary may attempt to deactivate a rule within an Okta policy in order to remove or weaken an organization's security controls.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Deactivate an Okta Policy Rule\n\nIdentity and Access Management (IAM) systems like Okta serve as the first line of defense for an organization's network, and are often targeted by adversaries. By disabling security rules, adversaries can circumvent multi-factor authentication, access controls, or other protective measures enforced by these policies, enabling unauthorized access, privilege escalation, or other malicious activities.\n\nThis rule detects attempts to deactivate a rule within an Okta policy, which could be indicative of an adversary's attempt to weaken an organization's security controls. A threat actor may do this to remove barriers to their activities or enable future attacks.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the deactivation attempt.\n- Check the `okta.outcome.result` field to confirm the policy rule deactivation attempt.\n- Check if there are multiple policy rule deactivation attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the policy rule deactivation attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the deactivation attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the deactivation attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the deactivation attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized policy rule deactivation is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific deactivation technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 411,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Defense Evasion",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Okta MFA rules are regularly deactivated in your organization."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/Security_Policies.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "7a949e62-5a7a-4f3b-b903-f75b67a6c2a1",
        "rule_id": "cc92c835-da92-45c9-9f29-b4992ad621a0",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.042Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.432Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.rule.deactivate",
        "language": "kuery"
      },
      {
        "name": "Unauthorized Access to an Okta Application",
        "description": "Identifies unauthorized access attempts to Okta applications.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 410,
        "tags": [
          "Tactic: Initial Access",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic",
          "Austin Songer"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            }
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            }
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0004",
              "name": "Privilege Escalation",
              "reference": "https://attack.mitre.org/tactics/TA0004/"
            }
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "336e544b-b284-407f-91d8-e7c268ca7689",
        "rule_id": "4edd3e1a-3aa0-499b-8147-4d2ea43b1613",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.036Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:44.651Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:app.generic.unauth_app_access_attempt",
        "language": "kuery"
      },
      {
        "name": "Attempt to Delete an Okta Network Zone",
        "description": "Detects attempts to delete an Okta network zone. Okta network zones can be configured to limit or restrict access to a network based on IP addresses or geolocations. An adversary may attempt to modify, delete, or deactivate an Okta network zone in order to remove or weaken an organization's security controls.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Delete an Okta Network Zone\n\nOkta network zones can be configured to limit or restrict access to a network based on IP addresses or geolocations. Deleting a network zone in Okta might remove or weaken the security controls of an organization, which might be an indicator of an adversary's attempt to evade defenses.\n\n#### Possible investigation steps:\n\n- Identify the actor associated with the alert by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields.\n- Examine the `event.action` field to confirm the deletion of a network zone.\n- Investigate the `okta.target.id`, `okta.target.type`, `okta.target.alternate_id`, or `okta.target.display_name` fields to identify the network zone that was deleted.\n- Review the `event.time` field to understand when the event happened.\n- Check the actor's activities before and after the event to understand the context of this event.\n\n### False positive analysis:\n\n- Verify the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor. If these match the actor's typical behavior, it might be a false positive.\n- Check if the actor is a known administrator or a member of the IT team who might have a legitimate reason to delete a network zone.\n- Cross-verify the actor's actions with any known planned changes or maintenance activities.\n\n### Response and remediation:\n\n- If unauthorized access or actions are confirmed, immediately lock the affected actor's account and require a password change.\n- If a network zone was deleted without authorization, create a new network zone with similar settings as the deleted one.\n- Review and update the privileges of the actor who initiated the deletion.\n- Identify any gaps in the security policies and procedures and update them as necessary.\n- Implement additional monitoring and logging of Okta events to improve visibility of user actions.\n- Communicate and train the employees about the importance of following proper procedures for modifying network zone settings.",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Use Case: Network Security Monitoring",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Oyour organization's Okta network zones are regularly deleted."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/network/network-zones.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "b5b0b7cb-6f44-42fc-8f1d-5df099506d76",
        "rule_id": "c749e367-a069-4a73-b1f2-43a3798153ad",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.039Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:12.561Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:zone.delete",
        "language": "kuery"
      },
      {
        "name": "Attempt to Delete an Okta Application",
        "description": "Detects attempts to delete an Okta application. An adversary may attempt to modify, deactivate, or delete an Okta application in order to weaken an organization's security controls or disrupt their business operations.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Impact"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if your organization's Okta applications are regularly deleted and the behavior is expected."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0040",
              "name": "Impact",
              "reference": "https://attack.mitre.org/tactics/TA0040/"
            },
            "technique": [
              {
                "id": "T1489",
                "name": "Service Stop",
                "reference": "https://attack.mitre.org/techniques/T1489/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "14cee25c-cc28-4567-9cfd-fdc267a28cc2",
        "rule_id": "d48e1c13-4aca-4d1f-a7b1-a9161c0ad86f",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.045Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.614Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:application.lifecycle.delete",
        "language": "kuery"
      },
      {
        "name": "Attempt to Modify an Okta Policy Rule",
        "description": "Detects attempts to modify a rule within an Okta policy. An adversary may attempt to modify an Okta policy rule in order to weaken an organization's security controls.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Modify an Okta Policy Rule\n\nThe modification of an Okta policy rule can be an indication of malicious activity as it may aim to weaken an organization's security controls.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the modification attempt.\n- Check the `okta.outcome.result` field to confirm the rule modification attempt.\n- Check if there are multiple rule modification attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the modification attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the modification attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the modification attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the modification attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized modification is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific modification technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 411,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Defense Evasion",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Okta MFA rules are regularly modified in your organization."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/Security_Policies.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "68eab70b-f298-497c-aeb2-0207ece28665",
        "rule_id": "000047bb-b27a-47ec-8b62-ef1a5d2c9e19",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.055Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:30.403Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.rule.update",
        "language": "kuery"
      },
      {
        "name": "Attempt to Create Okta API Token",
        "description": "Detects attempts to create an Okta API token. An adversary may create an Okta API token to maintain access to an organization's network while they work to achieve their objectives. An attacker may abuse an API token to execute techniques such as creating user accounts or disabling security rules or policies.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Persistence"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "If the behavior of creating Okta API tokens is expected, consider adding exceptions to this rule to filter false positives."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1136",
                "name": "Create Account",
                "reference": "https://attack.mitre.org/techniques/T1136/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "a94d5350-3a38-4889-920c-27b2c7d8c93b",
        "rule_id": "96b9f4ea-0e8c-435b-8d53-2096e75fcac5",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.057Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:00.160Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:system.api_token.create",
        "language": "kuery"
      },
      {
        "name": "Attempt to Modify an Okta Application",
        "description": "Detects attempts to modify an Okta application. An adversary may attempt to modify, deactivate, or delete an Okta application in order to weaken an organization's security controls or disrupt their business operations.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Impact"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if your organization's Okta applications are regularly modified and the behavior is expected."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Apps/Apps_Apps.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0040",
              "name": "Impact",
              "reference": "https://attack.mitre.org/tactics/TA0040/"
            }
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "32db956e-d7f3-46f9-95fd-dc5d64f8a089",
        "rule_id": "c74fd275-ab2c-4d49-8890-e2943fa65c09",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.069Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:12.567Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:application.lifecycle.update",
        "language": "kuery"
      },
      {
        "name": "Administrator Privileges Assigned to an Okta Group",
        "description": "Detects when an administrator role is assigned to an Okta group. An adversary may attempt to assign administrator privileges to an Okta group in order to assign additional permissions to compromised user accounts and maintain access to their target organization.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Persistence"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Administrator roles may be assigned to Okta users by a Super Admin user. Verify that the behavior was expected. Exceptions can be added to this rule to filter expected behavior."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/administrators-admin-comparison.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1098",
                "name": "Account Manipulation",
                "reference": "https://attack.mitre.org/techniques/T1098/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "a665ab0a-00ff-41d1-8b88-b0bebddc486a",
        "rule_id": "b8075894-0b62-46e5-977c-31275da34419",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.073Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:10.281Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:group.privilege.grant",
        "language": "kuery"
      },
      {
        "name": "Multiple Device Token Hashes for Single Okta Session",
        "description": "This rule detects when a specific Okta actor has multiple device token hashes for a single Okta session. This may indicate an authenticated session has been hijacked or is being used by multiple devices. Adversaries may hijack a session to gain unauthorized access to Okta admin console, applications, tenants, or other resources.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Multiple Device Token Hashes for Single Okta Session\n\nThis rule detects when a specific Okta actor has multiple device token hashes for a single Okta session. This may indicate an authenticated session has been hijacked or is being used by multiple devices. Adversaries may hijack a session to gain unauthorized access to Okta admin console, applications, tenants, or other resources.\n\n#### Possible investigation steps:\n- Since this is an ES|QL rule, the `okta.actor.alternate_id` and `okta.authentication_context.external_session_id` values can be used to pivot into the raw authentication events related to this alert.\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - Authentication events have been filtered out to focus on Okta activity via established sessions.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n- Aggregate by `okta.actor.alternate_id` and `event.action` to determine the type of actions that are being performed by the actor(s) involved in this action.\n    - If various activity is reported that seems to indicate actions from separate users, consider deactivating the user's account temporarily.\n\n### False positive analysis:\n- It is very rare that a legitimate user would have multiple device token hashes for a single Okta session as DT hashes do not change after an authenticated session is established.\n\n### Response and remediation:\n- Consider stopping all sessions for the user(s) involved in this action.\n- If this does not appear to be a false positive, consider resetting passwords for the users involved and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- Alternatively adding `okta.client.ip` or a CIDR range to the `exceptions` list can prevent future occurrences of this event from triggering the rule.\n    - This should be done with caution as it may prevent legitimate alerts from being generated.\n",
        "output_index": "",
        "version": 304,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Credential Access",
          "Domain: SaaS"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://support.okta.com/help/s/article/session-hijacking-attack-definition-damage-defense?language=en_US",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1539",
                "name": "Steal Web Session Cookie",
                "reference": "https://attack.mitre.org/techniques/T1539/"
              }
            ]
          }
        ],
        "setup": "## Setup\n\nThe Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [],
        "required_fields": [],
        "id": "0f9e1f93-d0b9-4fbd-825e-1c00b67071d3",
        "rule_id": "cc382a2e-7e52-11ee-9aac-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.079Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.403Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "esql",
        "language": "esql",
        "query": "FROM logs-okta*\n| WHERE\n    event.dataset == \"okta.system\"\n    // ignore authentication events where session and device token hash change often\n    AND NOT event.action IN (\n        \"policy.evaluate_sign_on\",\n        \"user.session.start\",\n        \"user.authentication.sso\"\n    )\n    // ignore Okta system events and only allow registered users\n    AND (\n        okta.actor.alternate_id != \"system@okta.com\"\n        AND okta.actor.alternate_id RLIKE \"[^@\\\\s]+\\\\@[^@\\\\s]+\"\n    )\n    AND okta.authentication_context.external_session_id != \"unknown\"\n| KEEP event.action, okta.actor.alternate_id, okta.authentication_context.external_session_id, okta.debug_context.debug_data.dt_hash\n| STATS\n    dt_hash_counts = COUNT_DISTINCT(okta.debug_context.debug_data.dt_hash) BY\n        okta.actor.alternate_id,\n        okta.authentication_context.external_session_id\n| WHERE\n    dt_hash_counts >= 2\n| SORT\n    dt_hash_counts DESC"
      },
      {
        "name": "Modification or Removal of an Okta Application Sign-On Policy",
        "description": "Detects attempts to modify or delete a sign on policy for an Okta application. An adversary may attempt to modify or delete the sign on policy for an Okta application in order to remove or weaken an organization's security controls.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 410,
        "tags": [
          "Tactic: Persistence",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if sign on policies for Okta applications are regularly modified or deleted in your organization."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/App_Based_Signon.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1556",
                "name": "Modify Authentication Process",
                "reference": "https://attack.mitre.org/techniques/T1556/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "5130843b-5eef-4ecc-84b4-f8e805fa606e",
        "rule_id": "cd16fb10-0261-46e8-9932-a0336278cdbe",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.075Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.437Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:(application.policy.sign_on.update or application.policy.sign_on.rule.delete)",
        "language": "kuery"
      },
      {
        "name": "Attempt to Reset MFA Factors for an Okta User Account",
        "description": "Detects attempts to reset an Okta user's enrolled multi-factor authentication (MFA) factors. An adversary may attempt to reset the MFA factors for an Okta user's account in order to register new MFA factors and abuse the account to blend in with normal activity in the victim's environment.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 410,
        "tags": [
          "Tactic: Persistence",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if the MFA factors for Okta user accounts are regularly reset in your organization."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta",
          "https://www.elastic.co/security-labs/okta-and-lapsus-what-you-need-to-know"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1098",
                "name": "Account Manipulation",
                "reference": "https://attack.mitre.org/techniques/T1098/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "4e78569b-c4c5-46ba-ad34-af42bc2a6a69",
        "rule_id": "729aa18d-06a6-41c7-b175-b65b739b1181",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.082Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:54.089Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:user.mfa.factor.reset_all",
        "language": "kuery"
      },
      {
        "name": "Multiple Okta User Authentication Events with Client Address",
        "description": "Detects when a certain threshold of Okta user authentication events are reported for multiple users from the same client address. Adversaries may attempt to launch a credential stuffing or password spraying attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Multiple Okta User Authentication Events with Client Address\n\nThis rule detects when a certain threshold of Okta user authentication events are reported for multiple users from the same client address. Adversaries may attempt to launch a credential stuffing attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts. Note that Okta does not log unrecognized usernames supplied during authentication attempts, so this rule may not detect all credential stuffing attempts or may indicate a targeted attack.\n\n#### Possible investigation steps:\nSince this is an ES|QL rule, the `okta.actor.alternate_id` and `okta.client.ip` values can be used to pivot into the raw authentication events related to this activity.\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- Review the `okta.security_context.is_proxy` field to determine if the device is a proxy.\n    - If the device is a proxy, this may indicate that a user is using a proxy to access multiple accounts for password spraying.\n- With the list of `okta.actor.alternate_id` values, review `event.outcome` results to determine if the authentication was successful.\n    - If the authentication was successful for any user, pivoting to `event.action` values for those users may provide additional context.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - If the event type is `user.authentication.sso`, the user may have legitimately started a session via a proxy for security or privacy reasons.\n    - If the event type is `user.authentication.password`, the user may be using a proxy to access multiple accounts for password spraying.\n    - If the event type is `user.session.start`, the source may have attempted to establish a session via the Okta authentication API.\n- Examine the `okta.outcome.result` field to determine if the authentication was successful.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n\n### False positive analysis:\n- A user may have legitimately started a session via a proxy for security or privacy reasons.\n- Users may share an endpoint related to work or personal use in which separate Okta accounts are used.\n    - Architecturally, this shared endpoint may leverage a proxy for security or privacy reasons.\n    - Shared systems such as Kiosks and conference room computers may be used by multiple users.\n    - Shared working spaces may have a single endpoint that is used by multiple users.\n\n### Response and remediation:\n- Review the profile of the users involved in this action to determine if proxy usage may be expected.\n- If the user is legitimate and the authentication behavior is not suspicious based on device analysis, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting passwords for the users involves and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- If this is a false positive, consider adding the `okta.debug_context.debug_data.dt_hash` field to the `exceptions` list in the rule.\n    - This will prevent future occurrences of this event for this device from triggering the rule.\n    - Alternatively adding `okta.client.ip` or a CIDR range to the `exceptions` list can prevent future occurrences of this event from triggering the rule.\n        - This should be done with caution as it may prevent legitimate alerts from being generated.\n",
        "output_index": "",
        "version": 203,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Credential Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Users may share an endpoint related to work or personal use in which separate Okta accounts are used.",
          "Shared systems such as Kiosks and conference room computers may be used by multiple users."
        ],
        "references": [
          "https://support.okta.com/help/s/article/How-does-the-Device-Token-work?language=en_US",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.okta.com/resources/whitepaper-how-adaptive-mfa-can-help-in-mitigating-brute-force-attacks/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.003",
                    "name": "Password Spraying",
                    "reference": "https://attack.mitre.org/techniques/T1110/003/"
                  }
                ]
              },
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.004",
                    "name": "Credential Stuffing",
                    "reference": "https://attack.mitre.org/techniques/T1110/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [],
        "required_fields": [],
        "id": "27a78c5c-5318-418f-bd9c-540b36b8affb",
        "rule_id": "94e734c0-2cda-11ef-84e1-f661ea17fbce",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.085Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:58.212Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "esql",
        "language": "esql",
        "query": "FROM logs-okta*\n| WHERE\n    event.dataset == \"okta.system\"\n    AND (event.action == \"user.session.start\" OR event.action RLIKE \"user\\\\.authentication(.*)\")\n    AND okta.outcome.reason == \"INVALID_CREDENTIALS\"\n| KEEP okta.client.ip, okta.actor.alternate_id, okta.actor.id, event.action, okta.outcome.reason\n| STATS\n    source_auth_count = COUNT_DISTINCT(okta.actor.id)\n    BY okta.client.ip, okta.actor.alternate_id\n| WHERE\n    source_auth_count > 5\n| SORT\n    source_auth_count DESC"
      },
      {
        "name": "First Occurrence of Okta User Session Started via Proxy",
        "description": "Identifies the first occurrence of an Okta user session started via a proxy.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating First Occurrence of Okta User Session Started via Proxy\n\nThis rule detects the first occurrence of an Okta user session started via a proxy. This rule is designed to help identify suspicious authentication behavior that may be indicative of an attacker attempting to gain access to an Okta account while remaining anonymous. This rule leverages the New Terms rule type feature where the `okta.actor.id` value is checked against the previous 7 days of data to determine if the value has been seen before for this activity.\n\n#### Possible investigation steps:\n- Identify the user involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the client used by the actor. Review the `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- Examine the `okta.debug_context.debug_data.flattened` field for more information about the proxy used.\n- Review the `okta.request.ip_chain` field for more information about the geographic location of the proxy.\n- Review the past activities of the actor involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n\n### False positive analysis:\n- A user may have legitimately started a session via a proxy for security or privacy reasons.\n\n### Response and remediation:\n- Review the profile of the user involved in this action to determine if proxy usage may be expected.\n- If the user is legitimate and the authentication behavior is not suspicious, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting the user's password and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the user.\n- If the user is not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n\n## Setup",
        "output_index": "",
        "version": 205,
        "tags": [
          "Tactic: Initial Access",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://developer.okta.com/docs/reference/api/system-log/#issuer-object",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1133",
                "name": "External Remote Services",
                "reference": "https://attack.mitre.org/techniques/T1133/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.security_context.is_proxy",
            "type": "boolean",
            "ecs": false
          }
        ],
        "id": "6f428aca-1d1a-4978-8b2b-06e98fded6bf",
        "rule_id": "6f1bb4b2-7dc8-11ee-92b2-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.088Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:51.733Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "new_terms",
        "query": "event.dataset:okta.system and okta.event_type: (user.session.start or user.authentication.verify) and okta.security_context.is_proxy:true and not okta.actor.id: okta*",
        "new_terms_fields": [
          "okta.actor.id",
          "cloud.account.id"
        ],
        "history_window_start": "now-7d",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "High Number of Okta User Password Reset or Unlock Attempts",
        "description": "Identifies a high number of Okta user password reset or account unlock attempts. An adversary may attempt to obtain unauthorized access to Okta user accounts using these methods and attempt to blend in with normal activity in their target's environment and evade detection.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating High Number of Okta User Password Reset or Unlock Attempts\n\nThis rule is designed to detect a suspiciously high number of password reset or account unlock attempts in Okta. Excessive password resets or account unlocks can be indicative of an attacker's attempt to gain unauthorized access to an account.\n\n#### Possible investigation steps:\n- Identify the actor associated with the excessive attempts. The `okta.actor.alternate_id` field can be used for this purpose.\n- Determine the client used by the actor. You can look at `okta.client.device`, `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.ip_chain.ip`, and `okta.client.geographical_context`.\n- Review the `okta.outcome.result` and `okta.outcome.reason` fields to understand the outcome of the password reset or unlock attempts.\n- Review the event actions associated with these attempts. Look at the `event.action` field and filter for actions related to password reset and account unlock attempts.\n- Check for other similar patterns of behavior from the same actor or IP address. If there is a high number of failed login attempts before the password reset or unlock attempts, this may suggest a brute force attack.\n- Also, look at the times when these attempts were made. If these were made during off-hours, it could further suggest an adversary's activity.\n\n### False positive analysis:\n- This alert might be a false positive if there are legitimate reasons for a high number of password reset or unlock attempts. This could be due to the user forgetting their password or account lockouts due to too many incorrect attempts.\n- Check the actor's past behavior. If this is their usual behavior and they have a valid reason for it, then it might be a false positive.\n\n### Response and remediation:\n- If unauthorized attempts are confirmed, initiate the incident response process.\n- Reset the user's password and enforce MFA re-enrollment, if applicable.\n- Block the IP address or device used in the attempts, if they appear suspicious.\n- If the attack was facilitated by a particular technique, ensure your systems are patched or configured to prevent such techniques.\n- Consider a security review of your Okta policies and rules to ensure they follow security best practices.",
        "output_index": "",
        "version": 412,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-3600s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic",
          "@BenB196",
          "Austin Songer"
        ],
        "false_positives": [
          "The number of Okta user password reset or account unlock attempts will likely vary between organizations. To fit this rule to their organization, users can duplicate this rule and edit the schedule and threshold values in the new rule."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "949964a1-3ca5-4917-8329-da9a6f44e173",
        "rule_id": "e90ee3af-45fc-432e-a850-4a58cf14a457",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.092Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:20.513Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "threshold",
        "query": "event.dataset:okta.system and\n  event.action:(system.email.account_unlock.sent_message or system.email.password_reset.sent_message or\n                system.sms.send_account_unlock_message or system.sms.send_password_reset_message or\n                system.voice.send_account_unlock_call or system.voice.send_password_reset_call or\n                user.account.unlock_token)",
        "threshold": {
          "field": [
            "okta.actor.alternate_id"
          ],
          "value": 5
        },
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Unauthorized Scope for Public App OAuth2 Token Grant with Client Credentials",
        "description": "Identifies a failed OAuth 2.0 token grant attempt for a public client app using client credentials. This event is generated when a public client app attempts to exchange a client credentials grant for an OAuth 2.0 access token, but the request is denied due to the lack of required scopes. This could indicate compromised client credentials in which an adversary is attempting to obtain an access token for unauthorized scopes. This is a [New Terms](https://www.elastic.co/guide/en/security/master/rules-ui-create.html#create-new-terms-rule) rule where the `okta.actor.display_name` field value has not been seen in the last 14 days regarding this event.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 205,
        "tags": [
          "Domain: SaaS",
          "Data Source: Okta",
          "Use Case: Threat Detection",
          "Use Case: Identity and Access Audit",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://github.blog/news-insights/company-news/security-alert-stolen-oauth-user-tokens/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1550",
                "name": "Use Alternate Authentication Material",
                "reference": "https://attack.mitre.org/techniques/T1550/",
                "subtechnique": [
                  {
                    "id": "T1550.001",
                    "name": "Application Access Token",
                    "reference": "https://attack.mitre.org/techniques/T1550/001/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.display_name",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.actor.type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.client.user_agent.raw_user_agent",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.debug_context.debug_data.flattened.grantType",
            "type": "unknown",
            "ecs": false
          },
          {
            "name": "okta.debug_context.debug_data.flattened.requestedScopes",
            "type": "unknown",
            "ecs": false
          },
          {
            "name": "okta.outcome.reason",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "c0deaabf-d6d2-4562-a6c8-6482bda848fd",
        "rule_id": "6649e656-6f85-11ef-8876-f661ea17fbcc",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.096Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:51.426Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "new_terms",
        "query": "event.dataset: okta.system\n    and event.action: \"app.oauth2.as.token.grant\"\n    and okta.actor.type: \"PublicClientApp\"\n    and okta.debug_context.debug_data.flattened.grantType: \"client_credentials\"\n    and okta.outcome.result: \"FAILURE\"\n    and not okta.client.user_agent.raw_user_agent: \"Okta-Integrations\"\n    and not okta.actor.display_name: (Okta* or Datadog)\n    and not okta.debug_context.debug_data.flattened.requestedScopes: (\"okta.logs.read\" or \"okta.eventHooks.read\" or \"okta.inlineHooks.read\")\n    and okta.outcome.reason: \"no_matching_scope\"",
        "new_terms_fields": [
          "okta.actor.display_name"
        ],
        "history_window_start": "now-14d",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "High Number of Okta Device Token Cookies Generated for Authentication",
        "description": "Detects when an Okta client address has a certain threshold of Okta user authentication events with multiple device token hashes generated for single user authentication. Adversaries may attempt to launch a credential stuffing or password spraying attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating High Number of Okta Device Token Cookies Generated for Authentication\n\nThis rule detects when a certain threshold of Okta user authentication events are reported for multiple users from the same client address. Adversaries may attempt to launch a credential stuffing attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts. Note that Okta does not log unrecognized usernames supplied during authentication attempts, so this rule may not detect all credential stuffing attempts or may indicate a targeted attack.\n\n#### Possible investigation steps:\n- Since this is an ES|QL rule, the `okta.actor.alternate_id` and `okta.client.ip` values can be used to pivot into the raw authentication events related to this activity.\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- Review the `okta.security_context.is_proxy` field to determine if the device is a proxy.\n    - If the device is a proxy, this may indicate that a user is using a proxy to access multiple accounts for password spraying.\n- With the list of `okta.actor.alternate_id` values, review `event.outcome` results to determine if the authentication was successful.\n    - If the authentication was successful for any user, pivoting to `event.action` values for those users may provide additional context.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - If the event type is `user.authentication.sso`, the user may have legitimately started a session via a proxy for security or privacy reasons.\n    - If the event type is `user.authentication.password`, the user may be using a proxy to access multiple accounts for password spraying.\n    - If the event type is `user.session.start`, the source may have attempted to establish a session via the Okta authentication API.\n- Examine the `okta.outcome.result` field to determine if the authentication was successful.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n\n### False positive analysis:\n- A user may have legitimately started a session via a proxy for security or privacy reasons.\n- Users may share an endpoint related to work or personal use in which separate Okta accounts are used.\n    - Architecturally, this shared endpoint may leverage a proxy for security or privacy reasons.\n    - Shared systems such as Kiosks and conference room computers may be used by multiple users.\n    - Shared working spaces may have a single endpoint that is used by multiple users.\n\n### Response and remediation:\n- Review the profile of the users involved in this action to determine if proxy usage may be expected.\n- If the user is legitimate and the authentication behavior is not suspicious based on device analysis, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting passwords for the users involves and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- If this is a false positive, consider adding the `okta.debug_context.debug_data.dt_hash` field to the `exceptions` list in the rule.\n    - This will prevent future occurrences of this event for this device from triggering the rule.\n    - Alternatively adding `okta.client.ip` or a CIDR range to the `exceptions` list can prevent future occurrences of this event from triggering the rule.\n        - This should be done with caution as it may prevent legitimate alerts from being generated.\n",
        "output_index": "",
        "version": 203,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Credential Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Users may share an endpoint related to work or personal use in which separate Okta accounts are used.",
          "Shared systems such as Kiosks and conference room computers may be used by multiple users."
        ],
        "references": [
          "https://support.okta.com/help/s/article/How-does-the-Device-Token-work?language=en_US",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.okta.com/resources/whitepaper-how-adaptive-mfa-can-help-in-mitigating-brute-force-attacks/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.003",
                    "name": "Password Spraying",
                    "reference": "https://attack.mitre.org/techniques/T1110/003/"
                  }
                ]
              },
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.004",
                    "name": "Credential Stuffing",
                    "reference": "https://attack.mitre.org/techniques/T1110/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [],
        "required_fields": [],
        "id": "ef9a1efb-95cf-451f-bdb7-ffd76f0627db",
        "rule_id": "23f18264-2d6d-11ef-9413-f661ea17fbce",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.099Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:36.430Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "esql",
        "language": "esql",
        "query": "FROM logs-okta*\n| WHERE\n    event.dataset == \"okta.system\"\n    AND (event.action RLIKE \"user\\\\.authentication(.*)\" OR event.action == \"user.session.start\")\n    AND okta.debug_context.debug_data.request_uri == \"/api/v1/authn\"\n    AND okta.outcome.reason == \"INVALID_CREDENTIALS\"\n| KEEP event.action, okta.debug_context.debug_data.dt_hash, okta.client.ip, okta.actor.alternate_id, okta.debug_context.debug_data.request_uri, okta.outcome.reason\n| STATS\n    source_auth_count = COUNT_DISTINCT(okta.debug_context.debug_data.dt_hash)\n    BY okta.client.ip, okta.actor.alternate_id\n| WHERE\n    source_auth_count >= 30\n| SORT\n    source_auth_count DESC"
      },
      {
        "name": "Potential Okta MFA Bombing via Push Notifications",
        "description": "Detects when an attacker abuses the Multi-Factor authentication mechanism by repeatedly issuing login requests until the user eventually accepts the Okta push notification. An adversary may attempt to bypass the Okta MFA policies configured for an organization to obtain unauthorized access.",
        "risk_score": 73,
        "severity": "high",
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Potential Okta MFA Bombing via Push Notifications\n\nMulti-Factor Authentication (MFA) is an effective method to prevent unauthorized access. However, some adversaries may abuse the system by repeatedly sending MFA push notifications until the user unwittingly approves the access.\n\nThis rule detects when a user denies MFA Okta Verify push notifications twice, followed by a successful authentication event within a 10-minute window. This sequence could indicate an adversary's attempt to bypass the Okta MFA policy.\n\n#### Possible investigation steps:\n\n- Identify the user who received the MFA notifications by reviewing the `user.email` field.\n- Identify the time, source IP, and geographical location of the MFA requests and the subsequent successful login.\n- Review the `event.action` field to understand the nature of the events. It should include two `user.mfa.okta_verify.deny_push` actions and one `user.authentication.sso` action.\n- Ask the user if they remember receiving the MFA notifications and subsequently logging into their account.\n- Check if the MFA requests and the successful login occurred during the user's regular activity hours.\n- Look for any other suspicious activity on the account around the same time.\n- Identify whether the same pattern is repeated for other users in your organization. Multiple users receiving push notifications simultaneously might indicate a larger attack.\n\n### False positive analysis:\n\n- Determine if the MFA push notifications were legitimate. Sometimes, users accidentally trigger MFA requests or deny them unintentionally and later approve them.\n- Check if there are known issues with the MFA system causing false denials.\n\n### Response and remediation:\n\n- If unauthorized access is confirmed, initiate your incident response process.\n- Alert the user and your IT department immediately.\n- If possible, isolate the user's account until the issue is resolved.\n- Investigate the source of the unauthorized access.\n- If the account was accessed by an unauthorized party, determine the actions they took after logging in.\n- Consider enhancing your MFA policy to prevent such incidents in the future.\n- Encourage users to report any unexpected MFA notifications immediately.\n- Review and update your incident response plans and security policies based on the findings from the incident.\n",
        "output_index": "",
        "version": 207,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://www.mandiant.com/resources/russian-targeting-gov-business",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.rezonate.io/blog/okta-logs-decoded-unveiling-identity-threats-through-threat-hunting/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1621",
                "name": "Multi-Factor Authentication Request Generation",
                "reference": "https://attack.mitre.org/techniques/T1621/"
              }
            ]
          }
        ],
        "setup": "## Setup\n\nThe Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.\n",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "06cdedfe-2380-421f-b9a3-19dd8e6ef75a",
        "rule_id": "8a0fbd26-867f-11ee-947c-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.102Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:56.140Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "eql",
        "query": "sequence by okta.actor.id with maxspan=10m\n  [authentication where event.dataset == \"okta.system\"\n    and okta.event_type == \"user.mfa.okta_verify.deny_push\"] with runs=5\n  until [authentication where event.dataset == \"okta.system\"\n    and (okta.event_type: (\n      \"user.authentication.sso\",\n      \"user.authentication.auth_via_mfa\",\n      \"user.authentication.verify\",\n      \"user.session.start\") and okta.outcome.result == \"SUCCESS\")]",
        "language": "eql",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "event_category_override": "event.category"
      },
      {
        "name": "Attempts to Brute Force an Okta User Account",
        "description": "Identifies when an Okta user account is locked out 3 times within a 3 hour window. An adversary may attempt a brute force or password spraying attack to obtain unauthorized access to user accounts. The default Okta authentication policy ensures that a user account is locked out after 10 failed authentication attempts.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempts to Brute Force an Okta User Account\n\nBrute force attacks aim to guess user credentials through exhaustive trial-and-error attempts. In this context, Okta accounts are targeted.\n\nThis rule fires when an Okta user account has been locked out 3 times within a 3-hour window. This could indicate an attempted brute force or password spraying attack to gain unauthorized access to the user account. Okta's default authentication policy locks a user account after 10 failed authentication attempts.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.alternate_id` field in the alert. This should give the username of the account being targeted.\n- Review the `okta.event_type` field to understand the nature of the events that led to the account lockout.\n- Check the `okta.severity` and `okta.display_message` fields for more context around the lockout events.\n- Look for correlation of events from the same IP address. Multiple lockouts from the same IP address might indicate a single source for the attack.\n- If the IP is not familiar, investigate it. The IP could be a proxy, VPN, Tor node, cloud datacenter, or a legitimate IP turned malicious.\n- Determine if the lockout events occurred during the user's regular activity hours. Unusual timing may indicate malicious activity.\n- Examine the authentication methods used during the lockout events by checking the `okta.authentication_context.credential_type` field.\n\n### False positive analysis:\n\n- Determine whether the account owner or an internal user made repeated mistakes in entering their credentials, leading to the account lockout.\n- Ensure there are no known network or application issues that might cause these events.\n\n### Response and remediation:\n\n- Alert the user and your IT department immediately.\n- If unauthorized access is confirmed, initiate your incident response process.\n- Investigate the source of the attack. If a specific machine or network is compromised, additional steps may need to be taken to address the issue.\n- Require the affected user to change their password.\n- If the attack is ongoing, consider blocking the IP address initiating the brute force attack.\n- Implement account lockout policies to limit the impact of brute force attacks.\n- Encourage users to use complex, unique passwords and consider implementing multi-factor authentication.\n- Check if the compromised account was used to access or alter any sensitive data or systems.",
        "output_index": "",
        "version": 412,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-10800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic",
          "@BenB196",
          "Austin Songer"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "d413f0f3-0f59-4586-a694-f6cefd0f5492",
        "rule_id": "e08ccd49-0380-4b2b-8d71-8000377d6e49",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.105Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:18.713Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "threshold",
        "query": "event.dataset:okta.system and event.action:user.account.lock",
        "threshold": {
          "field": [
            "okta.actor.alternate_id"
          ],
          "value": 3
        },
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Possible Okta DoS Attack",
        "description": "Detects possible Denial of Service (DoS) attacks against an Okta organization. An adversary may attempt to disrupt an organization's business operations by performing a DoS attack against its Okta service.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Impact"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0040",
              "name": "Impact",
              "reference": "https://attack.mitre.org/tactics/TA0040/"
            },
            "technique": [
              {
                "id": "T1498",
                "name": "Network Denial of Service",
                "reference": "https://attack.mitre.org/techniques/T1498/"
              },
              {
                "id": "T1499",
                "name": "Endpoint Denial of Service",
                "reference": "https://attack.mitre.org/techniques/T1499/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "96ee68d6-8d96-4b6f-843b-ef9f4142658c",
        "rule_id": "e6e3ecff-03dd-48ec-acbd-54a04de10c68",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.108Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:18.895Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:(application.integration.rate_limit_exceeded or system.org.rate_limit.warning or system.org.rate_limit.violation or core.concurrency.org.limit.violation)",
        "language": "kuery"
      },
      {
        "name": "MFA Deactivation with no Re-Activation for Okta User Account",
        "description": "Detects multi-factor authentication (MFA) deactivation with no subsequent re-activation for an Okta user account. An adversary may deactivate MFA for an Okta user account in order to weaken the authentication requirements for the account.",
        "risk_score": 21,
        "severity": "low",
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating MFA Deactivation with no Re-Activation for Okta User Account\n\nMFA is used to provide an additional layer of security for user accounts. An adversary may achieve MFA deactivation for an Okta user account to achieve persistence.\n\nThis rule fires when an Okta user account has MFA deactivated and no subsequent MFA reactivation is observed within 12 hours.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.alternate_id` field in the alert. This should give the username of the account being targeted.\n- Review `okta.target` or `user.target.full_name` fields to determine if deactivation was performed by a se parate user.\n- Using the `okta.actor.alternate_id` field, search  for MFA re-activation events where `okta.event_type` is `user.mfa.factor.activate`.\n- Review events where `okta.event_type` is `user.authenticate*` to determine if the user account had suspicious login activity.\n    - Geolocation details found in `client.geo*` related fields may be useful in determining if the login activity was suspicious for this user.\n\n#### False positive steps:\n\n- Determine with the target user if MFA deactivation was expected.\n- Determine if MFA is required for the target user account.\n\n#### Response and remediation:\n\n- If the MFA deactivation was not expected, consider deactivating the user\n    - This should be followed by resetting the user's password and re-enabling MFA.\n- If the MFA deactivation was expected, consider adding an exception to this rule to filter false positives.\n- Investigate the source of the attack. If a specific machine or network is compromised, additional steps may need to be taken to address the issue.\n- Encourage users to use complex, unique passwords and consider implementing multi-factor authentication.\n- Check if the compromised account was used to access or alter any sensitive data, applications or systems.\n- Review the client user-agent to determine if it's a known custom application that can be whitelisted.\n",
        "output_index": "",
        "version": 412,
        "tags": [
          "Tactic: Persistence",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Domain: Cloud"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "6h",
        "from": "now-43200s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "If the behavior of deactivating MFA for Okta user accounts is expected, consider adding exceptions to this rule to filter false positives."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1556",
                "name": "Modify Authentication Process",
                "reference": "https://attack.mitre.org/techniques/T1556/",
                "subtechnique": [
                  {
                    "id": "T1556.006",
                    "name": "Multi-Factor Authentication",
                    "reference": "https://attack.mitre.org/techniques/T1556/006/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.\n",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.reason",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "4baf5435-904c-4dd5-95ff-4ebd31a555b8",
        "rule_id": "cd89602e-9db0-48e3-9391-ae3bf241acd8",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.112Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.461Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "eql",
        "query": "sequence by okta.actor.id with maxspan=12h\n    [any where event.dataset == \"okta.system\" and okta.event_type in (\"user.mfa.factor.deactivate\", \"user.mfa.factor.reset_all\")\n        and okta.outcome.reason != \"User reset SECURITY_QUESTION factor\" and okta.outcome.result == \"SUCCESS\"]\n    ![any where event.dataset == \"okta.system\" and okta.event_type == \"user.mfa.factor.activate\"]",
        "language": "eql",
        "index": [
          "filebeat-*",
          "logs-okta.system*"
        ],
        "filters": []
      },
      {
        "name": "Okta ThreatInsight Threat Suspected Promotion",
        "description": "Okta ThreatInsight is a feature that provides valuable debug data regarding authentication and authorization processes, which is logged in the system. Within this data, there is a specific field called threat_suspected, which represents Okta's internal evaluation of the authentication or authorization workflow. When this field is set to True, it suggests the presence of potential credential access techniques, such as password-spraying, brute-forcing, replay attacks, and other similar threats.",
        "risk_score": 47,
        "severity": "medium",
        "rule_name_override": "okta.display_message",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\nThis is a promotion rule for Okta ThreatInsight suspected threat events, which are alertable events per the vendor.\nConsult vendor documentation on interpreting specific events.",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [
          {
            "field": "okta.debug_context.debug_data.risk_level",
            "operator": "equals",
            "severity": "low",
            "value": "LOW"
          },
          {
            "field": "okta.debug_context.debug_data.risk_level",
            "operator": "equals",
            "severity": "medium",
            "value": "MEDIUM"
          },
          {
            "field": "okta.debug_context.debug_data.risk_level",
            "operator": "equals",
            "severity": "high",
            "value": "HIGH"
          }
        ],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://help.okta.com/en-us/Content/Topics/Security/threat-insight/configure-threatinsight-system-log.html",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [],
        "setup": "",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.debug_context.debug_data.threat_suspected",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "fd675dc6-a684-4b57-b45c-fd2e1851eba9",
        "rule_id": "6885d2ae-e008-4762-b98a-e8e1cd3a81e9",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.115Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:51.514Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and (event.action:security.threat.detected or okta.debug_context.debug_data.threat_suspected: true)",
        "language": "kuery"
      },
      {
        "name": "Attempt to Revoke Okta API Token",
        "description": "Identifies attempts to revoke an Okta API token. An adversary may attempt to revoke or delete an Okta API token to disrupt an organization's business operations.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Revoke Okta API Token\n\nThe rule alerts when attempts are made to revoke an Okta API token. The API tokens are critical for integration services, and revoking them may lead to disruption in services. Therefore, it's important to validate these activities.\n\n#### Possible investigation steps:\n- Identify the actor associated with the API token revocation attempt. You can use the `okta.actor.alternate_id` field for this purpose.\n- Determine the client used by the actor. Review the `okta.client.device`, `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.ip_chain.ip`, and `okta.client.geographical_context` fields.\n- Verify if the API token revocation was authorized or part of some planned activity.\n- Check the `okta.outcome.result` and `okta.outcome.reason` fields to see if the attempt was successful or failed.\n- Analyze the past activities of the actor involved in this action. An actor who usually performs such activities may indicate a legitimate reason.\n- Evaluate the actions that happened just before and after this event. It can help understand the full context of the activity.\n\n### False positive analysis:\n- It might be a false positive if the action was part of a planned activity or was performed by an authorized person.\n\n### Response and remediation:\n- If unauthorized revocation attempts are confirmed, initiate the incident response process.\n- Block the IP address or device used in the attempts, if they appear suspicious.\n- Reset the user's password and enforce MFA re-enrollment, if applicable.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- If the revoked token was used for critical integrations, coordinate with the relevant team to minimize the impact.",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Impact"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "If the behavior of revoking Okta API tokens is expected, consider adding exceptions to this rule to filter false positives."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0040",
              "name": "Impact",
              "reference": "https://attack.mitre.org/tactics/TA0040/"
            },
            "technique": [
              {
                "id": "T1531",
                "name": "Account Access Removal",
                "reference": "https://attack.mitre.org/techniques/T1531/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "6f5f374f-36b1-4ae1-9d3d-40d83b2be6fe",
        "rule_id": "676cff2b-450b-4cf1-8ed2-c0c58a4a2dd7",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.118Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:51.477Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:system.api_token.revoke",
        "language": "kuery"
      },
      {
        "name": "Attempt to Modify an Okta Policy",
        "description": "Detects attempts to modify an Okta policy. An adversary may attempt to modify an Okta policy in order to weaken an organization's security controls. For example, an adversary may attempt to modify an Okta multi-factor authentication (MFA) policy in order to weaken the authentication requirements for user accounts.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Modify an Okta Policy\n\nModifications to Okta policies may indicate attempts to weaken an organization's security controls. If such an attempt is detected, consider the following steps for investigation.\n\n#### Possible investigation steps:\n- Identify the actor associated with the event. Check the fields `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name`.\n- Determine the client used by the actor. You can look at `okta.client.device`, `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.ip_chain.ip`, and `okta.client.geographical_context`.\n- Check the nature of the policy modification. You can review the `okta.target` field, especially `okta.target.display_name` and `okta.target.id`.\n- Examine the `okta.outcome.result` and `okta.outcome.reason` fields to understand the outcome of the modification attempt.\n- Check if there have been other similar modification attempts in a short time span from the same actor or IP address.\n\n### False positive analysis:\n- This alert might be a false positive if Okta policies are regularly updated in your organization as a part of normal operations.\n- Check if the actor associated with the event has legitimate rights to modify the Okta policies.\n- Verify the actor's geographical location and the time of the modification attempt. If these align with the actor's regular behavior, it could be a false positive.\n\n### Response and remediation:\n- If unauthorized modification is confirmed, initiate the incident response process.\n- Lock the actor's account and enforce password change as an immediate response.\n- Reset MFA tokens for the actor and enforce re-enrollment, if applicable.\n- Review any other actions taken by the actor to assess the overall impact.\n- If the attack was facilitated by a particular technique, ensure your systems are patched or configured to prevent such techniques.\n- Consider a security review of your Okta policies and rules to ensure they follow security best practices.",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Okta policies are regularly modified in your organization."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "eab45286-d747-4fe3-96d9-939dcdcf0c5d",
        "rule_id": "6731fbf2-8f28-49ed-9ab9-9a918ceb5a45",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.122Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:51.466Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.lifecycle.update",
        "language": "kuery"
      },
      {
        "name": "Multiple Okta Sessions Detected for a Single User",
        "description": "Detects when a user has started multiple Okta sessions with the same user account and different session IDs. This may indicate that an attacker has stolen the user's session cookie and is using it to access the user's account from a different location.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 206,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Lateral Movement"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "60m",
        "from": "now-3600s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "A user may have multiple sessions open at the same time, such as on a mobile device and a laptop."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0008",
              "name": "Lateral Movement",
              "reference": "https://attack.mitre.org/tactics/TA0008/"
            },
            "technique": [
              {
                "id": "T1550",
                "name": "Use Alternate Authentication Material",
                "reference": "https://attack.mitre.org/techniques/T1550/",
                "subtechnique": [
                  {
                    "id": "T1550.004",
                    "name": "Web Session Cookie",
                    "reference": "https://attack.mitre.org/techniques/T1550/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.display_name",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.authentication_context.external_session_id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "b67afc4f-f119-4b3a-8ace-b312817e0a6a",
        "rule_id": "621e92b6-7e54-11ee-bdc0-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": true
        },
        "updated_at": "2024-12-16T15:30:07.125Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:48.776Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "threshold",
        "query": "event.dataset:okta.system and okta.event_type:user.session.start and okta.authentication_context.external_session_id:*\n    and not (okta.actor.id: okta* or okta.actor.display_name: okta*)",
        "threshold": {
          "field": [
            "okta.actor.id"
          ],
          "value": 1,
          "cardinality": [
            {
              "field": "okta.authentication_context.external_session_id",
              "value": 3
            }
          ]
        },
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Attempt to Deactivate an Okta Application",
        "description": "Detects attempts to deactivate an Okta application. An adversary may attempt to modify, deactivate, or delete an Okta application in order to weaken an organization's security controls or disrupt their business operations.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Deactivate an Okta Application\n\nThis rule detects attempts to deactivate an Okta application. Unauthorized deactivation could lead to disruption of services and pose a significant risk to the organization.\n\n#### Possible investigation steps:\n- Identify the actor associated with the deactivation attempt by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the client used by the actor. Review the `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- If the client is a device, check the `okta.device.id`, `okta.device.name`, `okta.device.os_platform`, `okta.device.os_version`, and `okta.device.managed` fields.\n- Understand the context of the event from the `okta.debug_context.debug_data` and `okta.authentication_context` fields.\n- Check the `okta.outcome.result` and `okta.outcome.reason` fields to see if the attempt was successful or failed.\n- Review the past activities of the actor involved in this action by checking their previous actions logged in the `okta.target` field.\n- Analyze the `okta.transaction.id` and `okta.transaction.type` fields to understand the context of the transaction.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n\n### False positive analysis:\n- It might be a false positive if the action was part of a planned activity, performed by an authorized person, or if the `okta.outcome.result` field shows a failure.\n- An unsuccessful attempt might also indicate an authorized user having trouble rather than a malicious activity.\n\n### Response and remediation:\n- If unauthorized deactivation attempts are confirmed, initiate the incident response process.\n- Block the IP address or device used in the attempts if they appear suspicious, using the data from the `okta.client.ip` and `okta.device.id` fields.\n- Reset the user's password and enforce MFA re-enrollment, if applicable.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- If the deactivated application was crucial for business operations, coordinate with the relevant team to reactivate it and minimize the impact.",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Impact"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if your organization's Okta applications are regularly deactivated and the behavior is expected."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Apps/Apps_Apps.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0040",
              "name": "Impact",
              "reference": "https://attack.mitre.org/tactics/TA0040/"
            },
            "technique": [
              {
                "id": "T1489",
                "name": "Service Stop",
                "reference": "https://attack.mitre.org/techniques/T1489/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "1fc2573b-d11c-4831-aac6-85a236341385",
        "rule_id": "edb91186-1c7e-4db8-b53e-bfa33a1a0a8a",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.129Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:20.662Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:application.lifecycle.deactivate",
        "language": "kuery"
      },
      {
        "name": "Attempt to Deactivate an Okta Network Zone",
        "description": "Detects attempts to deactivate an Okta network zone. Okta network zones can be configured to limit or restrict access to a network based on IP addresses or geolocations. An adversary may attempt to modify, delete, or deactivate an Okta network zone in order to remove or weaken an organization's security controls.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Deactivate an Okta Network Zone\n\nThe Okta network zones can be configured to restrict or limit access to a network based on IP addresses or geolocations. Deactivating a network zone in Okta may remove or weaken the security controls of an organization, which might be an indicator of an adversary's attempt to evade defenses.\n\n#### Possible investigation steps\n\n- Identify the actor related to the alert by reviewing the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields.\n- Examine the `event.action` field to confirm the deactivation of a network zone.\n- Check the `okta.target.id`, `okta.target.type`, `okta.target.alternate_id`, or `okta.target.display_name` to identify the network zone that was deactivated.\n- Investigate the `event.time` field to understand when the event happened.\n- Review the actor's activities before and after the event to understand the context of this event.\n\n### False positive analysis\n\n- Check the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor. If these match the actor's normal behavior, it might be a false positive.\n- Check if the actor is a known administrator or part of the IT team who might have a legitimate reason to deactivate a network zone.\n- Verify the actor's actions with any known planned changes or maintenance activities.\n\n### Response and remediation\n\n- If unauthorized access or actions are confirmed, immediately lock the affected actor account and require a password change.\n- Re-enable the deactivated network zone if it was deactivated without authorization.\n- Review and update the privileges of the actor who initiated the deactivation.\n- Check the security policies and procedures to identify any gaps and update them as necessary.\n- Implement additional monitoring and logging of Okta events to improve visibility of user actions.\n- Communicate and train the employees about the importance of following proper procedures for modifying network zone settings.",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Use Case: Network Security Monitoring",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if your organization's Okta network zones are regularly modified."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/network/network-zones.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "648acd7a-7b2e-4081-9a50-9aa49aca83d7",
        "rule_id": "8a5c1e5f-ad63-481e-b53a-ef959230f7f1",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.145Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:57.947Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:zone.deactivate",
        "language": "kuery"
      },
      {
        "name": "Potentially Successful MFA Bombing via Push Notifications",
        "description": "Detects when an attacker abuses the Multi-Factor authentication mechanism by repeatedly issuing login requests until the user eventually accepts the Okta push notification. An adversary may attempt to bypass the Okta MFA policies configured for an organization to obtain unauthorized access.",
        "risk_score": 73,
        "severity": "high",
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Potential Abuse of Repeated MFA Push Notifications\n\nMulti-Factor Authentication (MFA) is an effective method to prevent unauthorized access. However, some adversaries may abuse the system by repeatedly sending MFA push notifications until the user unwittingly approves the access.\n\nThis rule detects when a user denies MFA Okta Verify push notifications twice, followed by a successful authentication event within a 10-minute window. This sequence could indicate an adversary's attempt to bypass the Okta MFA policy.\n\n#### Possible investigation steps:\n\n- Identify the user who received the MFA notifications by reviewing the `user.email` field.\n- Identify the time, source IP, and geographical location of the MFA requests and the subsequent successful login.\n- Review the `event.action` field to understand the nature of the events. It should include two `user.mfa.okta_verify.deny_push` actions and one `user.authentication.sso` action.\n- Ask the user if they remember receiving the MFA notifications and subsequently logging into their account.\n- Check if the MFA requests and the successful login occurred during the user's regular activity hours.\n- Look for any other suspicious activity on the account around the same time.\n- Identify whether the same pattern is repeated for other users in your organization. Multiple users receiving push notifications simultaneously might indicate a larger attack.\n\n### False positive analysis:\n\n- Determine if the MFA push notifications were legitimate. Sometimes, users accidentally trigger MFA requests or deny them unintentionally and later approve them.\n- Check if there are known issues with the MFA system causing false denials.\n\n### Response and remediation:\n\n- If unauthorized access is confirmed, initiate your incident response process.\n- Alert the user and your IT department immediately.\n- If possible, isolate the user's account until the issue is resolved.\n- Investigate the source of the unauthorized access.\n- If the account was accessed by an unauthorized party, determine the actions they took after logging in.\n- Consider enhancing your MFA policy to prevent such incidents in the future.\n- Encourage users to report any unexpected MFA notifications immediately.\n- Review and update your incident response plans and security policies based on the findings from the incident.",
        "output_index": "",
        "version": 413,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://www.mandiant.com/resources/russian-targeting-gov-business",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.rezonate.io/blog/okta-logs-decoded-unveiling-identity-threats-through-threat-hunting/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1621",
                "name": "Multi-Factor Authentication Request Generation",
                "reference": "https://attack.mitre.org/techniques/T1621/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.module",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.result",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "98e8b326-2a42-4cbd-ab3a-16ba9bfe6e1c",
        "rule_id": "97a8e584-fd3b-421f-9b9d-9c9d9e57e9d7",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.141Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:00.425Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "eql",
        "query": "sequence by okta.actor.id with maxspan=10m\n  [authentication where event.dataset == \"okta.system\" and event.module == \"okta\"\n    and event.action == \"user.mfa.okta_verify.deny_push\"] with runs=3\n  [authentication where event.dataset == \"okta.system\" and event.module == \"okta\"\n    and (event.action : (\n      \"user.authentication.sso\",\n      \"user.authentication.auth_via_mfa\",\n      \"user.authentication.verify\",\n      \"user.session.start\") and okta.outcome.result == \"SUCCESS\")]",
        "language": "eql",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "event_category_override": "event.category"
      },
      {
        "name": "Suspicious Activity Reported by Okta User",
        "description": "Detects when a user reports suspicious activity for their Okta account. These events should be investigated, as they can help security teams identify when an adversary is attempting to gain access to their network.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Initial Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "A user may report suspicious activity on their Okta account in error."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0004",
              "name": "Privilege Escalation",
              "reference": "https://attack.mitre.org/tactics/TA0004/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          },
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1078",
                "name": "Valid Accounts",
                "reference": "https://attack.mitre.org/techniques/T1078/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "d95ea18b-11e4-4901-9f75-187422532227",
        "rule_id": "f994964f-6fce-4d75-8e79-e16ccc412588",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.148Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:24.577Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:user.account.report_suspicious_activity_by_enduser",
        "language": "kuery"
      },
      {
        "name": "Administrator Role Assigned to an Okta User",
        "description": "Identifies when an administrator role is assigned to an Okta user. An adversary may attempt to assign an administrator role to an Okta user in order to assign additional permissions to a user account and maintain access to their target's environment.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 409,
        "tags": [
          "Data Source: Okta",
          "Use Case: Identity and Access Audit",
          "Tactic: Persistence"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Administrator roles may be assigned to Okta users by a Super Admin user. Verify that the behavior was expected. Exceptions can be added to this rule to filter expected behavior."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/administrators-admin-comparison.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta",
          "https://www.elastic.co/security-labs/okta-and-lapsus-what-you-need-to-know"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0003",
              "name": "Persistence",
              "reference": "https://attack.mitre.org/tactics/TA0003/"
            },
            "technique": [
              {
                "id": "T1098",
                "name": "Account Manipulation",
                "reference": "https://attack.mitre.org/techniques/T1098/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "cb0e33cf-8448-4e76-a4e0-9f9ad5a79318",
        "rule_id": "f06414a6-f2a4-466d-8eba-10f85e8abf71",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.152Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:20.750Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:user.account.privilege.grant",
        "language": "kuery"
      },
      {
        "name": "Attempt to Delete an Okta Policy Rule",
        "description": "Detects attempts to delete a rule within an Okta policy. An adversary may attempt to delete an Okta policy rule in order to weaken an organization's security controls.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Attempt to Delete an Okta Policy Rule\n\nOkta policy rules are integral components of an organization's security controls, as they define how user access to resources is managed. Deletion of a rule within an Okta policy could potentially weaken the organization's security posture, allowing for unauthorized access or facilitating other malicious activities.\n\nThis rule detects attempts to delete an Okta policy rule, which could indicate an adversary's attempt to weaken an organization's security controls. Adversaries may do this to circumvent security measures and enable further malicious activities.\n\n#### Possible investigation steps:\n\n- Identify the actor related to the alert by reviewing `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields in the alert.\n- Review the `okta.client.user_agent.raw_user_agent` field to understand the device and software used by the actor.\n- Examine the `okta.outcome.reason` field for additional context around the deletion attempt.\n- Check the `okta.outcome.result` field to confirm the policy rule deletion attempt.\n- Check if there are multiple policy rule deletion attempts from the same actor or IP address (`okta.client.ip`).\n- Check for successful logins immediately following the policy rule deletion attempt.\n- Verify whether the actor's activity aligns with typical behavior or if any unusual activity took place around the time of the deletion attempt.\n\n### False positive analysis:\n\n- Check if there were issues with the Okta system at the time of the deletion attempt. This could indicate a system error rather than a genuine threat activity.\n- Check the geographical location (`okta.request.ip_chain.geographical_context`) and time of the deletion attempt. If these match the actor's normal behavior, it might be a false positive.\n- Verify the actor's administrative rights to ensure they are correctly configured.\n\n### Response and remediation:\n\n- If unauthorized policy rule deletion is confirmed, initiate the incident response process.\n- Immediately lock the affected actor account and require a password change.\n- Consider resetting MFA tokens for the actor and require re-enrollment.\n- Check if the compromised account was used to access or alter any sensitive data or systems.\n- If a specific deletion technique was used, ensure your systems are patched or configured to prevent such techniques.\n- Assess the criticality of affected services and servers.\n- Work with your IT team to minimize the impact on users and maintain business continuity.\n- If multiple accounts are affected, consider a broader reset or audit of MFA tokens.\n- Implement security best practices [outlined](https://www.okta.com/blog/2019/10/9-admin-best-practices-to-keep-your-org-secure/) by Okta.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).",
        "output_index": "",
        "version": 410,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Defense Evasion"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Consider adding exceptions to this rule to filter false positives if Okta MFA rules are regularly modified in your organization."
        ],
        "references": [
          "https://help.okta.com/en/prod/Content/Topics/Security/Security_Policies.htm",
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0005",
              "name": "Defense Evasion",
              "reference": "https://attack.mitre.org/tactics/TA0005/"
            },
            "technique": [
              {
                "id": "T1562",
                "name": "Impair Defenses",
                "reference": "https://attack.mitre.org/techniques/T1562/",
                "subtechnique": [
                  {
                    "id": "T1562.007",
                    "name": "Disable or Modify Cloud Firewall",
                    "reference": "https://attack.mitre.org/techniques/T1562/007/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "cf3e9278-b829-4356-a91a-b4a52797ebd9",
        "rule_id": "d5d86bf5-cf0c-4c06-b688-53fdc072fdfd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.155Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:16.515Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:policy.rule.delete",
        "language": "kuery"
      },
      {
        "name": "Multiple Okta User Authentication Events with Same Device Token Hash",
        "description": "Detects when a high number of Okta user authentication events are reported for multiple users in a short time frame. Adversaries may attempt to launch a credential stuffing or password spraying attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts.",
        "risk_score": 21,
        "severity": "low",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Multiple Okta User Authentication Events with Same Device Token Hash\n\nThis rule detects when a high number of Okta user authentication events are reported for multiple users in a short time frame. Adversaries may attempt to launch a credential stuffing attack from the same device by using a list of known usernames and passwords to gain unauthorized access to user accounts. Note that Okta does not log unrecognized usernames supplied during authentication attempts, so this rule may not detect all credential stuffing attempts or may indicate a targeted attack.\n\n#### Possible investigation steps:\n- Since this is an ES|QL rule, the `okta.actor.alternate_id` and `okta.debug_context.debug_data.dt_hash` values can be used to pivot into the raw authentication events related to this activity.\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n- Review the `okta.security_context.is_proxy` field to determine if the device is a proxy.\n    - If the device is a proxy, this may indicate that a user is using a proxy to access multiple accounts for password spraying.\n- With the list of `okta.actor.alternate_id` values, review `event.outcome` results to determine if the authentication was successful.\n    - If the authentication was successful for any user, pivoting to `event.action` values for those users may provide additional context.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - If the event type is `user.authentication.sso`, the user may have legitimately started a session via a proxy for security or privacy reasons.\n    - If the event type is `user.authentication.password`, the user may be using a proxy to access multiple accounts for password spraying.\n- Examine the `okta.outcome.result` field to determine if the authentication was successful.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n\n### False positive analysis:\n- A user may have legitimately started a session via a proxy for security or privacy reasons.\n- Users may share an endpoint related to work or personal use in which separate Okta accounts are used.\n    - Architecturally, this shared endpoint may leverage a proxy for security or privacy reasons.\n    - Shared systems such as Kiosks and conference room computers may be used by multiple users.\n    - Shared working spaces may have a single endpoint that is used by multiple users.\n\n### Response and remediation:\n- Review the profile of the users involved in this action to determine if proxy usage may be expected.\n- If the user is legitimate and the authentication behavior is not suspicious based on device analysis, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting passwords for the users involves and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- If this is a false positive, consider adding the `okta.debug_context.debug_data.dt_hash` field to the `exceptions` list in the rule.\n    - This will prevent future occurrences of this event for this device from triggering the rule.\n",
        "output_index": "",
        "version": 203,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Credential Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "Users may share an endpoint related to work or personal use in which separate Okta accounts are used.",
          "Shared systems such as Kiosks and conference room computers may be used by multiple users."
        ],
        "references": [
          "https://support.okta.com/help/s/article/How-does-the-Device-Token-work?language=en_US",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.okta.com/resources/whitepaper-how-adaptive-mfa-can-help-in-mitigating-brute-force-attacks/",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.003",
                    "name": "Password Spraying",
                    "reference": "https://attack.mitre.org/techniques/T1110/003/"
                  }
                ]
              },
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.004",
                    "name": "Credential Stuffing",
                    "reference": "https://attack.mitre.org/techniques/T1110/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [],
        "required_fields": [],
        "id": "210e6358-f252-4ba1-988c-c4f267a0f2c9",
        "rule_id": "95b99adc-2cda-11ef-84e1-f661ea17fbce",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.158Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:00.027Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "esql",
        "language": "esql",
        "query": "FROM logs-okta*\n| WHERE\n    event.dataset == \"okta.system\"\n    AND (event.action RLIKE \"user\\\\.authentication(.*)\" OR event.action == \"user.session.start\")\n    AND okta.debug_context.debug_data.dt_hash != \"-\"\n    AND okta.outcome.reason == \"INVALID_CREDENTIALS\"\n| KEEP event.action, okta.debug_context.debug_data.dt_hash, okta.actor.id, okta.actor.alternate_id, okta.outcome.reason\n| STATS\n    target_auth_count = COUNT_DISTINCT(okta.actor.id)\n    BY okta.debug_context.debug_data.dt_hash, okta.actor.alternate_id\n| WHERE\n    target_auth_count > 20\n| SORT\n    target_auth_count DESC"
      },
      {
        "name": "Okta FastPass Phishing Detection",
        "description": "Detects when Okta FastPass prevents a user from authenticating to a phishing website.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "",
        "output_index": "",
        "version": 307,
        "tags": [
          "Tactic: Initial Access",
          "Use Case: Identity and Access Audit",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-360s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Austin Songer"
        ],
        "false_positives": [],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://sec.okta.com/fastpassphishingdetection",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0001",
              "name": "Initial Access",
              "reference": "https://attack.mitre.org/tactics/TA0001/"
            },
            "technique": [
              {
                "id": "T1566",
                "name": "Phishing",
                "reference": "https://attack.mitre.org/techniques/T1566/"
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.\n\nThis rule requires Okta to have the following turned on:\n\nOkta Identity Engine - select 'Phishing Resistance for FastPass' under Settings > Features in the Admin Console.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.category",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.outcome",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.outcome.reason",
            "type": "keyword",
            "ecs": false
          }
        ],
        "id": "8eb3c968-141c-4cfa-8eed-464b85b47453",
        "rule_id": "ee39a9f7-5a79-4b0a-9815-d36b3cf28d3e",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.161Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:20.686Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.category:authentication and\n  okta.event_type:user.authentication.auth_via_mfa and event.outcome:failure and okta.outcome.reason:\"FastPass declined phishing attempt\"",
        "language": "kuery"
      },
      {
        "name": "Multiple Okta User Auth Events with Same Device Token Hash Behind a Proxy",
        "description": "Detects when Okta user authentication events are reported for multiple users with the same device token hash behind a proxy.",
        "risk_score": 47,
        "severity": "medium",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Multiple Okta User Auth Events with Same Device Token Hash Behind a Proxy\n\nThis rule detects when Okta user authentication events are reported for multiple users with the same device token hash behind a proxy. This may indicate that a shared device between users, or that a user is using a proxy to access multiple accounts for password spraying.\n\n#### Possible investigation steps:\n- Identify the users involved in this action by examining the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, and `okta.actor.display_name` fields.\n- Determine the device client used for these actions by analyzing `okta.client.ip`, `okta.client.user_agent.raw_user_agent`, `okta.client.zone`, `okta.client.device`, and `okta.client.id` fields.\n    - Since the device is behind a proxy, the `okta.client.ip` field will not be useful for determining the actual device IP address.\n- Review the `okta.request.ip_chain` field for more information about the geographic location of the proxy.\n- With Okta end users identified, review the `okta.debug_context.debug_data.dt_hash` field.\n    - Historical analysis should indicate if this device token hash is commonly associated with the user.\n- Review the `okta.event_type` field to determine the type of authentication event that occurred.\n    - If the event type is `user.authentication.sso`, the user may have legitimately started a session via a proxy for security or privacy reasons.\n    - If the event type is `user.authentication.password`, the user may be using a proxy to access multiple accounts for password spraying.\n- Examine the `okta.outcome.result` field to determine if the authentication was successful.\n- Review the past activities of the actor(s) involved in this action by checking their previous actions.\n- Evaluate the actions that happened just before and after this event in the `okta.event_type` field to help understand the full context of the activity.\n    - This may help determine the authentication and authorization actions that occurred between the user, Okta and application.\n\n### False positive analysis:\n- A user may have legitimately started a session via a proxy for security or privacy reasons.\n- Users may share an endpoint related to work or personal use in which separate Okta accounts are used.\n    - Architecturally, this shared endpoint may leverage a proxy for security or privacy reasons.\n    - Shared systems such as Kiosks and conference room computers may be used by multiple users.\n    - Shared working spaces may have a single endpoint that is used by multiple users.\n\n### Response and remediation:\n- Review the profile of the users involved in this action to determine if proxy usage may be expected.\n- If the user is legitimate and the authentication behavior is not suspicious based on device analysis, no action is required.\n- If the user is legitimate but the authentication behavior is suspicious, consider resetting passwords for the users involves and enabling multi-factor authentication (MFA).\n    - If MFA is already enabled, consider resetting MFA for the users.\n- If any of the users are not legitimate, consider deactivating the user's account.\n- Conduct a review of Okta policies and ensure they are in accordance with security best practices.\n- Check with internal IT teams to determine if the accounts involved recently had MFA reset at the request of the user.\n    - If so, confirm with the user this was a legitimate request.\n    - If so and this was not a legitimate request, consider deactivating the user's account temporarily.\n        - Reset passwords and reset MFA for the user.\n- If this is a false positive, consider adding the `okta.debug_context.debug_data.dt_hash` field to the `exceptions` list in the rule.\n    - This will prevent future occurrences of this event for this device from triggering the rule.\n",
        "output_index": "",
        "version": 206,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Data Source: Okta",
          "Tactic: Credential Access"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "5m",
        "from": "now-540s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [
          "An Okta admnistrator may be logged into multiple accounts from the same host for legitimate reasons.",
          "Users may share an endpoint related to work or personal use in which separate Okta accounts are used.",
          "Shared systems such as Kiosks and conference room computers may be used by multiple users."
        ],
        "references": [
          "https://developer.okta.com/docs/reference/api/system-log/",
          "https://developer.okta.com/docs/reference/api/event-types/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://sec.okta.com/articles/2023/08/cross-tenant-impersonation-prevention-and-detection",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            },
            "technique": [
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.003",
                    "name": "Password Spraying",
                    "reference": "https://attack.mitre.org/techniques/T1110/003/"
                  }
                ]
              },
              {
                "id": "T1110",
                "name": "Brute Force",
                "reference": "https://attack.mitre.org/techniques/T1110/",
                "subtechnique": [
                  {
                    "id": "T1110.004",
                    "name": "Credential Stuffing",
                    "reference": "https://attack.mitre.org/techniques/T1110/004/"
                  }
                ]
              }
            ]
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "okta.actor.id",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.debug_context.debug_data.dt_hash",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.event_type",
            "type": "keyword",
            "ecs": false
          },
          {
            "name": "okta.security_context.is_proxy",
            "type": "boolean",
            "ecs": false
          }
        ],
        "id": "16f505cf-e872-4f05-92e7-1e5b6cb78020",
        "rule_id": "50887ba8-7ff7-11ee-a038-f661ea17fbcd",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.048Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:28:44.660Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "threshold",
        "query": "event.dataset:okta.system\n    and not okta.actor.id:okta* and okta.debug_context.debug_data.dt_hash:*\n    and okta.event_type:user.authentication* and okta.security_context.is_proxy:true",
        "threshold": {
          "field": [
            "okta.debug_context.debug_data.dt_hash"
          ],
          "value": 1,
          "cardinality": [
            {
              "field": "okta.actor.id",
              "value": 3
            }
          ]
        },
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "language": "kuery"
      },
      {
        "name": "Okta User Session Impersonation",
        "description": "A user has initiated a session impersonation granting them access to the environment with the permissions of the user they are impersonating. This would likely indicate Okta administrative access and should only ever occur if requested and expected.",
        "risk_score": 73,
        "severity": "high",
        "timestamp_override": "event.ingested",
        "timestamp_override_fallback_disabled": false,
        "license": "Elastic License v2",
        "note": "## Triage and analysis\n\n### Investigating Okta User Session Impersonation\n\nThe detection of an Okta User Session Impersonation indicates that a user has initiated a session impersonation which grants them access with the permissions of the user they are impersonating. This type of activity typically indicates Okta administrative access and should only ever occur if requested and expected.\n\n#### Possible investigation steps\n\n- Identify the actor associated with the impersonation event by checking the `okta.actor.id`, `okta.actor.type`, `okta.actor.alternate_id`, or `okta.actor.display_name` fields.\n- Review the `event.action` field to confirm the initiation of the impersonation event.\n- Check the `event.time` field to understand the timing of the event.\n- Check the `okta.target.id`, `okta.target.type`, `okta.target.alternate_id`, or `okta.target.display_name` to identify the user who was impersonated.\n- Review any activities that occurred during the impersonation session. Look for any activities related to the impersonated user's account during and after the impersonation event.\n\n### False positive analysis\n\n- Verify if the session impersonation was part of an approved activity. Check if it was associated with any documented administrative tasks or troubleshooting efforts.\n- Ensure that the impersonation session was initiated by an authorized individual. You can check this by verifying the `okta.actor.id` or `okta.actor.display_name` against the list of approved administrators.\n\n### Response and remediation\n\n- If the impersonation was not authorized, consider it as a breach. Suspend the user account of the impersonator immediately.\n- Reset the user session and invalidate any active sessions related to the impersonated user.\n- If a specific impersonation technique was used, ensure that systems are patched or configured to prevent such techniques.\n- Conduct a thorough investigation to understand the extent of the breach and the potential impact on the systems and data.\n- Review and update your security policies to prevent such incidents in the future.\n- Implement additional monitoring and logging of Okta events to improve visibility of user actions.",
        "output_index": "",
        "version": 411,
        "tags": [
          "Use Case: Identity and Access Audit",
          "Tactic: Credential Access",
          "Data Source: Okta"
        ],
        "enabled": false,
        "risk_score_mapping": [],
        "severity_mapping": [],
        "interval": "15m",
        "from": "now-1800s",
        "to": "now",
        "actions": [],
        "exceptions_list": [],
        "author": [
          "Elastic"
        ],
        "false_positives": [],
        "references": [
          "https://blog.cloudflare.com/cloudflare-investigation-of-the-january-2022-okta-compromise/",
          "https://www.elastic.co/security-labs/testing-okta-visibility-and-detection-dorothy",
          "https://www.elastic.co/security-labs/monitoring-okta-threats-with-elastic-security",
          "https://www.elastic.co/security-labs/starter-guide-to-understanding-okta",
          "https://www.elastic.co/security-labs/okta-and-lapsus-what-you-need-to-know"
        ],
        "max_signals": 100,
        "threat": [
          {
            "framework": "MITRE ATT&CK",
            "tactic": {
              "id": "TA0006",
              "name": "Credential Access",
              "reference": "https://attack.mitre.org/tactics/TA0006/"
            }
          }
        ],
        "setup": "The Okta Fleet integration, Filebeat module, or similarly structured data is required to be compatible with this rule.",
        "related_integrations": [
          {
            "package": "okta",
            "version": "^3.0.0"
          }
        ],
        "required_fields": [
          {
            "name": "event.action",
            "type": "keyword",
            "ecs": true
          },
          {
            "name": "event.dataset",
            "type": "keyword",
            "ecs": true
          }
        ],
        "id": "f0206264-5cef-45f7-be34-0ba29c7b1595",
        "rule_id": "cdbebdc1-dc97-43c6-a538-f26a20c0a911",
        "immutable": true,
        "rule_source": {
          "type": "external",
          "is_customized": false
        },
        "updated_at": "2024-12-16T15:30:07.052Z",
        "updated_by": "elastic",
        "created_at": "2024-12-16T15:29:14.467Z",
        "created_by": "elastic",
        "revision": 1,
        "type": "query",
        "index": [
          "filebeat-*",
          "logs-okta*"
        ],
        "filters": [],
        "query": "event.dataset:okta.system and event.action:user.session.impersonation.initiate",
        "language": "kuery"
      }
    ],
    "skipped": []
  },
  "errors": [
    {
      "message": "Merge conflicts found in rule 'ff9bc8b9-f03b-4283-be58-ee0a16f5a11b' for fields: required_fields. Please resolve the conflict manually or choose another value for 'pick_version'",
      "rules": [
        {
          "rule_id": "ff9bc8b9-f03b-4283-be58-ee0a16f5a11b"
        }
      ]
    },
    {
      "message": "Merge conflicts found in rule '28eb3afe-131d-48b0-a8fc-9784f3d54f3c' for fields: required_fields. Please resolve the conflict manually or choose another value for 'pick_version'",
      "rules": [
        {
          "rule_id": "28eb3afe-131d-48b0-a8fc-9784f3d54f3c"
        }
      ]
    }
  ]
}