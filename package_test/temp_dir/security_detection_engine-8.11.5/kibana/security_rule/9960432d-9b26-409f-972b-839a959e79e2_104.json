{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies suspicious access to LSASS handle from a call trace pointing to DBGHelp.dll or DBGCore.dll, which both export the MiniDumpWriteDump method that can be used to dump LSASS memory content in preparation for credential access.",
        "from": "now-9m",
        "index": [
            "winlogbeat-*",
            "logs-windows.*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Potential Credential Access via LSASS Memory Dump",
        "note": "",
        "query": "process where host.os.type == \"windows\" and event.code == \"10\" and\n  winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\" and\n\n   /* DLLs exporting MiniDumpWriteDump API to create an lsass mdmp*/\n  winlog.event_data.CallTrace : (\"*dbghelp*\", \"*dbgcore*\") and\n\n   /* case of lsass crashing */\n  not process.executable : (\"?:\\\\Windows\\\\System32\\\\WerFault.exe\", \"?:\\\\Windows\\\\System32\\\\WerFaultSecure.exe\")\n",
        "references": [
            "https://www.ired.team/offensive-security/credential-access-and-credential-dumping/dump-credentials-from-lsass-process-without-mimikatz",
            "https://www.elastic.co/security-labs/detect-credential-access"
        ],
        "related_integrations": [
            {
                "package": "windows",
                "version": "^1.5.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.code",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.executable",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "winlog.event_data.CallTrace",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "winlog.event_data.TargetImage",
                "type": "unknown"
            }
        ],
        "risk_score": 73,
        "rule_id": "9960432d-9b26-409f-972b-839a959e79e2",
        "setup": "If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions \u003c8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work.",
        "severity": "high",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Credential Access",
            "Data Source: Sysmon Only"
        ],
        "threat": [
            {
                "framework": "MITRE ATT\u0026CK",
                "tactic": {
                    "id": "TA0006",
                    "name": "Credential Access",
                    "reference": "https://attack.mitre.org/tactics/TA0006/"
                },
                "technique": [
                    {
                        "id": "T1003",
                        "name": "OS Credential Dumping",
                        "reference": "https://attack.mitre.org/techniques/T1003/",
                        "subtechnique": [
                            {
                                "id": "T1003.001",
                                "name": "LSASS Memory",
                                "reference": "https://attack.mitre.org/techniques/T1003/001/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 104
    },
    "id": "9960432d-9b26-409f-972b-839a959e79e2_104",
    "type": "security-rule"
}