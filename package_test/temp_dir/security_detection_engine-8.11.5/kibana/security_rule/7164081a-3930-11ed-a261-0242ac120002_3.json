{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule detects a container deployed with one or more dangerously permissive Linux capabilities. An attacker with the ability to deploy a container with added capabilities could use this for further execution, lateral movement, or privilege escalation within a cluster. The capabilities detected in this rule have been used in container escapes to the host machine.",
        "false_positives": [
            "Some container images require the addition of privileged capabilities. This rule leaves space for the exception of trusted container images. To add an exception, add the trusted container image name to the query field, kubernetes.audit.requestObject.spec.containers.image."
        ],
        "index": [
            "logs-kubernetes.*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "Kubernetes Container Created with Excessive Linux Capabilities",
        "note": "## Triage and analysis\n\n### Investigating Kubernetes Container Created with Excessive Linux Capabilities\n\nLinux capabilities were designed to divide root privileges into smaller units. Each capability grants a thread just enough power to perform specific privileged tasks. In Kubernetes, containers are given a set of default capabilities that can be dropped or added to at the time of creation. Added capabilities entitle containers in a pod with additional privileges that can be used to change\ncore processes, change network settings of a cluster, or directly access the underlying host. The following have been used in container escape techniques:\n\nBPF - Allow creating BPF maps, loading BPF Type Format (BTF) data, retrieve JITed code of BPF programs, and more.\nDAC_READ_SEARCH - Bypass file read permission checks and directory read and execute permission checks.\nNET_ADMIN - Perform various network-related operations.\nSYS_ADMIN - Perform a range of system administration operations.\nSYS_BOOT - Use reboot(2) and kexec_load(2), reboot and load a new kernel for later execution.\nSYS_MODULE - Load and unload kernel modules.\nSYS_PTRACE - Trace arbitrary processes using ptrace(2).\nSYS_RAWIO - Perform I/O port operations (iopl(2) and ioperm(2)).\nSYSLOG - Perform privileged syslog(2) operations.\n\n### False positive analysis\n\n- While these capabilities are not included by default in containers, some legitimate images may need to add them. This rule leaves space for the exception of trusted container images. To add an exception, add the trusted container image name to the query field, kubernetes.audit.requestObject.spec.containers.image.",
        "query": "event.dataset: kubernetes.audit_logs\n  and kubernetes.audit.annotations.authorization_k8s_io/decision:\"allow\"\n  and kubernetes.audit.verb: create\n  and kubernetes.audit.objectRef.resource: pods\n  and kubernetes.audit.requestObject.spec.containers.securityContext.capabilities.add: (\"BPF\" or \"DAC_READ_SEARCH\"  or \"NET_ADMIN\" or \"SYS_ADMIN\" or \"SYS_BOOT\" or \"SYS_MODULE\" or \"SYS_PTRACE\" or \"SYS_RAWIO\"  or \"SYSLOG\")\n  and not kubernetes.audit.requestObject.spec.containers.image : (\"docker.elastic.co/beats/elastic-agent:8.4.0\" or \"rancher/klipper-lb:v0.3.5\" or \"\")\n",
        "references": [
            "https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-capabilities-for-a-container",
            "https://0xn3va.gitbook.io/cheat-sheets/container/escaping/excessive-capabilities",
            "https://man7.org/linux/man-pages/man7/capabilities.7.html",
            "https://docs.docker.com/engine/reference/run/#runtime-privilege-and-linux-capabilities"
        ],
        "related_integrations": [
            {
                "package": "kubernetes",
                "version": "^1.4.1"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.annotations.authorization_k8s_io/decision",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.objectRef.resource",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.requestObject.spec.containers.image",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.requestObject.spec.containers.securityContext.capabilities.add",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.verb",
                "type": "unknown"
            }
        ],
        "risk_score": 47,
        "rule_id": "7164081a-3930-11ed-a261-0242ac120002",
        "setup": "The Kubernetes Fleet integration with Audit Logs enabled or similarly structured data is required to be compatible with this rule.",
        "severity": "medium",
        "tags": [
            "Data Source: Kubernetes",
            "Tactic: Execution",
            "Tactic: Privilege Escalation"
        ],
        "threat": [
            {
                "framework": "MITRE ATT\u0026CK",
                "tactic": {
                    "id": "TA0004",
                    "name": "Privilege Escalation",
                    "reference": "https://attack.mitre.org/tactics/TA0004/"
                },
                "technique": [
                    {
                        "id": "T1611",
                        "name": "Escape to Host",
                        "reference": "https://attack.mitre.org/techniques/T1611/"
                    }
                ]
            },
            {
                "framework": "MITRE ATT\u0026CK",
                "tactic": {
                    "id": "TA0002",
                    "name": "Execution",
                    "reference": "https://attack.mitre.org/tactics/TA0002/"
                },
                "technique": [
                    {
                        "id": "T1610",
                        "name": "Deploy Container",
                        "reference": "https://attack.mitre.org/techniques/T1610/"
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "query",
        "version": 3
    },
    "id": "7164081a-3930-11ed-a261-0242ac120002_3",
    "type": "security-rule"
}