// Our base button
.kuiButton {
  @include kuiButton;
  @include kuiSlightShadow;

  border-radius: $kuiBorderRadius;
  min-width: $kuiSize * 7;

  .kuiButton__content {
    @include kuiButtonContent;

    padding: 0 ($kuiSize - $kuiSizeXS);
  }

  &.kuiButton--small {
    height: $kuiButtonHeightSmall;
  }

  &.kuiButton--iconRight {
    .kuiButton__content {
      @include kuiButtonContent($isReverse: true);
    }
  }

  &:hover {
    @include kuiSlightShadowHover;
  }

  &:active {
    @include kuiSlightShadowActive;
  }

  &:hover, &:focus {
    background-color: transparentize($kuiColorPrimary, .9);
  }

  &:disabled {
    color: $kuiButtonColorDisabled;
    border-color: $kuiButtonColorDisabled;
    pointer-events: none;

    .kuiButton__content {
      pointer-events: auto;
      cursor: not-allowed;
    }

    .kuiButton__icon {
      fill: $kuiButtonColorDisabled;
    }

    &.kuiButton--fill {
      background-color: $kuiButtonColorDisabled;
      border-color: $kuiButtonColorDisabled;

      &:hover, &:focus {
        background-color: $kuiButtonColorDisabled;
        border-color: $kuiButtonColorDisabled;
      }
    }

    &:hover, &:focus {
      background-color: $kuiColorEmptyShade;
      text-decoration: none;
    }
  }
}

// Modifier naming and colors.
$buttonTypes: (
  primary: (
    dark: $kuiColorPrimary,
    light: lighten($kuiColorPrimary, 10%)
  ),
  secondary: (
    dark: darken($kuiColorSecondary, 5%),
    light: lighten($kuiColorSecondary, 5%)
  ),
  warning: (
    dark: darken($kuiColorWarning, 7%),
    light: lighten($kuiColorWarning, 7%)
  ),
  danger: (
    dark: $kuiColorDanger,
    light: lighten($kuiColorDanger, 7%)
  ),
  ghost: (
    dark: $kuiColorGhost, // Ghost is special, and does not care about theming.
    light: $kuiColorGhost,
  )
);

// Create button modifiders based upon the map.
@each $name, $color in $buttonTypes {
  $colorDark: map-get($color, dark);
  $colorLight: map-get($color, light);

  .kuiButton--#{$name} {
    color: $colorDark;
    border-color: transparentize($colorDark, 0.7);

    &:hover, &:focus {
      background-color: transparentize($colorDark, 0.9);
      border-color: transparentize($colorDark, 0.5);

      @if ($name == 'disabled') {
        cursor: not-allowed;
      }
    }

    .kuiButton__icon {
      fill: $colorDark;
    }

    &.kuiButton--fill {
      @if ($name == 'ghost') {
        color: #000;
        background-color: $colorDark;
        border-color: $colorDark;
      } @else {
        @if (lightness($kuiTextColor) > 50) {
          color: $kuiTextColor;
        } @else {
          color: #FFF;
        }

        box-shadow: $kuiSmallShadow;
        background: linear-gradient(0deg, $colorDark, $colorLight);
        border-color: $colorDark;

        &:hover {
          box-shadow: $kuiSmallShadowHover;
        }

        &:active {
          box-shadow: $kuiSmallShadowActive;
        }
      }

      &:hover, &:focus {
        background-color: darken($colorDark, 5%);
        border-color: darken($colorDark, 5%);
      }

      .kuiButton__icon {
        @if ($name == 'ghost') {
          fill: #000;
        } @elseif (lightness($kuiTextColor) > 50) {
          fill: $kuiTextColor;
        } @else {
          fill: #FFF;
        }
      }
    }
  }
}
