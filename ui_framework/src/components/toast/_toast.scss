.kuiToast {
  @include kuiBottomShadow;

  position: relative;
  padding: $kuiSizeM;
  background-color: $kuiColorEmptyShade;
  border: $kuiBorderThin;
}

  /**
   * 1. Fit button to icon.
   */
  .kuiToast__closeButton {
    position: absolute;
    top: $kuiSizeXS;
    right: $kuiSizeXS;
    line-height: 0; /* 1 */
    appearance: none;

    svg {
      fill: tintOrShade($kuiTitleColor, 50%, 70%);
    }

    &:hover {
      svg {
        fill: $kuiTitleColor;
      }
    }

    &:focus {
      background-color: $kuiFocusBackgroundColor;

      svg {
        fill: $kuiColorPrimary;
      }
    }
  }

// Modifier naming and colors.
$toastTypes: (
  info: $kuiColorPrimary,
  success: $kuiColorSecondary,
  warning: $kuiColorWarning,
  danger: $kuiColorDanger,
);

// Create button modifiders based upon the map.
@each $name, $color in $toastTypes {
  .kuiToast--#{$name} {
    border-top: 2px solid $color;
  }
}

/**
 * 1. Align icon with first line of title text if it wraps.
 * 2. Apply margin to all but last item in the flex.
 */
.kuiToastHeader {
  @include kuiFontSizeM;

  display: flex;
  align-items: baseline; /* 1 */

  > * + * {
    margin-left: $kuiSizeS; /* 2 */
  }
}

  /**
   * 1. Vertically center icon with first line of title.
   */
  .kuiToastHeader__icon {
    flex: 0 0 auto;
    fill: $kuiTitleColor;
    transform: translateY(2px); /* 1 */
  }

  .kuiToastHeader__title {
    color: $kuiTitleColor;
    font-weight: $kuiFontWeightLight;
  }

.kuiToastHeader--withBody {
  margin-bottom: $kuiVerticalRhythmS;
}
