- name: ensures usr/share/kibana dir exists
  become: yes
  file:
    path: /usr/share/kibana
    state: directory

- name: find kibana distribution
  find:
    paths: /packages/
    patterns: kibana-*-linux-x86_64.tar.gz
  register: kibana_tar

- name: extract kibana distribution
  become: yes
  unarchive:
    src: "{{ kibana_tar.files[0].path }}"
    dest: /usr/share/kibana
    remote_src: yes
    extra_opts: ["--strip-components=1"]

- name: copy configuration
  become: yes
  template:
    src: templates/kibana.yml
    dest: /usr/share/kibana/config/kibana.yml
  register: config

- name: copy fips node.options
  become: yes
  template:
    src: templates/fips/node.options
    dest: /usr/share/kibana/config/node.options

- name: copy fips openssl config
  become: yes
  template:
    src: templates/fips/nodejs.cnf
    dest: /usr/share/kibana/config/nodejs.cnf
# - name: start kibana
#   become: yes
#   docker_container:
#     name: kibana
#     image: "docker.elastic.co/kibana-ci/kibana-ubi-fips:{{ kibana_image_tag }}"
#     network_mode: host
#     env:
#       SERVER_HOST: 0.0.0.0
#       ELASTICSEARCH_HOSTS: http://192.168.56.1:9200
#       ELASTICSEARCH_USERNAME: '{{ elasticsearch_username }}'
#       ELASTICSEARCH_PASSWORD: '{{ elasticsearch_password }}'
#       XPACK_REPORTING_CAPTURE_BROWSER_CHROMIUM_DISABLESANDBOX: 'true'

