.TH "NPM\-VERSION" "1" "May 2015" "" ""
.SH "NAME"
\fBnpm-version\fR \- Bump a package version
.SH SYNOPSIS
.P
.RS 2
.nf
npm version [<newversion> | major | minor | patch | premajor | preminor | prepatch | prerelease]
.fi
.RE
.SH DESCRIPTION
.P
Run this in a package directory to bump the version and write the new
data back to \fBpackage\.json\fR and, if present, \fBnpm\-shrinkwrap\.json\fR\|\.
.P
The \fBnewversion\fR argument should be a valid semver string, \fIor\fR a
valid second argument to semver\.inc (one of "patch", "minor", "major",
"prepatch", "preminor", "premajor", "prerelease")\. In the second case,
the existing version will be incremented by 1 in the specified field\.
.P
If run in a git repo, it will also create a version commit and tag, and fail if
the repo is not clean\.  This behavior is controlled by \fBgit\-tag\-version\fR (see
below), and can be disabled on the command line by running \fBnpm
\-\-no\-git\-tag\-version version\fR
.P
If supplied with \fB\-\-message\fR (shorthand: \fB\-m\fR) config option, npm will
use it as a commit message when creating a version commit\.  If the
\fBmessage\fR config contains \fB%s\fR then that will be replaced with the
resulting version number\.  For example:
.P
.RS 2
.nf
npm version patch \-m "Upgrade to %s for reasons"
.fi
.RE
.P
If the \fBsign\-git\-tag\fR config is set, then the tag will be signed using
the \fB\-s\fR flag to git\.  Note that you must have a default GPG key set up
in your git config for this to work properly\.  For example:
.P
.RS 2
.nf
$ npm config set sign\-git\-tag true
$ npm version patch

You need a passphrase to unlock the secret key for
user: "isaacs (http://blog\.izs\.me/) <i@izs\.me>"
2048\-bit RSA key, ID 6C481CF6, created 2010\-08\-31

Enter passphrase:
.fi
.RE
.P
If "preversion", "version", "postversion" in the "scripts" property of
the package\.json, it will execute by running \fBnpm version\fR\|\. preversion
and version ware executed before bump the package version, postversion
was executed after bump the package version\. For example to run \fBnpm version\fR
after passed all test:
.P
.RS 2
.nf
"scripts": { "preversion": "npm test" }
.fi
.RE
.SH CONFIGURATION
.SS git\-tag\-version
.RS 0
.IP \(bu 2
Default: true
.IP \(bu 2
Type: Boolean

.RE
.P
Commit and tag the version change\.
.SH SEE ALSO
.RS 0
.IP \(bu 2
npm help init
.IP \(bu 2
npm help run\-script
.IP \(bu 2
npm help 7 scripts
.IP \(bu 2
npm help 5 package\.json
.IP \(bu 2
npm help 7 semver
.IP \(bu 2
npm help 7 config

.RE

