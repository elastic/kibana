{
  "version": 3,
  "file": "babel.generated.js",
  "sources": [
    "babel-source.js"
  ],
  "sourcesContent": [
    "// Expression bodies\r\nvar odds = evens.map(v => v + 1);\r\nvar nums = evens.map((v, i) => v + i);\r\n\r\n// Statement bodies\r\nnums.forEach(v => {\r\n  if (v % 5 === 0)\r\n    fives.push(v);\r\n});\r\n\r\n// Lexical this\r\nvar bob = {\r\n  _name: \"Bob\",\r\n  _friends: [],\r\n  printFriends() {\r\n    this._friends.forEach(f =>\r\n      console.log(this._name + \" knows \" + f));\r\n  }\r\n}\r\n\r\nclass SkinnedMesh extends THREE.Mesh {\r\n  constructor(geometry, materials) {\r\n    super(geometry, materials);\r\n\r\n    this.idMatrix = SkinnedMesh.defaultMatrix();\r\n    this.bones = [];\r\n    this.boneMatrices = [];\r\n    //...\r\n  }\r\n  update(camera) {\r\n    //...\r\n    super.update();\r\n  }\r\n  static defaultMatrix() {\r\n    return new THREE.Matrix4();\r\n  }\r\n}\r\n\r\nvar obj = {\r\n    // __proto__\r\n    __proto__: theProtoObj,\r\n    // Shorthand for ‘handler: handler’\r\n    handler,\r\n    // Methods\r\n    toString() {\r\n     // Super calls\r\n     return \"d \" + super.toString();\r\n    },\r\n    // Computed (dynamic) property names\r\n    [ \"prop_\" + (() => 42)() ]: 42\r\n};\r\n\r\n// Basic literal string creation\r\n`In JavaScript \"\\n\" is a line-feed.`\r\n\r\n// Multiline strings\r\n`In JavaScript this is\r\n not legal.`\r\n\r\n// Interpolate variable bindings\r\nvar name = \"Bob\", time = \"today\";\r\n`Hello ${name}, how are you ${time}?`\r\n\r\n// Construct an HTTP request prefix is used to interpret the replacements and construction\r\nGET`http://foo.org/bar?a=${a}&b=${b}\r\n    Content-Type: application/json\r\n    X-Credentials: ${credentials}\r\n    { \"foo\": ${foo},\r\n      \"bar\": ${bar}}`(myOnReadyStateChangeHandler);\r\n\r\n// list matching\r\nvar [a, , b] = [1,2,3];\r\n\r\n// object matching\r\nvar { op: a, lhs: { op: b }, rhs: c }\r\n       = getASTNode()\r\n\r\n// object matching shorthand\r\n// binds `op`, `lhs` and `rhs` in scope\r\nvar {op, lhs, rhs} = getASTNode()\r\n\r\n// Can be used in parameter position\r\nfunction g({name: x}) {\r\n  console.log(x);\r\n}\r\ng({name: 5})\r\n\r\n// Fail-soft destructuring\r\nvar [a] = [];\r\na === undefined;\r\n\r\n// Fail-soft destructuring with defaults\r\nvar [a = 1] = [];\r\na === 1;\r\n"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AATA;AACA;AADA;;AASA;;AAEA;AACA;;;AACA;AACA;AACA;;;AAfA;AAAA;AACA;AAiBA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AAEA;AAAA;AACA;;AAGA;AACA;;AAMA;AAAA;AACA;AACA;;AAEA;AACA;;AAMA;AAAA;AAAA;AACA;;;AAGA;AACA;AAFA;AAAA;AAAA;AACA;;;;AAIA;AACA;AADA;AAAA;AAAA;AACA;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;AAEA;AAAA;AACA;AAAA;AACA;;AAEA;;AAAA;AACA;AAAA;AACA;;;;;"
}
