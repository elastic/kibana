// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`guide cards snapshots should render all cards 1`] = `
<EuiFlexGroup>
  <EuiFlexItem
    key="0"
  >
    <EuiFlexGroup
      alignItems="center"
      direction="column"
    >
      <EuiFlexItem
        grow={false}
        key="0"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "guideId": "databaseSearch",
              "icon": "database",
              "order": 1,
              "solution": "search",
              "telemetryId": "onboarding--search--database",
              "title": <FormattedMessage
                defaultMessage="Search across databases {lineBreak} and business systems"
                id="guidedOnboardingPackage.gettingStarted.cards.databaseSearch.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="1"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "vector",
              "navigateTo": Object {
                "appId": "enterpriseSearchVectorSearch",
              },
              "order": 4,
              "solution": "search",
              "telemetryId": "onboarding--search--vector",
              "title": "Set up vector search",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="2"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "magnifyWithPlus",
              "navigateTo": Object {
                "appId": "enterpriseSearchAISearch",
              },
              "order": 7,
              "solution": "search",
              "telemetryId": "onboarding--search--ai",
              "title": "Build an AI-powered search experience",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="3"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "guideId": "appSearch",
              "icon": "wrench",
              "order": 10,
              "solution": "search",
              "telemetryId": "onboarding--search--application",
              "title": <FormattedMessage
                defaultMessage="Build an application on {lineBreak} top of Elasticsearch"
                id="guidedOnboardingPackage.gettingStarted.cards.appSearch.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="4"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "guideId": "websiteSearch",
              "icon": "search",
              "order": 13,
              "solution": "search",
              "telemetryId": "onboarding--search--website",
              "title": "Add search to my website",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlexItem>
  <EuiFlexItem
    key="1"
  >
    <EuiFlexGroup
      alignItems="center"
      direction="column"
    >
      <EuiFlexItem
        grow={false}
        key="0"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "logstashInput",
              "navigateTo": Object {
                "appId": "observabilityOnboarding",
              },
              "order": 2,
              "solution": "observability",
              "telemetryId": "onboarding--observability--logs",
              "title": "Collect and analyze my logs",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="1"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "apmTrace",
              "navigateTo": Object {
                "appId": "apm",
                "path": "/tutorial",
              },
              "order": 5,
              "solution": "observability",
              "telemetryId": "onboarding--observability--apm",
              "title": <FormattedMessage
                defaultMessage="Monitor my application {lineBreak} performance (APM / tracing)"
                id="guidedOnboardingPackage.gettingStarted.cards.apmObservability.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="2"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "visBarVertical",
              "navigateTo": Object {
                "appId": "integrations",
                "path": "/browse/os_system",
              },
              "order": 8,
              "solution": "observability",
              "telemetryId": "onboarding--observability--hosts",
              "title": "Monitor my host metrics",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="3"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "guideId": "kubernetes",
              "icon": "cluster",
              "order": 11,
              "solution": "observability",
              "telemetryId": "onboarding--observability--kubernetes",
              "title": "Monitor Kubernetes clusters",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="4"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "videoPlayer",
              "navigateTo": Object {
                "appId": "synthetics",
                "path": "/monitors/getting-started",
              },
              "order": 14,
              "solution": "observability",
              "telemetryId": "onboarding--observability--synthetics",
              "title": "Create a Synthetic Monitor",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="5"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "visBarHorizontal",
              "navigateTo": Object {
                "appId": "profiling",
                "path": "/add-data-instructions",
              },
              "order": 15,
              "solution": "observability",
              "telemetryId": "onboarding--observability--profiling",
              "title": "Optimize my workloads with Universal Profiling",
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlexItem>
  <EuiFlexItem
    key="2"
  >
    <EuiFlexGroup
      alignItems="center"
      direction="column"
    >
      <EuiFlexItem
        grow={false}
        key="0"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "guideId": "siem",
              "icon": "securitySignal",
              "order": 3,
              "solution": "security",
              "telemetryId": "onboarding--security--siem",
              "title": <FormattedMessage
                defaultMessage="Detect threats in my {lineBreak} data with SIEM"
                id="guidedOnboardingPackage.gettingStarted.cards.siemSecurity.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="1"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "inputOutput",
              "navigateTo": Object {
                "appId": "integrations",
                "path": "/detail/endpoint/overview",
              },
              "order": 6,
              "solution": "security",
              "telemetryId": "onboarding--security--hosts",
              "title": <FormattedMessage
                defaultMessage="Secure my hosts with {lineBreak} endpoint security"
                id="guidedOnboardingPackage.gettingStarted.cards.hostsSecurity.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
      <EuiFlexItem
        grow={false}
        key="2"
      >
        <GuideCard
          activateGuide={[MockFunction]}
          activeFilter="all"
          card={
            Object {
              "icon": "lock",
              "navigateTo": Object {
                "appId": "integrations",
                "path": "/detail/cloud_security_posture/overview?integration=cspm",
              },
              "order": 9,
              "solution": "security",
              "telemetryId": "onboarding--security--cloud",
              "title": <FormattedMessage
                defaultMessage="Secure my cloud assets with cloud {lineBreak} security posture management (CSPM)"
                id="guidedOnboardingPackage.gettingStarted.cards.cloudSecurity.title"
                values={
                  Object {
                    "lineBreak": <br />,
                  }
                }
              />,
            }
          }
          guidesState={Array []}
          navigateToApp={[MockFunction]}
        />
        <EuiSpacer
          size="m"
        />
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlexItem>
</EuiFlexGroup>
`;
