/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Update exception list item API endpoint
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

import { NonEmptyString } from '@kbn/openapi-common/schemas/primitives.gen';
import {
  ExceptionListItemId,
  ExceptionListItemHumanId,
  ExceptionListHumanId,
  ExceptionListItemType,
  ExceptionListItemName,
  ExceptionListItemDescription,
  ExceptionNamespaceType,
  ExceptionListItemOsTypeArray,
  ExceptionListItemTags,
  ExceptionListItemMeta,
  ExceptionListItem,
} from '../model/exception_list_common.gen';
import { ExceptionListItemEntryArray } from '../model/exception_list_item_entry.gen';

export type UpdateExceptionListItemComment = z.infer<typeof UpdateExceptionListItemComment>;
export const UpdateExceptionListItemComment = z.object({
  id: NonEmptyString.optional(),
  comment: NonEmptyString,
});

export type UpdateExceptionListItemCommentArray = z.infer<
  typeof UpdateExceptionListItemCommentArray
>;
export const UpdateExceptionListItemCommentArray = z.array(UpdateExceptionListItemComment);

export type UpdateExceptionListItemRequestBody = z.infer<typeof UpdateExceptionListItemRequestBody>;
export const UpdateExceptionListItemRequestBody = z.object({
  /**
   * Either `id` or `item_id` must be specified
   */
  id: ExceptionListItemId.optional(),
  /**
   * Either `id` or `item_id` must be specified
   */
  item_id: ExceptionListItemHumanId.optional(),
  list_id: ExceptionListHumanId.optional(),
  type: ExceptionListItemType,
  name: ExceptionListItemName,
  description: ExceptionListItemDescription,
  entries: ExceptionListItemEntryArray,
  namespace_type: ExceptionNamespaceType.optional().default('single'),
  os_types: ExceptionListItemOsTypeArray.optional().default([]),
  tags: ExceptionListItemTags.optional(),
  meta: ExceptionListItemMeta.optional(),
  expire_time: z.string().datetime().optional(),
  comments: UpdateExceptionListItemCommentArray.optional().default([]),
  _version: z.string().optional(),
});
export type UpdateExceptionListItemRequestBodyInput = z.input<
  typeof UpdateExceptionListItemRequestBody
>;

export type UpdateExceptionListItemResponse = z.infer<typeof UpdateExceptionListItemResponse>;
export const UpdateExceptionListItemResponse = ExceptionListItem;
