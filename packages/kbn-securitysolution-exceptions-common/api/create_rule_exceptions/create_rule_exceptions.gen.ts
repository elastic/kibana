/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Create rule exception list items API endpoint
 *   version: 2023-10-31
 */

import { z } from 'zod';

import { UUID } from '@kbn/openapi-common/schemas/primitives.gen';
import {
  ExceptionListItem,
  ExceptionListItemHumanId,
  ExceptionListHumanId,
  ExceptionListItemType,
  ExceptionListItemName,
  ExceptionListItemDescription,
  ExceptionNamespaceType,
  ExceptionListItemOsTypeArray,
  ExceptionListItemTags,
  ExceptionListItemMeta,
  ExceptionListItemCommentArray,
} from '../model/exception_list_common.gen';
import { ExceptionListItemEntryArray } from '../model/exception_list_item_entry.gen';

export type RuleId = z.infer<typeof RuleId>;
export const RuleId = UUID;

export type CreateRuleExceptionListItemProps = z.infer<typeof CreateRuleExceptionListItemProps>;
export const CreateRuleExceptionListItemProps = z.object({
  item_id: ExceptionListItemHumanId.optional(),
  list_id: ExceptionListHumanId.optional(),
  type: ExceptionListItemType,
  name: ExceptionListItemName,
  description: ExceptionListItemDescription,
  entries: ExceptionListItemEntryArray,
  namespace_type: ExceptionNamespaceType.optional().default('single'),
  os_types: ExceptionListItemOsTypeArray.optional(),
  tags: ExceptionListItemTags.optional(),
  meta: ExceptionListItemMeta.optional(),
  expire_time: z.string().datetime().optional(),
  comments: ExceptionListItemCommentArray.optional(),
});

export type CreateRuleExceptionListItemsRequestParams = z.infer<
  typeof CreateRuleExceptionListItemsRequestParams
>;
export const CreateRuleExceptionListItemsRequestParams = z.object({
  /**
   * Detection rule's identifier
   */
  id: RuleId,
});
export type CreateRuleExceptionListItemsRequestParamsInput = z.input<
  typeof CreateRuleExceptionListItemsRequestParams
>;

export type CreateRuleExceptionListItemsRequestBody = z.infer<
  typeof CreateRuleExceptionListItemsRequestBody
>;
export const CreateRuleExceptionListItemsRequestBody = z.object({
  items: z.array(CreateRuleExceptionListItemProps),
});
export type CreateRuleExceptionListItemsRequestBodyInput = z.input<
  typeof CreateRuleExceptionListItemsRequestBody
>;

export type CreateRuleExceptionListItemsResponse = z.infer<
  typeof CreateRuleExceptionListItemsResponse
>;
export const CreateRuleExceptionListItemsResponse = ExceptionListItem;
