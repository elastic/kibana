import {
  PluginInitializerContext,
  CoreSetup,
  CoreStart,
  Plugin,
  Logger
} from '<%= importFromRoot('src/core/server') %>';

import {
  <%= upperCamelCase(name) %>PluginSetup,
  <%= upperCamelCase(name) %>PluginStart
} from './types';
import { defineRoutes } from './routes';

export class <%= upperCamelCase(name) %>Plugin
  implements Plugin<<%= upperCamelCase(name) %>PluginSetup, <%= upperCamelCase(name) %>PluginStart> {

  private readonly logger: Logger;

  constructor(initializerContext: PluginInitializerContext) {
    this.logger = initializerContext.logger.get();
  }

  public setup(core: CoreSetup) {
    this.logger.debug('<%= name %>: Setup');
    const router = core.http.createRouter();

    // Register server side APIs
    defineRoutes(router);

    return {};
  }

  public start(core: CoreStart) {
    this.logger.debug('<%= name %>: Started');
    return {};
  }

  public stop() {}
}
