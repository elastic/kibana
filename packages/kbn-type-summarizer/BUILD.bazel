load("@npm//@bazel/typescript:index.bzl", "ts_config")
load("@rules_nodejs//nodejs:directory_file_path.bzl", "directory_file_path")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "nodejs_binary")
load("//src/dev/bazel:index.bzl", "jsts_transpiler", "pkg_npm", "pkg_npm_types", "ts_project")

PKG_BASE_NAME = "kbn-type-summarizer"
PKG_REQUIRE_NAME = "@kbn/type-summarizer"

SOURCE_FILES = glob(
  [
    "src/**/*.ts",
  ]
)

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
  "README.md",
]

RUNTIME_DEPS = [
  "@npm//@babel/runtime",
  "@npm//@microsoft/api-extractor",
  "@npm//source-map-support",
  "@npm//chalk",
  "@npm//getopts",
  "@npm//is-path-inside",
  "@npm//normalize-path",
  "@npm//source-map",
  "@npm//tslib",
]

TYPES_DEPS = [
  "@npm//@microsoft/api-extractor",
  "@npm//@types/jest",
  "@npm//@types/node",
  "@npm//@types/normalize-path",
  "@npm//getopts",
  "@npm//is-path-inside",
  "@npm//normalize-path",
  "@npm//source-map",
  "@npm//strip-ansi",
  "@npm//tslib",
]

ts_config(
  name = "tsconfig",
  src = "tsconfig.json",
  deps = [
    "//:tsconfig.base.json",
    "//:tsconfig.bazel.json",
  ],
)

ts_project(
  name = "tsc_types",
  args = ['--pretty'],
  srcs = SRCS,
  deps = TYPES_DEPS,
  declaration = True,
  declaration_map = True,
  emit_declaration_only = True,
  out_dir = "target_types",
  root_dir = "src",
  tsconfig = ":tsconfig",
)

jsts_transpiler(
  name = "target_node",
  srcs = SRCS,
  build_pkg_name = package_name(),
)

js_library(
  name = PKG_BASE_NAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = RUNTIME_DEPS + [":target_node"],
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

directory_file_path(
  name = "bazel-cli-path",
  directory = ":target_node",
  path = "bazel_cli.js",
)

nodejs_binary(
  name = "bazel-cli",
  data = [
    ":%s" % PKG_BASE_NAME
  ],
  entry_point = ":bazel-cli-path",
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [
      ":%s" % PKG_BASE_NAME,
  ],
)

filegroup(
  name = "build",
  srcs = [
      ":npm_module",
  ],
  visibility = ["//visibility:public"],
)

pkg_npm_types(
  name = "npm_module_types",
  srcs = SRCS,
  deps = [":tsc_types"],
  package_name = PKG_REQUIRE_NAME,
  tsconfig = ":tsconfig",
  visibility = ["//visibility:public"],
)

filegroup(
  name = "build_types",
  srcs = [
    ":npm_module_types",
  ],
  visibility = ["//visibility:public"],
)
