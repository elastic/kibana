load("@npm//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "pkg_npm")
load("//src/dev/bazel:index.bzl", "jsts_transpiler")

PKG_BASE_NAME = "kbn-apm-utils"
PKG_REQUIRE_NAME = "@kbn/apm-utils"

SOURCE_FILES = glob([
  "src/index.ts",
])

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
]

RUNTIME_DEPS = [
  "@npm//elastic-apm-node",
]

TYPES_DEPS = [
  "@npm//elastic-apm-node",
  "@npm//@types/node",
]

jsts_transpiler(
  name = "target_node",
  srcs = SRCS,
  build_pkg_name = package_name(),
)

ts_config(
  name = "tsconfig",
  src = "tsconfig.json",
  deps = [
    "//:tsconfig.base.json",
    "//:tsconfig.bazel.json",
  ],
)

ts_project(
  name = "tsc_types",
  args = ['--pretty'],
  srcs = SRCS,
  deps = TYPES_DEPS,
  declaration = True,
  declaration_map = True,
  emit_declaration_only = True,
  out_dir = "target_types",
  source_map = True,
  root_dir = "src",
  tsconfig = ":tsconfig",
)

js_library(
  name = PKG_BASE_NAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = RUNTIME_DEPS + [":target_node", ":tsc_types"],
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [
    ":%s" % PKG_BASE_NAME,
  ]
)

filegroup(
  name = "build",
  srcs = [
    ":npm_module",
  ],
  visibility = ["//visibility:public"],
)
