// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AutocompleteFieldMatchAnyComponent should show the warning helper text if the new value contains spaces when change 1`] = `
<AutocompleteFieldMatchAny
  autocompleteService={
    Object {
      "getQuerySuggestions": [MockFunction],
      "getValueSuggestions": [MockFunction],
      "hasQuerySuggestions": [MockFunction],
    }
  }
  indexPattern={
    Object {
      "fields": Array [
        Object {
          "aggregatable": true,
          "count": 10,
          "esTypes": Array [
            "long",
          ],
          "name": "bytes",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 20,
          "esTypes": Array [
            "boolean",
          ],
          "name": "ssl",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "boolean",
        },
        Object {
          "aggregatable": true,
          "count": 30,
          "esTypes": Array [
            "date",
          ],
          "name": "@timestamp",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 30,
          "esTypes": Array [
            "date",
          ],
          "name": "time",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "@tags",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "date",
          ],
          "name": "utc_time",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "integer",
          ],
          "name": "phpmemory",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "ip",
          ],
          "name": "ip",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "ip",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "attachment",
          ],
          "name": "request_body",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "attachment",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_point",
          ],
          "name": "point",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_point",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_shape",
          ],
          "name": "area",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_shape",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "murmur3",
          ],
          "name": "hashed",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "murmur3",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_point",
          ],
          "name": "geo.coordinates",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_point",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "extension",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "machine.os",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "machine.os.raw",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "multi": Object {
              "parent": "machine.os",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "geo.src",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_id",
          ],
          "name": "_id",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_type",
          ],
          "name": "_type",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_source",
          ],
          "name": "_source",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "_source",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "non-filterable",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": false,
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "non-sortable",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": false,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "long",
            "text",
          ],
          "name": "custom_user_field",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "conflict",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script string",
          "readFromDocValues": false,
          "script": "'i am a string'",
          "scripted": true,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script number",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "painless",
          "name": "script date",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script murmur3",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "murmur3",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "nestedField.child",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "nested": Object {
              "path": "nestedField",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "nestedField.nestedChild.doublyNestedChild",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "nested": Object {
              "path": "nestedField.nestedChild",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "esTypes": Array [
            "text",
          ],
          "name": "file.path.text",
          "searchable": true,
          "subType": Object {
            "multi": Object {
              "parent": "file.path",
            },
          },
          "type": "string",
        },
      ],
      "id": "1234",
      "title": "logstash-*",
    }
  }
  isClearable={false}
  isDisabled={false}
  isLoading={false}
  onChange={
    [MockFunction] {
      "calls": Array [
        Array [
          Array [
            " value 1 ",
          ],
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  placeholder="Placeholder text"
  rowLabel="Row Label"
  selectedField={
    Object {
      "aggregatable": true,
      "count": 0,
      "esTypes": Array [
        "keyword",
      ],
      "name": "machine.os.raw",
      "readFromDocValues": true,
      "scripted": false,
      "searchable": true,
      "subType": Object {
        "multi": Object {
          "parent": "machine.os",
        },
      },
      "type": "string",
    }
  }
  selectedValue={Array []}
>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    fullWidth={true}
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText="Warning: there is a space"
    isInvalid={false}
    label="Row Label"
    labelType="label"
  >
    <div
      className="euiFormRow euiFormRow--fullWidth euiFormRow--hasLabel"
      id="generated-id-row"
    >
      <div
        className="euiFormRow__labelWrapper"
      >
        <EuiFormLabel
          aria-invalid={false}
          className="euiFormRow__label"
          htmlFor="generated-id"
          id="generated-id-label"
          isFocused={false}
          isInvalid={false}
          type="label"
        >
          <label
            aria-invalid={false}
            className="euiFormLabel euiFormRow__label"
            htmlFor="generated-id"
            id="generated-id-label"
          >
            Row Label
          </label>
        </EuiFormLabel>
      </div>
      <div
        className="euiFormRow__fieldWrapper"
      >
        <EuiComboBox
          aria-describedby="generated-id-help-0"
          async={true}
          compressed={false}
          data-test-subj="valuesAutocompleteMatchAny"
          disabled={false}
          fullWidth={true}
          id="generated-id"
          isClearable={false}
          isDisabled={false}
          isInvalid={false}
          isLoading={false}
          onBlur={[Function]}
          onChange={[Function]}
          onCreateOption={[Function]}
          onFocus={[Function]}
          onSearchChange={[Function]}
          options={
            Array [
              Object {
                "label": " value 1 ",
              },
              Object {
                "label": "value 2",
              },
            ]
          }
          placeholder="Placeholder text"
          selectedOptions={Array []}
          singleSelection={false}
          sortMatchesBy="none"
        >
          <div
            aria-describedby="generated-id-help-0"
            className="euiComboBox euiComboBox--fullWidth"
            data-test-subj="valuesAutocompleteMatchAny"
            disabled={false}
            onFocus={[Function]}
            onKeyDown={[Function]}
          >
            <EuiComboBoxInput
              autoSizeInputRef={[Function]}
              compressed={false}
              fullWidth={true}
              hasSelectedOptions={false}
              id="generated-id"
              inputRef={[Function]}
              isDisabled={false}
              isListOpen={false}
              isLoading={false}
              noIcon={false}
              onChange={[Function]}
              onClick={[Function]}
              onCloseListClick={[Function]}
              onFocus={[Function]}
              onOpenListClick={[Function]}
              onRemoveOption={[Function]}
              placeholder="Placeholder text"
              rootId={[Function]}
              searchValue=""
              selectedOptions={Array []}
              singleSelection={false}
              toggleButtonRef={[Function]}
              updatePosition={[Function]}
              value=""
            >
              <EuiFormControlLayout
                compressed={false}
                fullWidth={true}
                icon={
                  Object {
                    "aria-label": "Open list of options",
                    "data-test-subj": "comboBoxToggleListButton",
                    "disabled": false,
                    "onClick": [Function],
                    "ref": [Function],
                    "side": "right",
                    "tabIndex": -1,
                    "type": "arrowDown",
                  }
                }
                inputId="generated-id"
                isLoading={false}
              >
                <div
                  className="euiFormControlLayout euiFormControlLayout--fullWidth"
                >
                  <div
                    className="euiFormControlLayout__childrenWrapper"
                  >
                    <div
                      className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth"
                      data-test-subj="comboBoxInput"
                      onClick={[Function]}
                      tabIndex={-1}
                    >
                      <p
                        className="euiComboBoxPlaceholder"
                      >
                        Placeholder text
                      </p>
                      <AutosizeInput
                        aria-autocomplete="list"
                        aria-controls=""
                        aria-expanded={false}
                        className="euiComboBox__input"
                        data-test-subj="comboBoxSearchInput"
                        disabled={false}
                        id="generated-id"
                        injectStyles={true}
                        inputRef={[Function]}
                        minWidth={1}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        role="combobox"
                        style={
                          Object {
                            "fontSize": 14,
                          }
                        }
                        value=""
                      >
                        <div
                          className="euiComboBox__input"
                          style={
                            Object {
                              "display": "inline-block",
                              "fontSize": 14,
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            aria-controls=""
                            aria-expanded={false}
                            data-test-subj="comboBoxSearchInput"
                            disabled={false}
                            id="generated-id"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "2px",
                              }
                            }
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          />
                        </div>
                      </AutosizeInput>
                    </div>
                    <EuiFormControlLayoutIcons
                      compressed={false}
                      icon={
                        Object {
                          "aria-label": "Open list of options",
                          "data-test-subj": "comboBoxToggleListButton",
                          "disabled": false,
                          "onClick": [Function],
                          "ref": [Function],
                          "side": "right",
                          "tabIndex": -1,
                          "type": "arrowDown",
                        }
                      }
                      isLoading={false}
                    >
                      <div
                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                      >
                        <EuiFormControlLayoutCustomIcon
                          aria-label="Open list of options"
                          data-test-subj="comboBoxToggleListButton"
                          disabled={false}
                          iconRef={[Function]}
                          onClick={[Function]}
                          size="m"
                          tabIndex={-1}
                          type="arrowDown"
                        >
                          <button
                            aria-label="Open list of options"
                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                            data-test-subj="comboBoxToggleListButton"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={-1}
                            type="button"
                          >
                            <EuiIcon
                              aria-hidden="true"
                              className="euiFormControlLayoutCustomIcon__icon"
                              size="m"
                              type="arrowDown"
                            >
                              <span
                                aria-hidden="true"
                                className="euiFormControlLayoutCustomIcon__icon"
                                data-euiicon-type="arrowDown"
                                size="m"
                              />
                            </EuiIcon>
                          </button>
                        </EuiFormControlLayoutCustomIcon>
                      </div>
                    </EuiFormControlLayoutIcons>
                  </div>
                </div>
              </EuiFormControlLayout>
            </EuiComboBoxInput>
          </div>
        </EuiComboBox>
        <EuiFormHelpText
          className="euiFormRow__text"
          id="generated-id-help-0"
          key="Warning: there is a space"
        >
          <div
            className="euiFormHelpText euiFormRow__text"
            id="generated-id-help-0"
          >
            Warning: there is a space
          </div>
        </EuiFormHelpText>
      </div>
    </div>
  </EuiFormRow>
</AutocompleteFieldMatchAny>
`;

exports[`AutocompleteFieldMatchAnyComponent should show the warning helper text if the new value contains spaces when searching a new query 1`] = `
<AutocompleteFieldMatchAny
  autocompleteService={
    Object {
      "getQuerySuggestions": [MockFunction],
      "getValueSuggestions": [MockFunction],
      "hasQuerySuggestions": [MockFunction],
    }
  }
  indexPattern={
    Object {
      "fields": Array [
        Object {
          "aggregatable": true,
          "count": 10,
          "esTypes": Array [
            "long",
          ],
          "name": "bytes",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 20,
          "esTypes": Array [
            "boolean",
          ],
          "name": "ssl",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "boolean",
        },
        Object {
          "aggregatable": true,
          "count": 30,
          "esTypes": Array [
            "date",
          ],
          "name": "@timestamp",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 30,
          "esTypes": Array [
            "date",
          ],
          "name": "time",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "@tags",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "date",
          ],
          "name": "utc_time",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "integer",
          ],
          "name": "phpmemory",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "ip",
          ],
          "name": "ip",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "ip",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "attachment",
          ],
          "name": "request_body",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "attachment",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_point",
          ],
          "name": "point",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_point",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_shape",
          ],
          "name": "area",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_shape",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "murmur3",
          ],
          "name": "hashed",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "murmur3",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "geo_point",
          ],
          "name": "geo.coordinates",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "geo_point",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "extension",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "machine.os",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "machine.os.raw",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "multi": Object {
              "parent": "machine.os",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "keyword",
          ],
          "name": "geo.src",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_id",
          ],
          "name": "_id",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_type",
          ],
          "name": "_type",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "_source",
          ],
          "name": "_source",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "type": "_source",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "non-filterable",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": false,
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "non-sortable",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": false,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "esTypes": Array [
            "long",
            "text",
          ],
          "name": "custom_user_field",
          "readFromDocValues": true,
          "scripted": false,
          "searchable": true,
          "type": "conflict",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script string",
          "readFromDocValues": false,
          "script": "'i am a string'",
          "scripted": true,
          "searchable": true,
          "type": "string",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script number",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "number",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "painless",
          "name": "script date",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "date",
        },
        Object {
          "aggregatable": true,
          "count": 0,
          "lang": "expression",
          "name": "script murmur3",
          "readFromDocValues": false,
          "script": "1234",
          "scripted": true,
          "searchable": true,
          "type": "murmur3",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "nestedField.child",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "nested": Object {
              "path": "nestedField",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "count": 0,
          "esTypes": Array [
            "text",
          ],
          "name": "nestedField.nestedChild.doublyNestedChild",
          "readFromDocValues": false,
          "scripted": false,
          "searchable": true,
          "subType": Object {
            "nested": Object {
              "path": "nestedField.nestedChild",
            },
          },
          "type": "string",
        },
        Object {
          "aggregatable": false,
          "esTypes": Array [
            "text",
          ],
          "name": "file.path.text",
          "searchable": true,
          "subType": Object {
            "multi": Object {
              "parent": "file.path",
            },
          },
          "type": "string",
        },
      ],
      "id": "1234",
      "title": "logstash-*",
    }
  }
  isClearable={false}
  isDisabled={false}
  isLoading={false}
  onChange={[MockFunction]}
  placeholder="Placeholder text"
  rowLabel="Row Label"
  selectedField={
    Object {
      "aggregatable": true,
      "count": 0,
      "esTypes": Array [
        "keyword",
      ],
      "name": "machine.os.raw",
      "readFromDocValues": true,
      "scripted": false,
      "searchable": true,
      "subType": Object {
        "multi": Object {
          "parent": "machine.os",
        },
      },
      "type": "string",
    }
  }
  selectedValue={Array []}
>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    fullWidth={true}
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText="Warning: there is a space"
    isInvalid={false}
    label="Row Label"
    labelType="label"
  >
    <div
      className="euiFormRow euiFormRow--fullWidth euiFormRow--hasLabel"
      id="generated-id-row"
    >
      <div
        className="euiFormRow__labelWrapper"
      >
        <EuiFormLabel
          aria-invalid={false}
          className="euiFormRow__label"
          htmlFor="generated-id"
          id="generated-id-label"
          isFocused={false}
          isInvalid={false}
          type="label"
        >
          <label
            aria-invalid={false}
            className="euiFormLabel euiFormRow__label"
            htmlFor="generated-id"
            id="generated-id-label"
          >
            Row Label
          </label>
        </EuiFormLabel>
      </div>
      <div
        className="euiFormRow__fieldWrapper"
      >
        <EuiComboBox
          aria-describedby="generated-id-help-0"
          async={true}
          compressed={false}
          data-test-subj="valuesAutocompleteMatchAny"
          disabled={false}
          fullWidth={true}
          id="generated-id"
          isClearable={false}
          isDisabled={false}
          isInvalid={false}
          isLoading={false}
          onBlur={[Function]}
          onChange={[Function]}
          onCreateOption={[Function]}
          onFocus={[Function]}
          onSearchChange={[Function]}
          options={
            Array [
              Object {
                "label": "value 1",
              },
              Object {
                "label": "value 2",
              },
            ]
          }
          placeholder="Placeholder text"
          selectedOptions={Array []}
          singleSelection={false}
          sortMatchesBy="none"
        >
          <div
            aria-describedby="generated-id-help-0"
            className="euiComboBox euiComboBox--fullWidth"
            data-test-subj="valuesAutocompleteMatchAny"
            disabled={false}
            onFocus={[Function]}
            onKeyDown={[Function]}
          >
            <EuiComboBoxInput
              autoSizeInputRef={[Function]}
              compressed={false}
              fullWidth={true}
              hasSelectedOptions={false}
              id="generated-id"
              inputRef={[Function]}
              isDisabled={false}
              isListOpen={false}
              isLoading={false}
              noIcon={false}
              onChange={[Function]}
              onClick={[Function]}
              onCloseListClick={[Function]}
              onFocus={[Function]}
              onOpenListClick={[Function]}
              onRemoveOption={[Function]}
              placeholder="Placeholder text"
              rootId={[Function]}
              searchValue=""
              selectedOptions={Array []}
              singleSelection={false}
              toggleButtonRef={[Function]}
              updatePosition={[Function]}
              value=""
            >
              <EuiFormControlLayout
                compressed={false}
                fullWidth={true}
                icon={
                  Object {
                    "aria-label": "Open list of options",
                    "data-test-subj": "comboBoxToggleListButton",
                    "disabled": false,
                    "onClick": [Function],
                    "ref": [Function],
                    "side": "right",
                    "tabIndex": -1,
                    "type": "arrowDown",
                  }
                }
                inputId="generated-id"
                isLoading={false}
              >
                <div
                  className="euiFormControlLayout euiFormControlLayout--fullWidth"
                >
                  <div
                    className="euiFormControlLayout__childrenWrapper"
                  >
                    <div
                      className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth"
                      data-test-subj="comboBoxInput"
                      onClick={[Function]}
                      tabIndex={-1}
                    >
                      <p
                        className="euiComboBoxPlaceholder"
                      >
                        Placeholder text
                      </p>
                      <AutosizeInput
                        aria-autocomplete="list"
                        aria-controls=""
                        aria-expanded={false}
                        className="euiComboBox__input"
                        data-test-subj="comboBoxSearchInput"
                        disabled={false}
                        id="generated-id"
                        injectStyles={true}
                        inputRef={[Function]}
                        minWidth={1}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        role="combobox"
                        style={
                          Object {
                            "fontSize": 14,
                          }
                        }
                        value=""
                      >
                        <div
                          className="euiComboBox__input"
                          style={
                            Object {
                              "display": "inline-block",
                              "fontSize": 14,
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            aria-controls=""
                            aria-expanded={false}
                            data-test-subj="comboBoxSearchInput"
                            disabled={false}
                            id="generated-id"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "2px",
                              }
                            }
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          />
                        </div>
                      </AutosizeInput>
                    </div>
                    <EuiFormControlLayoutIcons
                      compressed={false}
                      icon={
                        Object {
                          "aria-label": "Open list of options",
                          "data-test-subj": "comboBoxToggleListButton",
                          "disabled": false,
                          "onClick": [Function],
                          "ref": [Function],
                          "side": "right",
                          "tabIndex": -1,
                          "type": "arrowDown",
                        }
                      }
                      isLoading={false}
                    >
                      <div
                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                      >
                        <EuiFormControlLayoutCustomIcon
                          aria-label="Open list of options"
                          data-test-subj="comboBoxToggleListButton"
                          disabled={false}
                          iconRef={[Function]}
                          onClick={[Function]}
                          size="m"
                          tabIndex={-1}
                          type="arrowDown"
                        >
                          <button
                            aria-label="Open list of options"
                            className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                            data-test-subj="comboBoxToggleListButton"
                            disabled={false}
                            onClick={[Function]}
                            tabIndex={-1}
                            type="button"
                          >
                            <EuiIcon
                              aria-hidden="true"
                              className="euiFormControlLayoutCustomIcon__icon"
                              size="m"
                              type="arrowDown"
                            >
                              <span
                                aria-hidden="true"
                                className="euiFormControlLayoutCustomIcon__icon"
                                data-euiicon-type="arrowDown"
                                size="m"
                              />
                            </EuiIcon>
                          </button>
                        </EuiFormControlLayoutCustomIcon>
                      </div>
                    </EuiFormControlLayoutIcons>
                  </div>
                </div>
              </EuiFormControlLayout>
            </EuiComboBoxInput>
          </div>
        </EuiComboBox>
        <EuiFormHelpText
          className="euiFormRow__text"
          id="generated-id-help-0"
          key="Warning: there is a space"
        >
          <div
            className="euiFormHelpText euiFormRow__text"
            id="generated-id-help-0"
          >
            Warning: there is a space
          </div>
        </EuiFormHelpText>
      </div>
    </div>
  </EuiFormRow>
</AutocompleteFieldMatchAny>
`;
