base:
  description: The `base` field set contains all fields which are at the root of the
    events. These fields are common across all types of events.
  fields:
    '@timestamp':
      dashed_name: timestamp
      description: 'Date/time when the event originated.

        This is the date/time extracted from the event, typically representing when
        the event was generated by the source.

        If the event source has no original timestamp, this value is typically populated
        by the first time the event was received by the pipeline.

        Required field for all events.'
      example: '2016-05-23T08:05:34.853Z'
      flat_name: '@timestamp'
      level: core
      name: '@timestamp'
      normalize: []
      required: true
      short: Date/time when the event originated.
      type: date
    labels:
      dashed_name: labels
      description: 'Custom key/value pairs.

        Can be used to add meta information to events. Should not contain nested objects.
        All values are stored as keyword.

        Example: `docker` and `k8s` labels.'
      example: '{"application": "foo-bar", "env": "production"}'
      flat_name: labels
      level: core
      name: labels
      normalize: []
      object_type: keyword
      short: Custom key/value pairs.
      type: object
    message:
      dashed_name: message
      description: 'For log events the message field contains the log message, optimized
        for viewing in a log viewer.

        For structured logs without an original message field, other fields can be
        concatenated to form a human-readable summary of the event.

        If multiple messages exist, they can be combined into one message.'
      example: Hello World
      flat_name: message
      level: core
      name: message
      normalize: []
      short: Log message optimized for viewing in a log viewer.
      type: match_only_text
    tags:
      dashed_name: tags
      description: List of keywords used to tag each event.
      example: '["production", "env2"]'
      flat_name: tags
      ignore_above: 1024
      level: core
      name: tags
      normalize:
      - array
      short: List of keywords used to tag each event.
      type: keyword
  group: 1
  name: base
  prefix: ''
  root: true
  short: All fields defined directly at the root of the events.
  title: Base
  type: group
hash:
  description: 'The hash fields represent different bitwise hash algorithms and their
    values.

    Field names for common hashes (e.g. MD5, SHA1) are predefined. Add fields for
    other hashes by lowercasing the hash algorithm name and using underscore separators
    as appropriate (snake case, e.g. sha3_512).

    Note that this fieldset is used for common hashes that may be computed over a
    range of generic bytes. Entity-specific hashes such as ja3 or imphash are placed
    in the fieldsets to which they relate (tls and pe, respectively).'
  fields:
    hash.md5:
      dashed_name: hash-md5
      description: MD5 hash.
      flat_name: hash.md5
      ignore_above: 1024
      level: extended
      name: md5
      normalize: []
      short: MD5 hash.
      type: keyword
    hash.sha1:
      dashed_name: hash-sha1
      description: SHA1 hash.
      flat_name: hash.sha1
      ignore_above: 1024
      level: extended
      name: sha1
      normalize: []
      short: SHA1 hash.
      type: keyword
    hash.sha256:
      dashed_name: hash-sha256
      description: SHA256 hash.
      flat_name: hash.sha256
      ignore_above: 1024
      level: extended
      name: sha256
      normalize: []
      short: SHA256 hash.
      type: keyword
    hash.sha384:
      dashed_name: hash-sha384
      description: SHA384 hash.
      flat_name: hash.sha384
      ignore_above: 1024
      level: extended
      name: sha384
      normalize: []
      short: SHA384 hash.
      type: keyword
    hash.sha512:
      dashed_name: hash-sha512
      description: SHA512 hash.
      flat_name: hash.sha512
      ignore_above: 1024
      level: extended
      name: sha512
      normalize: []
      short: SHA512 hash.
      type: keyword
    hash.ssdeep:
      dashed_name: hash-ssdeep
      description: SSDEEP hash.
      flat_name: hash.ssdeep
      ignore_above: 1024
      level: extended
      name: ssdeep
      normalize: []
      short: SSDEEP hash.
      type: keyword
    hash.tlsh:
      dashed_name: hash-tlsh
      description: TLSH hash.
      flat_name: hash.tlsh
      ignore_above: 1024
      level: extended
      name: tlsh
      normalize: []
      short: TLSH hash.
      type: keyword
  group: 2
  name: hash
  prefix: hash.
  reusable:
    expected:
    - as: hash
      at: file
      full: file.hash
    - as: hash
      at: process
      full: process.hash
    - as: hash
      at: dll
      full: dll.hash
    - as: hash
      at: email.attachments.file
      full: email.attachments.file.hash
    top_level: false
  short: Hashes, usually file hashes.
  title: Hash
  type: group
  