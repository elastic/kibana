// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<IconButtonGroup /> is rendered 1`] = `
<SharedUxServicesProvider
  application={
    Object {
      "currentAppId$": Observable {},
      "navigateToUrl": [Function],
    }
  }
  docLinks={
    Object {
      "dataViewsDocLink": "dummy link",
    }
  }
  editors={
    Object {
      "openDataViewEditor": [MockFunction],
    }
  }
  http={
    Object {
      "addBasePath": [MockFunction],
    }
  }
  permissions={
    Object {
      "canAccessFleet": true,
      "canCreateNewDataView": true,
    }
  }
  platform={
    Object {
      "setIsFullscreen": [MockFunction],
    }
  }
>
  <IconButtonGroup
    buttons={
      Array [
        Object {
          "iconType": "visText",
          "label": "Text",
          "onClick": [MockFunction],
        },
      ]
    }
    legend="Legend"
  >
    <EuiButtonGroup
      buttonSize="m"
      isIconOnly={true}
      legend="Legend"
      onChange={[Function]}
      options={
        Array [
          Object {
            "aria-label": "Text",
            "css": Array [
              Object {
                "&.euiButtonGroupButton": Object {
                  "&:first-of-type": Object {
                    "borderBottomLeftRadius": "6px !important",
                    "borderTopLeftRadius": "6px !important",
                  },
                  "&:last-of-type": Object {
                    "borderBottomRightRadius": "6px !important",
                    "borderTopRightRadius": "6px !important",
                  },
                  "backgroundColor": "#FFF",
                  "border": "1px solid #D3DAE6 !important",
                },
              },
            ],
            "iconType": "visText",
            "id": "generated-id0",
            "label": "Text",
            "onClick": [MockFunction],
            "title": "Text",
          },
        ]
      }
      type="multi"
    >
      <fieldset
        className="euiButtonGroup euiButtonGroup--medium euiButtonGroup--text"
        disabled={false}
      >
        <EuiScreenReaderOnly>
          <legend
            className="euiScreenReaderOnly"
          >
            Legend
          </legend>
        </EuiScreenReaderOnly>
        <div
          className="euiButtonGroup__buttons"
        >
          <EuiButtonGroupButton
            aria-label="Text"
            color="text"
            css="unknown styles"
            element="button"
            iconType="visText"
            id="generated-id0"
            isDisabled={false}
            isIconOnly={true}
            key="0"
            label="Text"
            name="generated-id"
            onChange={[Function]}
            onClick={[MockFunction]}
            size="m"
            title="Text"
          >
            <Insertion
              cache={
                Object {
                  "insert": [Function],
                  "inserted": Object {
                    "iuv015-EuiButtonGroup": true,
                  },
                  "key": "css",
                  "nonce": undefined,
                  "registered": Object {
                    "css-iuv015-EuiButtonGroup": "&.euiButtonGroupButton{background-color:#FFF;border:1px solid #D3DAE6 !important;&:first-of-type{border-top-left-radius:6px !important;border-bottom-left-radius:6px !important;}&:last-of-type{border-top-right-radius:6px !important;border-bottom-right-radius:6px !important;}};;label:EuiButtonGroup;",
                  },
                  "sheet": StyleSheet {
                    "_alreadyInsertedOrderInsensitiveRule": true,
                    "_insertTag": [Function],
                    "before": null,
                    "container": <head>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup{}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton{background-color:#FFF;border:1px solid #D3DAE6!important;}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton:first-of-type{border-top-left-radius:6px!important;border-bottom-left-radius:6px!important;}
                      </style>
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton:last-of-type{border-top-right-radius:6px!important;border-bottom-right-radius:6px!important;}
                      </style>
                      <style
                        data-styled="active"
                        data-styled-version="5.1.0"
                      />
                    </head>,
                    "ctr": 4,
                    "insertionPoint": undefined,
                    "isSpeedy": false,
                    "key": "css",
                    "nonce": undefined,
                    "prepend": undefined,
                    "tags": Array [
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup{}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton{background-color:#FFF;border:1px solid #D3DAE6!important;}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton:first-of-type{border-top-left-radius:6px!important;border-bottom-left-radius:6px!important;}
                      </style>,
                      <style
                        data-emotion="css"
                        data-s=""
                      >
                        
                        .css-iuv015-EuiButtonGroup.euiButtonGroupButton:last-of-type{border-top-right-radius:6px!important;border-bottom-right-radius:6px!important;}
                      </style>,
                    ],
                  },
                }
              }
              isStringTag={false}
              serialized={
                Object {
                  "map": undefined,
                  "name": "iuv015-EuiButtonGroup",
                  "next": undefined,
                  "styles": "&.euiButtonGroupButton{background-color:#FFF;border:1px solid #D3DAE6 !important;&:first-of-type{border-top-left-radius:6px !important;border-bottom-left-radius:6px !important;}&:last-of-type{border-top-right-radius:6px !important;border-bottom-right-radius:6px !important;}};;label:EuiButtonGroup;",
                  "toString": [Function],
                }
              }
            />
            <EuiButtonGroupButton
              aria-label="Text"
              className="css-iuv015-EuiButtonGroup"
              color="text"
              element="button"
              iconType="visText"
              id="generated-id0"
              isDisabled={false}
              isIconOnly={true}
              label="Text"
              name="generated-id"
              onChange={[Function]}
              onClick={[MockFunction]}
              size="m"
              title="Text"
            >
              <EuiButtonDisplay
                aria-label="Text"
                baseClassName="euiButtonGroupButton"
                className="euiButtonGroupButton-isIconOnly css-iuv015-EuiButtonGroup"
                color="text"
                data-test-subj="generated-id0"
                element="button"
                fill={false}
                iconType="visText"
                id="generated-id"
                isDisabled={false}
                isSelected={false}
                onClick={[MockFunction]}
                size="m"
                textProps={
                  Object {
                    "className": "euiScreenReaderOnly",
                    "data-text": "Text",
                    "ref": [Function],
                  }
                }
                title="Text"
                type="button"
              >
                <button
                  aria-label="Text"
                  aria-pressed={false}
                  className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton-isIconOnly css-iuv015-EuiButtonGroup"
                  data-test-subj="generated-id0"
                  disabled={false}
                  id="generated-id"
                  onClick={[MockFunction]}
                  style={
                    Object {
                      "minWidth": undefined,
                    }
                  }
                  title="Text"
                  type="button"
                >
                  <EuiButtonContent
                    className="euiButton__content"
                    iconSide="left"
                    iconType="visText"
                    textProps={
                      Object {
                        "className": "euiButton__text euiScreenReaderOnly",
                        "data-text": "Text",
                        "ref": [Function],
                      }
                    }
                  >
                    <span
                      className="euiButtonContent euiButton__content"
                    >
                      <EuiIcon
                        className="euiButtonContent__icon"
                        color="inherit"
                        size="m"
                        type="visText"
                      >
                        <span
                          className="euiButtonContent__icon"
                          color="inherit"
                          data-euiicon-type="visText"
                          size="m"
                        />
                      </EuiIcon>
                      <span
                        className="euiButton__text euiScreenReaderOnly"
                        data-text="Text"
                      >
                        Text
                      </span>
                    </span>
                  </EuiButtonContent>
                </button>
              </EuiButtonDisplay>
            </EuiButtonGroupButton>
          </EuiButtonGroupButton>
        </div>
      </fieldset>
    </EuiButtonGroup>
  </IconButtonGroup>
</SharedUxServicesProvider>
`;
