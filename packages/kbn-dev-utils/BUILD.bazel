load("@npm//@bazel/typescript:index.bzl", "ts_config", "ts_project")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "pkg_npm")

PKG_BASE_NAME = "kbn-dev-utils"
PKG_REQUIRE_NAME = "@kbn/dev-utils"

SOURCE_FILES = glob(
  [
    "src/**/*.ts",
  ],
  exclude = [
    "**/*.test.*"
  ],
)

SRCS = SOURCE_FILES

filegroup(
  name = "srcs",
  srcs = SRCS,
)

filegroup(
  name = "certs",
  srcs = glob(
    [
      "certs/**/*",
    ],
    exclude = [
      "**/README.md"
    ],
  ),
)

NPM_MODULE_EXTRA_FILES = [
  "package.json",
  "README.md",
  ":certs",
  "ci_stats_reporter/package.json",
  "stdio/package.json",
  "tooling_log/package.json"
]

SRC_DEPS = [
  "//packages/kbn-expect",
  "//packages/kbn-utils",
  "@npm//@babel/core",
  "@npm//axios",
  "@npm//chalk",
  "@npm//chance",
  "@npm//cheerio",
  "@npm//dedent",
  "@npm//execa",
  "@npm//exit-hook",
  "@npm//getopts",
  "@npm//globby",
  "@npm//jest-styled-components",
  "@npm//load-json-file",
  "@npm//markdown-it",
  "@npm//moment",
  "@npm//normalize-path",
  "@npm//rxjs",
  "@npm//tree-kill",
  "@npm//tslib",
  "@npm//typescript",
  "@npm//vinyl"
]

TYPES_DEPS = [
  "@npm//@types/babel__core",
  "@npm//@types/cheerio",
  "@npm//@types/dedent",
  "@npm//@types/flot",
  "@npm//@types/jest",
  "@npm//@types/markdown-it",
  "@npm//@types/node",
  "@npm//@types/normalize-path",
  "@npm//@types/react",
  "@npm//@types/testing-library__jest-dom",
  "@npm//@types/vinyl"
]

DEPS = SRC_DEPS + TYPES_DEPS

ts_config(
  name = "tsconfig",
  src = "tsconfig.json",
  deps = [
    "//:tsconfig.base.json",
  ],
)

ts_project(
  name = "tsc",
  args = ['--pretty'],
  srcs = SRCS,
  deps = DEPS,
  declaration = True,
  declaration_map = True,
  incremental = True,
  out_dir = "target",
  source_map = True,
  root_dir = "src",
  tsconfig = ":tsconfig",
)

js_library(
  name = PKG_BASE_NAME,
  srcs = NPM_MODULE_EXTRA_FILES,
  deps = [":tsc"] + DEPS,
  package_name = PKG_REQUIRE_NAME,
  visibility = ["//visibility:public"],
)

pkg_npm(
  name = "npm_module",
  deps = [
    ":%s" % PKG_BASE_NAME,
  ]
)

filegroup(
  name = "build",
  srcs = [
    ":npm_module",
  ],
  visibility = ["//visibility:public"],
)
