/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from "zod";
import { requireOptional, RequiredOptional, isValidDateMath } from "@kbn/zod-helpers"

{{> disclaimer}}

{{#each imports}}
import { 
  {{#each this}}{{.}},{{/each}} 
} from "{{@key}}"
{{/each}}

{{#each components.schemas}}
{{#if description}}
/** 
{{{commentString description}}}
{{#if default}} 
* @default {{{default}}}
{{/if}}
{{#if example}} 
* @example 
{{{commentString example}}}
{{/if}}
*/
{{/if}}
export type {{@key}} = {{> typescript_schema_item}};

export const {{@key}} = {{> zod_schema_item}};
{{#if enum}}
{{#unless (isSingle enum)}}
export const {{@key}}Enum = {{@key}}.enum;
export type {{@key}}Enum = typeof {{@key}}.enum;
{{/unless}}
{{/if}}

{{/each}}

{{#each operations}}
{{#if requestQuery}}
{{#if requestQuery.description}}
/**
* {{{requestQuery.description}}}
*/
{{/if}}
export type {{operationId}}RequestQuery = {{> typescript_schema_item requestQuery }};

export const {{operationId}}RequestQuery = {{> zod_query_item requestQuery }};
export type {{operationId}}RequestQueryInput = z.input<typeof {{operationId}}RequestQuery>;
{{/if}}

{{#if requestParams}}
{{#if requestParams.description}}
/**
* {{{requestParams.description}}}
*/
{{/if}}
export type {{operationId}}RequestParams = {{> typescript_schema_item requestParams }};

export const {{operationId}}RequestParams = {{> zod_schema_item requestParams }};
export type {{operationId}}RequestParamsInput = z.input<typeof {{operationId}}RequestParams>;
{{/if}}

{{#if requestBody}}
{{#if requestBody.description}}
/**
* {{{requestBody.description}}}
*/
{{/if}}
export type {{operationId}}RequestBody = {{> typescript_schema_item requestBody }};

export const {{operationId}}RequestBody = {{> zod_schema_item requestBody }};
export type {{operationId}}RequestBodyInput = z.input<typeof {{operationId}}RequestBody>;
{{/if}}

{{#if response}}
{{#if response.description}}
/**
* {{{response.description}}}
*/
{{/if}}
export type {{operationId}}Response = {{> typescript_schema_item response }};

export const {{operationId}}Response = {{> zod_schema_item response }};
{{/if}}
{{/each}}
