// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#defaultValue can be a ByteSizeValue 1`] = `
ByteSizeValue {
  "valueInBytes": 1024,
}
`;

exports[`#defaultValue can be a number 1`] = `
ByteSizeValue {
  "valueInBytes": 1024,
}
`;

exports[`#defaultValue can be a string 1`] = `
ByteSizeValue {
  "valueInBytes": 1024,
}
`;

exports[`#defaultValue can be a string-formatted number 1`] = `
ByteSizeValue {
  "valueInBytes": 1024,
}
`;

exports[`#max returns error when larger 1`] = `"Value is [1mb] ([1048576b]) but it must be equal to or less than [1kb]"`;

exports[`#max returns value when smaller 1`] = `
ByteSizeValue {
  "valueInBytes": 1,
}
`;

exports[`#min returns error when smaller 1`] = `"Value is [1b] ([1b]) but it must be equal to or greater than [1kb]"`;

exports[`#min returns value when larger 1`] = `
ByteSizeValue {
  "valueInBytes": 1024,
}
`;

exports[`includes namespace in failure 1`] = `"[foo-namespace]: expected value of type [ByteSize] but got [undefined]"`;

exports[`is required by default 1`] = `"expected value of type [ByteSize] but got [undefined]"`;

exports[`returns error when not valid string or positive safe integer 1`] = `"Value in bytes is expected to be a safe positive integer, but provided [-123]."`;

exports[`returns error when not valid string or positive safe integer 2`] = `"Value in bytes is expected to be a safe positive integer, but provided [NaN]."`;

exports[`returns error when not valid string or positive safe integer 3`] = `"Value in bytes is expected to be a safe positive integer, but provided [Infinity]."`;

exports[`returns error when not valid string or positive safe integer 4`] = `"Value in bytes is expected to be a safe positive integer, but provided [9007199254740992]."`;

exports[`returns error when not valid string or positive safe integer 5`] = `"expected value of type [ByteSize] but got [Array]"`;

exports[`returns error when not valid string or positive safe integer 6`] = `"expected value of type [ByteSize] but got [RegExp]"`;

exports[`returns error when not valid string or positive safe integer 7`] = `"Failed to parse [123foo] as byte value. Value must be either number of bytes, or follow the format <count>[b|kb|mb|gb] (e.g., '1024kb', '200mb', '1gb'), where the number is a safe positive integer."`;

exports[`returns error when not valid string or positive safe integer 8`] = `"Failed to parse [123 456] as byte value. Value must be either number of bytes, or follow the format <count>[b|kb|mb|gb] (e.g., '1024kb', '200mb', '1gb'), where the number is a safe positive integer."`;
