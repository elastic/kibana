// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AnalyticsNoDataPageComponent renders correctly 1`] = `
<AnalyticsNoDataPage
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  kibanaGuideDocLink="http://www.test.com"
  onDataViewCreated={[MockFunction]}
>
  <ForwardRef
    noDataConfig={
      Object {
        "action": Object {
          "elasticAgent": Object {
            "data-test-subj": "kbnOverviewAddIntegrations",
            "description": "Use Elastic Agent to collect data and build out Analytics solutions.",
            "title": "Add integrations",
          },
        },
        "docsLink": "http://www.test.com",
        "logo": "logoKibana",
        "pageTitle": "Welcome to Analytics!",
        "solution": "Analytics",
      }
    }
    onDataViewCreated={[MockFunction]}
  >
    <EuiErrorBoundary>
      <Suspense
        fallback={<Fallback />}
      >
        <Fallback>
          <div
            css={
              Object {
                "map": undefined,
                "name": "1q0vk5q",
                "next": undefined,
                "styles": "
    text-align: center;
  ",
                "toString": [Function],
              }
            }
          >
            <EuiLoadingSpinner>
              <span
                className="euiLoadingSpinner euiLoadingSpinner--medium"
              />
            </EuiLoadingSpinner>
          </div>
        </Fallback>
      </Suspense>
    </EuiErrorBoundary>
  </ForwardRef>
</AnalyticsNoDataPage>
`;
