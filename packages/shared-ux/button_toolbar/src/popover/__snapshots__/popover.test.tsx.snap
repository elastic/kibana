// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ToolbarPopover /> is rendered 1`] = `
<ToolbarPopover
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  label="test"
>
  <EuiPopover
    anchorPosition="downCenter"
    button={
      <PrimaryButton
        label="test"
        onClick={[Function]}
      />
    }
    closePopover={[Function]}
    display="inlineBlock"
    hasArrow={true}
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {
          "date": Object {
            "full": Object {
              "day": "numeric",
              "month": "long",
              "weekday": "long",
              "year": "numeric",
            },
            "long": Object {
              "day": "numeric",
              "month": "long",
              "year": "numeric",
            },
            "medium": Object {
              "day": "numeric",
              "month": "short",
              "year": "numeric",
            },
            "short": Object {
              "day": "numeric",
              "month": "numeric",
              "year": "2-digit",
            },
          },
          "number": Object {
            "currency": Object {
              "style": "currency",
            },
            "percent": Object {
              "style": "percent",
            },
          },
          "relative": Object {
            "days": Object {
              "units": "day",
            },
            "hours": Object {
              "units": "hour",
            },
            "minutes": Object {
              "units": "minute",
            },
            "months": Object {
              "units": "month",
            },
            "seconds": Object {
              "units": "second",
            },
            "years": Object {
              "units": "year",
            },
          },
          "time": Object {
            "full": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "long": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "medium": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
            },
            "short": Object {
              "hour": "numeric",
              "minute": "numeric",
            },
          },
        },
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": null,
      }
    }
    isOpen={false}
    ownFocus={true}
    panelPaddingSize="m"
  >
    <div
      className="euiPopover euiPopover--anchorDownCenter"
      intl={
        Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {
            "date": Object {
              "full": Object {
                "day": "numeric",
                "month": "long",
                "weekday": "long",
                "year": "numeric",
              },
              "long": Object {
                "day": "numeric",
                "month": "long",
                "year": "numeric",
              },
              "medium": Object {
                "day": "numeric",
                "month": "short",
                "year": "numeric",
              },
              "short": Object {
                "day": "numeric",
                "month": "numeric",
                "year": "2-digit",
              },
            },
            "number": Object {
              "currency": Object {
                "style": "currency",
              },
              "percent": Object {
                "style": "percent",
              },
            },
            "relative": Object {
              "days": Object {
                "units": "day",
              },
              "hours": Object {
                "units": "hour",
              },
              "minutes": Object {
                "units": "minute",
              },
              "months": Object {
                "units": "month",
              },
              "seconds": Object {
                "units": "second",
              },
              "years": Object {
                "units": "year",
              },
            },
            "time": Object {
              "full": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "long": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
                "timeZoneName": "short",
              },
              "medium": Object {
                "hour": "numeric",
                "minute": "numeric",
                "second": "numeric",
              },
              "short": Object {
                "hour": "numeric",
                "minute": "numeric",
              },
            },
          },
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {},
          "now": [Function],
          "onError": [Function],
          "textComponent": Symbol(react.fragment),
          "timeZone": null,
        }
      }
    >
      <div
        className="euiPopover__anchor"
      >
        <PrimaryButton
          label="test"
          onClick={[Function]}
        >
          <EuiButton
            color="primary"
            fill={true}
            iconSide="left"
            onClick={[Function]}
            size="m"
          >
            <EuiButtonDisplay
              baseClassName="euiButton"
              color="primary"
              disabled={false}
              element="button"
              fill={true}
              iconSide="left"
              isDisabled={false}
              onClick={[Function]}
              size="m"
              type="button"
            >
              <button
                className="euiButton euiButton--primary euiButton--fill"
                disabled={false}
                onClick={[Function]}
                style={
                  Object {
                    "minWidth": undefined,
                  }
                }
                type="button"
              >
                <EuiButtonContentDeprecated
                  className="euiButton__content"
                  iconSide="left"
                  textProps={
                    Object {
                      "className": "euiButton__text",
                    }
                  }
                >
                  <span
                    className="euiButtonContent euiButton__content"
                  >
                    <span
                      className="euiButton__text"
                    >
                      test
                    </span>
                  </span>
                </EuiButtonContentDeprecated>
              </button>
            </EuiButtonDisplay>
          </EuiButton>
        </PrimaryButton>
      </div>
    </div>
  </EuiPopover>
</ToolbarPopover>
`;
