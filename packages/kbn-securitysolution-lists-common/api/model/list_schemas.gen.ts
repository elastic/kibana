/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: List Schemas
 *   version: not applicable
 */

import { z } from 'zod';

import {
  ListId,
  ListType,
  ListName,
  ListDescription,
  ListMetadata,
  ListItemId,
  ListItemValue,
  ListItemMetadata,
} from './list_common.gen';

export type List = z.infer<typeof List>;
export const List = z.object({
  id: ListId,
  type: ListType,
  name: ListName,
  description: ListDescription,
  serializer: z.string().optional(),
  deserializer: z.string().optional(),
  immutable: z.boolean(),
  meta: ListMetadata.optional(),
  '@timestamp': z.string().datetime().optional(),
  version: z.number().int().min(1),
  _version: z.string().optional(),
  tie_breaker_id: z.string(),
  created_at: z.string().datetime(),
  created_by: z.string(),
  updated_at: z.string().datetime(),
  updated_by: z.string(),
});

export type ListItem = z.infer<typeof ListItem>;
export const ListItem = z.object({
  id: ListItemId,
  type: ListType,
  list_id: ListId,
  value: ListItemValue,
  serializer: z.string().optional(),
  deserializer: z.string().optional(),
  meta: ListItemMetadata.optional(),
  '@timestamp': z.string().datetime().optional(),
  _version: z.string().optional(),
  tie_breaker_id: z.string(),
  created_at: z.string().datetime(),
  created_by: z.string(),
  updated_at: z.string().datetime(),
  updated_by: z.string(),
});
