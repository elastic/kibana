// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Handlebars.compileAST invalid template 1`] = `
"Parse error on line 1:
{{value
--^
Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID'"
`;

exports[`Handlebars.compileAST invalid template 2`] = `
"Parse error on line 1:
{{value
--^
Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID'"
`;

exports[`Handlebars.create 1`] = `
HandlebarsEnvironment {
  "AST": Object {
    "helpers": Object {
      "helperExpression": [Function],
      "scopedId": [Function],
      "simpleId": [Function],
    },
  },
  "COMPILER_REVISION": 8,
  "Compiler": [Function],
  "Exception": [Function],
  "HandlebarsEnvironment": [Function],
  "JavaScriptCompiler": [Function],
  "LAST_COMPATIBLE_COMPILER_REVISION": 7,
  "Parser": Object {
    "yy": Object {},
  },
  "REVISION_CHANGES": Object {
    "1": "<= 1.0.rc.2",
    "2": "== 1.0.0-rc.3",
    "3": "== 1.0.0-rc.4",
    "4": "== 1.x.x",
    "5": "== 2.0.0-alpha.x",
    "6": ">= 2.0.0-beta.1",
    "7": ">= 4.0.0 <4.3.0",
    "8": ">= 4.3.0",
  },
  "SafeString": [Function],
  "Utils": Object {
    "__esModule": true,
    "appendContextPath": [Function],
    "blockParams": [Function],
    "createFrame": [Function],
    "escapeExpression": [Function],
    "extend": [Function],
    "indexOf": [Function],
    "isArray": [Function],
    "isEmpty": [Function],
    "isFunction": [Function],
    "toString": [Function],
  },
  "VERSION": "4.7.7",
  "VM": Object {
    "__esModule": true,
    "checkRevision": [Function],
    "invokePartial": [Function],
    "noop": [Function],
    "resolvePartial": [Function],
    "template": [Function],
    "wrapProgram": [Function],
  },
  "__esModule": true,
  "compile": [Function],
  "compileAST": [Function],
  "createFrame": [Function],
  "decorators": Object {
    "inline": [Function],
  },
  "escapeExpression": [Function],
  "helpers": Object {
    "blockHelperMissing": [Function],
    "each": [Function],
    "helperMissing": [Function],
    "if": [Function],
    "log": [Function],
    "lookup": [Function],
    "unless": [Function],
    "with": [Function],
  },
  "log": [Function],
  "logger": Object {
    "level": "info",
    "log": [Function],
    "lookupLevel": [Function],
    "methodMap": Array [
      "debug",
      "info",
      "warn",
      "error",
    ],
  },
  "parse": [Function],
  "parseWithoutProcessing": [Function],
  "partials": Object {},
  "precompile": [Function],
  "template": [Function],
}
`;
