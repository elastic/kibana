// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalService ModalRef#close() can be called multiple times on the same ModalRef 1`] = `
Array [
  Array [
    <div />,
  ],
]
`;

exports[`ModalService openConfirm() renders a mountpoint confirm message 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        <MountWrapper
          className="kbnOverlayMountWrapper"
          mount={[Function]}
        />
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openConfirm() renders a mountpoint confirm message 2`] = `
<div
  data-eui="EuiFocusTrap"
>
  <div
    class="euiModal euiModal--maxWidth-default euiModal--confirmation"
    tabindex="0"
  >
    <button
      aria-label="Closes this modal window"
      class="euiButtonIcon euiButtonIcon--xSmall euiModal__closeIcon emotion-euiButtonIcon-empty-text-hoverStyles"
      type="button"
    >
      <span
        aria-hidden="true"
        class="euiButtonIcon__icon"
        color="inherit"
        data-euiicon-type="cross"
      />
    </button>
    <div
      class="euiModalBody"
    >
      <div
        class="euiModalBody__overflow"
      >
        <div
          class="euiText emotion-euiText-m"
          data-test-subj="confirmModalBodyText"
        >
          <div
            class="kbnOverlayMountWrapper"
          >
            <span>
              Modal content
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      class="euiModalFooter"
    >
      <button
        class="euiButtonEmpty css-9t7nyf-empty-primary"
        data-test-subj="confirmModalCancelButton"
        type="button"
      >
        <span
          class="euiButtonContent euiButtonEmpty__content"
        >
          <span
            class="euiButtonEmpty__text"
          >
            Cancel
          </span>
        </span>
      </button>
      <button
        class="euiButton emotion-euiButtonDisplay-m-m-fill-primary"
        data-test-subj="confirmModalConfirmButton"
        type="button"
      >
        <span
          class="emotion-euiButtonDisplayContent"
        >
          <span
            class="eui-textTruncate"
          >
            Confirm
          </span>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`ModalService openConfirm() renders a string confirm message 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        Some message
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openConfirm() renders a string confirm message 2`] = `
<div
  data-eui="EuiFocusTrap"
>
  <div
    class="euiModal euiModal--maxWidth-default euiModal--confirmation"
    tabindex="0"
  >
    <button
      aria-label="Closes this modal window"
      class="euiButtonIcon euiButtonIcon--xSmall euiModal__closeIcon emotion-euiButtonIcon-empty-text-hoverStyles"
      type="button"
    >
      <span
        aria-hidden="true"
        class="euiButtonIcon__icon"
        color="inherit"
        data-euiicon-type="cross"
      />
    </button>
    <div
      class="euiModalBody"
    >
      <div
        class="euiModalBody__overflow"
      >
        <div
          class="euiText emotion-euiText-m"
          data-test-subj="confirmModalBodyText"
        >
          <p>
            Some message
          </p>
        </div>
      </div>
    </div>
    <div
      class="euiModalFooter"
    >
      <button
        class="euiButtonEmpty css-9t7nyf-empty-primary"
        data-test-subj="confirmModalCancelButton"
        type="button"
      >
        <span
          class="euiButtonContent euiButtonEmpty__content"
        >
          <span
            class="euiButtonEmpty__text"
          >
            Cancel
          </span>
        </span>
      </button>
      <button
        class="euiButton emotion-euiButtonDisplay-m-m-fill-primary"
        data-test-subj="confirmModalConfirmButton"
        type="button"
      >
        <span
          class="emotion-euiButtonDisplayContent"
        >
          <span
            class="eui-textTruncate"
          >
            Confirm
          </span>
        </span>
      </button>
    </div>
  </div>
</div>
`;

exports[`ModalService openConfirm() with a currently active confirm replaces the current confirm with the new one 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      Some message
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    Some message
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        confirm 1
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      Some message
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    Some message
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        some confirm
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openConfirm() with a currently active modal replaces the current modal with the new confirm 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      Some message
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    Some message
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiModal
        onClose={[Function]}
      >
        <MountWrapper
          className="kbnOverlayMountWrapper"
          mount={[Function]}
        />
      </EuiModal>
    </CoreContextProvider>,
    <div />,
  ],
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiConfirmModal
                      cancelButtonText="Cancel"
                      confirmButtonText="Confirm"
                      onCancel={[Function]}
                      onConfirm={[Function]}
                    >
                      Some message
                    </EuiConfirmModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiConfirmModal
                    cancelButtonText="Cancel"
                    confirmButtonText="Confirm"
                    onCancel={[Function]}
                    onConfirm={[Function]}
                  >
                    Some message
                  </EuiConfirmModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        some confirm
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openModal() renders a modal to the DOM 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction],
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiModal
        onClose={[Function]}
      >
        <MountWrapper
          className="kbnOverlayMountWrapper"
          mount={[Function]}
        />
      </EuiModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openModal() renders a modal to the DOM 2`] = `
<div
  data-eui="EuiFocusTrap"
>
  <div
    class="euiModal euiModal--maxWidth-default"
    tabindex="0"
  >
    <button
      aria-label="Closes this modal window"
      class="euiButtonIcon euiButtonIcon--xSmall euiModal__closeIcon emotion-euiButtonIcon-empty-text-hoverStyles"
      type="button"
    >
      <span
        aria-hidden="true"
        class="euiButtonIcon__icon"
        color="inherit"
        data-euiicon-type="cross"
      />
    </button>
    <div
      class="kbnOverlayMountWrapper"
    >
      <span>
        Modal content
      </span>
    </div>
  </div>
</div>
`;

exports[`ModalService openModal() with a currently active confirm replaces the current confirm with the new one 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        confirm 1
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiConfirmModal
        cancelButtonText="Cancel"
        confirmButtonText="Confirm"
        onCancel={[Function]}
        onConfirm={[Function]}
      >
        some confirm
      </EuiConfirmModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;

exports[`ModalService openModal() with a currently active modal replaces the current modal with a new one 1`] = `
Array [
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiModal
        onClose={[Function]}
      >
        <MountWrapper
          className="kbnOverlayMountWrapper"
          mount={[Function]}
        />
      </EuiModal>
    </CoreContextProvider>,
    <div />,
  ],
  Array [
    <CoreContextProvider
      i18n={
        Object {
          "Context": [MockFunction] {
            "calls": Array [
              Array [
                Object {
                  "children": <CoreThemeProvider
                    globalStyles={false}
                    theme$={
                      Observable {
                        "_subscribe": [Function],
                      }
                    }
                  >
                    <EuiModal
                      onClose={[Function]}
                    >
                      <MountWrapper
                        className="kbnOverlayMountWrapper"
                        mount={[Function]}
                      />
                    </EuiModal>
                  </CoreThemeProvider>,
                },
                Object {},
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": <CoreThemeProvider
                  globalStyles={false}
                  theme$={
                    Observable {
                      "_subscribe": [Function],
                    }
                  }
                >
                  <EuiModal
                    onClose={[Function]}
                  >
                    <MountWrapper
                      className="kbnOverlayMountWrapper"
                      mount={[Function]}
                    />
                  </EuiModal>
                </CoreThemeProvider>,
              },
            ],
          },
        }
      }
      theme={
        Object {
          "theme$": Observable {
            "_subscribe": [Function],
          },
        }
      }
    >
      <EuiModal
        onClose={[Function]}
      >
        <MountWrapper
          className="kbnOverlayMountWrapper"
          mount={[Function]}
        />
      </EuiModal>
    </CoreContextProvider>,
    <div />,
  ],
]
`;
