/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import { Package } from './package';

export function generatePackagesBuildBazelFile(packages: Package[]) {
  return `################
################
## This file is automatically generated, to create a new package use \`node scripts/generate package --help\`
################
################

# It will build all declared code packages
filegroup(
  name = "build_pkg_code",
  srcs = [
${packages
  .flatMap((p) => (p.hasBuildRule() ? `    "//${p.repoRelativeDir}:build",` : []))
  .join('\n')}
  ],
)

# It will build all declared package types
filegroup(
  name = "build_pkg_types",
  srcs = [
${packages
  .flatMap((p) => (p.hasBuildTypesRule() ? `    "//${p.repoRelativeDir}:build_types",` : []))
  .join('\n')}
  ],
)

# Grouping target to call all underlying packages build
# targets so we can build them all at once
# It will auto build all declared code packages and types packages
filegroup(
  name = "build",
  srcs = [
    ":build_pkg_code",
    ":build_pkg_types"
  ],
)
`;
}
