// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EntryContent should render a nested value 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-test-subj="EntryContentlistlist_id0EntryContent"
      >
        <div
          css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
        >
          <div
            class="euiFlexGroup css-d309m3"
            data-test-subj="EntryContentNestedEntry"
          >
            <span
              class="euiToken emotion-euiToken-circle-light-s-euiColorVis2"
              data-test-subj="nstedEntryIcon"
            >
              <span
                data-euiicon-type="tokenNested"
              />
            </span>
            <div
              css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
            >
              <span
                class="euiExpression emotion-euiExpression-subdued"
              >
                <span
                  class="euiExpression__description emotion-euiExpression__description-subdued-isUppercase"
                />
                 
                
              </span>
              <span
                class="euiExpression emotion-euiExpression-success"
                data-test-subj="entryValueExpression"
              >
                <span
                  class="euiExpression__description emotion-euiExpression__description-success-isUppercase"
                >
                  included in
                </span>
                 
                <span
                  class="euiExpression__value emotion-euiExpression__value"
                >
                  list_id
                </span>
              </span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-test-subj="EntryContentlistlist_id0EntryContent"
    >
      <div
        css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
      >
        <div
          class="euiFlexGroup css-d309m3"
          data-test-subj="EntryContentNestedEntry"
        >
          <span
            class="euiToken emotion-euiToken-circle-light-s-euiColorVis2"
            data-test-subj="nstedEntryIcon"
          >
            <span
              data-euiicon-type="tokenNested"
            />
          </span>
          <div
            css="You have tried to stringify object returned from \`css\` function. It isn't supposed to be used directly (e.g. as value of the \`className\` prop), but rather handed to emotion so it can handle it (e.g. as value of \`css\` prop)."
          >
            <span
              class="euiExpression emotion-euiExpression-subdued"
            >
              <span
                class="euiExpression__description emotion-euiExpression__description-subdued-isUppercase"
              />
               
              
            </span>
            <span
              class="euiExpression emotion-euiExpression-success"
              data-test-subj="entryValueExpression"
            >
              <span
                class="euiExpression__description emotion-euiExpression__description-success-isUppercase"
              >
                included in
              </span>
               
              <span
                class="euiExpression__value emotion-euiExpression__value"
              >
                list_id
              </span>
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
