// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`builds expected bundles, saves bundle counts to metadata: OptimizerConfig 1`] = `
OptimizerConfig {
  "bundles": Array [
    Bundle {
      "cache": BundleCache {
        "path": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/bar/target/public/.kbn-optimizer-cache,
        "state": undefined,
      },
      "contextDir": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/bar,
      "entry": "./public/index",
      "id": "bar",
      "outputDir": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/bar/target/public,
      "sourceRoot": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo,
      "type": "plugin",
    },
    Bundle {
      "cache": BundleCache {
        "path": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/foo/target/public/.kbn-optimizer-cache,
        "state": undefined,
      },
      "contextDir": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/foo,
      "entry": "./public/index",
      "id": "foo",
      "outputDir": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/foo/target/public,
      "sourceRoot": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo,
      "type": "plugin",
    },
  ],
  "cache": true,
  "dist": false,
  "inspectWorkers": false,
  "maxWorkerCount": 1,
  "plugins": Array [
    Object {
      "directory": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/bar,
      "id": "bar",
      "isUiPlugin": true,
    },
    Object {
      "directory": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/baz,
      "id": "baz",
      "isUiPlugin": false,
    },
    Object {
      "directory": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo/plugins/foo,
      "id": "foo",
      "isUiPlugin": true,
    },
  ],
  "profileWebpack": false,
  "repoRoot": <absolute path>/packages/kbn-optimizer/src/__fixtures__/__tmp__/mock_repo,
  "watch": false,
}
`;

exports[`prepares assets for distribution: foo bundle 1`] = `
"var __kbnBundles__ = typeof __kbnBundles__ === \\"object\\" ? __kbnBundles__ : {};
__kbnBundles__[\\"plugin/foo\\"] = (function (modules) {
  function webpackJsonpCallback(data) {
    var chunkIds = data[0];
    var moreModules = data[1];
    var moduleId,
      chunkId,
      i = 0,
      resolves = [];
    for (; i < chunkIds.length; i++) {
      chunkId = chunkIds[i];
      if (
        Object.prototype.hasOwnProperty.call(installedChunks, chunkId) &&
        installedChunks[chunkId]
      ) {
        resolves.push(installedChunks[chunkId][0]);
      }
      installedChunks[chunkId] = 0;
    }
    for (moduleId in moreModules) {
      if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
        modules[moduleId] = moreModules[moduleId];
      }
    }
    if (parentJsonpFunction) parentJsonpFunction(data);
    while (resolves.length) {
      resolves.shift()();
    }
  }
  var installedModules = {};
  var installedChunks = { 0: 0 };
  function jsonpScriptSrc(chunkId) {
    return __webpack_require__.p + \\"\\" + ({}[chunkId] || chunkId) + \\".plugin.js\\";
  }
  function __webpack_require__(moduleId) {
    if (installedModules[moduleId]) {
      return installedModules[moduleId].exports;
    }
    var module = (installedModules[moduleId] = {
      i: moduleId,
      l: false,
      exports: {},
    });
    modules[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__
    );
    module.l = true;
    return module.exports;
  }
  __webpack_require__.e = function requireEnsure(chunkId) {
    var promises = [];
    var installedChunkData = installedChunks[chunkId];
    if (installedChunkData !== 0) {
      if (installedChunkData) {
        promises.push(installedChunkData[2]);
      } else {
        var promise = new Promise(function (resolve, reject) {
          installedChunkData = installedChunks[chunkId] = [resolve, reject];
        });
        promises.push((installedChunkData[2] = promise));
        var script = document.createElement(\\"script\\");
        var onScriptComplete;
        script.charset = \\"utf-8\\";
        script.timeout = 120;
        if (__webpack_require__.nc) {
          script.setAttribute(\\"nonce\\", __webpack_require__.nc);
        }
        script.src = jsonpScriptSrc(chunkId);
        var error = new Error();
        onScriptComplete = function (event) {
          script.onerror = script.onload = null;
          clearTimeout(timeout);
          var chunk = installedChunks[chunkId];
          if (chunk !== 0) {
            if (chunk) {
              var errorType =
                event && (event.type === \\"load\\" ? \\"missing\\" : event.type);
              var realSrc = event && event.target && event.target.src;
              error.message =
                \\"Loading chunk \\" +
                chunkId +
                \\" failed.\\\\n(\\" +
                errorType +
                \\": \\" +
                realSrc +
                \\")\\";
              error.name = \\"ChunkLoadError\\";
              error.type = errorType;
              error.request = realSrc;
              chunk[1](error);
            }
            installedChunks[chunkId] = undefined;
          }
        };
        var timeout = setTimeout(function () {
          onScriptComplete({ type: \\"timeout\\", target: script });
        }, 12e4);
        script.onerror = script.onload = onScriptComplete;
        document.head.appendChild(script);
      }
    }
    return Promise.all(promises);
  };
  __webpack_require__.m = modules;
  __webpack_require__.c = installedModules;
  __webpack_require__.d = function (exports, name, getter) {
    if (!__webpack_require__.o(exports, name)) {
      Object.defineProperty(exports, name, { enumerable: true, get: getter });
    }
  };
  __webpack_require__.r = function (exports) {
    if (typeof Symbol !== \\"undefined\\" && Symbol.toStringTag) {
      Object.defineProperty(exports, Symbol.toStringTag, { value: \\"Module\\" });
    }
    Object.defineProperty(exports, \\"__esModule\\", { value: true });
  };
  __webpack_require__.t = function (value, mode) {
    if (mode & 1) value = __webpack_require__(value);
    if (mode & 8) return value;
    if (mode & 4 && typeof value === \\"object\\" && value && value.__esModule)
      return value;
    var ns = Object.create(null);
    __webpack_require__.r(ns);
    Object.defineProperty(ns, \\"default\\", { enumerable: true, value: value });
    if (mode & 2 && typeof value != \\"string\\")
      for (var key in value)
        __webpack_require__.d(
          ns,
          key,
          function (key) {
            return value[key];
          }.bind(null, key)
        );
    return ns;
  };
  __webpack_require__.n = function (module) {
    var getter =
      module && module.__esModule
        ? function getDefault() {
            return module[\\"default\\"];
          }
        : function getModuleExports() {
            return module;
          };
    __webpack_require__.d(getter, \\"a\\", getter);
    return getter;
  };
  __webpack_require__.o = function (object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
  };
  __webpack_require__.p = \\"\\";
  __webpack_require__.oe = function (err) {
    console.error(err);
    throw err;
  };
  var jsonpArray = (window[\\"foo_bundle_jsonpfunction\\"] =
    window[\\"foo_bundle_jsonpfunction\\"] || []);
  var oldJsonpFunction = jsonpArray.push.bind(jsonpArray);
  jsonpArray.push = webpackJsonpCallback;
  jsonpArray = jsonpArray.slice();
  for (var i = 0; i < jsonpArray.length; i++)
    webpackJsonpCallback(jsonpArray[i]);
  var parentJsonpFunction = oldJsonpFunction;
  return __webpack_require__((__webpack_require__.s = 1));
})([
  function (module, exports, __webpack_require__) {
    __webpack_require__.p = window.__kbnPublicPath__[\\"foo\\"];
  },
  function (module, __webpack_exports__, __webpack_require__) {
    \\"use strict\\";
    __webpack_require__.r(__webpack_exports__);
    var public_path_module_creator = __webpack_require__(0);
    function fooLibFn() {
      return \\"foo\\";
    }
    var ext = \\"TRUE\\";
    __webpack_require__.d(__webpack_exports__, \\"getFoo\\", function () {
      return getFoo;
    });
    __webpack_require__.d(__webpack_exports__, \\"fooLibFn\\", function () {
      return fooLibFn;
    });
    __webpack_require__.d(__webpack_exports__, \\"ext\\", function () {
      return ext;
    });
    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
      try {
        var info = gen[key](arg);
        var value = info.value;
      } catch (error) {
        reject(error);
        return;
      }
      if (info.done) {
        resolve(value);
      } else {
        Promise.resolve(value).then(_next, _throw);
      }
    }
    function _asyncToGenerator(fn) {
      return function () {
        var self = this,
          args = arguments;
        return new Promise(function (resolve, reject) {
          var gen = fn.apply(self, args);
          function _next(value) {
            asyncGeneratorStep(
              gen,
              resolve,
              reject,
              _next,
              _throw,
              \\"next\\",
              value
            );
          }
          function _throw(err) {
            asyncGeneratorStep(
              gen,
              resolve,
              reject,
              _next,
              _throw,
              \\"throw\\",
              err
            );
          }
          _next(undefined);
        });
      };
    }
    function getFoo() {
      return _getFoo.apply(this, arguments);
    }
    function _getFoo() {
      _getFoo = _asyncToGenerator(
        regeneratorRuntime.mark(function _callee() {
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch ((_context.prev = _context.next)) {
                case 0:
                  _context.next = 2;
                  return __webpack_require__
                    .e(1)
                    .then(__webpack_require__.bind(null, 2));
                case 2:
                  return _context.abrupt(\\"return\\", _context.sent);
                case 3:
                case \\"end\\":
                  return _context.stop();
              }
            }
          }, _callee);
        })
      );
      return _getFoo.apply(this, arguments);
    }
  },
]);
"
`;
