{"attributes":{"rule_id":"fc7c0fa4-8f03-4b3e-8336-c5feab0be022","versions":[{"name":"UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer v101.0.0","rule_version":"101.0.0","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies User Account Control (UAC) bypass attempts by abusing an elevated COM Interface to launch a malicious program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://swapcontext.blogspot.com/2020/11/uac-bypasses-from-comautoapprovallist.html"],"tags":["Elastic","Host","Windows","Threat Detection","Privilege Escalation"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]}],"language":"eql","query":"process where event.type == \"start\" and\n process.executable : \"C:\\\\*\\\\AppData\\\\*\\\\Temp\\\\IDC*.tmp\\\\*.exe\" and\n process.parent.name : \"ieinstal.exe\" and process.parent.args : \"-Embedding\"\n\n /* uncomment once in winlogbeat */\n /* and not (process.code_signature.subject_name == \"Microsoft Corporation\" and process.code_signature.trusted == true) */\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.parent.args","type":"keyword"},{"ecs":true,"name":"process.parent.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},{"name":"UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer v101.0.1","rule_version":"101.0.1","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies User Account Control (UAC) bypass attempts by abusing an elevated COM Interface to launch a malicious program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://swapcontext.blogspot.com/2020/11/uac-bypasses-from-comautoapprovallist.html"],"tags":["Elastic","Host","Windows","Threat Detection","Privilege Escalation"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]}],"language":"eql","query":"process where event.type == \"start\" and\n process.executable : \"C:\\\\*\\\\AppData\\\\*\\\\Temp\\\\IDC*.tmp\\\\*.exe\" and\n process.parent.name : \"ieinstal.exe\" and process.parent.args : \"-Embedding\"\n\n /* uncomment once in winlogbeat */\n /* and not (process.code_signature.subject_name == \"Microsoft Corporation\" and process.code_signature.trusted == true) */\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.parent.args","type":"keyword"},{"ecs":true,"name":"process.parent.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},{"name":"UAC Bypass Attempt via Elevated COM Internet Explorer Add-On Installer v101.0.2","rule_version":"101.0.2","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies User Account Control (UAC) bypass attempts by abusing an elevated COM Interface to launch a malicious program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://swapcontext.blogspot.com/2020/11/uac-bypasses-from-comautoapprovallist.html"],"tags":["Elastic","Host","Windows","Threat Detection","Privilege Escalation"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]}],"language":"eql","query":"process where event.type == \"start\" and\n process.executable : \"C:\\\\*\\\\AppData\\\\*\\\\Temp\\\\IDC*.tmp\\\\*.exe\" and\n process.parent.name : \"ieinstal.exe\" and process.parent.args : \"-Embedding\"\n\n /* uncomment once in winlogbeat */\n /* and not (process.code_signature.subject_name == \"Microsoft Corporation\" and process.code_signature.trusted == true) */\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.parent.args","type":"keyword"},{"ecs":true,"name":"process.parent.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."}]},"id":"fc7c0fa4-8f03-4b3e-8336-c5feab0be022","type":"security-rule"}