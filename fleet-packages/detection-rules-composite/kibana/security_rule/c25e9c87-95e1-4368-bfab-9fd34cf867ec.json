{"attributes":{"rule_id":"c25e9c87-95e1-4368-bfab-9fd34cf867ec","versions":[{"name":"Microsoft IIS Connection Strings Decryption v102.0.0","rule_version":"102.0.0","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","max_signals":33,"references":["https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/greenbug-espionage-telco-south-asia"],"tags":["Elastic","Host","Windows","Threat Detection","Credential Access","Elastic Endgame"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"}]}],"language":"eql","query":"process where event.type == \"start\" and\n  (process.name : \"aspnet_regiis.exe\" or process.pe.original_file_name == \"aspnet_regiis.exe\") and\n  process.args : \"connectionStrings\" and process.args : \"-pdf\"\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*","endgame-*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.pe.original_file_name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},{"name":"Microsoft IIS Connection Strings Decryption v102.0.1","rule_version":"102.0.1","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","max_signals":33,"references":["https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/greenbug-espionage-telco-south-asia"],"tags":["Elastic","Host","Windows","Threat Detection","Credential Access","Elastic Endgame"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"}]}],"language":"eql","query":"process where event.type == \"start\" and\n  (process.name : \"aspnet_regiis.exe\" or process.pe.original_file_name == \"aspnet_regiis.exe\") and\n  process.args : \"connectionStrings\" and process.args : \"-pdf\"\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*","endgame-*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.pe.original_file_name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},{"name":"Microsoft IIS Connection Strings Decryption v102.0.2","rule_version":"102.0.2","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies use of aspnet_regiis to decrypt Microsoft IIS connection strings. An attacker with Microsoft IIS web server access via a webshell or alike can decrypt and dump any hardcoded connection strings, such as the MSSQL service account password using aspnet_regiis command.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","max_signals":33,"references":["https://blog.netspi.com/decrypting-iis-passwords-to-break-out-of-the-dmz-part-1/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/greenbug-espionage-telco-south-asia"],"tags":["Elastic","Host","Windows","Threat Detection","Credential Access","Elastic Endgame"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/"}]}],"language":"eql","query":"process where event.type == \"start\" and\n  (process.name : \"aspnet_regiis.exe\" or process.pe.original_file_name == \"aspnet_regiis.exe\") and\n  process.args : \"connectionStrings\" and process.args : \"-pdf\"\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*","endgame-*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.pe.original_file_name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."}]},"id":"c25e9c87-95e1-4368-bfab-9fd34cf867ec","type":"security-rule"}