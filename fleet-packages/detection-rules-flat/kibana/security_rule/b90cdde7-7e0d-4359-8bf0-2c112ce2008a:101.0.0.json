{"attributes":{"name":"UAC Bypass Attempt with IEditionUpgradeManager Elevated COM Interface v101.0.0","rule_id":"b90cdde7-7e0d-4359-8bf0-2c112ce2008a:101.0.0","rule_version":"101.0.0","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies attempts to bypass User Account Control (UAC) by abusing an elevated COM Interface to launch a rogue Windows ClipUp program. Attackers may attempt to bypass UAC to stealthily execute code with elevated permissions.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://github.com/hfiref0x/UACME"],"tags":["Elastic","Host","Windows","Threat Detection","Privilege Escalation"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1548","name":"Abuse Elevation Control Mechanism","reference":"https://attack.mitre.org/techniques/T1548/","subtechnique":[{"id":"T1548.002","name":"Bypass User Account Control","reference":"https://attack.mitre.org/techniques/T1548/002/"}]}]}],"language":"eql","query":"process where event.type == \"start\" and process.name : \"Clipup.exe\" and\n  not process.executable : \"C:\\\\Windows\\\\System32\\\\ClipUp.exe\" and process.parent.name : \"dllhost.exe\" and\n  /* CLSID of the Elevated COM Interface IEditionUpgradeManager */\n  process.parent.args : \"/Processid:{BD54C901-076B-434E-B6C7-17C531F4AB41}\"\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.parent.args","type":"keyword"},{"ecs":true,"name":"process.parent.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"b90cdde7-7e0d-4359-8bf0-2c112ce2008a:101.0.0","type":"security-rule"}