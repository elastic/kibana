{"attributes":{"name":"Process Started from Process ID (PID) File v101.0.1","rule_id":"3688577a-d196-11ec-90b0-f661ea17fbce:101.0.1","rule_version":"101.0.1","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies a new process starting from a process ID (PID), lock or reboot file within the temporary file storage paradigm (tmpfs) directory /var/run directory. On Linux, the PID files typically hold the process ID to track previous copies running and manage other tasks. Certain Linux malware use the /var/run directory for holding data, executables and other tasks, disguising itself or these files as legitimate PID files.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"## Triage and analysis\n\n### Investigating Process Started from Process ID (PID) File\nDetection alerts from this rule indicate a process spawned from an executable masqueraded as a legitimate PID file which is very unusual and should not occur. Here are some possible avenues of investigation:\n- Examine parent and child process relationships of the new process to determine if other processes are running.\n- Examine the /var/run directory using Osquery to determine other potential PID files with unsually large file sizes, indicative of it being an executable: \"SELECT f.size, f.uid, f.type, f.path from file f WHERE path like '/var/run/%%';\"\n- Examine the reputation of the SHA256 hash from the PID file in a database like VirusTotal to identify additional pivots and artifacts for investigation.","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["False-Positives (FP) should be at a minimum with this detection as PID files are meant to hold process IDs, not inherently be executables that spawn processes."],"from":"now-9m","references":["https://www.sandflysecurity.com/blog/linux-file-masquerading-and-malicious-pids-sandfly-1-2-6-update/","https://twitter.com/GossiTheDog/status/1522964028284411907","https://exatrack.com/public/Tricephalic_Hellkeeper.pdf","https://www.elastic.co/security-labs/a-peek-behind-the-bpfdoor"],"tags":["Elastic","Host","Linux","Threat Detection","Execution","BPFDoor"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1059","name":"Command and Scripting Interpreter","reference":"https://attack.mitre.org/techniques/T1059/"}]}],"language":"eql","query":"process where event.type == \"start\" and user.id == \"0\" and process.executable regex~ \"\"\"/var/run/\\w+\\.(pid|lock|reboot)\"\"\"\n","type":"eql","index":["logs-endpoint.events.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"user.id","type":"keyword"}]},"id":"3688577a-d196-11ec-90b0-f661ea17fbce:101.0.1","type":"security-rule"}