{"attributes":{"name":"Virtual Machine Fingerprinting via Grep v100.0.2","rule_id":"c85eb82c-d2c8-485c-a36f-534f914b7663:100.0.2","rule_version":"100.0.2","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"An adversary may attempt to get detailed information about the operating system and hardware. This rule identifies common locations used to discover virtual machine hardware by a non-root user. This technique has been used by the Pupy RAT and other malware.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Certain tools or automated software may enumerate hardware information. These tools can be exempted via user name or process arguments to eliminate potential noise."],"from":"now-9m","references":["https://objective-see.com/blog/blog_0x4F.html"],"tags":["Elastic","Host","macOS","Linux","Threat Detection","Discovery"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0007","name":"Discovery","reference":"https://attack.mitre.org/tactics/TA0007/"},"technique":[{"id":"T1082","name":"System Information Discovery","reference":"https://attack.mitre.org/techniques/T1082/"}]}],"language":"eql","query":"process where event.type == \"start\" and\n process.name in (\"grep\", \"egrep\") and user.id != \"0\" and\n process.args : (\"parallels*\", \"vmware*\", \"virtualbox*\") and process.args : \"Manufacturer*\" and\n not process.parent.executable in (\"/Applications/Docker.app/Contents/MacOS/Docker\", \"/usr/libexec/kcare/virt-what\")\n","type":"eql","index":["auditbeat-*","logs-endpoint.events.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.parent.executable","type":"keyword"},{"ecs":true,"name":"user.id","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"c85eb82c-d2c8-485c-a36f-534f914b7663:100.0.2","type":"security-rule"}