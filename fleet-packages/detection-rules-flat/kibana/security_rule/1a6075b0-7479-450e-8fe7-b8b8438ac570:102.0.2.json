{"attributes":{"name":"Execution of COM object via Xwizard v102.0.2","rule_id":"1a6075b0-7479-450e-8fe7-b8b8438ac570:102.0.2","rule_version":"102.0.2","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Windows Component Object Model (COM) is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects or executable code. Xwizard can be used to run a COM object created in registry to evade defensive counter measures.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://lolbas-project.github.io/lolbas/Binaries/Xwizard/","http://www.hexacorn.com/blog/2017/07/31/the-wizard-of-x-oppa-plugx-style/"],"tags":["Elastic","Host","Windows","Threat Detection","Execution","Elastic Endgame"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0002","name":"Execution","reference":"https://attack.mitre.org/tactics/TA0002/"},"technique":[{"id":"T1559","name":"Inter-Process Communication","reference":"https://attack.mitre.org/techniques/T1559/","subtechnique":[{"id":"T1559.001","name":"Component Object Model","reference":"https://attack.mitre.org/techniques/T1559/001/"}]}]}],"language":"eql","query":"process where event.type == \"start\" and\n process.pe.original_file_name : \"xwizard.exe\" and\n (\n   (process.args : \"RunWizard\" and process.args : \"{*}\") or\n   (process.executable != null and\n     not process.executable : (\"C:\\\\Windows\\\\SysWOW64\\\\xwizard.exe\", \"C:\\\\Windows\\\\System32\\\\xwizard.exe\")\n   )\n )\n","type":"eql","index":["winlogbeat-*","logs-endpoint.events.*","logs-windows.*","endgame-*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.pe.original_file_name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"1a6075b0-7479-450e-8fe7-b8b8438ac570:102.0.2","type":"security-rule"}