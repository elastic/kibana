{"attributes":{"name":"Potential Credential Access via DuplicateHandle in LSASS v101.0.1","rule_id":"02a4576a-7480-4284-9327-548a806b5e48:101.0.1","rule_version":"101.0.1","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies suspicious access to an LSASS handle via DuplicateHandle from an unknown call trace module. This may indicate an attempt to bypass the NtOpenProcess API to evade detection and dump LSASS memory for credential access.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://github.com/CCob/MirrorDump"],"tags":["Elastic","Host","Windows","Threat Detection","Credential Access","Sysmon Only"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"language":"eql","query":"process where event.code == \"10\" and\n\n /* LSASS requesting DuplicateHandle access right to another process */\n process.name : \"lsass.exe\" and winlog.event_data.GrantedAccess == \"0x40\" and\n\n /* call is coming from an unknown executable region */\n winlog.event_data.CallTrace : \"*UNKNOWN*\"\n","type":"eql","index":["winlogbeat-*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.code","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":false,"name":"winlog.event_data.CallTrace","type":"unknown"},{"ecs":false,"name":"winlog.event_data.GrantedAccess","type":"unknown"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"02a4576a-7480-4284-9327-548a806b5e48:101.0.1","type":"security-rule"}