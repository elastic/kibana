{"attributes":{"name":"Unusual Service Host Child Process - Childless Service v101.0.2","rule_id":"6a8ab9cc-4023-4d17-b5df-1a3e16882ce7:101.0.2","rule_version":"101.0.2","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies unusual child processes of Service Host (svchost.exe) that traditionally do not spawn any child processes. This may indicate a code injection or an equivalent form of exploitation.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Changes to Windows services or a rarely executed child process."],"from":"now-9m","tags":["Elastic","Host","Windows","Threat Detection","Defense Evasion","Privilege Escalation"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0004","name":"Privilege Escalation","reference":"https://attack.mitre.org/tactics/TA0004/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/","subtechnique":[{"id":"T1055.012","name":"Process Hollowing","reference":"https://attack.mitre.org/techniques/T1055/012/"}]}]},{"framework":"MITRE ATT&CK","tactic":{"id":"TA0005","name":"Defense Evasion","reference":"https://attack.mitre.org/tactics/TA0005/"},"technique":[{"id":"T1055","name":"Process Injection","reference":"https://attack.mitre.org/techniques/T1055/"}]}],"language":"eql","query":"process where event.type == \"start\" and\n     process.parent.name : \"svchost.exe\" and\n\n     /* based on svchost service arguments -s svcname where the service is known to be childless */\n\n    process.parent.args : (\"WdiSystemHost\",\"LicenseManager\",\n      \"StorSvc\",\"CDPSvc\",\"cdbhsvc\",\"BthAvctpSvc\",\"SstpSvc\",\"WdiServiceHost\",\n      \"imgsvc\",\"TrkWks\",\"WpnService\",\"IKEEXT\",\"PolicyAgent\",\"CryptSvc\",\n      \"netprofm\",\"ProfSvc\",\"StateRepository\",\"camsvc\",\"LanmanWorkstation\",\n      \"NlaSvc\",\"EventLog\",\"hidserv\",\"DisplayEnhancementService\",\"ShellHWDetection\",\n      \"AppHostSvc\",\"fhsvc\",\"CscService\",\"PushToInstall\") and\n\n      /* unknown FPs can be added here */\n\n     not process.name : (\"WerFault.exe\",\"WerFaultSecure.exe\",\"wermgr.exe\") and\n     not (process.executable : \"?:\\\\Windows\\\\System32\\\\RelPost.exe\" and process.parent.args : \"WdiSystemHost\") and\n     not (process.name : \"rundll32.exe\" and\n          process.args : \"?:\\\\WINDOWS\\\\System32\\\\winethc.dll,ForceProxyDetectionOnNextRun\" and process.parent.args : \"WdiServiceHost\") and\n     not (process.executable : (\"?:\\\\Program Files\\\\*\", \"?:\\\\Program Files (x86)\\\\*\", \"?:\\\\Windows\\\\System32\\\\Kodak\\\\kds_i4x50\\\\lib\\\\lexexe.exe\") and\n          process.parent.args : \"imgsvc\")\n","type":"eql","index":["logs-endpoint.events.*","winlogbeat-*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.executable","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":true,"name":"process.parent.args","type":"keyword"},{"ecs":true,"name":"process.parent.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"6a8ab9cc-4023-4d17-b5df-1a3e16882ce7:101.0.2","type":"security-rule"}