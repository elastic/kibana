{"attributes":{"name":"Suspicious LSASS Access via MalSecLogon v101.0.1","rule_id":"7ba58110-ae13-439b-8192-357b0fcfa9d7:101.0.1","rule_version":"101.0.1","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies suspicious access to LSASS handle from a call trace pointing to seclogon.dll and with a suspicious access rights value. This may indicate an attempt to leak an LSASS handle via abusing the Secondary Logon service in preparation for credential access.","risk_score":73,"severity":"high","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"from":"now-9m","references":["https://splintercod3.blogspot.com/p/the-hidden-side-of-seclogon-part-3.html"],"tags":["Elastic","Host","Windows","Threat Detection","Credential Access","Sysmon Only"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1003","name":"OS Credential Dumping","reference":"https://attack.mitre.org/techniques/T1003/","subtechnique":[{"id":"T1003.001","name":"LSASS Memory","reference":"https://attack.mitre.org/techniques/T1003/001/"}]}]}],"language":"eql","query":"process where event.code == \"10\" and\n  winlog.event_data.TargetImage : \"?:\\\\WINDOWS\\\\system32\\\\lsass.exe\" and\n\n   /* seclogon service accessing lsass */\n  winlog.event_data.CallTrace : \"*seclogon.dll*\" and process.name : \"svchost.exe\" and\n\n   /* PROCESS_CREATE_PROCESS & PROCESS_DUP_HANDLE & PROCESS_QUERY_INFORMATION */\n  winlog.event_data.GrantedAccess == \"0x14c0\"\n","type":"eql","index":["winlogbeat-*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.code","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"},{"ecs":false,"name":"winlog.event_data.CallTrace","type":"unknown"},{"ecs":false,"name":"winlog.event_data.GrantedAccess","type":"unknown"},{"ecs":false,"name":"winlog.event_data.TargetImage","type":"unknown"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"7ba58110-ae13-439b-8192-357b0fcfa9d7:101.0.1","type":"security-rule"}