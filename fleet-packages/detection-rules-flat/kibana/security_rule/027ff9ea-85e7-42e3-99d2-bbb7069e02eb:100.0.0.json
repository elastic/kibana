{"attributes":{"name":"Potential Cookies Theft via Browser Debugging v100.0.0","rule_id":"027ff9ea-85e7-42e3-99d2-bbb7069e02eb:100.0.0","rule_version":"100.0.0","stack_version_min":"8.5.0","stack_version_max":"8.7.0","description":"Identifies the execution of a Chromium based browser with the debugging process argument, which may indicate an attempt to steal authentication cookies. An adversary may steal web application or service session cookies and use them to gain access web applications or Internet services as an authenticated user without needing credentials.","risk_score":47,"severity":"medium","license":"Elastic License v2","note":"","timestamp_override":"event.ingested","author":["Elastic"],"false_positives":["Developers performing browsers plugin or extension debugging."],"from":"now-9m","max_signals":33,"references":["https://github.com/defaultnamehere/cookie_crimes","https://embracethered.com/blog/posts/2020/cookie-crimes-on-mirosoft-edge/","https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/post/multi/gather/chrome_cookies.md","https://posts.specterops.io/hands-in-the-cookie-jar-dumping-cookies-with-chromiums-remote-debugger-port-34c4f468844e"],"tags":["Elastic","Host","Linux","Windows","macOS","Threat Detection","Credential Access"],"threat":[{"framework":"MITRE ATT&CK","tactic":{"id":"TA0006","name":"Credential Access","reference":"https://attack.mitre.org/tactics/TA0006/"},"technique":[{"id":"T1539","name":"Steal Web Session Cookie","reference":"https://attack.mitre.org/techniques/T1539/"}]}],"language":"eql","query":"process where event.type in (\"start\", \"process_started\", \"info\") and\n  process.name in (\n             \"Microsoft Edge\",\n             \"chrome.exe\",\n             \"Google Chrome\",\n             \"google-chrome-stable\",\n             \"google-chrome-beta\",\n             \"google-chrome\",\n             \"msedge.exe\") and\n   process.args : (\"--remote-debugging-port=*\",\n                   \"--remote-debugging-targets=*\",\n                   \"--remote-debugging-pipe=*\") and\n   process.args : \"--user-data-dir=*\" and not process.args:\"--remote-debugging-port=0\"\n","type":"eql","index":["auditbeat-*","winlogbeat-*","logs-endpoint.events.*","logs-windows.*"],"required_fields":[{"ecs":true,"name":"event.type","type":"keyword"},{"ecs":true,"name":"process.args","type":"keyword"},{"ecs":true,"name":"process.name","type":"keyword"}],"setup":"If enabling an EQL rule on a non-elastic-agent index (such as beats) for versions <8.2, events will not define `event.ingested` and default fallback for EQL rules was not added until 8.2, so you will need to add a custom pipeline to populate `event.ingested` to @timestamp for this rule to work."},"id":"027ff9ea-85e7-42e3-99d2-bbb7069e02eb:100.0.0","type":"security-rule"}