#!/bin/groovy

library 'kibana-pipeline-library'
kibanaLibrary.load()

kibanaPipeline(timeoutMinutes: 180) {
  slackNotifications.onFailure(
    disabled: !params.NOTIFY_ON_FAILURE,
    channel: '#security-solution-slack-testing'
  ) {
    catchError {
      withEnv([
        'CI_PARALLEL_PROCESS_NUMBER=1',
        'IGNORE_SHIP_CI_STATS_ERROR=true',
      ]) {
        def job = 'xpack-securityCypress'

        workers.ci(name: job, size: 'l', ramDisk: true) {
          kibanaPipeline.bash('test/scripts/jenkins_build_kibana.sh', 'Build Distributable')
          kibanaPipeline.functionalTestProcess(job, 'test/scripts/jenkins_security_solution_cypress_chrome.sh')()
          // Temporarily disabled to figure out test flake
          // kibanaPipeline.functionalTestProcess(job, 'test/scripts/jenkins_security_solution_cypress_firefox.sh')()
        }
      }
    }
  }

  if (params.NOTIFY_ON_FAILURE) {
    kibanaPipeline.sendMail(to: 'siem_dev_team@elastic.co')
  }
}
